kind: List
apiVersion: v1
items:

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: test-base
    namespace: azure

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: test-base
    namespace: azure
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: test-base:latest
    source:
      dockerfile: |
        FROM docker.io/centos:7
        # install golang-1.10
        RUN mkdir -p /go /tmp/home && chmod -R 777 /go /tmp/home && \
            curl https://storage.googleapis.com/golang/go1.10.3.linux-amd64.tar.gz | tar -C /usr/local -xzf -
        ENV GOROOT /usr/local/go
        ENV GOPATH /go
        ENV PATH $GOPATH/bin:$GOROOT/bin:$PATH
        ENV HOME /tmp/home
        WORKDIR /go
        # install glide
        RUN curl -L https://github.com/Masterminds/glide/releases/download/v0.13.1/glide-v0.13.1-linux-amd64.tar.gz | tar -C /tmp/ -xzf -
        RUN mv /tmp/linux-amd64/glide /usr/bin
        # install tooling
        RUN yum update -y && yum install gcc tar wget git make which -y && \
            # enable git clone with random user (glide dependency)
            git config --system core.logallrefupdates false
        # install azure cli
        RUN rpm --import https://packages.microsoft.com/keys/microsoft.asc && \
            sh -c 'echo -e "[azure-cli]\nname=Azure CLI\nbaseurl=https://packages.microsoft.com/yumrepos/azure-cli\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/azure-cli.repo' && \
            yum install azure-cli -y
        # install oc client for tests
        RUN curl -L https://github.com/openshift/origin/releases/download/v3.10.0/openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit.tar.gz | tar -C /tmp/ -xzf - && \
            cp /tmp/openshift-origin-client-tools-v3.10.0-dd10d17-linux-64bit/oc /usr/local/bin/
        # TODO: I should not be here. Remove me.
        RUN go get github.com/go-bindata/go-bindata && \
            go get golang.org/x/tools/cmd/goyacc && \
            chmod 777 -R /go/bin
        RUN yum clean all
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: docker.io/centos:7
        imageOptimizationPolicy: SkipLayers
    triggers:
    - type: ConfigChange
