apiVersion: v1
kind: List
items:

- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: acs-engine

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: acs-engine
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: acs-engine:latest
    source:
      dockerfile: |
        FROM docker.io/python:3
        COPY acs-engine/bin /var/www
        WORKDIR /var/www
        ENTRYPOINT python -m http.server 8080
      images:
      - from:
          kind: ImageStreamTag
          name: acs-engine:binaries
        paths:
        - destinationDir: .
          sourcePath: /go/src/github.com/Azure/acs-engine
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: docker.io/python:3
        imageOptimizationPolicy: SkipLayers
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: acs-engine:binaries
      type: ImageChange

- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: acs-engine-binaries
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: acs-engine:binaries
    source:
      dockerfile: |
        FROM docker.io/golang:1.10

        COPY . /go/src/github.com/Azure/acs-engine
        ENV GOPATH=/go
        RUN cd /go/src/github.com/Azure/acs-engine && \
            make && \
            cp examples/openshift.json bin/ && \
            tar czvf bin/acsengine-$(git rev-parse HEAD | cut -c 1-8).tar.gz bin/acs-engine
      git:
        ref: pull/3226/head
        uri: https://github.com/Azure/acs-engine
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: docker.io/golang:1.10
        imageOptimizationPolicy: SkipLayers
      type: Docker
    triggers:
    - type: ConfigChange

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      name: acs-engine-web
    name: acs-engine-build
  spec:
    port:
      targetPort: binaries
    to:
      kind: Service
      name: acs-engine-web

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: acs-engine-web
    name: acs-engine-web
  spec:
    ports:
    - name: binaries
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: acs-engine-web

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: acs-engine-web
    labels:
      name: acs-engine-web
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          name: acs-engine-web
      spec:
        containers:
        - image: " "
          name: binaries
          ports:
          - containerPort: 8080
            name: binaries
            protocol: TCP
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - binaries
        from:
          kind: ImageStreamTag
          name: acs-engine:latest
      type: ImageChange
