apiVersion: v1
kind: List
items:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: service-idler
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: service-idler-binary
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: service-idler:binaries
    source:
      git:
        uri: https://github.com/openshift/service-idler.git
      type: Git
      dockerfile: |
        FROM openshift/origin-release:golang-1.10
        COPY . /go/src/github.com/openshift/service-idler
        RUN curl -L https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 -o /go/bin/dep && chmod +x /go/bin/dep
        RUN cd /go/src/github.com/openshift/service-idler && \
            /go/bin/dep ensure -vendor-only
        RUN cd /go/src/github.com/openshift/service-idler && \
            CGO_ENABLED=0 go build -a -tags netgo -o service-idler-controller ./cmd/controller-manager/main.go
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: openshift/origin-release:golang-1.10
        imageOptimizationPolicy: SkipLayers
    triggers:
    - type: ConfigChange
    - type: GitHub
      github:
        secretReference:
          name: github-deploymentconfig-trigger
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: service-idler
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: service-idler:latest
    source:
      dockerfile: |
        FROM        centos:7
        MAINTAINER  Solly Ross <sross@redhat.com>

        COPY service-idler-controller /bin/service-idler-controller

        ENTRYPOINT ["/bin/service-idler-controller", "--install-crds=false", "--logtostderr"]
      images:
      - from:
          kind: ImageStreamTag
          name: service-idler:binaries
        paths:
        - destinationDir: .
          sourcePath: /go/src/github.com/openshift/service-idler/.
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: centos:7
        imageOptimizationPolicy: SkipLayers
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: service-idler:binaries
      type: ImageChange

