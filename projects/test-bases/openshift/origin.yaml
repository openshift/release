apiVersion: v1
kind: List
items:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: origin-test-base
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: origin-test-base-golang-1.8
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: origin-test-base:golang-1.8
    source:
      type: Dockerfile
      dockerfile: |
        FROM common-test-base:golang-1.8
        RUN umask 0002 && mkdir -p /go/src/github.com/openshift/ && git clone https://github.com/openshift/origin.git /go/src/github.com/openshift/origin/
        RUN umask 0002 && cd /go/src/github.com/openshift/origin && git checkout release-3.8 && make build-cross
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: common-test-base:golang-1.8
        imageOptimizationPolicy: SkipLayers
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: common-test-base:golang-1.8
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: origin-test-base-golang-1.9
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: origin-test-base:golang-1.9
    source:
      type: Dockerfile
      dockerfile: |
        FROM common-test-base:golang-1.9
        RUN umask 0002 && mkdir -p /go/src/github.com/openshift/ && git clone https://github.com/openshift/origin.git /go/src/github.com/openshift/origin/
        RUN umask 0002 && cd /go/src/github.com/openshift/origin && make build
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: common-test-base:golang-1.9
        imageOptimizationPolicy: SkipLayers
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: common-test-base:golang-1.9
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: origin-test-base-golang-1.8-race
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: origin-test-base:golang-1.8-race
    source:
      type: Dockerfile
      dockerfile: |
        FROM common-test-base:golang-1.8
        RUN umask 0002 && mkdir -p /go/src/github.com/openshift/ && git clone https://github.com/openshift/origin.git /go/src/github.com/openshift/origin/
        RUN umask 0002 && cd /go/src/github.com/openshift/origin && git checkout release-3.8 && OS_GOFLAGS='-race' make build build-tests
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: common-test-base:golang-1.8
        imageOptimizationPolicy: SkipLayers
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: common-test-base:golang-1.8
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: origin-test-base-golang-1.9-race
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: origin-test-base:golang-1.9-race
    source:
      type: Dockerfile
      dockerfile: |
        FROM common-test-base:golang-1.9
        RUN umask 0002 && mkdir -p /go/src/github.com/openshift/ && git clone https://github.com/openshift/origin.git /go/src/github.com/openshift/origin/
        RUN umask 0002 && cd /go/src/github.com/openshift/origin && OS_GOFLAGS='-race' make build build-tests
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: common-test-base:golang-1.9
        imageOptimizationPolicy: SkipLayers
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: common-test-base:golang-1.9
