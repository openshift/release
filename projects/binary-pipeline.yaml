apiVersion: v1
kind: Template
  template.openshift.io/long-description: |-
    Assists in creating binary builds with runtime images.
parameters:
- name: NAME
  required: True
- name: REPO
  required: True
- name: SOURCE_PATH
  required: True
- name: BINARY
  value: |
    FROM scratch
    COPY . /app/src
    RUN make
- name: RUNTIME
  value: |
    FROM scratch
    COPY . /app/run
    RUN echo "ran a binary"
- name: BINARY_FROM
  value: '{"kind":"DockerImage","name":"openshift/origin-release:golang-1.8"}'
- name: RUNTIME_FROM
  value: '{"kind":"DockerImage","name":"centos:7"}'
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: ${NAME}
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: ${NAME}-binary
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:binaries
    source:
      git:
        uri: ${REPO}
      type: Git
      dockerfile: "${BINARY}"
    strategy:
      dockerStrategy:
        from: ${{BINARY_FROM}}
        imageOptimizationPolicy: SkipLayers
    triggers:
    - type: ConfigChange
      #- type: GitHub
      #github:
      #  secret:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${NAME}
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    source:
      dockerfile: "${RUNTIME}"
      images:
      - from:
          kind: ImageStreamTag
          name: ${NAME}:binaries
        paths:
        - destinationDir: .
          sourcePath: "${SOURCE_PATH}"
    strategy:
      dockerStrategy:
        from: ${{RUNTIME_FROM}}
        imageOptimizationPolicy: SkipLayers
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: ${NAME}:binaries
      type: ImageChange
