apiVersion: v1
kind: List
items:
- apiVersion: monitoring.coreos.com/v1
  kind: PrometheusRule
  metadata:
    labels:
      prometheus: k8s
      role: alert-rules
    name: prometheus-prow-rules
    namespace: openshift-monitoring
  spec:
    groups:
    - name: prow.rules
      rules:
      - alert: OverCPURequests
        expr: |
          100 * (sum by(pod)(pod_name:container_cpu_usage:sum{namespace="ci",container_name!="POD"}
          * on (pod_name) group_left(pod) label_replace(kube_pod_labels{pod!="",label_app="prow"}, "pod_name", "$1", "pod", "(.*)"))
          / sum(kube_pod_container_resource_requests_cpu_cores) by (pod)) > 150
        for: 30m
        labels:
          severity: warning
        annotations:
          message: Pod {{$labels.pod}} is consistently using more CPU than requested. Current usage is {{ printf "%0.0f" $value }}%.

      - alert: OverMemoryRequests
        expr: |
          100 * (sum by(pod)(container_memory_working_set_bytes{namespace="ci",container_name!="POD",container_name!=""}
          * on (pod_name) group_left(pod) label_replace(kube_pod_labels{pod!="",label_app="prow"}, "pod_name", "$1", "pod", "(.*)"))
          / sum(kube_pod_container_resource_requests_memory_bytes) by (pod)) > 150
        for: 30m
        labels:
          severity: warning
        annotations:
          message: Pod {{$labels.pod}} is consistently using more RAM than requested. Current usage is {{ printf "%0.0f" $value }}%.
    - name: ci-op.rules
      rules:
      - alert: OverCPURequests
        expr: |
          100 * ( sum(label_replace(pod_name:container_cpu_usage:sum{namespace=~"ci-op-.*"}, "pod", "$1", "pod_name", "(.*)")) by (pod,namespace)
          / sum(label_join(kube_pod_container_resource_requests_cpu_cores, "pod_name", "", "pod")) by (pod,namespace) ) > 150
        for: 5m
        labels:
          severity: warning
        annotations:
          message: Ci-Op Pod {{$labels.pod}} in namespace {{$labels.namespace}} has over 150% CPU usage than initially requested. Ci-Op Pod {{$labels.pod}} in namespace {{$labels.namespace}} has high CPU usage {{ printf "%0.0f" $value }}.

      - alert: OverMemoryRequests
        expr: |
          100 * ( sum(label_replace(container_memory_working_set_bytes{namespace=~"ci-op-.*"}, "pod", "$1", "pod_name", "(.*)")) by (pod,namespace)
          / sum(label_join(kube_pod_container_resource_requests_memory_bytes, "pod_name", "", "pod")) by (pod,namespace) ) > 150
        for: 5m
        labels:
          severity: warning
        annotations:
          message: Ci-Op Pod {{$labels.pod}} in namespace {{$labels.namespace}} has over 150% memory usage than initially requested. Ci-Op Pod {{$labels.pod}} in namespace {{$labels.namespace}} has high memory usage {{ $value | humanize1024 }}B.
    - name: node.rules
      rules:
      - alert: KubeNodeNotReady
        expr: |
          kube_node_status_condition{job="kube-state-metrics",condition="Ready",status="true"} == 0
        for: 15m
        labels:
          severity: critical
        annotations:
          message: '{{ $labels.node }} has been unready for more than 15 minutes.'
    - name: test.rules
      rules:
      - record: cluster:apiserver_request_latency_seconds:mean5m
        expr: |
          sum(rate(apiserver_request_latencies_summary_sum{job="apiserver",subresource!="log",verb!~"^(?:LIST|WATCH|WATCHLIST|PROXY|CONNECT)$"}[5m])) without(instance, pod)
          /
          sum(rate(apiserver_request_latencies_summary_count{job="apiserver",subresource!="log",verb!~"^(?:LIST|WATCH|WATCHLIST|PROXY|CONNECT)$"}[5m])) without(instance, pod)
