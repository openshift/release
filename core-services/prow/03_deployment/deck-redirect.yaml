apiVersion: v1
kind: ConfigMap
metadata:
  name: deck-redirect-config
  namespace: ci
data:
  "default.conf": |
    server {
      listen 8080;
      return 302 $scheme://deck-ci.apps.ci.l2s4.p1.openshiftapps.com$request_uri;
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: deck-redirect
  name: deck-redirect
  namespace: ci
spec:
  replicas: 2
  selector:
    matchLabels:
      component: deck-redirect
  template:
    metadata:
      labels:
        app: prow
        component: deck-redirect
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - deck-redirect
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: nginxinc/nginx-unprivileged:1.17
        name: nginx
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: config
        configMap:
          name: deck-redirect-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prow
    component: deck-redirect
  name: deck-redirect
  namespace: ci
spec:
  ports:
  - name: main
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    component: deck-redirect
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: deck-internal-redirect-config
  namespace: ci
data:
  "default.conf": |
    server {
      listen 8080;
      return 302 $scheme://deck-internal-ci.apps.ci.l2s4.p1.openshiftapps.com$request_uri;
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: deck-internal-redirect
  name: deck-internal-redirect
  namespace: ci
spec:
  replicas: 2
  selector:
    matchLabels:
      component: deck-internal-redirect
  template:
    metadata:
      labels:
        app: prow
        component: deck-internal-redirect
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - deck-internal-redirect
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: nginxinc/nginx-unprivileged:1.17
        name: nginx
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: config
        configMap:
          name: deck-internal-redirect-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prow
    component: deck-internal-redirect
  name: deck-internal-redirect
  namespace: ci
spec:
  ports:
  - name: main
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    component: deck-internal-redirect
  sessionAffinity: None
  type: ClusterIP
