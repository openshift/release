# DSNs for tools reporting failures to Sentry
- from:
    ci-operator:
      bw_item: sentry
      field: ci-operator
  to:
    - cluster: default
      namespace: ci
      name: sentry-dsn
    - cluster: build01
      namespace: ci
      name: sentry-dsn
# The private key here is used to mirror content from the ops mirror and the redhat CDN
- from:
    ops-mirror.pem:
      bw_item: mirror.openshift.com
      attachment: cert-key.pem
    rh-cdn.pem:
      bw_item: rh-cdn
      attachment: rh-cdn.pem
  to:
    - cluster: default
      namespace: ocp
      name: mirror.openshift.com
    - cluster: build01
      namespace: ocp
      name: mirror.openshift.com
# Host keys for the SSHD bastions
- from:
    authorized_keys:
      bw_item: sshd-bastion-z
      attachment: authorized_keys
  to:
    - cluster: default
      namespace: bastion-z
      name: sshd-authorized-keys
- from:
    ssh_host_rsa_key:
      bw_item: sshd-bastion-z
      attachment: ssh_host_rsa_key
    ssh_host_dsa_key:
      bw_item: sshd-bastion-z
      attachment: ssh_host_dsa_key
    ssh_host_ecdsa_key:
      bw_item: sshd-bastion-z
      attachment: ssh_host_ecdsa_key
    ssh_host_ed25519_key:
      bw_item: sshd-bastion-z
      attachment: ssh_host_ed25519_key
  to:
    - cluster: default
      namespace: bastion-z
      name: sshd-host-keys
- from:
    authorized_keys:
      bw_item: sshd-bastion-ppc64le
      attachment: authorized_keys
  to:
    - cluster: default
      namespace: bastion-ppc64le
      name: sshd-authorized-keys
- from:
    ssh_host_rsa_key:
      bw_item: sshd-bastion-ppc64le
      attachment: ssh_host_rsa_key
    ssh_host_dsa_key:
      bw_item: sshd-bastion-ppc64le
      attachment: ssh_host_dsa_key
    ssh_host_ecdsa_key:
      bw_item: sshd-bastion-ppc64le
      attachment: ssh_host_ecdsa_key
    ssh_host_ed25519_key:
      bw_item: sshd-bastion-ppc64le
      attachment: ssh_host_ed25519_key
  to:
    - cluster: default
      namespace: bastion-ppc64le
      name: sshd-host-keys
- from:
    authorized_keys:
      bw_item: sshd-bastion-telco
      attachment: authorized_keys
  to:
    - cluster: default
      namespace: bastion-telco
      name: sshd-authorized-keys
- from:
    ssh_host_rsa_key:
      bw_item: sshd-bastion-telco
      attachment: ssh_host_rsa_key
    ssh_host_dsa_key:
      bw_item: sshd-bastion-telco
      attachment: ssh_host_dsa_key
    ssh_host_ecdsa_key:
      bw_item: sshd-bastion-telco
      attachment: ssh_host_ecdsa_key
    ssh_host_ed25519_key:
      bw_item: sshd-bastion-telco
      attachment: ssh_host_ed25519_key
  to:
    - cluster: default
      namespace: bastion-telco
      name: sshd-host-keys
# Bugzilla API keys are stored as a text field named "API Key"
- from:
    api:
      bw_item: openshift-bugzilla-robot
      field: API Key
  to:
    - cluster: default
      namespace: ci
      name: bugzilla-credentials-openshift-bugzilla-robot
    - cluster: app.ci
      namespace: ci
      name: bugzilla-credentials-openshift-bugzilla-robot
# Jenkins credentials are stored as separate items in Bitwarden,
# with the token recorded as the password for the account
- from:
    password:
      bw_item: ci.openshift.redhat.com
      attribute: password
  to:
    - cluster: default
      namespace: ci
      name: jenkins-credentials-ci.openshift.redhat.com
    - cluster: app.ci
      namespace: ci
      name: jenkins-credentials-ci.openshift.redhat.com
- from:
    password:
      bw_item: kata-jenkins-ci.westus2.cloudapp.azure.com
      attribute: password
  to:
    - cluster: default
      namespace: ci
      name: jenkins-credentials-kata-jenkins-ci.westus2.cloudapp.azure.com
    - cluster: app.ci
      namespace: ci
      name: jenkins-credentials-kata-jenkins-ci.westus2.cloudapp.azure.com
# Client certificates for the ci.dev Jenkins
# master are stored in a special set of fields
- from:
    password:
      bw_item: ci.dev.openshift.redhat.com
      attribute: password
    cert.pem:
      bw_item: ci.dev.openshift.redhat.com
      attachment: cert.pem
    key.pem:
      bw_item: ci.dev.openshift.redhat.com
      attachment: key.pem
    ca.pem:
      bw_item: ci.dev.openshift.redhat.com
      attachment: ca.pem
  to:
    - cluster: default
      namespace: ci
      name: jenkins-credentials-ci.dev.openshift.redhat.com
    - cluster: app.ci
      namespace: ci
      name: jenkins-credentials-ci.dev.openshift.redhat.com
# OAuth tokens for GitHub are stored as a text field named
# "GitHub OAuth Token" on login credential items for each robot.
- from:
    oauth:
      bw_item: openshift-bot
      field: GitHub OAuth Token
  to:
    - cluster: default
      namespace: ci
      name: github-credentials-openshift-bot
- from:
    oauth:
      bw_item: openshift-build-robot
      field: GitHub OAuth Token
  to:
    - cluster: default
      namespace: ci
      name: github-credentials-openshift-build-robot
- from:
    oauth:
      bw_item: openshift-cherrypick-robot
      field: GitHub OAuth Token
  to:
    - cluster: default
      namespace: ci
      name: github-credentials-openshift-cherrypick-robot
    - cluster: app.ci
      namespace: ci
      name: github-credentials-openshift-cherrypick-robot
- from:
    oauth:
      bw_item: openshift-ci-robot
      field: GitHub OAuth Token
  to:
    - cluster: default
      namespace: ci
      name: github-credentials-openshift-ci-robot
    - cluster: app.ci
      namespace: ci
      name: github-credentials-openshift-ci-robot
- from:
    oauth:
      bw_item: openshift-merge-robot
      field: GitHub OAuth Token
  to:
    - cluster: default
      namespace: ci
      name: github-credentials-openshift-merge-robot
    - cluster: app.ci
      namespace: ci
      name: github-credentials-openshift-merge-robot
- from:
    oauth:
      bw_item: openshift-publish-robot
      field: GitHub OAuth Token
  to:
    - cluster: default
      namespace: ci
      name: github-credentials-openshift-publish-robot
# openshift-ci-robot also has a token that grants access to
# repositories, used by Prow jobs that need to clone
# private repositories
- from:
    oauth:
      bw_item: openshift-ci-robot
      field: private-git-cloner
  to:
    - cluster: default
      namespace: ci
      name: github-credentials-openshift-ci-robot-private-git-cloner
# openshift-publish-robot also has a token that grants read-only
# access to private repositories.
- from:
    oauth:
      bw_item: openshift-publish-robot
      field: private-git-cloner
  to:
    - cluster: default
      namespace: ci
      name: private-git-cloner
# Configuration for Slack ci-chat-bot is stored under "Token"
# and the key value is "token" in the secret
- from:
    token:
      bw_item: ci-chat-bot-slack-token
      field: Token
  to:
    - cluster: default
      namespace: ci
      name: ci-chat-bot-slack-token
# Configuration for api_url, which is for slack incoming hooks and can be used eg in prometheus alert-manager, is stored under "url"
# and the key value is "url" in the secret
- from:
    url:
      bw_item: ci-slack-api-url
      field: url
  to:
    - cluster: default
      namespace: ci
      name: ci-slack-api-url
# Configuration for GitHub OAuth Apps are stored
# as an opaque field "Client Configuration"
- from:
    config.json:
      bw_item: prow.svc.ci.openshift.org
      field: Client Configuration
  to:
    - cluster: default
      namespace: ci
      name: github-app-credentials
    - cluster: app.ci
      namespace: ci
      name: github-app-credentials
# Configuration for GitHub OAuth Apps are stored
# as an opaque field "Client Configuration"
- from:
    config.json:
      bw_item: deck-internal-ci.svc.ci.openshift.org
      field: Client Configuration
  to:
    - cluster: default
      namespace: ci
      name: github-app-credentials-private
    - cluster: app.ci
      namespace: ci
      name: github-app-credentials-private
# Cookie secret to encrypt frontend and backend
# communication is stored in the "Cookie" field
- from:
    cookie:
      bw_item: prow.svc.ci.openshift.org
      field: Cookie32
  to:
    - cluster: default
      namespace: ci
      name: cookie
    - cluster: app.ci
      namespace: ci
      name: cookie
# HMAC token for encrypting GitHub webhook payloads
# is stored in the "HMAC Token" field
- from:
    hmac:
      bw_item: hmac
      field: HMAC Token
  to:
    - cluster: default
      namespace: ci
      name: github-webhook-credentials
    - cluster: app.ci
      namespace: ci
      name: github-webhook-credentials
# DeploymentConfig token is used to auth trigger events
# for DeploymentConfigs from GitHub
- from:
    WebHookSecretKey:
      bw_item: github-deploymentconfig-webhook-token
      field: Token
  to:
    - cluster: default
      namespace: ci
      name: github-deploymentconfig-trigger
# Unsplash API key is stored as a text field named "API Key"
# It's used for the "goose" prow plugin
- from:
    api-key:
      bw_item: unsplash.com
      field: API Key
  to:
    - cluster: default
      namespace: ci
      name: unsplash-api-key
    - cluster: app.ci
      namespace: ci
      name: unsplash-api-key
# Credentials for GCE service accounts are stored
# as an attachment on each distinct credential
- from:
    service-account.json:
      bw_item: aos-pubsub-subscriber
      attachment: credentials.json
  to:
    - cluster: default
      namespace: ci
      name: gce-sa-credentials-aos-pubsub-subscriber
- from:
    service-account.json:
      bw_item: ci-vm-operator
      attachment: credentials.json
  to:
    - cluster: default
      namespace: ci
      name: gce-sa-credentials-ci-vm-operator
- from:
    service-account.json:
      bw_item: gcs-publisher
      attachment: credentials.json
  to:
    - cluster: default
      namespace: ci
      name: gce-sa-credentials-gcs-publisher
    - cluster: build01
      namespace: ci
      name: gce-sa-credentials-gcs-publisher
- from:
    service-account.json:
      bw_item: gcs-tide-publisher
      attachment: credentials.json
  to:
    - cluster: default
      namespace: ci
      name: gce-sa-credentials-gcs-tide-publisher
    - cluster: app.ci
      namespace: ci
      name: gce-sa-credentials-gcs-tide-publisher
- from:
    service-account.json:
      bw_item: gcs-private
      attachment: credentials.json
  to:
    - cluster: default
      namespace: ci
      name: gce-sa-credentials-gcs-private
    - cluster: app.ci
      namespace: ci
      name: gce-sa-credentials-gcs-private
- from:
    service-account.json:
      bw_item: gcs-crier-publisher
      attachment: credentials.json
  to:
    - cluster: default
      namespace: ci
      name: gce-sa-credentials-gcs-crier-publisher
    - cluster: app.ci
      namespace: ci
      name: gce-sa-credentials-gcs-crier-publisher
# Some GCE serviceaccounts also have SSH keys
- from:
    service-account.json:
      bw_item: aos-serviceaccount
      attachment: credentials.json
    ssh-privatekey:
      bw_item: aos-serviceaccount
      attachment: ssh-privatekey
    ssh-publickey:
      bw_item: aos-serviceaccount
      attachment: ssh-publickey
  to:
    - cluster: default
      namespace: ci
      name: gce-sa-credentials-aos-serviceaccount
- from:
    service-account.json:
      bw_item: jenkins-ci-provisioner
      attachment: credentials.json
    ssh-privatekey:
      bw_item: jenkins-ci-provisioner
      attachment: ssh-privatekey
    ssh-publickey:
      bw_item: jenkins-ci-provisioner
      attachment: ssh-publickey
  to:
    - cluster: default
      namespace: ci
      name: gce-sa-credentials-jenkins-ci-provisioner
# Credentials for registries are stored as
# separate fields on individual items
# TODO (hongkliu) oc secrets link builder "registry-push-credentials-${registry//\//\-}"
- from:
    config.json:
      bw_item: docker.io
      field: Push Credentials
  to:
    - cluster: default
      namespace: ci
      name: registry-push-credentials-docker.io
- from:
    config.json:
      bw_item: quay.io
      field: Push Credentials
  to:
    - cluster: default
      namespace: ci
      name: registry-push-credentials-quay.io
- from:
    config.json:
      bw_item: quay.io/openshift-knative
      field: Push Credentials
  to:
    - cluster: default
      namespace: ci
      name: registry-push-credentials-quay.io-openshift-knative
- from:
    config.json:
      bw_item: quay.io/openshift-kni
      field: Push Credentials
  to:
    - cluster: default
      namespace: ci
      name: registry-push-credentials-quay.io-openshift-kni
- from:
    config.json:
      bw_item: quay.io/openshiftio
      field: Push Credentials
  to:
    - cluster: default
      namespace: ci
      name: registry-push-credentials-quay.io-openshiftio
- from:
    config.json:
      bw_item: quay.io/openshift-pipeline
      field: Push Credentials
  to:
    - cluster: default
      namespace: ci
      name: registry-push-credentials-quay.io-openshift-pipeline
- from:
    config.json:
      bw_item: quay.io/codeready-toolchain
      field: Push Credentials
  to:
    - cluster: default
      namespace: ci
      name: registry-push-credentials-quay.io-codeready-toolchain
- from:
    config.json:
      bw_item: quay.io/operator-manifests
      field: Push Credentials
  to:
    - cluster: default
      namespace: ci
      name: registry-push-credentials-quay.io-operator-manifests
- from:
    config.json:
      bw_item: quay.io/integr8ly
      field: Push Credentials
  to:
    - cluster: default
      namespace: ci
      name: registry-push-credentials-quay.io-integr8ly
- from:
    config.json:
      bw_item: quay.io/openshift-psap
      attachment: config.json
  to:
    - cluster: default
      namespace: ci
      name: registry-push-credentials-quay.io-openshift-psap
#Pull Credentials
- from:
    config.json:
      bw_item: quay.io
      field: Pull Credentials
  to:
    - cluster: default
      namespace: ci
      name: registry-pull-credentials-quay.io
- from:
    .dockerconfigjson:
      bw_item: quay.io
      field: Pull Credentials
  to:
    - cluster: default
      namespace: ci
      name: ci-pull-credentials
      type: kubernetes.io/dockerconfigjson
- from:
    test.env.yaml:
      bw_item: operator-manifests
      attachment: test.env.yaml
    quay-env.txt:
      bw_item: operator-manifests
      attachment: quay-env.txt
  to:
    - cluster: default
      namespace: ci
      name: operator-manifests-test-credentials
# Cluster credentials aggregate multiple items
# of information for easy consumption by tests
# aws
- from:
    pull-secret:
      bw_item: quay.io
      attachment: pull-secret
    insights-live.yaml:
      bw_item: insights-ci-account
      attachment: insights-live.yaml
    .awscred:
      bw_item: jenkins-ci-iam
      attachment: .awscred
    ssh-privatekey:
      bw_item: jenkins-ci-iam
      attachment: ssh-privatekey
    ssh-publickey:
      bw_item: jenkins-ci-iam
      attachment: ssh-publickey
    ops-mirror.pem:
      bw_item: mirror.openshift.com
      attachment: cert-key.pem
  to:
    - cluster: default
      namespace: ci
      name: cluster-secrets-aws
    - cluster: build01
      namespace: ci
      name: cluster-secrets-aws
# gcp
- from:
    pull-secret:
      bw_item: quay.io
      attachment: pull-secret
    insights-live.yaml:
      bw_item: insights-ci-account
      attachment: insights-live.yaml
    gce.json:
      bw_item: jenkins-ci-provisioner
      attachment: credentials.json
    ssh-privatekey:
      bw_item: jenkins-ci-provisioner
      attachment: ssh-privatekey
    ssh-publickey:
      bw_item: jenkins-ci-provisioner
      attachment: ssh-publickey
    ops-mirror.pem:
      bw_item: mirror.openshift.com
      attachment: cert-key.pem
    telemeter-token:
      bw_item: telemeter
      field: Telemeter Token
  to:
    - cluster: default
      namespace: ci
      name: cluster-secrets-gcp
    - cluster: build01
      namespace: ci
      name: cluster-secrets-gcp
# openstack
- from:
    pull-secret:
      bw_item: quay.io
      attachment: pull-secret
    clouds.yaml:
      bw_item: openstack
      attachment: clouds.yaml
    .awscred:
      bw_item: openstack
      attachment: .awscred
    insights-live.yaml:
      bw_item: insights-ci-account
      attachment: insights-live.yaml
    ssh-privatekey:
      bw_item: jenkins-ci-provisioner
      attachment: ssh-privatekey
    ssh-publickey:
      bw_item: jenkins-ci-provisioner
      attachment: ssh-publickey
  to:
    - cluster: default
      namespace: ci
      name: cluster-secrets-openstack
# openstack-ppc64le
- from:
    pull-secret:
      bw_item: openstack-ppc64le
      attachment: pull-secret
    clouds.yaml:
      bw_item: openstack-ppc64le
      attachment: clouds.yaml
    ssh-privatekey:
      bw_item: openstack-ppc64le
      attachment: ssh-privatekey
    ssh-publickey:
      bw_item: openstack-ppc64le
      attachment: ssh-publickey
  to:
    - cluster: default
      namespace: ci
      name: cluster-secrets-openstack-ppc64le
# vsphere
- from:
    pull-secret:
      bw_item: quay.io
      attachment: pull-secret
    insights-live.yaml:
      bw_item: insights-ci-account
      attachment: insights-live.yaml
    .awscred:
      bw_item: jenkins-ci-iam
      attachment: .awscred
    ssh-privatekey:
      bw_item: jenkins-ci-iam
      attachment: ssh-privatekey
    ssh-publickey:
      bw_item: jenkins-ci-iam
      attachment: ssh-publickey
    secret.auto.tfvars:
      bw_item: vsphere-credentials
      attachment: secret.auto.tfvars
  to:
    - cluster: default
      namespace: ci
      name: cluster-secrets-vsphere
    - cluster: build01
      namespace: ci
      name: cluster-secrets-vsphere
# metal
- from:
    pull-secret:
      bw_item: quay.io
      attachment: pull-secret
    insights-live.yaml:
      bw_item: insights-ci-account
      attachment: insights-live.yaml
    .awscred:
      bw_item: jenkins-ci-iam
      attachment: .awscred
    ssh-privatekey:
      bw_item: jenkins-ci-iam
      attachment: ssh-privatekey
    ssh-publickey:
      bw_item: jenkins-ci-iam
      attachment: ssh-publickey
    .packetcred:
      bw_item: packet.net
      attachment: .packetcred
    matchbox-client.crt:
      bw_item: packet.net
      attachment: client.crt
    matchbox-client.key:
      bw_item: packet.net
      attachment: client.key
  to:
    - cluster: default
      namespace: ci
      name: cluster-secrets-metal
# packet
- from:
    pull-secret:
      bw_item: quay.io
      attachment: pull-secret
    insights-live.yaml:
      bw_item: insights-ci-account
      attachment: insights-live.yaml
    .awscred:
      bw_item: jenkins-ci-iam
      attachment: .awscred
    ssh-privatekey:
      bw_item: jenkins-ci-iam
      attachment: ssh-privatekey
    ssh-publickey:
      bw_item: jenkins-ci-iam
      attachment: ssh-publickey
    .packetcred:
      bw_item: packet.net
      attachment: .packetcred
    matchbox-client.crt:
      bw_item: packet.net
      attachment: client.crt
    matchbox-client.key:
      bw_item: packet.net
      attachment: client.key
  to:
    - cluster: default
      namespace: ci
      name: cluster-secrets-packet
#azure4
- from:
    pull-secret:
      bw_item: quay.io
      attachment: pull-secret
    osServicePrincipal.json:
      bw_item: os4-installer.openshift-ci.azure
      attachment: osServicePrincipal.json
    ssh-privatekey:
      bw_item: jenkins-ci-iam
      attachment: ssh-privatekey
    ssh-publickey:
      bw_item: jenkins-ci-iam
      attachment: ssh-publickey
  to:
    - cluster: default
      namespace: ci
      name: cluster-secrets-azure4
    - cluster: build01
      namespace: ci
      name: cluster-secrets-azure4
# cluster-secrets-azure is not synced. Email sent to Jim about this.
# azure:
# codecov.io tokens we store for teams
- from:
    token:
      bw_item: codecov-tokens
      field: redhat-developer-service-binding-operator
  to:
    - cluster: default
      namespace: ci
      name: redhat-developer-service-binding-operator-codecov-token
# collects all the secrets for build farm
- from:
    build01_github_client_secret:
      bw_item: build_farm_01_cluster
      field: github_client_secret
    build01_github_client_id:
      bw_item: build_farm_01_cluster
      field: github_client_id
    build01_ci_reg_auth_value.txt:
      bw_item: build_farm
      attachment: build01_ci_reg_auth_value.txt
    build01_build01_reg_auth_value.txt:
      bw_item: build_farm
      attachment: build01_build01_reg_auth_value.txt
    sa.crier.build01.config:
      bw_item: build_farm
      attachment: sa.crier.build01.config
    sa.crier.api.ci.config:
      bw_item: build_farm
      attachment: sa.crier.api.ci.config
    sa.deck.build01.config:
      bw_item: build_farm
      attachment: sa.deck.build01.config
    sa.deck.api.ci.config:
      bw_item: build_farm
      attachment: sa.deck.api.ci.config
    sa.hook.build01.config:
      bw_item: build_farm
      attachment: sa.hook.build01.config
    sa.hook.app.ci.config:
      bw_item: build_farm
      attachment: sa.hook.app.ci.config
    sa.hook.api.ci.config:
      bw_item: build_farm
      attachment: sa.hook.api.ci.config
    sa.plank.build01.config:
      bw_item: build_farm
      attachment: sa.plank.build01.config
    sa.plank.api.ci.config:
      bw_item: build_farm
      attachment: sa.plank.api.ci.config
    sa.sinker.build01.config:
      bw_item: build_farm
      attachment: sa.sinker.build01.config
    sa.sinker.api.ci.config:
      bw_item: build_farm
      attachment: sa.sinker.api.ci.config
    sa.ca-cert-issuer.build01.config:
      bw_item: build_farm
      attachment: sa.ca-cert-issuer.build01.config
    sa.config-updater.build01.config:
      bw_item: build_farm
      attachment: sa.config-updater.build01.config
    sa.jenkins-operator.api.ci.config:
      bw_item: build_farm
      attachment: sa.jenkins-operator.api.ci.config
  to:
    - cluster: default
      namespace: ci
      name: build-farm-credentials
    - cluster: app.ci
      namespace: ci
      name: build-farm-credentials
# config updater for app.ci cluster
- from:
    kubeconfig:
      bw_item: app-ci-config-updater-kubeconfig
      attachment: app-ci-config-updater-kubeconfig
  to:
    - cluster: default
      namespace: ci
      name: app-ci-config-updater-kubeconfig
    - cluster: app.ci
      namespace: ci
      name: app-ci-config-updater-kubeconfig

# collects all the secrets for ci-operator
- from:
    sa.ci-operator.apici.config:
      bw_item: build_farm
      attachment: sa.ci-operator.apici.config
  to:
    - cluster: default
      namespace: ci
      name: apici-ci-operator-credentials
    - cluster: build01
      namespace: ci
      name: apici-ci-operator-credentials
# collects all the secrets for boskos
- from:
    username:
      bw_item: boskos-oauth-proxy
      field: boskos-username
    password:
      bw_item: boskos-oauth-proxy
      field: boskos-password
    ci.htpasswd:
      bw_item: boskos-oauth-proxy
      attachment: ci.htpasswd
  to:
    - cluster: default
      namespace: ci
      name: boskos-credentials
    - cluster: build01
      namespace: ci
      name: boskos-credentials
    - cluster: app.ci
      namespace: ci
      name: boskos-credentials
# collects all the secrets for aws iamuser openshift-ci-robot iamuser under account ci-infra
# it is used for issue CA certificates for build01
- from:
    AWS_ACCESS_KEY_ID:
      bw_item: aws_ci_infra_openshift-ci-robot
      field: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      bw_item: aws_ci_infra_openshift-ci-robot
      field: AWS_SECRET_ACCESS_KEY
  to:
    - cluster: default
      namespace: ci
      name: aws-ci-infra-openshift-ci-robot-credentials
#https://jira.coreos.com/browse/DPP-2164
- from:
    .awscred:
      bw_item: AWS ci-longlivedcluster-bot
      attachment: .awscred
  to:
    - cluster: default
      namespace: ci
      name: aws-openshift-llc-account-credentials
# Configuration for the .git-credentials used by the release controller to clone
# private repositories to generate changelogs
- from:
    .git-credentials:
      bw_item: openshift-bot
      field: git_url_with_credentials
  to:
    - cluster: default
      namespace: ci-release
      name: git-credentials
- from:
    sa.release-controller.api.ci.config:
      bw_item: release-controller
      attachment: sa.release-controller.api.ci.config
  to:
    - cluster: default
      namespace: ci
      name: release-controller-prowjob-kubeconfig
    - cluster: app.ci
      namespace: ci
      name: release-controller-prowjob-kubeconfig
