- item_name: build_farm
  attachments:
  - cmd: |-
      oc --context $(cluster) sa create-kubeconfig --namespace ci $(service_account) | sed "s/$(service_account)/$(cluster)/g"
    name: sa.$(service_account).$(cluster).config
  params:
    cluster:
    - build01
    - build02
    - vsphere
    - api.ci
    service_account:
    - config-updater
    - deck
    - sinker
    - hook
    - crier
    - prow-controller-manager
    - dptp-controller-manager
    - ci-operator
- item_name: build_farm
  attachments:
  - cmd: |-
      oc --context $(cluster) sa create-kubeconfig --namespace ci $(service_account) | sed "s/$(service_account)/$(cluster)/g"
    name: sa.$(service_account).$(cluster).config
  params:
    cluster:
    - app.ci
    service_account:
    - config-updater
    - deck
    - sinker
    - hook
    - crier
    - prow-controller-manager
    - pj-rehearse
    - release-bot
- item_name: build_farm
  attachments:
  - cmd: |-
      oc --context $(cluster) get secrets --namespace ci -o json | jq '.items[] | select(.type=="kubernetes.io/dockercfg") | select(.metadata.annotations["kubernetes.io/service-account.name"]=="build01") | .data[".dockercfg"]' --raw-output | base64 --decode | jq '.["image-registry.openshift-image-registry.svc:5000"].auth' --raw-output | tr -d '\\n'
    name: build01_$(cluster)_reg_auth_value.txt
  params:
    cluster:
    - build01
    - build02
    - vsphere
- item_name: build_farm
  attachments:
  - cmd: |-
      oc --as system:admin --context api.ci get secrets --namespace ocp -o json | jq '.items[] | select(.type=="kubernetes.io/dockercfg") | select(.metadata.annotations["kubernetes.io/service-account.name"]=="default") | .data[".dockercfg"]' --raw-output | base64 --decode | jq '.["docker-registry.default.svc:5000"].auth' --raw-output | tr -d '\\n'
    name: build01_ci_reg_auth_value.txt