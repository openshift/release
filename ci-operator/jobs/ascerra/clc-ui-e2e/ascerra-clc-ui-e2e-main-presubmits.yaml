presubmits:
  ascerra/clc-ui-e2e:
  - agent: kubernetes
    always_run: true
    branches:
    - ^main$
    - ^main-
    cluster: build01
    context: ci/prow/acm-ocp4.12-lp-interop-images
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/variant: acm-ocp4.12-lp-interop
      ci.openshift.io/generator: prowgen
      job-release: "4.12"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-ascerra-clc-ui-e2e-main-acm-ocp4.12-lp-interop-images
    rerun_command: /test acm-ocp4.12-lp-interop-images
    spec:
      containers:
      - args:
        - --gcs-upload-secret=/secrets/gcs/service-account.json
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --oauth-token-path=/usr/local/github-credentials/oauth
        - --report-credentials-file=/etc/report/credentials
        - --target=[images]
        - --variant=acm-ocp4.12-lp-interop
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /secrets/gcs
          name: gcs-credentials
          readOnly: true
        - mountPath: /usr/local/github-credentials
          name: github-credentials-openshift-ci-robot-private-git-cloner
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/report
          name: result-aggregator
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: github-credentials-openshift-ci-robot-private-git-cloner
        secret:
          secretName: github-credentials-openshift-ci-robot-private-git-cloner
      - name: pull-secret
        secret:
          secretName: registry-pull-credentials
      - name: result-aggregator
        secret:
          secretName: result-aggregator
    trigger: (?m)^/test( | .* )acm-ocp4.12-lp-interop-images,?($|\s.*)
