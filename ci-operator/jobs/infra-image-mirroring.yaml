periodics:
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  decoration_config:
    timeout: 5h0m0s
  labels:
    ci.openshift.io/area: knative
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-knative
  reporter_config:
    slack:
      channel: '#serverless-ci'
      job_states_to_report:
      - failure
      - error
      report_template: ' :volcano: Job *{{.Spec.Job}}* ended with *{{.Status.State}}*.
        <{{.Status.URL}}|View logs> :volcano: '
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_knative
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay-io-openshift-knative
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-azure
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-openshift-azure
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_openshift_azure
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-openshift-azure
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-openshift
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_origin
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-openshift
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: kubefed
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-kubefed
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_kubefed
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-openshift
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-container-storage
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-red-hat-storage
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_red-hat-storage
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-ocs-dev
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: integr8ly
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-integr8ly
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_integr8ly
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-integr8ly
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-kni
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-openshift-kni
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_openshift-kni
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-openshift-kni
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: ovirt
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-ovirt
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_ovirt
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-ovirt
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@every 20m'
  decorate: true
  labels:
    ci.openshift.io/area: redhat-developer
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-redhat-developer
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_redhat-developer
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-redhat-developer
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-logging
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-openshift-logging
  reporter_config:
    slack:
      channel: '#announce-logging'
      job_states_to_report:
      - failure
      report_template: Job {{.Spec.Job}} failed
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_logging
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: openshiftlogging-ci-to-quay
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: edge-infrastructure
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-edge-infrastructure
  reporter_config:
    slack:
      channel: '#forum-edge-infra-alerts'
      job_states_to_report:
      - failure
      - error
      report_template: '<@here> :red_jenkins_circle: Job *{{.Spec.Job}}* ended with
        *{{.Status.State}}*. <{{.Status.URL}}|View logs>'
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_edge_infrastructure
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: edge-infrastructure-quay-push
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: hypershift
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-hypershift
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_hypershift
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quayio-hypershift
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: konveyor
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-konveyor
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_konveyor
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay-io-konveyor
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: node-observability-operator
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-node-observability-operator
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_node_observability_operator
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay-io-node-observability-optr
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: external-dns-operator
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-external-dns-operator
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_external_dns_operator
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay-io-external-dns-optr
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: aws-load-balancer-operator
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-aws-load-balancer-operator
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_aws_load_balancer_operator
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay-io-albo
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: lvms
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-lvms
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_lvms
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay-io-lvms-dev
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  decoration_config:
    timeout: 2h0m0s
  labels:
    ci.openshift.io/area: osa
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-osa
  reporter_config:
    slack:
      channel: '#forum-osa-infra-alerts'
      job_states_to_report:
      - failure
      - error
      report_template: Job *{{.Spec.Job}}* ended with *{{.Status.State}}*. <{{.Status.URL}}|View
        logs>
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_osa
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay-io-osa
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-lightspeed
    ci.openshift.io/role: image-mirroring
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-image-mirroring-openshift-lightspeed
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_openshift_lightspeed
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay-io-openshift-lightspeed
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: observability-ui
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-observability-ui
  reporter_config:
    slack:
      channel: '#announce-observability-ui'
      job_states_to_report:
      - failure
      report_template: Job {{.Spec.Job}} failed
  spec:
    automountServiceAccountToken: true
    containers:
    - command:
      - /tp-entrypoint.sh
      env:
      - name: HOME
        value: /home/mirror
      - name: MAPPING_FILE_PREFIX
        value: mapping_observability_ui
      - name: dry_run
        value: "false"
      image: registry.ci.openshift.org/ci/image-mirror:oc-415
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay-io-observability-ui
    - configMap:
        name: image-mirror-mappings
      name: config
