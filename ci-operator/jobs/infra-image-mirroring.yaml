periodics:
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: knative
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-knative
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_knative*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-openshift-knative
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: open-cluster-management
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-open-cluster-management
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - -c
      - |
        set -o errexit
        cp ~/.docker/config.json /tmp/config.json
        oc registry login --to /tmp/config.json
        failures=0
        for mapping in /etc/imagemirror/mapping_open_cluster_management*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -a /tmp/config.json -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-open-cluster-management
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-azure
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-openshift-azure
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_openshift_azure*; do
          echo "Running: oc image mirror -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: quay.io/openshift/origin-cli:4.3
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-openshift-azure
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-openshift
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - -c
      - |
        set -o errexit
        cp ~/.docker/config.json /tmp/config.json
        oc registry login --to /tmp/config.json
        failures=0
        for mapping in /etc/imagemirror/mapping_origin*; do
          if [ ! -s "${mapping}" ]; then continue; fi
          attempts=3
          for attempt in $( seq $attempts ); do
            echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
            if oc -v8 image mirror --keep-manifest-list -a /tmp/config.json -f="$mapping" --skip-multiple-scopes; then
              break
            fi
            if [[ $attempt -eq $attempts ]]; then
              echo "ERROR: Failed to mirror images from $mapping after $attempts attempts"
              failures=$((failures+1))
            fi
          done
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-openshift
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: tekton
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-tekton
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_tekton*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-openshift-pipeline
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: toolchain
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-toolchain
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_toolchain*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-openshiftio
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: kubefed
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-kubefed
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_kubefed*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: codeready-toolchain
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-codeready-toolchain
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_codeready_toolchain*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-codeready-toolchain
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-container-storage
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-ocs-operator
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_ocs-operator*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-ocs-dev
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-container-storage
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-ceph-csi
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_ceph-csi*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-ocs-dev
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@every 20m'
  decorate: true
  labels:
    ci.openshift.io/area: integr8ly
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-integr8ly
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_integr8ly*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-integr8ly
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-kni
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-openshift-kni
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_openshift-kni*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-openshift-kni
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-psap
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-openshift-psap
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - -c
      - |
        set -o errexit
        cp ~/.docker/config.json /tmp/config.json
        oc registry login --to /tmp/config.json
        failures=0
        for mapping in /etc/imagemirror/mapping_openshift-psap*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-openshift-psap
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: tnozicka
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-tnozicka
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - -c
      - |
        set -euxo pipefail
        cp ~/.docker/config.json /tmp/config.json
        oc registry login --to /tmp/config.json
        failures=0
        for mapping in /etc/imagemirror/mapping_tnozicka_*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: .dockerconfigjson
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-tnozicka
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: ovirt
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-ovirt
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - -c
      - |
        set -euxo pipefail
        cp ~/.docker/config.json /tmp/config.json
        oc registry login --to /tmp/config.json
        failures=0
        for mapping in /etc/imagemirror/mapping_ovirt_*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-ovirt
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@every 20m'
  decorate: true
  labels:
    ci.openshift.io/area: redhat-developer
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-redhat-developer
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - -c
      - |
        set -o errexit
        cp ~/.docker/config.json /tmp/config.json
        oc registry login --to /tmp/config.json
        failures=0
        for mapping in /etc/imagemirror/mapping_redhat-developer*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-redhat-developer
    - configMap:
        name: image-mirror-mappings
      name: config
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  labels:
    ci.openshift.io/area: openshift-logging
    ci.openshift.io/role: image-mirroring
  name: periodic-image-mirroring-openshift-logging
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        failures=0
        for mapping in /etc/imagemirror/mapping_logging*; do
          echo "Running: oc image mirror --keep-manifest-list -f=$mapping --skip-multiple-scopes"
          if ! oc image mirror --keep-manifest-list -f="$mapping" --skip-multiple-scopes; then
            echo "ERROR: Failed to mirror images from $mapping"
            failures=$((failures+1))
          fi
        done
        exit $failures
      command:
      - /bin/bash
      env:
      - name: HOME
        value: /home/mirror
      image: registry.ci.openshift.org/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /home/mirror/.docker/config.json
        name: push
        readOnly: true
        subPath: config.json
      - mountPath: /etc/imagemirror
        name: config
    volumes:
    - name: push
      secret:
        secretName: registry-push-credentials-quay.io-openshift-logging
    - configMap:
        name: image-mirror-mappings
      name: config
