periodics:
- agent: kubernetes
  cluster: app.ci
  cron: 0 1 * * *
  decorate: true
  labels:
    ci.openshift.io/role: infra
  name: periodic-manage-clonerefs
  spec:
    containers:
    - args:
      - start-build
      - manage-clonerefs
      - --wait
      command:
      - /usr/bin/oc
      image: image-registry.openshift-image-registry.svc:5000/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
    serviceAccountName: clonerefs-manager
- agent: kubernetes
  cluster: app.ci
  cron: '@yearly'
  decorate: true
  labels:
    ci.openshift.io/role: infra
  name: periodic-bugzilla-refresh
  spec:
    containers:
    - args:
      - |-
        --query=is:pr
        state:open
        label:bugzilla/invalid-bug
        -label:bugzilla/valid-bug
      - --token=/etc/oauth/oauth
      - --updated=0
      - |-
        --comment=/bugzilla refresh

        The requirements for Bugzilla bugs have changed, recalculating validity.
      - --ceiling=0
      - --confirm
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20210409-985ef5e721
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  cron: '@yearly'
  decorate: true
  labels:
    ci.openshift.io/role: infra
  name: periodic-rotate-serviceaccount-secrets
  spec:
    containers:
    - args:
      - --namespace=ci
      - --dry-run=true
      command:
      - /usr/bin/serviceaccount-secret-rotation-trigger
      env:
      - name: KUBECONFIG
        value: /etc/build-farm-credentials/sa.config-updater.api.ci.config:/etc/build-farm-credentials/sa.config-updater.app.ci.config:/etc/build-farm-credentials/sa.config-updater.build01.config:/etc/build-farm-credentials/sa.config-updater.build02.config:/etc/build-farm-credentials/sa.config-updater.vsphere.config
      image: serviceaccount-secret-rotation-trigger:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/build-farm-credentials
        name: build-farm-credentials
        readOnly: true
    volumes:
    - name: build-farm-credentials
      secret:
        items:
        - key: sa.config-updater.api.ci.config
          path: sa.config-updater.api.ci.config
        - key: sa.config-updater.app.ci.config
          path: sa.config-updater.app.ci.config
        - key: sa.config-updater.build01.config
          path: sa.config-updater.build01.config
        - key: sa.config-updater.build02.config
          path: sa.config-updater.build02.config
        - key: sa.config-updater.vsphere.config
          path: sa.config-updater.vsphere.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: app.ci
  cron: 0 1 * * *
  decorate: true
  labels:
    ci.openshift.io/role: infra
  name: periodic-daily-bugzilla-refresh
  spec:
    containers:
    - args:
      - |-
        --query=is:pr
        state:open
        label:bugzilla/invalid-bug
        label:lgtm
        -label:bugzilla/valid-bug
        -label:do-not-merge
        -label:do-not-merge/work-in-progress
        -label:do-not-merge/hold
        -label:needs-rebase
        -label:needs-ok-to-test
      - --token=/etc/oauth/oauth
      - --updated=0
      - |-
        --comment=/bugzilla refresh

        Recalculating validity in case the underlying Bugzilla bug has changed.
      - --ceiling=0
      - --confirm
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20210409-985ef5e721
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  interval: 12m
  labels:
    ci.openshift.io/role: infra
  name: periodic-retester
  spec:
    containers:
    - args:
      - |-
        --query=is:pr
        state:open
        label:lgtm
        label:approved
        status:failure
        -label:do-not-merge
        -label:do-not-merge/work-in-progress
        -label:do-not-merge/hold
        -label:needs-rebase
        -label:needs-ok-to-test
        org:openshift
        org:openshift-priv
        repo:operator-framework/operator-lifecycle-manager
        repo:operator-framework/operator-marketplace
        repo:operator-framework/operator-registry
        repo:tnozicka/openshift-acme
        repo:cri-o/cri-o
      - --token=/etc/oauth/oauth
      - --updated=0
      - |-
        --comment=/retest

        Please review the [full test history](https://prow.ci.openshift.org/pr-history/?org={{.Org}}&repo={{.Repo}}&pr={{.Number}}) for this PR and help us cut down flakes.
      - --template
      - --ceiling=5
      - --confirm
      - --random
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20210409-985ef5e721
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  interval: 6h
  labels:
    ci.openshift.io/role: infra
  name: periodic-issue-close
  spec:
    containers:
    - args:
      - |-
        --query=org:openshift
        repo:operator-framework/operator-sdk
        repo:operator-framework/operator-lib
        repo:tnozicka/openshift-acme
        -label:lifecycle/frozen
        label:lifecycle/rotten
      - --updated=720h
      - --token=/etc/oauth/oauth
      - |-
        --comment=Rotten issues close after 30d of inactivity.

        Reopen the issue by commenting `/reopen`.
        Mark the issue as fresh by commenting `/remove-lifecycle rotten`.
        Exclude this issue from closing again by commenting `/lifecycle frozen`.

        /close
      - --template
      - --ceiling=10
      - --confirm
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20210409-985ef5e721
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  interval: 6h
  labels:
    ci.openshift.io/role: infra
  name: periodic-issue-rotten
  spec:
    containers:
    - args:
      - |-
        --query=org:openshift
        repo:operator-framework/operator-sdk
        repo:operator-framework/operator-lib
        repo:tnozicka/openshift-acme
        -label:lifecycle/frozen
        label:lifecycle/stale
        -label:lifecycle/rotten
      - --updated=720h
      - --token=/etc/oauth/oauth
      - |-
        --comment=Stale issues rot after 30d of inactivity.

        Mark the issue as fresh by commenting `/remove-lifecycle rotten`.
        Rotten issues close after an additional 30d of inactivity.
        Exclude this issue from closing by commenting `/lifecycle frozen`.

        If this issue is safe to close now please do so with `/close`.

        /lifecycle rotten
        /remove-lifecycle stale
      - --template
      - --ceiling=10
      - --confirm
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20210409-985ef5e721
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  interval: 6h
  labels:
    ci.openshift.io/role: infra
  name: periodic-issue-stale
  spec:
    containers:
    - args:
      - |-
        --query=org:openshift
        repo:operator-framework/operator-sdk
        repo:operator-framework/operator-lib
        repo:tnozicka/openshift-acme
        -label:lifecycle/frozen
        -label:lifecycle/stale
        -label:lifecycle/rotten
      - --updated=2160h
      - --token=/etc/oauth/oauth
      - |-
        --comment=Issues go stale after 90d of inactivity.

        Mark the issue as fresh by commenting `/remove-lifecycle stale`.
        Stale issues rot after an additional 30d of inactivity and eventually close.
        Exclude this issue from closing by commenting `/lifecycle frozen`.

        If this issue is safe to close now please do so with `/close`.

        /lifecycle stale
      - --template
      - --ceiling=10
      - --confirm
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20210409-985ef5e721
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  decoration_config:
    timeout: 8h0m0s
  interval: 24h
  labels:
    ci.openshift.io/role: infra
  name: periodic-label-sync
  spec:
    containers:
    - args:
      - --config=/etc/config/labels.yaml
      - --confirm=true
      - --orgs=openshift,cri-o,operator-framework,openshift-priv,redhat-operator-ecosystem,openshift-psap,openshift-metal3,shipwright-io
      - --token=/etc/github/oauth
      - --endpoint=http://ghproxy
      - --graphql-endpoint=http://ghproxy/graphql
      - --debug
      command:
      - /app/label_sync/app.binary
      image: gcr.io/k8s-prow/label_sync:v20210409-985ef5e721
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
      - mountPath: /etc/config
        name: config
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-ci-robot
    - configMap:
        name: labels
      name: config
- agent: kubernetes
  cluster: build02
  decorate: true
  decoration_config:
    timeout: 8h0m0s
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
    workdir: true
  interval: 5m
  labels:
    ci.openshift.io/role: infra
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  max_concurrency: 1
  name: periodic-ipi-deprovision-aws
  spec:
    containers:
    - command:
      - ./core-services/ipi-deprovision/aws.sh
      env:
      - name: HOME
        value: /tmp
      - name: AWS_SHARED_CREDENTIALS_FILE
        value: /aws/.awscred
      - name: CLUSTER_TTL
        value: 30 minutes ago
      image: registry.ci.openshift.org/ci/ipi-deprovision:latest
      imagePullPolicy: Always
      name: ipi-deprovision
      resources:
        requests:
          cpu: "1"
          memory: 300Mi
      volumeMounts:
      - mountPath: /aws
        name: cluster-secrets-aws
    serviceAccountName: ipi-deprovisioner
    volumes:
    - name: cluster-secrets-aws
      secret:
        items:
        - key: .awscred
          path: .awscred
        secretName: cluster-secrets-aws
- agent: kubernetes
  cluster: build02
  decorate: true
  decoration_config:
    timeout: 8h0m0s
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
    workdir: true
  interval: 5m
  labels:
    ci.openshift.io/role: infra
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  max_concurrency: 1
  name: periodic-ipi-deprovision-aws-2
  spec:
    containers:
    - command:
      - ./core-services/ipi-deprovision/aws.sh
      env:
      - name: HOME
        value: /tmp
      - name: AWS_SHARED_CREDENTIALS_FILE
        value: /aws/.awscred
      - name: CLUSTER_TTL
        value: 30 minutes ago
      image: registry.ci.openshift.org/ci/ipi-deprovision:latest
      imagePullPolicy: Always
      name: ipi-deprovision
      resources:
        requests:
          cpu: "1"
          memory: 300Mi
      volumeMounts:
      - mountPath: /aws
        name: cluster-secrets-aws
    serviceAccountName: ipi-deprovisioner
    volumes:
    - name: cluster-secrets-aws
      secret:
        items:
        - key: .awscred
          path: .awscred
        secretName: cluster-secrets-aws-2
- agent: kubernetes
  cluster: build02
  decorate: true
  decoration_config:
    timeout: 8h0m0s
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
    workdir: true
  interval: 5m
  labels:
    ci.openshift.io/role: infra
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  max_concurrency: 1
  name: periodic-ipi-deprovision-gcp
  spec:
    containers:
    - command:
      - ./core-services/ipi-deprovision/gcp.sh
      env:
      - name: HOME
        value: /tmp
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /gcp/gce.json
      - name: CLUSTER_TTL
        value: 30 minutes ago
      image: registry.ci.openshift.org/ci/ipi-deprovision:latest
      imagePullPolicy: Always
      name: ipi-deprovision
      resources:
        requests:
          cpu: "1"
          memory: 300Mi
      volumeMounts:
      - mountPath: /gcp
        name: cluster-secrets-gcp
    serviceAccountName: ipi-deprovisioner
    volumes:
    - name: cluster-secrets-gcp
      secret:
        items:
        - key: gce.json
          path: gce.json
        secretName: cluster-secrets-gcp
- agent: kubernetes
  cluster: app.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: periodic-prow-image-autobump
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --dry-run=false
      - --git-name=openshift-bot
      - --git-email=openshift-bot@redhat.com
      - --target-dir=.
      command:
      - /usr/bin/autobumper
      image: registry.ci.openshift.org/ci/autobumper:latest
      imagePullPolicy: Always
      name: autobump
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  - base_ref: openshift-4.8
    org: openshift
    repo: ocp-build-data
  labels:
    ci.openshift.io/role: infra
  name: periodic-prow-auto-config-brancher
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --confirm=true
      - --git-name=openshift-bot
      - --git-email=openshift-bot@redhat.com
      - --target-dir=.
      - --config-dir=./ci-operator/config
      - --current-release=4.8
      - --future-release=4.9
      - --self-approve=true
      - --assign=ghost
      - --whitelist-file=./core-services/openshift-priv/_whitelist.yaml
      command:
      - /usr/bin/autoconfigbrancher
      image: registry.ci.openshift.org/ci/auto-config-brancher:latest
      imagePullPolicy: Always
      name: auto-config-brancher
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  cron: 30 7 * * 1
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  labels:
    ci.openshift.io/role: infra
  name: periodic-auto-prow-job-dispatcher
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --github-login=openshift-bot
      - --git-name=openshift-bot
      - --git-email=openshift-bot@redhat.com
      - --target-dir=.
      - --config-path=./core-services/sanitize-prow-jobs/_config.yaml
      - --prow-jobs-dir=./ci-operator/jobs
      - --self-approve=true
      - --prometheus-username=ci
      - --prometheus-password-path=/etc/prometheus/password
      - --create-pr=true
      command:
      - /usr/bin/prow-job-dispatcher
      image: registry.ci.openshift.org/ci/prow-job-dispatcher:latest
      imagePullPolicy: Always
      name: auto-config-brancher
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/prometheus
        name: prometheus
        readOnly: true
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: prometheus
      secret:
        items:
        - key: password
          path: password
        secretName: prometheus-auth-credentials
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  cron: 30 7 * * *
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  labels:
    ci.openshift.io/role: infra
  name: periodic-prow-auto-owners
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --dry-run=false
      - --git-name=openshift-bot
      - --git-email=openshift-bot@redhat.com
      - --target-dir=.
      - --self-approve=true
      - --assign=ghost
      - --plugins-config-file=core-services/prow/02_config/_plugins.yaml
      - --ignore-repo=ci-operator/config/openshift/kubernetes-metrics-server
      - --ignore-repo=ci-operator/jobs/openshift/kubernetes-metrics-server
      - --ignore-repo=ci-operator/config/openshift/origin-metrics
      - --ignore-repo=ci-operator/jobs/openshift/origin-metrics
      - --ignore-repo=ci-operator/config/openshift/origin-web-console
      - --ignore-repo=ci-operator/jobs/openshift/origin-web-console
      - --ignore-repo=ci-operator/config/openshift/origin-web-console-server
      - --ignore-repo=ci-operator/jobs/openshift/origin-web-console-server
      - --ignore-repo=ci-operator/templates/openshift/installer
      - --ignore-repo=ci-operator/config/openshift/csi-driver-registrar
      - --ignore-repo=ci-operator/config/openshift/csi-external-resizer
      - --ignore-repo=ci-operator/config/openshift/csi-external-snapshotter
      - --ignore-repo=ci-operator/config/openshift/csi-livenessprobe
      - --ignore-repo=ci-operator/config/openshift/knative-build
      - --ignore-repo=ci-operator/config/openshift/knative-client
      - --ignore-repo=ci-operator/config/openshift/knative-serving
      - --ignore-repo=ci-operator/config/openshift/sig-storage-local-static-provisioner
      - --ignore-repo=ci-operator/jobs/openshift/csi-driver-registrar
      - --ignore-repo=ci-operator/jobs/openshift/csi-external-resizer
      - --ignore-repo=ci-operator/jobs/openshift/csi-external-snapshotter
      - --ignore-repo=ci-operator/jobs/openshift/csi-livenessprobe
      - --ignore-repo=ci-operator/jobs/openshift/knative-build
      - --ignore-repo=ci-operator/jobs/openshift/knative-client
      - --ignore-repo=ci-operator/jobs/openshift/knative-serving
      - --ignore-repo=ci-operator/jobs/openshift/sig-storage-local-static-provisioner
      - --ignore-repo=ci-operator/config/openshift/oauth-apiserver
      - --ignore-repo=ci-operator/jobs/openshift/oauth-apiserver
      - --ignore-repo=ci-operator/config/openshift/build-machinery-go
      - --ignore-repo=ci-operator/jobs/openshift/build-machinery-go
      - --ignore-repo=ci-operator/config/openshift/etcd
      - --ignore-repo=ci-operator/jobs/openshift/etcd
      - --ignore-repo=ci-operator/config/opendatahub-io/manifests
      - --ignore-repo=ci-operator/jobs/opendatahub-io/manifests
      - --ignore-org=openshift-priv
      - --ignore-org=kubernetes-sigs
      command:
      - /usr/bin/autoowners
      image: registry.ci.openshift.org/ci/autoowners:latest
      imagePullPolicy: Always
      name: autoowners
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
    workdir: true
  interval: 6h
  labels:
    ci.openshift.io/role: infra
  name: periodic-branch-protector
  spec:
    containers:
    - args:
      - --config-path=./core-services/prow/02_config/_config.yaml
      - --job-config-path=./ci-operator/jobs
      - --confirm=true
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --tokens=3000
      command:
      - /app/prow/cmd/branchprotector/app.binary
      image: gcr.io/k8s-prow/branchprotector:v20210409-985ef5e721
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  decoration_config:
    oauth_token_secret:
      key: oauth
      name: github-credentials-openshift-ci-robot-private-git-cloner
  extra_refs:
  - base_ref: master
    org: openshift
    repo: config
    workdir: true
  interval: 2h
  labels:
    ci.openshift.io/role: infra
  name: periodic-org-sync
  spec:
    containers:
    - args:
      - --config-path=./org/config.yaml
      - --confirm=true
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --fix-org
      - --fix-org-members
      - --fix-teams
      - --fix-team-members
      - --fix-team-repos
      - --fix-repos
      command:
      - /app/prow/cmd/peribolos/app.binary
      image: gcr.io/k8s-prow/peribolos:v20210409-985ef5e721
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: periodic-openshift-release-master-core-apply
  spec:
    containers:
    - args:
      - --config-dir=core-services/secrets
      - --confirm=true
      - --kubeconfig=/etc/build-farm-credentials/kubeconfig
      - --as=
      command:
      - applyconfig
      env:
      - name: slack_api_url
        valueFrom:
          secretKeyRef:
            key: url
            name: ci-slack-api-url
      image: applyconfig:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/build-farm-credentials
        name: build-farm-credentials
        readOnly: true
    serviceAccountName: config-updater
    volumes:
    - name: build-farm-credentials
      secret:
        items:
        - key: sa.config-updater.api.ci.config
          path: kubeconfig
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: app.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: periodic-openshift-release-master-app-ci-apply
  spec:
    containers:
    - args:
      - --config-dir=clusters/app.ci
      - --confirm=true
      - --as=
      command:
      - applyconfig
      env:
      - name: OPENSHIFT_PROMETHEUS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: prometheus-k8s-basic-auth-password
            name: app-ci-openshift-monitoring-credentials
      - name: SLACK_API_URL
        valueFrom:
          secretKeyRef:
            key: url
            name: ci-slack-api-url
      image: applyconfig:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
    serviceAccountName: config-updater
- agent: kubernetes
  cluster: app.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: periodic-openshift-release-master-build01-apply
  spec:
    containers:
    - args:
      - --config-dir=clusters/build-clusters/01_cluster
      - --confirm=true
      - --as=
      - --kubeconfig=/etc/build-farm-credentials/kubeconfig
      command:
      - applyconfig
      env:
      - name: build01_id
        valueFrom:
          secretKeyRef:
            key: build01-id
            name: build01-dex-oidc
      - name: github_client_id
        valueFrom:
          secretKeyRef:
            key: build01_github_client_id
            name: build-farm-credentials
      - name: slack_api_url
        valueFrom:
          secretKeyRef:
            key: url
            name: ci-slack-api-url
      image: applyconfig:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/build-farm-credentials
        name: build-farm-credentials
        readOnly: true
    serviceAccountName: config-updater
    volumes:
    - name: build-farm-credentials
      secret:
        items:
        - key: sa.config-updater.build01.config
          path: kubeconfig
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: app.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: periodic-openshift-release-master-build02-apply
  spec:
    containers:
    - args:
      - --config-dir=clusters/build-clusters/02_cluster
      - --confirm=true
      - --as=
      - --kubeconfig=/etc/build-farm-credentials/kubeconfig
      command:
      - applyconfig
      env:
      - name: build02_id
        valueFrom:
          secretKeyRef:
            key: build02-id
            name: build02-dex-oidc
      - name: github_client_id
        valueFrom:
          secretKeyRef:
            key: build02_github_client_id
            name: build-farm-credentials
      - name: slack_api_url
        valueFrom:
          secretKeyRef:
            key: url
            name: ci-slack-api-url
      image: applyconfig:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/build-farm-credentials
        name: build-farm-credentials
        readOnly: true
    serviceAccountName: config-updater
    volumes:
    - name: build-farm-credentials
      secret:
        items:
        - key: sa.config-updater.build02.config
          path: kubeconfig
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: app.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: periodic-openshift-release-master-vsphere-apply
  spec:
    containers:
    - args:
      - --config-dir=clusters/build-clusters/vsphere
      - --confirm=true
      - --as=
      - --kubeconfig=/etc/build-farm-credentials/kubeconfig
      command:
      - applyconfig
      env:
      - name: github_client_id
        valueFrom:
          secretKeyRef:
            key: vsphere_github_client_id
            name: build-farm-credentials
      image: applyconfig:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/build-farm-credentials
        name: build-farm-credentials
        readOnly: true
    serviceAccountName: config-updater
    volumes:
    - name: build-farm-credentials
      secret:
        items:
        - key: sa.config-updater.vsphere.config
          path: kubeconfig
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: app.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  - base_ref: master
    org: redhat-operator-ecosystem
    repo: release
  interval: 1h
  labels:
    ci.openshift.io/role: infra
  name: openshift-release-master-config-bootstrapper
  spec:
    containers:
    - args:
      - --dry-run=false
      - --source-path=.
      - --source-path=../../redhat-operator-ecosystem/release
      - --config-path=core-services/prow/02_config/_config.yaml
      - --plugin-config=core-services/prow/02_config/_plugins.yaml
      command:
      - /app/prow/cmd/config-bootstrapper/app.binary
      env:
      - name: KUBECONFIG
        value: /etc/build-farm-credentials/api.ci.kubeconfig:/etc/build-farm-credentials/build01.kubeconfig:/etc/build-farm-credentials/app.ci.kubeconfig:/etc/build-farm-credentials/build02.kubeconfig:/etc/build-farm-credentials/vsphere.kubeconfig
      image: gcr.io/k8s-prow/config-bootstrapper:v20210409-985ef5e721
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/build-farm-credentials
        name: build-farm-credentials
        readOnly: true
    serviceAccountName: config-updater
    volumes:
    - name: build-farm-credentials
      secret:
        items:
        - key: sa.hook.api.ci.config
          path: api.ci.kubeconfig
        - key: sa.hook.app.ci.config
          path: app.ci.kubeconfig
        - key: sa.hook.build01.config
          path: build01.kubeconfig
        - key: sa.hook.build02.config
          path: build02.kubeconfig
        - key: sa.hook.vsphere.config
          path: vsphere.kubeconfig
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  labels:
    ci.openshift.io/role: infra
  name: periodic-openshift-release-fast-forward
  spec:
    containers:
    - args:
      - --config-dir=./ci-operator/config/
      - --current-release=4.8
      - --future-release=4.9
      - --fast-forward
      - --confirm
      - --username=openshift-merge-robot
      - --token-path=/etc/github/oauth
      command:
      - repo-brancher
      image: repo-brancher:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  hidden: true
  labels:
    ci.openshift.io/role: infra-internal
  max_concurrency: 1
  name: periodic-openshift-release-private-org-sync
  spec:
    containers:
    - args:
      - --config-path=./ci-operator/config/
      - --target-org=openshift-priv
      - --token-path=/etc/github/oauth
      - --only-org=openshift
      - --confirm
      - --whitelist-file=./core-services/openshift-priv/_whitelist.yaml
      - --git-name=openshift-merge-robot
      - --git-email=openshift-merge-robot@redhat.com
      command:
      - private-org-sync
      image: private-org-sync:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
- agent: kubernetes
  cluster: app.ci
  cron: '@hourly'
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  labels:
    ci.openshift.io/role: infra
  name: periodic-openshift-release-merge-blockers
  spec:
    containers:
    - args:
      - --config-dir=./ci-operator/config/
      - --current-release=4.8
      - --future-release=4.9
      - --github-token-path=/etc/github/oauth
      command:
      - blocking-issue-creator
      image: blocking-issue-creator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  decoration_config:
    oauth_token_secret:
      key: oauth
      name: github-credentials-openshift-ci-robot-private-git-cloner
  extra_refs:
  - base_ref: master
    org: openshift
    repo: config
    workdir: true
  hidden: true
  interval: 12h
  labels:
    ci.openshift.io/role: infra-internal
  name: periodic-openshift-priv-group-update
  spec:
    containers:
    - args:
      - --peribolos-config=org/config.yaml
      - --org=openshift-priv
      - --group=openshift-priv-admins
      command:
      - group-auto-updater
      image: group-auto-updater:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
    serviceAccountName: group-auto-updater
- agent: kubernetes
  cluster: app.ci
  cron: '@weekly'
  decorate: true
  decoration_config:
    skip_cloning: true
  labels:
    ci.openshift.io/role: infra
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  max_concurrency: 1
  name: periodic-imagestream-importer
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        set -o nounset
        set -o pipefail
        for is in python; do
          echo "importing ${is} ..."
          oc import-image -n openshift "${is}" --all
        done
      command:
      - /bin/bash
      image: image-registry.openshift-image-registry.svc:5000/ocp/4.7:cli
      imagePullPolicy: Always
      name: ""
      resources: {}
    serviceAccountName: imagestream-importer
- agent: kubernetes
  cluster: app.ci
  decorate: true
  decoration_config:
    oauth_token_secret:
      key: oauth
      name: github-credentials-openshift-ci-robot-private-git-cloner
  extra_refs:
  - base_ref: master
    org: openshift
    repo: config
    workdir: true
  - base_ref: master
    org: openshift
    repo: release
  hidden: true
  interval: 12h
  labels:
    ci.openshift.io/role: infra-internal
  name: periodic-auto-private-org-peribolos-sync
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --dry-run=false
      - --self-approve=true
      - --github-login=openshift-merge-robot
      - --git-name=openshift-bot
      - --git-email=openshift-bot@redhat.com
      - --peribolos-config=./org/config.yaml
      - --release-repo-path=/home/prow/go/src/github.com/openshift/release
      - --whitelist-file=/home/prow/go/src/github.com/openshift/release/core-services/openshift-priv/_whitelist.yaml
      - --only-org=openshift
      command:
      - /usr/bin/autoperibolossync
      image: registry.ci.openshift.org/ci/auto-peribolos-sync:latest
      imagePullPolicy: Always
      name: auto-peribolos-sync
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
    workdir: true
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: periodic-auto-publicize-config
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --dry-run=false
      - --self-approve=true
      - --github-login=openshift-merge-robot
      - --git-name=openshift-bot
      - --git-email=openshift-bot@redhat.com
      - --publicize-config=./clusters/app.ci/publicize/_config.yaml
      - --release-repo-path=./
      - --whitelist-file=./core-services/openshift-priv/_whitelist.yaml
      command:
      - /usr/bin/autopublicizeconfig
      image: registry.ci.openshift.org/ci/autopublicizeconfig:latest
      imagePullPolicy: Always
      name: auto-publicize-config
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
- agent: kubernetes
  cluster: app.ci
  decorate: true
  decoration_config:
    gcs_configuration:
      bucket: origin-ci-private
      job_url_prefix: https://deck-internal-ci.apps.ci.l2s4.p1.openshiftapps.com/view/
      mediaTypes:
        log: text/plain
    gcs_credentials_secret: gce-sa-credentials-gcs-private
  hidden: true
  interval: 12h
  labels:
    ci.openshift.io/role: infra-internal
  name: periodic-ci-secret-generator
  spec:
    containers:
    - args:
      - --bw-password-path=/etc/ci-secret-bootstrap-bitwarden/bw_password
      - --bw-user=openshift-dev-infra+ci-bitwarden-bot@redhat.com
      - --bootstrap-config=/etc/ci-secret-bootstrap/_config.yaml
      - --config=/etc/ci-secret-generator/_config.yaml
      - --dry-run=false
      command:
      - /usr/bin/ci-secret-generator
      env:
      - name: KUBECONFIG
        value: /etc/build-farm-credentials/sa.config-updater.api.ci.config:/etc/build-farm-credentials/sa.config-updater.app.ci.config:/etc/build-farm-credentials/sa.config-updater.build01.config:/etc/build-farm-credentials/sa.config-updater.build02.config:/etc/build-farm-credentials/sa.config-updater.vsphere.config
      - name: HOME
        value: /tmp
      image: registry.ci.openshift.org/ci/ci-secret-generator:latest
      imagePullPolicy: Always
      name: ci-secret-bootstrap
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/ci-secret-bootstrap-bitwarden
        name: ci-secret-bootstrap-bitwarden
        readOnly: true
      - mountPath: /etc/ci-secret-bootstrap
        name: ci-secret-bootstrap
      - mountPath: /etc/build-farm-credentials
        name: build-farm-credentials
        readOnly: true
      - mountPath: /etc/ci-secret-generator
        name: ci-secret-generator
    volumes:
    - name: ci-secret-bootstrap-bitwarden
      secret:
        secretName: bitwarden-credentials-openshift-ci-bitwarden-bot
    - configMap:
        name: ci-secret-generator
      name: ci-secret-generator
    - configMap:
        name: ci-secret-bootstrap
      name: ci-secret-bootstrap
    - name: build-farm-credentials
      secret:
        items:
        - key: sa.config-updater.api.ci.config
          path: sa.config-updater.api.ci.config
        - key: sa.config-updater.app.ci.config
          path: sa.config-updater.app.ci.config
        - key: sa.config-updater.build01.config
          path: sa.config-updater.build01.config
        - key: sa.config-updater.build02.config
          path: sa.config-updater.build02.config
        - key: sa.config-updater.vsphere.config
          path: sa.config-updater.vsphere.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: app.ci
  decorate: true
  decoration_config:
    gcs_configuration:
      bucket: origin-ci-private
      job_url_prefix: https://deck-internal-ci.apps.ci.l2s4.p1.openshiftapps.com/view/
      mediaTypes:
        log: text/plain
    gcs_credentials_secret: gce-sa-credentials-gcs-private
  hidden: true
  interval: 12h
  labels:
    ci.openshift.io/role: infra-internal
  name: periodic-ci-secret-bootstrap
  spec:
    containers:
    - args:
      - --bw-password-path=/etc/ci-secret-bootstrap-bitwarden/bw_password
      - --bw-user=openshift-dev-infra+ci-bitwarden-bot@redhat.com
      - --config=/etc/ci-secret-bootstrap/_config.yaml
      - --dry-run=false
      - --force=true
      - --validate-bitwarden-items-usage
      - --bw-allow-unused=openshift-ci-robot
      - --bw-allow-unused=openshift-merge-robot
      - --bw-allow-unused=openshift-build-robot
      - --bw-allow-unused=openshift-publish-robot
      - --bw-allow-unused=openshift-bugzilla-robot
      - --bw-allow-unused=openshift-cherrypick-robot
      - --bw-allow-unused=openshift-bugzilla-robot@redhat.com
      - --bw-allow-unused=openshift-bot
      - --bw-allow-unused=openshift-github-robots@redhat.com
      - --bw-allow-unused=aos-cicd@redhat.com
      - --bw-allow-unused=aos-team-dp-testplatform@redhat.com mailing list
      - --bw-allow-unused=AWS ci-longlivedcluster-bot
      - --bw-allow-unused=bugzilla.redhat.com
      - --bw-allow-unused=build_farm_01_cluster
      - --bw-allow-unused=build_farm_02_cluster
      - --bw-allow-unused=kata-jenkins-ci.westus2.cloudapp.azure.com
      - --bw-allow-unused=quay.io
      - --bw-allow-unused=cluster-bot-cloud-sso-for-ocm-ephemeral-osd
      - --bw-allow-unused=cluster-bot-aws-account-for-ephemeral-osd
      command:
      - /usr/bin/ci-secret-bootstrap
      env:
      - name: KUBECONFIG
        value: /etc/build-farm-credentials/sa.config-updater.api.ci.config:/etc/build-farm-credentials/sa.config-updater.app.ci.config:/etc/build-farm-credentials/sa.config-updater.build01.config:/etc/build-farm-credentials/sa.config-updater.build02.config:/etc/build-farm-credentials/sa.config-updater.vsphere.config
      image: registry.ci.openshift.org/ci/ci-secret-bootstrap:latest
      imagePullPolicy: Always
      name: ci-secret-bootstrap
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/ci-secret-bootstrap-bitwarden
        name: ci-secret-bootstrap-bitwarden
        readOnly: true
      - mountPath: /etc/build-farm-credentials
        name: build-farm-credentials
        readOnly: true
      - mountPath: /.config
        name: config-volume
      - mountPath: /etc/ci-secret-bootstrap
        name: ci-secret-bootstrap
    volumes:
    - name: ci-secret-bootstrap-bitwarden
      secret:
        secretName: bitwarden-credentials-openshift-ci-bitwarden-bot
    - configMap:
        name: ci-secret-bootstrap
      name: ci-secret-bootstrap
    - name: build-farm-credentials
      secret:
        items:
        - key: sa.config-updater.api.ci.config
          path: sa.config-updater.api.ci.config
        - key: sa.config-updater.app.ci.config
          path: sa.config-updater.app.ci.config
        - key: sa.config-updater.build01.config
          path: sa.config-updater.build01.config
        - key: sa.config-updater.build02.config
          path: sa.config-updater.build02.config
        - key: sa.config-updater.vsphere.config
          path: sa.config-updater.vsphere.config
        secretName: build-farm-credentials
    - emptyDir: {}
      name: config-volume
- agent: kubernetes
  cluster: app.ci
  cron: '@yearly'
  decorate: true
  extra_refs:
  - base_ref: openshift-4.8
    org: openshift
    repo: ocp-build-data
  labels:
    ci.openshift.io/role: infra
  name: periodic-ocp-build-data-enforcer
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --ocp-build-data-repo-dir=./
      - --create-prs=true
      - --minor=8
      - --pr-creation-ceiling=1000
      command:
      - /usr/bin/ocp-build-data-enforcer
      env:
      - name: CLICOLOR_FORCE
        value: "1"
      image: registry.ci.openshift.org/ci/ocp-build-data-enforcer:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: app.ci
  cron: '@daily'
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  - base_ref: master
    org: kubernetes
    repo: test-infra
    workdir: true
  labels:
    ci.openshift.io/role: infra
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-prow-auto-testgrid-generator
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --github-login=openshift-bot
      - --git-name=openshift-bot
      - --git-email=openshift-bot@redhat.com
      - --working-dir=.
      - --assign=petr-muller
      - --testgrid-config=./config/testgrids/openshift
      - --release-config=../../openshift/release/core-services/release-controller/_releases
      - --prow-jobs-dir=../../openshift/release/ci-operator/jobs
      - --allow-list=../../openshift/release/core-services/testgrid-config-generator/_allow-list.yaml
      command:
      - /usr/bin/autotestgridgenerator
      image: registry.ci.openshift.org/ci/auto-testgrid-generator:latest
      imagePullPolicy: Always
      name: auto-testgrid-generator
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
