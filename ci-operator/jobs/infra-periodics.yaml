periodics:
- agent: kubernetes
  cluster: ci/api-build01-ci-devcluster-openshift-com:6443
  decorate: true
  interval: 1m
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  max_concurrency: 1
  name: periodic-ci-image-import-to-build01
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        set -o nounset
        set -o pipefail
        for is in $(oc get is -n ci -o=jsonpath='{.items[*].metadata.name}'); do
          echo "importing ${is} ..."
          oc import-image -n ci "${is}" --all
        done
      command:
      - /bin/bash
      image: registry.svc.ci.openshift.org/ocp/4.5:cli
      imagePullPolicy: Always
      name: ""
      resources: {}
    serviceAccountName: image-importer
- agent: kubernetes
  cluster: api.ci
  cron: 30 7 * * 1
  decorate: true
  labels:
    ci.openshift.io/role: infra
  name: periodic-acme-cert-issuer-for-build01
  spec:
    containers:
    - args:
      - -c
      - |
        set -o errexit
        set -o nounset
        set -o pipefail
        oc --kubeconfig=/etc/build-farm-credentials/kubeconfig whoami
        oc --kubeconfig=/etc/build-farm-credentials/kubeconfig project
        /acme/acme.sh --version
        /acme/acme.sh --issue --dns dns_aws -d '*.apps.build01.ci.devcluster.openshift.com' --home /data --dnssleep 60 --fullchain-file /data/app.fullchain.cer --key-file /data/app.key --force
        ls -al /data
        oc --kubeconfig=/etc/build-farm-credentials/kubeconfig -n openshift-ingress create secret tls app-cert --cert=/data/app.fullchain.cer --key=/data/app.key --dry-run -o yaml | oc --kubeconfig=/etc/build-farm-credentials/kubeconfig -n openshift-ingress apply -f -
        /acme/acme.sh --issue --dns dns_aws -d 'api.build01.ci.devcluster.openshift.com' --home /data --dnssleep 60 --fullchain-file /data/apiserver.fullchain.cer --key-file /data/apiserver.key --force
        ls -al /data
        oc --kubeconfig=/etc/build-farm-credentials/kubeconfig -n openshift-config create secret tls apiserver-cert --cert=/data/apiserver.fullchain.cer --key=/data/apiserver.key --dry-run -o yaml | oc --kubeconfig=/etc/build-farm-credentials/kubeconfig -n openshift-config apply -f -
      command:
      - /bin/bash
      env:
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            key: AWS_ACCESS_KEY_ID
            name: aws-ci-infra-openshift-ci-robot-credentials
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            key: AWS_SECRET_ACCESS_KEY
            name: aws-ci-infra-openshift-ci-robot-credentials
      image: registry.svc.ci.openshift.org/ci/ca-cert-issuer:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /etc/build-farm-credentials
        name: build-farm-credentials
        readOnly: true
    volumes:
    - emptyDir: {}
      name: data
    - name: build-farm-credentials
      secret:
        items:
        - key: sa.ca-cert-issuer.build01.config
          path: kubeconfig
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: ci/api-build01-ci-devcluster-openshift-com:6443
  cron: 30 7 * * *
  decorate: true
  labels:
    ci.openshift.io/role: infra
  name: periodic-build01-upgrade
  spec:
    containers:
    - args:
      - adm
      - upgrade
      - --to-latest
      command:
      - /usr/bin/oc
      image: registry.svc.ci.openshift.org/ocp/4.5:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
    serviceAccountName: upgrader
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    ci.openshift.io/role: infra
  name: periodic-bugzilla-refresh
  spec:
    containers:
    - args:
      - |-
        --query=is:pr
        state:open
        label:bugzilla/invalid-bug
        -label:bugzilla/valid-bug
      - --token=/etc/oauth/oauth
      - --updated=0
      - |-
        --comment=/bugzilla refresh

        The requirements for Bugzilla bugs have changed, recalculating validity.
      - --ceiling=0
      - --confirm
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20200325-b114fe7f2
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 12m
  labels:
    ci.openshift.io/role: infra
  name: periodic-retester
  spec:
    containers:
    - args:
      - |-
        --query=is:pr
        state:open
        label:lgtm
        label:approved
        status:failure
        -label:do-not-merge
        -label:do-not-merge/work-in-progress
        -label:do-not-merge/hold
        -label:needs-rebase
        -label:needs-ok-to-test
        org:openshift
        org:openshift-priv
        repo:operator-framework/operator-sdk
        repo:operator-framework/operator-lifecycle-manager
        repo:operator-framework/operator-marketplace
        repo:operator-framework/operator-registry
        repo:tnozicka/openshift-acme
      - --token=/etc/oauth/oauth
      - --updated=0
      - |-
        --comment=/retest

        Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/{{if ne .Repo "origin"}}{{.Org}}_{{.Repo}}/{{end}}{{.Number}}) for this PR and help us cut down flakes.
      - --template
      - --ceiling=5
      - --confirm
      - --random
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20200325-b114fe7f2
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 6h
  labels:
    ci.openshift.io/role: infra
  name: periodic-issue-close
  spec:
    containers:
    - args:
      - |-
        --query=repo:openshift/origin
        repo:operator-framework/operator-sdk
        repo:tnozicka/openshift-acme
        repo:openshift/openshift-azure
        repo:openshift/release
        repo:openshift/odo
        repo:openshift/installer
        -label:lifecycle/frozen
        label:lifecycle/rotten
      - --updated=720h
      - --token=/etc/oauth/oauth
      - |-
        --comment=Rotten issues close after 30d of inactivity.

        Reopen the issue by commenting `/reopen`.
        Mark the issue as fresh by commenting `/remove-lifecycle rotten`.
        Exclude this issue from closing again by commenting `/lifecycle frozen`.

        /close
      - --template
      - --ceiling=10
      - --confirm
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20200325-b114fe7f2
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 6h
  labels:
    ci.openshift.io/role: infra
  name: periodic-issue-rotten
  spec:
    containers:
    - args:
      - |-
        --query=repo:openshift/origin
        repo:operator-framework/operator-sdk
        repo:tnozicka/openshift-acme
        repo:openshift/openshift-azure
        repo:openshift/release
        repo:openshift/odo
        repo:openshift/installer
        -label:lifecycle/frozen
        label:lifecycle/stale
        -label:lifecycle/rotten
      - --updated=720h
      - --token=/etc/oauth/oauth
      - |-
        --comment=Stale issues rot after 30d of inactivity.

        Mark the issue as fresh by commenting `/remove-lifecycle rotten`.
        Rotten issues close after an additional 30d of inactivity.
        Exclude this issue from closing by commenting `/lifecycle frozen`.

        If this issue is safe to close now please do so with `/close`.

        /lifecycle rotten
        /remove-lifecycle stale
      - --template
      - --ceiling=10
      - --confirm
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20200325-b114fe7f2
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 6h
  labels:
    ci.openshift.io/role: infra
  name: periodic-issue-stale
  spec:
    containers:
    - args:
      - |-
        --query=repo:openshift/origin
        repo:operator-framework/operator-sdk
        repo:tnozicka/openshift-acme
        repo:openshift/openshift-azure
        repo:openshift/release
        repo:openshift/odo
        repo:openshift/installer
        -label:lifecycle/frozen
        -label:lifecycle/stale
        -label:lifecycle/rotten
      - --updated=2160h
      - --token=/etc/oauth/oauth
      - |-
        --comment=Issues go stale after 90d of inactivity.

        Mark the issue as fresh by commenting `/remove-lifecycle stale`.
        Stale issues rot after an additional 30d of inactivity and eventually close.
        Exclude this issue from closing by commenting `/lifecycle frozen`.

        If this issue is safe to close now please do so with `/close`.

        /lifecycle stale
      - --template
      - --ceiling=10
      - --confirm
      command:
      - /app/robots/commenter/app.binary
      image: gcr.io/k8s-prow/commenter:v20200325-b114fe7f2
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/oauth
        name: token
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: api.ci
  decorate: true
  decoration_config:
    timeout: 8h0m0s
  interval: 24h
  labels:
    ci.openshift.io/role: infra
  name: periodic-label-sync
  spec:
    containers:
    - args:
      - --config=/etc/config/labels.yaml
      - --confirm=true
      - --orgs=openshift,cri-o,operator-framework,openshift-priv,redhat-operator-ecosystem,openshift-psap
      - --token=/etc/github/oauth
      - --endpoint=http://ghproxy
      - --graphql-endpoint=http://ghproxy/graphql
      - --debug
      command:
      - /app/label_sync/app.binary
      image: gcr.io/k8s-prow/label_sync:v20200325-b114fe7f2
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
      - mountPath: /etc/config
        name: config
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-ci-robot
    - configMap:
        name: labels
      name: config
- agent: kubernetes
  cluster: api.ci
  decorate: true
  decoration_config:
    timeout: 8h0m0s
  extra_refs:
  - base_ref: master
    org: openshift
    repo: ci-tools
  interval: 5m
  labels:
    ci.openshift.io/role: infra
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ipi-deprovision
  spec:
    containers:
    - command:
      - ./cmd/ipi-deprovision/ipi-deprovision.sh
      env:
      - name: HOME
        value: /tmp
      - name: AWS_SHARED_CREDENTIALS_FILE
        value: /aws/.awscred
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /gcp/gce.json
      - name: CLUSTER_TTL
        value: 30 minutes ago
      image: registry.svc.ci.openshift.org/ci/ipi-deprovision:latest
      imagePullPolicy: Always
      name: ipi-deprovision
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /aws
        name: cluster-secrets-aws
      - mountPath: /gcp
        name: cluster-secrets-gcp
    serviceAccountName: ipi-deprovisioner
    volumes:
    - name: cluster-secrets-aws
      secret:
        items:
        - key: .awscred
          path: .awscred
        secretName: cluster-secrets-aws
    - name: cluster-secrets-gcp
      secret:
        items:
        - key: gce.json
          path: gce.json
        secretName: cluster-secrets-gcp
- agent: kubernetes
  cluster: api.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: periodic-prow-image-autobump
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --dry-run=false
      - --git-name=openshift-bot
      - --git-email=openshift-bot@redhat.com
      - --target-dir=.
      command:
      - /usr/bin/autobumper
      image: registry.svc.ci.openshift.org/ci/autobumper:latest
      imagePullPolicy: Always
      name: autobump
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: api.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: periodic-prow-auto-config-brancher
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --dry-run=false
      - --git-name=openshift-bot
      - --git-email=openshift-bot@redhat.com
      - --target-dir=.
      - --current-release=4.5
      - --future-release=4.6
      - --self-approve=true
      - --assign=ghost
      command:
      - /usr/bin/autoconfigbrancher
      image: registry.svc.ci.openshift.org/ci/auto-config-brancher:latest
      imagePullPolicy: Always
      name: auto-config-brancher
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: api.ci
  cron: 30 7 * * *
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  labels:
    ci.openshift.io/role: infra
  name: periodic-prow-auto-owners
  spec:
    containers:
    - args:
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --dry-run=false
      - --git-name=openshift-bot
      - --git-email=openshift-bot@redhat.com
      - --target-dir=.
      - --self-approve=true
      - --assign=ghost
      - --ignore-repo=ci-operator/config/openshift/kubernetes-metrics-server
      - --ignore-repo=ci-operator/jobs/openshift/kubernetes-metrics-server
      - --ignore-repo=ci-operator/config/openshift/origin-metrics
      - --ignore-repo=ci-operator/jobs/openshift/origin-metrics
      - --ignore-repo=ci-operator/config/openshift/origin-web-console
      - --ignore-repo=ci-operator/jobs/openshift/origin-web-console
      - --ignore-repo=ci-operator/config/openshift/origin-web-console-server
      - --ignore-repo=ci-operator/jobs/openshift/origin-web-console-server
      - --ignore-repo=ci-operator/jobs/openvswitch/ovn-kubernetes
      - --ignore-repo=ci-operator/templates/openshift/installer
      - --ignore-repo=ci-operator/config/openshift/cluster-api-provider-azure
      - --ignore-repo=ci-operator/config/openshift/csi-driver-registrar
      - --ignore-repo=ci-operator/config/openshift/csi-external-resizer
      - --ignore-repo=ci-operator/config/openshift/csi-external-snapshotter
      - --ignore-repo=ci-operator/config/openshift/csi-livenessprobe
      - --ignore-repo=ci-operator/config/openshift/knative-build
      - --ignore-repo=ci-operator/config/openshift/knative-client
      - --ignore-repo=ci-operator/config/openshift/knative-serving
      - --ignore-repo=ci-operator/config/openshift/kubernetes
      - --ignore-repo=ci-operator/config/openshift/sig-storage-local-static-provisioner
      - --ignore-repo=ci-operator/jobs/openshift/cluster-api-provider-azure
      - --ignore-repo=ci-operator/jobs/openshift/csi-driver-registrar
      - --ignore-repo=ci-operator/jobs/openshift/csi-external-resizer
      - --ignore-repo=ci-operator/jobs/openshift/csi-external-snapshotter
      - --ignore-repo=ci-operator/jobs/openshift/csi-livenessprobe
      - --ignore-repo=ci-operator/jobs/openshift/knative-build
      - --ignore-repo=ci-operator/jobs/openshift/knative-client
      - --ignore-repo=ci-operator/jobs/openshift/knative-serving
      - --ignore-repo=ci-operator/jobs/openshift/kubernetes
      - --ignore-repo=ci-operator/jobs/openshift/sig-storage-local-static-provisioner
      - --ignore-repo=ci-operator/config/openshift/oauth-apiserver
      - --ignore-repo=ci-operator/jobs/openshift/oauth-apiserver
      - --ignore-repo=ci-operator/config/openshift/build-machinery-go
      - --ignore-repo=ci-operator/jobs/openshift/build-machinery-go
      - --ignore-repo=ci-operator/config/openshift/etcd
      - --ignore-repo=ci-operator/jobs/openshift/etcd
      command:
      - /usr/bin/autoowners
      image: registry.svc.ci.openshift.org/ci/autoowners:latest
      imagePullPolicy: Always
      name: autoowners
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-bot
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 30m
  labels:
    ci.openshift.io/role: infra
  name: periodic-org-sync
  spec:
    containers:
    - args:
      - --config-path=/etc/config/config.yaml
      - --confirm=true
      - --github-token-path=/etc/github/oauth
      - --github-endpoint=http://ghproxy
      - --github-endpoint=https://api.github.com
      - --github-graphql-endpoint=http://ghproxy/graphql
      - --fix-org
      - --fix-org-members
      - --fix-teams
      - --fix-team-members
      - --fix-team-repos
      command:
      - /app/prow/cmd/peribolos/app.binary
      image: gcr.io/k8s-prow/peribolos:v20200325-b114fe7f2
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
      - mountPath: /etc/config
        name: config
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
    - configMap:
        name: org-config
      name: config
- agent: kubernetes
  cluster: api.ci
  cron: '@daily'
  decorate: true
  decoration_config:
    skip_cloning: true
  labels:
    app: image-pruner
    ci.openshift.io/role: infra
  name: periodic-ci-image-pruner
  spec:
    containers:
    - args:
      - adm
      - prune
      - images
      - --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
      - --keep-tag-revisions=3
      - --keep-younger-than=96h
      - --confirm=true
      command:
      - oc
      image: quay.io/openshift/origin-cli:4.1
      imagePullPolicy: Always
      name: ""
      resources:
        limits:
          cpu: "2"
          memory: 8Gi
        requests:
          cpu: "1"
          memory: 4Gi
    serviceAccountName: image-pruner
- agent: kubernetes
  cluster: api.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: openshift-release-master-core-apply
  spec:
    containers:
    - args:
      - --config-dir=core-services
      - --confirm=true
      - --level=all
      - --as=
      command:
      - applyconfig
      env:
      - name: build01_build01_reg_auth_value
        valueFrom:
          secretKeyRef:
            key: build01_build01_reg_auth_value.txt
            name: build-farm-credentials
      - name: build01_ci_reg_auth_value
        valueFrom:
          secretKeyRef:
            key: build01_ci_reg_auth_value.txt
            name: build-farm-credentials
      - name: slack_api_url
        valueFrom:
          secretKeyRef:
            key: url
            name: ci-slack-api-url
      image: registry.svc.ci.openshift.org/ci/applyconfig:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
    serviceAccountName: config-updater
- agent: kubernetes
  cluster: api.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  name: openshift-release-master-services-apply
  spec:
    containers:
    - args:
      - --config-dir=services
      - --confirm=true
      - --level=all
      - --as=
      command:
      - applyconfig
      image: registry.svc.ci.openshift.org/ci/applyconfig:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
    serviceAccountName: config-updater
- agent: kubernetes
  cluster: api.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  interval: 12h
  name: openshift-release-master-config-updates
  spec:
    containers:
    - args:
      - postsubmit-update
      command:
      - make
      image: registry.svc.ci.openshift.org/ci/origin-release:cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
    serviceAccountName: config-updater
- agent: kubernetes
  cluster: api.ci
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  - base_ref: master
    org: redhat-operator-ecosystem
    repo: release
  interval: 1h
  labels:
    ci.openshift.io/role: infra
  name: openshift-release-master-config-bootstrapper
  spec:
    containers:
    - args:
      - --dry-run=false
      - --source-path=.
      - --source-path=../../redhat-operator-ecosystem/release
      - --config-path=core-services/prow/02_config/_config.yaml
      - --plugin-config=core-services/prow/02_config/_plugins.yaml
      command:
      - /app/prow/cmd/config-bootstrapper/app.binary
      env:
      - name: KUBECONFIG
        value: /etc/build-farm-credentials/kubeconfig:/etc/app-ci-config-updater-kubeconfig/kubeconfig
      image: gcr.io/k8s-prow/config-bootstrapper:v20200325-b114fe7f2
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/build-farm-credentials
        name: build-farm-credentials
        readOnly: true
      - mountPath: /etc/app-ci-config-updater-kubeconfig
        name: app-ci-config-updater-kubeconfig
        readOnly: true
    serviceAccountName: config-updater
    volumes:
    - name: build-farm-credentials
      secret:
        items:
        - key: sa.hook.build01.config
          path: kubeconfig
        secretName: build-farm-credentials
    - name: app-ci-config-updater-kubeconfig
      secret:
        secretName: app-ci-config-updater-kubeconfig
- agent: kubernetes
  cluster: api.ci
  cron: '@hourly'
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  labels:
    ci.openshift.io/role: infra
  name: periodic-openshift-release-fast-forward
  spec:
    containers:
    - args:
      - --config-dir=./ci-operator/config/
      - --current-release=4.5
      - --future-release=4.6
      - --fast-forward
      - --confirm
      - --username=openshift-merge-robot
      - --token-path=/etc/github/oauth
      command:
      - repo-brancher
      image: repo-brancher:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
- agent: kubernetes
  cluster: api.ci
  cron: '@hourly'
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  labels:
    ci.openshift.io/role: infra
  max_concurrency: 1
  name: periodic-openshift-release-private-org-sync
  spec:
    containers:
    - args:
      - --config-path=./ci-operator/config/
      - --target-org=openshift-priv
      - --token-path=/etc/github/oauth
      - --only-org=openshift
      - --confirm
      command:
      - private-org-sync
      image: private-org-sync:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
- agent: kubernetes
  cluster: api.ci
  cron: '@hourly'
  decorate: true
  extra_refs:
  - base_ref: master
    org: openshift
    repo: release
  labels:
    ci.openshift.io/role: infra
  name: periodic-openshift-release-merge-blockers
  spec:
    containers:
    - args:
      - --config-dir=./ci-operator/config/
      - --current-release=4.5
      - --future-release=4.6
      - --confirm
      - --username=openshift-merge-robot
      - --token-path=/etc/github/oauth
      command:
      - blocking-issue-creator
      image: blocking-issue-creator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
      volumeMounts:
      - mountPath: /etc/github
        name: token
        readOnly: true
    volumes:
    - name: token
      secret:
        secretName: github-credentials-openshift-merge-robot
- agent: kubernetes
  cluster: api.ci
  decorate: true
  decoration_config:
    oauth_token_secret:
      key: oauth
      name: oauth-token
  extra_refs:
  - base_ref: master
    org: openshift
    repo: config
    workdir: true
  interval: 12h
  labels:
    ci.openshift.io/role: infra
  name: periodic-openshift-priv-group-update
  spec:
    containers:
    - args:
      - --peribolos-config=org/config.yaml
      - --org=openshift-priv
      - --group=openshift-priv-admins
      command:
      - group-auto-updater
      image: group-auto-updater:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 500m
    serviceAccountName: group-auto-updater
