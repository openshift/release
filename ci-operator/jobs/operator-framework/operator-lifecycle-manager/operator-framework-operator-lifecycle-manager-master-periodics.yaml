periodics:
- agent: kubernetes
  cluster: api.ci
  cron: 0 6 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: master
    org: operator-framework
    repo: operator-lifecycle-manager
  name: periodic-ci-operator-framework-operator-lifecycle-managment-master-rhoperator-metric-e2e-aws-olm-master-daily
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --kubeconfig=/etc/apici/kubeconfig
      - --repo=operator-lifecycle-manager
      - --secret-dir=/usr/local/e2e-operator-metrics-cluster-profile
      - --target=e2e-operator-metrics
      - --template=/usr/local/e2e-operator-metrics
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: CLUSTER_TYPE
        value: aws
      - name: JOB_NAME_SAFE
        value: e2e-operator-metrics
      - name: TEST_COMMAND
        value: |
          #!/bin/bash

          git clone https://github.com/openshift/origin.git -b master
          cd origin

          export GO111MODULE=off

          # install Kubectl required by the test.
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.17.0/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mkdir -p /tmp/shared
          export PATH=$PATH:/tmp/shared
          mv ./kubectl /tmp/shared/kubectl

          # make and run test
          make WHAT=cmd/openshift-tests

          cd ..
          DIR="./origin/_output/local/bin/$(go env GOHOSTOS)/$(go env GOHOSTARCH)"

          # OLM sanity tests
          ${DIR}/openshift-tests run all --dry-run | grep "\[sig-operator\].*OLM" | ${DIR}/openshift-tests run --junit-dir=${ARTIFACT_DIR} -f -

          # Install and uninstall rh-operators and run metric tests after
          EXIT_CODE=0
          make e2e-operator-metrics || EXIT_CODE=1

          ${DIR}/openshift-tests run all --dry-run | grep "\[sig-instrumentation\].*Prometheus.*should report telemetry if a cloud.openshift.com token is present" | ${DIR}/openshift-tests run --junit-dir=${ARTIFACT_DIR} -f -
          ${DIR}/openshift-tests run all --dry-run | grep "\[sig-instrumentation\].*Prometheus\|\[sig-instrumentation\].*Alerts"| grep "should have a Watchdog alert in firing state the entire cluster run\|should report telemetry if a cloud.openshift.com token is present\|should start and expose a secured proxy and unsecured metrics" | ${DIR}/openshift-tests run --junit-dir=${ARTIFACT_DIR} -f -
          exit $EXIT_CODE
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-operator-metrics-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-operator-metrics
        name: job-definition
        subPath: cluster-launch-installer-src.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/sentry-dsn
        name: sentry-dsn
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-src
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: sentry-dsn
      secret:
        secretName: sentry-dsn
