presubmits:
  operator-framework/operator-metering:
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-aws-metering
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-operator-framework-operator-metering-master-e2e-aws-metering
    rerun_command: /test e2e-aws-metering
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-metering-cluster-profile
        - --target=e2e-aws-metering
        - --template=/usr/local/e2e-aws-metering
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: operator-framework-operator-metering-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-metering
        - name: TEST_COMMAND
          value: |
            set -x
            # Increase the size of the machines so that there are machines large enough
            # to run Presto, and the full metering stack.
            kubectl -n openshift-machine-api get machinesets -o name | cut -d/ -f2 | head -n2 | xargs -I{} kubectl -n openshift-machine-api patch machineset {} --type json -p '[{"op": "replace", "path": "/spec/template/spec/providerSpec/value/instanceType", "value": "m4.xlarge"}]'
            # delete the first two workers so that larger machines replace it
            # wait=false because the machines never actually get deleted from the
            # API
            kubectl -n openshift-machine-api get machines -l machine.openshift.io/cluster-api-machine-role=worker -o name | head -n2 | xargs kubectl -n openshift-machine-api delete --wait=false
            TEST_OUTPUT_PATH=/tmp/artifacts make e2e
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-metering-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-metering
          name: job-definition
          subPath: cluster-launch-installer-src.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-src
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?e2e-aws-metering(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/images
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-operator-framework-operator-metering-master-images
    rerun_command: /test images
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=[images]
        - --target=[release:latest]
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: operator-framework-operator-metering-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: '(?m)^/test (?:.*? )?images(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/integration-aws-metering
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-operator-framework-operator-metering-master-integration-aws-metering
    rerun_command: /test integration-aws-metering
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/integration-aws-metering-cluster-profile
        - --target=integration-aws-metering
        - --template=/usr/local/integration-aws-metering
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: operator-framework-operator-metering-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: integration-aws-metering
        - name: TEST_COMMAND
          value: |
            set -x
            # Increase the size of the machines so that there are machines large enough
            # to run Presto, and the full metering stack.
            kubectl -n openshift-machine-api get machinesets -o name | cut -d/ -f2 | head -n2 | xargs -I{} kubectl -n openshift-machine-api patch machineset {} --type json -p '[{"op": "replace", "path": "/spec/template/spec/providerSpec/value/instanceType", "value": "m4.xlarge"}]'
            # delete the first two workers so that larger machines replace it
            # wait=false because the machines never actually get deleted from the
            # API
            kubectl -n openshift-machine-api get machines -l machine.openshift.io/cluster-api-machine-role=worker -o name | head -n2 | xargs kubectl -n openshift-machine-api delete --wait=false
            TEST_OUTPUT_PATH=/tmp/artifacts make integration
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/integration-aws-metering-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/integration-aws-metering
          name: job-definition
          subPath: cluster-launch-installer-src.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-src
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?integration-aws-metering(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/unit
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-operator-framework-operator-metering-master-unit
    rerun_command: /test unit
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=unit
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: operator-framework-operator-metering-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: '(?m)^/test (?:.*? )?unit(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/verify
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-operator-framework-operator-metering-master-verify
    rerun_command: /test verify
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=verify
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: operator-framework-operator-metering-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: '(?m)^/test (?:.*? )?verify(?: .*?)?$'
