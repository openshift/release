presubmits:
  openshift/origin:
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/artifacts
    decorate: true
    name: pull-ci-openshift-origin-master-artifacts
    rerun_command: /test artifacts
    run_if_changed: ^(hack/)|(Makefile)|(.*_(windows|linux|darwin|unsupported)(_test)?\.go)$
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=artifacts
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| artifacts),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/cmd
    decorate: true
    name: pull-ci-openshift-origin-master-cmd
    rerun_command: /test cmd
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=cmd
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| cmd),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-aws
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-aws
    rerun_command: /test e2e-aws
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-cluster-profile
        - --target=e2e-aws
        - --template=/usr/local/e2e-aws
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/smoke-4 run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-aws),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-all
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-aws-all
    optional: true
    rerun_command: /test e2e-aws-all
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-all-cluster-profile
        - --target=e2e-aws-all
        - --template=/usr/local/e2e-aws-all
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-all
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-all-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-all
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-aws-all),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-builds
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-aws-builds
    optional: true
    rerun_command: /test e2e-aws-builds
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-builds-cluster-profile
        - --target=e2e-aws-builds
        - --template=/usr/local/e2e-aws-builds
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-builds
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/build run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-builds-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-builds
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-aws-builds),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-image-ecosystem
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-aws-image-ecosystem
    rerun_command: /test e2e-aws-image-ecosystem
    run_if_changed: ^(test/extended/image_ecosystem)|^(examples/db-templates)|^(examples/quickstarts)|^(examples/image-streams)|^(examples/jenkins)|^(vendor/github.com/openshift/source-to-image)|^(vendor/github.com/openshift/imagebuilder)
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-image-ecosystem-cluster-profile
        - --target=e2e-aws-image-ecosystem
        - --template=/usr/local/e2e-aws-image-ecosystem
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-image-ecosystem
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/image-ecosystem run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-image-ecosystem-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-image-ecosystem
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-aws-image-ecosystem),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-image-registry
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-aws-image-registry
    optional: true
    rerun_command: /test e2e-aws-image-registry
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-image-registry-cluster-profile
        - --target=e2e-aws-image-registry
        - --template=/usr/local/e2e-aws-image-registry
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-image-registry
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/image-registry run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-image-registry-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-image-registry
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-aws-image-registry),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-conformance-k8s
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-conformance-k8s
    rerun_command: /test e2e-conformance-k8s
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-conformance-k8s-cluster-profile
        - --target=e2e-conformance-k8s
        - --template=/usr/local/e2e-conformance-k8s
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-conformance-k8s
        - name: RESOURCES_TEST
          value: '{"requests": {"cpu": 1, "memory": "300Mi"}, "limits": {"cpu": 3,
            memory: "9Gi"}}'
        - name: TEST_COMMAND
          value: test/extended/conformance-k8s.sh
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-conformance-k8s-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-conformance-k8s
          name: job-definition
          subPath: cluster-launch-installer-src.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-src
        name: job-definition
    trigger: ((?m)^/test( all| e2e-conformance-k8s),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-gcp
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-gcp
    rerun_command: /test e2e-gcp
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-gcp-cluster-profile
        - --target=e2e-gcp
        - --template=/usr/local/e2e-gcp
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-gcp
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-gcp
          name: job-definition
          subPath: cluster-launch-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-gcp),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-gcp-serial
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-gcp-serial
    rerun_command: /test e2e-gcp-serial
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-gcp-serial-cluster-profile
        - --target=e2e-gcp-serial
        - --template=/usr/local/e2e-gcp-serial
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-gcp-serial
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/serial run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-serial-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-gcp-serial
          name: job-definition
          subPath: cluster-launch-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-gcp-serial),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/images
    decorate: true
    name: pull-ci-openshift-origin-master-images
    rerun_command: /test images
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=[images]
        - --target=[release:latest]
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| images),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/integration
    decorate: true
    name: pull-ci-openshift-origin-master-integration
    rerun_command: /test integration
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=integration
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| integration),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/launch-aws
    decorate: true
    name: pull-ci-openshift-origin-master-launch-aws
    rerun_command: /test launch-aws
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/launch-aws-cluster-profile
        - --target=launch-aws
        - --template=/usr/local/launch-aws
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: launch-aws
        - name: TEST_COMMAND
          value: sleep 7200 & wait
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/launch-aws-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/launch-aws
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( all| launch-aws),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/unit
    decorate: true
    name: pull-ci-openshift-origin-master-unit
    rerun_command: /test unit
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=unit
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| unit),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/verify
    decorate: true
    name: pull-ci-openshift-origin-master-verify
    rerun_command: /test verify
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=verify
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| verify),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_gssapi
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_gssapi
    rerun_command: /test extended_gssapi
    trigger: ((?m)^/test extended_gssapi,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_ldap_groups
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_ldap_groups
    rerun_command: /test extended_ldap_groups
    trigger: ((?m)^/test extended_ldap_groups,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_networking
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_networking
    rerun_command: /test extended_networking
    trigger: ((?m)^/test extended_networking,?(\s+|$))
