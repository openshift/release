presubmits:
  openshift/origin:
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/artifacts
    decorate: true
    name: pull-ci-openshift-origin-master-artifacts
    rerun_command: /test artifacts
    run_if_changed: ^(hack/)|(Makefile)|(.*_(windows|linux|darwin|unsupported)(_test)?\.go)$
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=artifacts
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: '(?m)^/test (?:.*? )?artifacts(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/cmd
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-cmd
    rerun_command: /test cmd
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=cmd
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: '(?m)^/test (?:.*? )?cmd(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-aws
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-e2e-aws
    rerun_command: /test e2e-aws
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-cluster-profile
        - --target=e2e-aws
        - --template=/usr/local/e2e-aws
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?e2e-aws(?: .*?)?$'
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-all
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-e2e-aws-all
    optional: true
    rerun_command: /test e2e-aws-all
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-all-cluster-profile
        - --target=e2e-aws-all
        - --template=/usr/local/e2e-aws-all
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-all
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-all-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-all
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?e2e-aws-all(?: .*?)?$'
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-builds
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-e2e-aws-builds
    rerun_command: /test e2e-aws-builds
    run_if_changed: ^(pkg/oc/cli/startbuild/startbuild.go)|^(pkg/build)|^(pkg/cmd/infra/builder)|^(test/extended/builds)|^(test/extended/testdata/builds)|^(test/extended/util)|^(vendor/github.com/openshift/source-to-image)|^(vendor/github.com/openshift/imagebuilder)
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-builds-cluster-profile
        - --target=e2e-aws-builds
        - --template=/usr/local/e2e-aws-builds
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-builds
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/build run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-builds-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-builds
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?e2e-aws-builds(?: .*?)?$'
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-image-ecosystem
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-e2e-aws-image-ecosystem
    rerun_command: /test e2e-aws-image-ecosystem
    run_if_changed: ^(test/extended/image_ecosystem)|^(examples/db-templates)|^(examples/quickstarts)|^(examples/image-streams)|^(examples/jenkins)|^(vendor/github.com/openshift/source-to-image)|^(vendor/github.com/openshift/imagebuilder)
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-image-ecosystem-cluster-profile
        - --target=e2e-aws-image-ecosystem
        - --template=/usr/local/e2e-aws-image-ecosystem
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-image-ecosystem
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/image-ecosystem run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-image-ecosystem-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-image-ecosystem
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?e2e-aws-image-ecosystem(?: .*?)?$'
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-image-registry
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-e2e-aws-image-registry
    rerun_command: /test e2e-aws-image-registry
    run_if_changed: ^(pkg/image)|^(test/extended/registry)|^(test/extended/images)|^(test/extended/imageapis)|^(vendor/github.com/docker/distribution)
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-image-registry-cluster-profile
        - --target=e2e-aws-image-registry
        - --template=/usr/local/e2e-aws-image-registry
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-image-registry
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/image-registry run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-image-registry-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-image-registry
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?e2e-aws-image-registry(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-aws-serial
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-e2e-aws-serial
    rerun_command: /test e2e-aws-serial
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-serial-cluster-profile
        - --target=e2e-aws-serial
        - --template=/usr/local/e2e-aws-serial
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-serial
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/serial run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-serial-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-serial
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?e2e-aws-serial(?: .*?)?$'
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-upgrade
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-e2e-aws-upgrade
    optional: true
    rerun_command: /test e2e-aws-upgrade
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-upgrade-cluster-profile
        - --target=e2e-aws-upgrade
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
          name: cluster-profile
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
    trigger: '(?m)^/test (?:.*? )?e2e-aws-upgrade(?: .*?)?$'
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-conformance-k8s
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-conformance-k8s
    rerun_command: /test e2e-conformance-k8s
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-conformance-k8s-cluster-profile
        - --target=e2e-conformance-k8s
        - --template=/usr/local/e2e-conformance-k8s
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-conformance-k8s
        - name: RESOURCES_TEST
          value: '{"requests": {"cpu": 1, "memory": "300Mi"}, "limits": {"cpu": 3,
            "memory": "9Gi"}}'
        - name: TEST_COMMAND
          value: test/extended/conformance-k8s.sh
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-conformance-k8s-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-conformance-k8s
          name: job-definition
          subPath: cluster-launch-installer-src.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-src
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?e2e-conformance-k8s(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/images
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-images
    rerun_command: /test images
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=[images]
        - --target=[release:latest]
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: '(?m)^/test (?:.*? )?images(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/integration
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-integration
    rerun_command: /test integration
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=integration
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: '(?m)^/test (?:.*? )?integration(?: .*?)?$'
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/launch-aws
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-launch-aws
    optional: true
    rerun_command: /test launch-aws
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/launch-aws-cluster-profile
        - --target=launch-aws
        - --template=/usr/local/launch-aws
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: launch-aws
        - name: TEST_COMMAND
          value: sleep 7200 & wait
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/launch-aws-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/launch-aws
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: '(?m)^/test (?:.*? )?launch-aws(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/unit
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-unit
    rerun_command: /test unit
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=unit
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: '(?m)^/test (?:.*? )?unit(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/verify
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
    name: pull-ci-openshift-origin-master-verify
    rerun_command: /test verify
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=verify
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: '(?m)^/test (?:.*? )?verify(?: .*?)?$'
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_gssapi
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_gssapi
    rerun_command: /test extended_gssapi
    trigger: ((?m)^/test extended_gssapi,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_ldap_groups
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_ldap_groups
    rerun_command: /test extended_ldap_groups
    trigger: ((?m)^/test extended_ldap_groups,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_networking
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_networking
    rerun_command: /test extended_networking
    trigger: ((?m)^/test extended_networking,?(\s+|$))
