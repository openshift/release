presubmits:
  openshift/origin:
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/artifacts
    decorate: true
    name: pull-ci-openshift-origin-master-artifacts
    rerun_command: /test artifacts
    run_if_changed: ^(hack/)|(Makefile)|(.*_(windows|linux|darwin|unsupported)(_test)?\.go)$
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=artifacts
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| artifacts),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-conformance-k8s
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-conformance-k8s
    rerun_command: /test e2e-conformance-k8s
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-conformance-k8s-cluster-profile
        - --target=e2e-conformance-k8s
        - --template=/usr/local/e2e-conformance-k8s
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-conformance-k8s
        - name: TEST_COMMAND
          value: test/extended/conformance-k8s.sh
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-conformance-k8s-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-conformance-k8s
          name: job-definition
          subPath: cluster-launch-src.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-src
        name: job-definition
    trigger: ((?m)^/test( all| e2e-conformance-k8s),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-gcp
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-gcp
    rerun_command: /test e2e-gcp
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-gcp-cluster-profile
        - --target=e2e-gcp
        - --template=/usr/local/e2e-gcp
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-gcp
        - name: TEST_COMMAND
          value: TEST_FOCUS=Suite:openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-gcp
          name: job-definition
          subPath: cluster-launch-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-gcp),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-gcp-crio
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-gcp-crio
    rerun_command: /test e2e-gcp-crio
    run_if_changed: ^(vendor/k8s.io/kubernetes/pkg/kubelet)|^(pkg/build/builder)
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-gcp-crio-cluster-profile
        - --target=e2e-gcp-crio
        - --template=/usr/local/e2e-gcp-crio
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-gcp-crio
        - name: TEST_COMMAND
          value: TEST_FOCUS=Suite:openshift/conformance/parallel TEST_FOCUS_SERIAL=Suite:openshift/conformance/serial/minimal
            run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-crio-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-gcp-crio
          name: job-definition
          subPath: cluster-launch-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp-crio
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-gcp-crio),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-gcp-launch
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-gcp-launch
    rerun_command: /test e2e-gcp-launch
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-gcp-launch-cluster-profile
        - --target=e2e-gcp-launch
        - --template=/usr/local/e2e-gcp-launch
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-gcp-launch
        - name: TEST_COMMAND
          value: sleep 7200 & wait
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-launch-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-gcp-launch
          name: job-definition
          subPath: cluster-launch-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-gcp-launch),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-gcp-serial
    decorate: true
    name: pull-ci-openshift-origin-master-e2e-gcp-serial
    rerun_command: /test e2e-gcp-serial
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-gcp-serial-cluster-profile
        - --target=e2e-gcp-serial
        - --template=/usr/local/e2e-gcp-serial
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-gcp-serial
        - name: TEST_COMMAND
          value: TEST_FOCUS_SERIAL=Suite:openshift/conformance/serial run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-serial-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-gcp-serial
          name: job-definition
          subPath: cluster-launch-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-gcp-serial),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/images
    decorate: true
    name: pull-ci-openshift-origin-master-images
    rerun_command: /test images
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=[images]
        - --target=[release:latest]
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| images),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/integration
    decorate: true
    name: pull-ci-openshift-origin-master-integration
    rerun_command: /test integration
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=integration
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| integration),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/unit
    decorate: true
    name: pull-ci-openshift-origin-master-unit
    rerun_command: /test unit
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=unit
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| unit),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/verify
    decorate: true
    name: pull-ci-openshift-origin-master-verify
    rerun_command: /test verify
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=verify
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-origin-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| verify),?(\s+|$))
  - agent: jenkins
    always_run: true
    context: ci/openshift-jenkins/cmd
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_cmd
    rerun_command: /test cmd
    trigger: ((?m)^/test( all| cmd),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - master
    context: ci/openshift-jenkins/end_to_end
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_end_to_end
    rerun_command: /test end_to_end
    trigger: ((?m)^/test( all| end_to_end),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_builds
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_builds
    rerun_command: /test extended_builds
    run_if_changed: ^(pkg/oc/cli/startbuild/startbuild.go)|^(pkg/build)|^(pkg/cmd/infra/builder)|^(test/extended/builds)|^(test/extended/testdata/builds)|^(test/extended/util)|^(vendor/github.com/openshift/source-to-image)|^(vendor/github.com/openshift/imagebuilder)
    trigger: ((?m)^/test extended_builds,?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - master
    context: ci/openshift-jenkins/extended_clusterup
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_clusterup
    optional: true
    rerun_command: /test extended_clusterup
    trigger: ((?m)^/test extended_clusterup,?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - master
    context: ci/openshift-jenkins/azure
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_conformance_azure
    rerun_command: /test azure
    skip_report: true
    trigger: ((?m)^/test( all| azure),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_gssapi
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_gssapi
    rerun_command: /test extended_gssapi
    trigger: ((?m)^/test extended_gssapi,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_image_ecosystem
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_image_ecosystem
    rerun_command: /test extended_image_ecosystem
    run_if_changed: ^(test/extended/image_ecosystem)|^(examples/db-templates)|^(examples/quickstarts)|^(examples/image-streams)|^(examples/jenkins)|^(vendor/github.com/openshift/source-to-image)|^(vendor/github.com/openshift/imagebuilder)
    trigger: ((?m)^/test extended_image_ecosystem,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_image_registry
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_image_registry
    rerun_command: /test extended_image_registry
    run_if_changed: ^(pkg/image)|^(test/extended/registry)|^(test/extended/images)|^(test/extended/imageapis)|^(vendor/github.com/docker/distribution)
    trigger: ((?m)^/test extended_image_registry,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_ldap_groups
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_ldap_groups
    rerun_command: /test extended_ldap_groups
    trigger: ((?m)^/test extended_ldap_groups,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    context: ci/openshift-jenkins/extended_networking
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_networking
    rerun_command: /test extended_networking
    trigger: ((?m)^/test extended_networking,?(\s+|$))
