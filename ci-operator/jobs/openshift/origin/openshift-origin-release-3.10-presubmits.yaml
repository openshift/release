presubmits:
  openshift/origin:
  - agent: kubernetes
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/prow/e2e-conformance-k8s
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-origin-release-3.10-e2e-conformance-k8s
    rerun_command: /test e2e-conformance-k8s
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --kubeconfig=/etc/apici/kubeconfig
        - --secret-dir=/usr/local/e2e-conformance-k8s-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-conformance-k8s
        - --template=/usr/local/e2e-conformance-k8s
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: JOB_NAME_SAFE
          value: e2e-conformance-k8s
        - name: TEST_COMMAND
          value: test/extended/conformance-k8s.sh
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/apici
          name: apici-ci-operator-credentials
          readOnly: true
        - mountPath: /usr/local/e2e-conformance-k8s-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-conformance-k8s
          name: job-definition
          subPath: cluster-launch-src.yaml
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: apici-ci-operator-credentials
        secret:
          items:
          - key: sa.ci-operator.apici.config
            path: kubeconfig
          secretName: apici-ci-operator-credentials
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-src
        name: job-definition
      - name: pull-secret
        secret:
          secretName: regcred
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-conformance-k8s,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-3.10
    cluster: ci/api-build01-ci-devcluster-openshift-com:6443
    context: ci/prow/images
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-origin-release-3.10-images
    rerun_command: /test images
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --kubeconfig=/etc/apici/kubeconfig
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=[images]
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/apici
          name: apici-ci-operator-credentials
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: apici-ci-operator-credentials
        secret:
          items:
          - key: sa.ci-operator.apici.config
            path: kubeconfig
          secretName: apici-ci-operator-credentials
      - name: pull-secret
        secret:
          secretName: regcred
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )images,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-3.10
    cluster: ci/api-build01-ci-devcluster-openshift-com:6443
    context: ci/prow/unit
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-origin-release-3.10-unit
    rerun_command: /test unit
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --kubeconfig=/etc/apici/kubeconfig
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=unit
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/apici
          name: apici-ci-operator-credentials
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: apici-ci-operator-credentials
        secret:
          items:
          - key: sa.ci-operator.apici.config
            path: kubeconfig
          secretName: apici-ci-operator-credentials
      - name: pull-secret
        secret:
          secretName: regcred
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )unit,?($|\s.*)
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/end_to_end
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_end_to_end_310
    rerun_command: /test end_to_end
    trigger: (?m)^/test( | .* )end_to_end,?($|\s.*)
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_builds
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_builds_310
    rerun_command: /test extended_builds
    run_if_changed: ^(pkg/oc/cli/cmd/startbuild.go)|^(pkg/build)|^(pkg/cmd/infra/builder)|^(test/extended/builds)|^(test/extended/testdata/builds)|^(test/extended/util)|^(vendor/github.com/openshift/source-to-image)|^(vendor/github.com/openshift/imagebuilder)
    trigger: ((?m)^/test extended_builds,?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_clusterup
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_clusterup_310
    rerun_command: /test extended_clusterup
    trigger: ((?m)^/test extended_clusterup,?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_conformance_crio_rpm
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_conformance_crio_rpm_310
    rerun_command: /test crio
    skip_report: true
    trigger: ((?m)^/test crio,?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/gcp
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_conformance_gce_310
    rerun_command: /test gcp
    trigger: (?m)^/test( | .* )gcp,?($|\s.*)
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_conformance_install
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_conformance_install_310
    rerun_command: /test extended_conformance_install
    trigger: (?m)^/test( | .* )extended_conformance_install,?($|\s.*)
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_conformance_install_update
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_conformance_install_update
    rerun_command: /test extended_conformance_install_update
    skip_report: true
    trigger: (?m)^/test( | .* )extended_conformance_install_update,?($|\s.*)
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_conformance_k8s
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_conformance_k8s_310
    rerun_command: /test conformance_k8s
    trigger: ((?m)^/test conformance_k8s,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_gssapi
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_gssapi_310
    rerun_command: /test extended_gssapi
    trigger: ((?m)^/test extended_gssapi,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_image_ecosystem
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_image_ecosystem_310
    rerun_command: /test extended_image_ecosystem
    run_if_changed: ^(test/extended/image_ecosystem)|^(examples/db-templates)|^(examples/quickstarts)|^(examples/image-streams)|^(examples/jenkins)|^(vendor/github.com/openshift/source-to-image)|^(vendor/github.com/openshift/imagebuilder)
    trigger: ((?m)^/test extended_image_ecosystem,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_image_registry
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_image_registry_310
    rerun_command: /test extended_image_registry
    run_if_changed: ^(pkg/image)|^(test/extended/registry)|^(test/extended/images)|^(test/extended/imageapis)|^(vendor/github.com/docker/distribution)
    trigger: ((?m)^/test extended_image_registry,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_ldap_groups
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_ldap_groups_310
    rerun_command: /test extended_ldap_groups
    trigger: ((?m)^/test extended_ldap_groups,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/extended_networking
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_extended_networking_310
    rerun_command: /test extended_networking
    trigger: ((?m)^/test extended_networking,?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/integration
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_integration_310
    rerun_command: /test integration
    trigger: (?m)^/test( | .* )integration,?($|\s.*)
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/launch-gcp
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_launch_gce_310
    rerun_command: /test launch-gcp
    trigger: ((?m)^/test launch-gcp,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/service-catalog
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_service_catalog_310
    rerun_command: /test service-catalog
    run_if_changed: ^(pkg/cmd/server/bootstrappolicy)|^(pkg/oc/bootstrap/docker/openshift)|^(cmd/service-catalog)|^(examples/service-catalog)
    trigger: ((?m)^/test service-catalog,?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    cluster: api.ci
    context: ci/openshift-jenkins/verify
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_origin_verify_310
    rerun_command: /test verify
    trigger: (?m)^/test( | .* )verify,?($|\s.*)
