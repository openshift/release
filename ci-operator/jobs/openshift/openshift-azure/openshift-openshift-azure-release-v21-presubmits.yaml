presubmits:
  openshift/openshift-azure:
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: e2e-applysecurityupdates
    decorate: true
    name: pull-ci-azure-release-v21-e2e-applysecurityupdates
    rerun_command: /test e2e-applysecurityupdates
    spec:
      containers:
      - args:
        - hack/tests/e2e-create.sh
        env:
        - name: FOCUS
          value: \[ApplySecurityUpdates\]
        - name: TIMEOUT
          value: 120m
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )e2e-applysecurityupdates,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: conformance
    decorate: true
    name: pull-ci-azure-release-v21-e2e-azure-conformance
    rerun_command: /test conformance
    spec:
      containers:
      - args:
        - hack/tests/origin-conformance.sh
        env:
        - name: OS_GIT_MAJOR
          value: "3"
        - name: OS_GIT_MINOR
          value: "11"
        - name: TEST_NODES
          value: "30"
        - name: TEST_SUITE
          value: openshift/conformance/parallel/minimal
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )conformance,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: e2e-changeloglevel
    decorate: true
    name: pull-ci-azure-release-v21-e2e-changeloglevel
    rerun_command: /test e2e-changeloglevel
    spec:
      containers:
      - args:
        - hack/tests/e2e-create.sh
        env:
        - name: FOCUS
          value: \[ChangeLogLevel\]
        - name: TIMEOUT
          value: 90m
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )e2e-changeloglevel,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-v21
    cluster: build02
    context: e2e-create
    decorate: true
    name: pull-ci-azure-release-v21-e2e-create
    rerun_command: /test e2e-create
    spec:
      containers:
      - args:
        - hack/tests/e2e-create.sh
        env:
        - name: FOCUS
          value: \[EveryPR\]
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )e2e-create,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: e2e-etcdbackuprecovery
    decorate: true
    name: pull-ci-azure-release-v21-e2e-etcdbackuprecovery
    rerun_command: /test e2e-etcdbackuprecovery
    spec:
      containers:
      - args:
        - hack/tests/e2e-create.sh
        env:
        - name: FOCUS
          value: \[EtcdBackupRecovery\]
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )e2e-etcdbackuprecovery,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: e2e-forceupdate
    decorate: true
    name: pull-ci-azure-release-v21-e2e-forceupdate
    rerun_command: /test e2e-forceupdate
    spec:
      containers:
      - args:
        - hack/tests/e2e-create.sh
        env:
        - name: FOCUS
          value: \[ForceUpdate\]
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )e2e-forceupdate,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: e2e-keyrotation
    decorate: true
    name: pull-ci-azure-release-v21-e2e-keyrotation
    rerun_command: /test e2e-keyrotation
    spec:
      containers:
      - args:
        - hack/tests/e2e-create.sh
        env:
        - name: FOCUS
          value: \[KeyRotation\]
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )e2e-keyrotation,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: e2e-reimagevm
    decorate: true
    name: pull-ci-azure-release-v21-e2e-reimagevm
    rerun_command: /test e2e-reimagevm
    spec:
      containers:
      - args:
        - hack/tests/e2e-create.sh
        env:
        - name: FOCUS
          value: \[ReimageVM\]
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )e2e-reimagevm,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-v21
    cluster: build02
    context: e2e-scaleupdown
    decorate: true
    name: pull-ci-azure-release-v21-e2e-scaleupdown
    rerun_command: /test e2e-scaleupdown
    spec:
      containers:
      - args:
        - hack/tests/e2e-create.sh
        env:
        - name: FOCUS
          value: \[ScaleUpDown\]
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )e2e-scaleupdown,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-v21
    cluster: build02
    context: unit
    decorate: true
    name: pull-ci-azure-release-v21-unit
    rerun_command: /test unit
    spec:
      containers:
      - args:
        - make
        - unit
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
    trigger: (?m)^/test( | .* )unit,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: upgrade-private-v15.0
    decorate: true
    name: pull-ci-azure-release-v21-upgrade-private-v15.0
    rerun_command: /test upgrade-private-v15.0
    spec:
      containers:
      - args:
        - hack/tests/e2e-upgrade.sh
        - v15.0
        env:
        - name: API_VERSION
          value: 2019-10-27-preview
        - name: PRIVATE_API_SERVER
          value: "true"
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )upgrade-private-v15.0,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: upgrade-private-v16.1
    decorate: true
    name: pull-ci-azure-release-v21-upgrade-private-v16.1
    rerun_command: /test upgrade-private-v16.1
    spec:
      containers:
      - args:
        - hack/tests/e2e-upgrade.sh
        - v16.1
        env:
        - name: API_VERSION
          value: 2019-10-27-preview
        - name: PRIVATE_API_SERVER
          value: "true"
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )upgrade-private-v16.1,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: upgrade-private-v17.0
    decorate: true
    name: pull-ci-azure-release-v21-upgrade-private-v17.0
    rerun_command: /test upgrade-private-v17.0
    spec:
      containers:
      - args:
        - hack/tests/e2e-upgrade.sh
        - v17.0
        env:
        - name: API_VERSION
          value: 2019-10-27-preview
        - name: PRIVATE_API_SERVER
          value: "true"
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )upgrade-private-v17.0,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: upgrade-private-v19.0
    decorate: true
    name: pull-ci-azure-release-v21-upgrade-private-v19.0
    rerun_command: /test upgrade-private-v19.0
    spec:
      containers:
      - args:
        - hack/tests/e2e-upgrade.sh
        - v19.0
        env:
        - name: API_VERSION
          value: 2019-10-27-preview
        - name: PRIVATE_API_SERVER
          value: "true"
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )upgrade-private-v19.0,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - release-v21
    cluster: build02
    context: upgrade-private-v20.0
    decorate: true
    name: pull-ci-azure-release-v21-upgrade-private-v20.0
    rerun_command: /test upgrade-private-v20.0
    spec:
      containers:
      - args:
        - hack/tests/e2e-upgrade.sh
        - v20.0
        env:
        - name: API_VERSION
          value: 2019-10-27-preview
        - name: PRIVATE_API_SERVER
          value: "true"
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )upgrade-private-v20.0,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-v21
    cluster: build02
    context: upgrade-v15.0
    decorate: true
    name: pull-ci-azure-release-v21-upgrade-v15.0
    rerun_command: /test upgrade-v15.0
    spec:
      containers:
      - args:
        - hack/tests/e2e-upgrade.sh
        - v15.0
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )upgrade-v15.0,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-v21
    cluster: build02
    context: upgrade-v16.1
    decorate: true
    name: pull-ci-azure-release-v21-upgrade-v16.1
    rerun_command: /test upgrade-v16.1
    spec:
      containers:
      - args:
        - hack/tests/e2e-upgrade.sh
        - v16.1
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )upgrade-v16.1,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-v21
    cluster: build02
    context: upgrade-v17.0
    decorate: true
    name: pull-ci-azure-release-v21-upgrade-v17.0
    rerun_command: /test upgrade-v17.0
    spec:
      containers:
      - args:
        - hack/tests/e2e-upgrade.sh
        - v17.0
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )upgrade-v17.0,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-v21
    cluster: build02
    context: upgrade-v19.0
    decorate: true
    name: pull-ci-azure-release-v21-upgrade-v19.0
    rerun_command: /test upgrade-v19.0
    spec:
      containers:
      - args:
        - hack/tests/e2e-upgrade.sh
        - v19.0
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )upgrade-v19.0,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-v21
    cluster: build02
    context: upgrade-v20.0
    decorate: true
    name: pull-ci-azure-release-v21-upgrade-v20.0
    rerun_command: /test upgrade-v20.0
    spec:
      containers:
      - args:
        - hack/tests/e2e-upgrade.sh
        - v20.0
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: secrets
      volumes:
      - name: secrets
        secret:
          secretName: cluster-secrets-azure
    trigger: (?m)^/test( | .* )upgrade-v20.0,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-v21
    cluster: build02
    context: ci/prow/images
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-openshift-azure-release-v21-images
    rerun_command: /test images
    spec:
      containers:
      - args:
        - --gcs-upload-secret=/secrets/gcs/service-account.json
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --report-password-file=/etc/report/password.txt
        - --report-username=ci
        - --target=[images]
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /secrets/gcs
          name: gcs-credentials
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/report
          name: result-aggregator
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: pull-secret
        secret:
          secretName: registry-pull-credentials
      - name: result-aggregator
        secret:
          secretName: result-aggregator
    trigger: (?m)^/test( | .* )images,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - release-v21
    cluster: build02
    decorate: true
    name: verify
    rerun_command: /test verify
    spec:
      containers:
      - args:
        - make
        - verify
        image: registry.ci.openshift.org/azure/ci-base:latest
        name: ""
        resources: {}
    trigger: (?m)^/test( | .* )verify,?($|\s.*)
