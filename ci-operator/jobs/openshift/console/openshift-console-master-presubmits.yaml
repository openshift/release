presubmits:
  openshift/console:
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/GUI-Tests
    decorate: true
    name: pull-ci-openshift-console-master-GUI-Tests
    rerun_command: /test GUI-Tests
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=GUI-Tests
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| GUI-Tests),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/GUI-Tests-New-App
    decorate: true
    name: pull-ci-openshift-console-master-GUI-Tests-New-App
    rerun_command: /test GUI-Tests-New-App
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=GUI-Tests-New-App
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| GUI-Tests-New-App),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/GUI-Tests-OLM
    decorate: true
    name: pull-ci-openshift-console-master-GUI-Tests-OLM
    rerun_command: /test GUI-Tests-OLM
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=GUI-Tests-OLM
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| GUI-Tests-OLM),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/GUI-Tests-Service-Catalog
    decorate: true
    name: pull-ci-openshift-console-master-GUI-Tests-Service-Catalog
    rerun_command: /test GUI-Tests-Service-Catalog
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=GUI-Tests-Service-Catalog
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| GUI-Tests-Service-Catalog),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/Performance
    decorate: true
    name: pull-ci-openshift-console-master-Performance
    rerun_command: /test Performance
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/Performance-cluster-profile
        - --target=Performance
        - --template=/usr/local/Performance
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: Performance
        - name: RPM_REPO_OPENSHIFT_ORIGIN
          value: https://rpms.svc.ci.openshift.org/openshift-origin-v4.0/
        - name: TEST_COMMAND
          value: export ARTIFACT_DIR=/tmp/artifacts; ./test-gui.sh performance
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/Performance-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/Performance
          name: job-definition
          subPath: cluster-launch-src.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-src
        name: job-definition
    trigger: ((?m)^/test( all| Performance),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/backend
    decorate: true
    name: pull-ci-openshift-console-master-backend
    rerun_command: /test backend
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=backend
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| backend),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/crud
    decorate: true
    name: pull-ci-openshift-console-master-crud
    rerun_command: /test crud
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/crud-cluster-profile
        - --target=crud
        - --template=/usr/local/crud
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: crud
        - name: RPM_REPO_OPENSHIFT_ORIGIN
          value: https://rpms.svc.ci.openshift.org/openshift-origin-v4.0/
        - name: TEST_COMMAND
          value: export ARTIFACT_DIR=/tmp/artifacts; ./test-gui.sh crud
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/crud-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/crud
          name: job-definition
          subPath: cluster-launch-src.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-src
        name: job-definition
    trigger: ((?m)^/test( all| crud),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/frontend
    decorate: true
    name: pull-ci-openshift-console-master-frontend
    rerun_command: /test frontend
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=frontend
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| frontend),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/images
    decorate: true
    name: pull-ci-openshift-console-master-images
    rerun_command: /test images
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=[images]
        - --target=[release:latest]
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| images),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/new-app
    decorate: true
    name: pull-ci-openshift-console-master-new-app
    rerun_command: /test new-app
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/new-app-cluster-profile
        - --target=new-app
        - --template=/usr/local/new-app
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: new-app
        - name: RPM_REPO_OPENSHIFT_ORIGIN
          value: https://rpms.svc.ci.openshift.org/openshift-origin-v4.0/
        - name: TEST_COMMAND
          value: export ARTIFACT_DIR=/tmp/artifacts; ./test-gui.sh newApp
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/new-app-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/new-app
          name: job-definition
          subPath: cluster-launch-src.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-src
        name: job-definition
    trigger: ((?m)^/test( all| new-app),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/olm
    decorate: true
    name: pull-ci-openshift-console-master-olm
    rerun_command: /test olm
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/olm-cluster-profile
        - --target=olm
        - --template=/usr/local/olm
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: olm
        - name: RPM_REPO_OPENSHIFT_ORIGIN
          value: https://rpms.svc.ci.openshift.org/openshift-origin-v4.0/
        - name: TEST_COMMAND
          value: export ARTIFACT_DIR=/tmp/artifacts; ./test-gui.sh olm
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/olm-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/olm
          name: job-definition
          subPath: cluster-launch-src.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-src
        name: job-definition
    trigger: ((?m)^/test( all| olm),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/service-catalog
    decorate: true
    name: pull-ci-openshift-console-master-service-catalog
    rerun_command: /test service-catalog
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/service-catalog-cluster-profile
        - --target=service-catalog
        - --template=/usr/local/service-catalog
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-console-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: service-catalog
        - name: RPM_REPO_OPENSHIFT_ORIGIN
          value: https://rpms.svc.ci.openshift.org/openshift-origin-v4.0/
        - name: TEST_COMMAND
          value: export ARTIFACT_DIR=/tmp/artifacts; ./test-gui.sh serviceCatalog
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/service-catalog-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/service-catalog
          name: job-definition
          subPath: cluster-launch-src.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-src
        name: job-definition
    trigger: ((?m)^/test( all| service-catalog),?(\s+|$))
