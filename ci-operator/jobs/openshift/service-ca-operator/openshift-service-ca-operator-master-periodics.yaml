periodics:
- agent: kubernetes
  decorate: true
  interval: 24h
  name: periodic-ci-openshift-service-ca-operator-rotation-aws-master
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --branch=master
      - --org=openshift
      - --repo=service-ca-operator
      - --resolver-address=http://ci-operator-configresolver-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: SERVICE_CA_CRD
        value: |
          apiVersion: apiextensions.k8s.io/v1beta1
          kind: CustomResourceDefinition
          metadata:
            name: servicecas.operator.openshift.io
          spec:
            scope: Cluster
            group: operator.openshift.io
            version: v1
            names:
              kind: ServiceCA
              plural: servicecas
              singular: serviceca
            subresources:
              status: {}
            validation:
              openAPIV3Schema:
                description: ServiceCA provides information to configure an operator to manage
                  the service cert controllers
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation
                      of an object. Servers should convert recognized schemas to the latest
                      internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this
                      object represents. Servers may infer this from the endpoint the client
                      submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    description: ObjectMeta is metadata that all persisted resources must have,
                      which includes all objects users must create.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map stored with
                          a resource that may be set by external tools to store and retrieve
                          arbitrary metadata. They are not queryable and should be preserved
                          when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      clusterName:
                        description: The name of the cluster which the object belongs to. This
                          is used to distinguish resources with same name and namespace in different
                          clusters. This field is not set anywhere right now and apiserver is
                          going to ignore it if set in create or update request.
                        type: string
                      creationTimestamp:
                        description: "CreationTimestamp is a timestamp representing the server
                          time when this object was created. It is not guaranteed to be set
                          in happens-before order across separate operations. Clients may not
                          set this value. It is represented in RFC3339 form and is in UTC. \n
                          Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                        format: date-time
                        type: string
                      deletionGracePeriodSeconds:
                        description: Number of seconds allowed for this object to gracefully
                          terminate before it will be removed from the system. Only set when
                          deletionTimestamp is also set. May only be shortened. Read-only.
                        format: int64
                        type: integer
                      deletionTimestamp:
                        description: "DeletionTimestamp is RFC 3339 date and time at which this
                          resource will be deleted. This field is set by the server when a graceful
                          deletion is requested by the user, and is not directly settable by
                          a client. The resource is expected to be deleted (no longer visible
                          from resource lists, and not reachable by name) after the time in
                          this field, once the finalizers list is empty. As long as the finalizers
                          list contains items, deletion is blocked. Once the deletionTimestamp
                          is set, this value may not be unset or be set further into the future,
                          although it may be shortened or the resource may be deleted prior
                          to this time. For example, a user may request that a pod is deleted
                          in 30 seconds. The Kubelet will react by sending a graceful termination
                          signal to the containers in the pod. After that 30 seconds, the Kubelet
                          will send a hard termination signal (SIGKILL) to the container and
                          after cleanup, remove the pod from the API. In the presence of network
                          partitions, this object may still exist after this timestamp, until
                          an administrator or automated process can determine the resource is
                          fully terminated. If not set, graceful deletion of the object has
                          not been requested. \n Populated by the system when a graceful deletion
                          is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                        format: date-time
                        type: string
                      finalizers:
                        description: Must be empty before the object is deleted from the registry.
                          Each entry is an identifier for the responsible component that will
                          remove the entry from the list. If the deletionTimestamp of the object
                          is non-nil, entries in this list can only be removed.
                        items:
                          type: string
                        type: array
                      generateName:
                        description: "GenerateName is an optional prefix, used by the server,
                          to generate a unique name ONLY IF the Name field has not been provided.
                          If this field is used, the name returned to the client will be different
                          than the name passed. This value will also be combined with a unique
                          suffix. The provided value has the same validation rules as the Name
                          field, and may be truncated by the length of the suffix required to
                          make the value unique on the server. \n If this field is specified
                          and the generated name exists, the server will NOT return a 409 -
                          instead, it will either return 201 Created or 500 with Reason ServerTimeout
                          indicating a unique name could not be found in the time allotted,
                          and the client should retry (optionally after the time indicated in
                          the Retry-After header). \n Applied only if Name is not specified.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency"
                        type: string
                      generation:
                        description: A sequence number representing a specific generation of
                          the desired state. Populated by the system. Read-only.
                        format: int64
                        type: integer
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used to organize
                          and categorize (scope and select) objects. May match selectors of
                          replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      managedFields:
                        description: ManagedFields maps workflow-id and version to the set of
                          fields that are managed by that workflow. This is mostly for internal
                          housekeeping, and users typically shouldn't need to set or understand
                          this field. A workflow can be the user's name, a controller's name,
                          or the name of a specific apply path like "ci-cd". The set of fields
                          is always in the version that the workflow used when modifying the
                          object.
                        items:
                          description: ManagedFieldsEntry is a workflow-id, a FieldSet and the
                            group version of the resource that the fieldset applies to.
                          properties:
                            apiVersion:
                              description: APIVersion defines the version of this resource that
                                this field set applies to. The format is "group/version" just
                                like the top-level APIVersion field. It is necessary to track
                                the version of a field set because it cannot be automatically
                                converted.
                              type: string
                            fieldsType:
                              description: 'FieldsType is the discriminator for the different
                                fields format and version. There is currently only one possible
                                value: "FieldsV1"'
                              type: string
                            fieldsV1:
                              description: FieldsV1 holds the first JSON version format as described
                                in the "FieldsV1" type.
                              type: object
                            manager:
                              description: Manager is an identifier of the workflow managing
                                these fields.
                              type: string
                            operation:
                              description: Operation is the type of operation which lead to
                                this ManagedFieldsEntry being created. The only valid values
                                for this field are 'Apply' and 'Update'.
                              type: string
                            time:
                              description: Time is timestamp of when these fields were set.
                                It should always be empty if Operation is 'Apply'
                              format: date-time
                              type: string
                          type: object
                        type: array
                      name:
                        description: 'Name must be unique within a namespace. Is required when
                          creating resources, although some resources may allow a client to
                          request the generation of an appropriate name automatically. Name
                          is primarily intended for creation idempotence and configuration definition.
                          Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                      namespace:
                        description: "Namespace defines the space within each name must be unique.
                          An empty namespace is equivalent to the \"default\" namespace, but
                          \"default\" is the canonical representation. Not all objects are required
                          to be scoped to a namespace - the value of this field for those objects
                          will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info:
                          http://kubernetes.io/docs/user-guide/namespaces"
                        type: string
                      ownerReferences:
                        description: List of objects depended by this object. If ALL objects
                          in the list have been deleted, this object will be garbage collected.
                          If this object is managed by a controller, then an entry in this list
                          will point to this controller, with the controller field set to true.
                          There cannot be more than one managing controller.
                        items:
                          description: OwnerReference contains enough information to let you
                            identify an owning object. An owning object must be in the same
                            namespace as the dependent, or be cluster-scoped, so there is no
                            namespace field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            blockOwnerDeletion:
                              description: If true, AND if the owner has the "foregroundDeletion"
                                finalizer, then the owner cannot be deleted from the key-value
                                store until this reference is removed. Defaults to false. To
                                set this field, a user needs "delete" permission of the owner,
                                otherwise 422 (Unprocessable Entity) will be returned.
                              type: boolean
                            controller:
                              description: If true, this reference points to the managing controller.
                              type: boolean
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          - uid
                          type: object
                        type: array
                      resourceVersion:
                        description: "An opaque value that represents the internal version of
                          this object that can be used by clients to determine when objects
                          have changed. May be used for optimistic concurrency, change detection,
                          and the watch operation on a resource or set of resources. Clients
                          must treat these values as opaque and passed unmodified back to the
                          server. They may only be valid for a particular resource or set of
                          resources. \n Populated by the system. Read-only. Value must be treated
                          as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
                        type: string
                      selfLink:
                        description: "SelfLink is a URL representing this object. Populated
                          by the system. Read-only. \n DEPRECATED Kubernetes will stop propagating
                          this field in 1.20 release and the field is planned to be removed
                          in 1.21 release."
                        type: string
                      uid:
                        description: "UID is the unique in time and space value for this object.
                          It is typically generated by the server on successful creation of
                          a resource and is not allowed to change on PUT operations. \n Populated
                          by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                        type: string
                    type: object
                  spec:
                    description: spec holds user settable values for configuration
                    properties:
                      logLevel:
                        description: logLevel is an intent based logging for an overall component.  It
                          does not give fine grained control, but it is a simple way to manage
                          coarse grained logging choices that operators have to interpret for
                          their operands.
                        type: string
                      managementState:
                        description: managementState indicates whether and how the operator
                          should manage the component
                        pattern: ^(Managed|Unmanaged|Force|Removed)$
                        type: string
                      observedConfig:
                        description: observedConfig holds a sparse config that controller has
                          observed from the cluster state.  It exists in spec because it is
                          an input to the level for the operator
                        nullable: true
                        type: object
                      operatorLogLevel:
                        description: operatorLogLevel is an intent based logging for the operator
                          itself.  It does not give fine grained control, but it is a simple
                          way to manage coarse grained logging choices that operators have to
                          interpret for themselves.
                        type: string
                      unsupportedConfigOverrides:
                        description: 'unsupportedConfigOverrides holds a sparse config that
                          will override any previously set options.  It only needs to be the
                          fields to override it will end up overlaying in the following order:
                          1. hardcoded defaults 2. observedConfig 3. unsupportedConfigOverrides'
                        nullable: true
                        type: object
                    type: object
                  status:
                    description: status holds observed values from the cluster. They may not
                      be overridden.
                    properties:
                      conditions:
                        description: conditions is a list of conditions and their status
                        items:
                          description: OperatorCondition is just the standard condition fields.
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              type: string
                            type:
                              type: string
                          type: object
                        type: array
                      generations:
                        description: generations are used to determine when an item needs to
                          be reconciled or has changed in a way that needs a reaction.
                        items:
                          description: GenerationStatus keeps track of the generation for a
                            given resource so that decisions about forced updates can be made.
                          properties:
                            group:
                              description: group is the group of the thing you're tracking
                              type: string
                            hash:
                              description: hash is an optional field set for resources without
                                generation that are content sensitive like secrets and configmaps
                              type: string
                            lastGeneration:
                              description: lastGeneration is the last generation of the workload
                                controller involved
                              format: int64
                              type: integer
                            name:
                              description: name is the name of the thing you're tracking
                              type: string
                            namespace:
                              description: namespace is where the thing you're tracking is
                              type: string
                            resource:
                              description: resource is the resource type of the thing you're
                                tracking
                              type: string
                          type: object
                        type: array
                      observedGeneration:
                        description: observedGeneration is the last generation change you've
                          dealt with
                        format: int64
                        type: integer
                      readyReplicas:
                        description: readyReplicas indicates how many replicas are ready and
                          at the desired state
                        format: int32
                        type: integer
                      version:
                        description: version is the level this availability applies to
                        type: string
                    type: object
                required:
                - spec
                type: object
      - name: SERVICE_CA_CONFIG
        value: |
          apiVersion: operator.openshift.io/v1
          kind: ServiceCA
          metadata:
            name: cluster
            annotations:
              release.openshift.io/create-only: "true"
          spec:
            managedState: Managed
            unsupportedConfigOverrides: {caConfig: {"validityDuration": "25m"}}
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        valueFrom:
          configMapKeyRef:
            key: openshift-service-ca-operator-master.yaml
            name: ci-operator-master-configs
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/e2e-aws-operator-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-operator
        name: job-definition
        subPath: cluster-launch-installer-src.yaml
    serviceAccountName: ci-operator
    volumes:
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-src
      name: job-definition
