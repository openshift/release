presubmits:
  openshift/openshift-ansible:
  - agent: kubernetes
    always_run: true
    branches:
    - master
    - dockerless-build-temporary
    context: ci/prow/unit
    decorate: true
    name: pull-ci-openshift-openshift-ansible-unit
    rerun_command: /test unit
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --target=unit
        - --target=[images]
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.json
              name: ci-operator-openshift-openshift-ansible
        - name: HOME
          value: /tmp/home
        image: ci-operator:latest
        name: test
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| unit| tox),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    - release-3.9
    - release-3.7
    context: ci/openshift-jenkins/tox
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_tox_310
    rerun_command: /test tox
    trigger: ((?m)^/test( all| tox),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - master
    - stage
    - es5.x
    context: ci/openshift-jenkins/logging
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_logging
    rerun_command: /test logging
    run_if_changed: ^roles/openshift_logging.*|playbooks/openshift-logging/.*
    trigger: ((?m)^/test( all| logging),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    context: ci/openshift-jenkins/logging
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_logging_310
    rerun_command: /test logging
    run_if_changed: ^roles/openshift_logging.*|playbooks/openshift-logging/.*
    trigger: ((?m)^/test( all| logging),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.9
    context: ci/openshift-jenkins/logging
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_logging_39
    rerun_command: /test logging
    run_if_changed: ^roles/openshift_logging.*|playbooks/openshift-logging/.*
    trigger: ((?m)^/test( all| logging),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.7
    context: ci/openshift-jenkins/logging
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_logging_37
    rerun_command: /test logging
    run_if_changed: ^roles/openshift_logging.*|playbooks/.+/openshift-cluster/openshift.logging.*
    trigger: ((?m)^/test( all| logging),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.6
    context: ci/openshift-jenkins/logging
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_logging_36
    rerun_command: /test logging
    run_if_changed: ^roles/openshift_logging.*|playbooks/.+/openshift-cluster/openshift.logging.*
    trigger: ((?m)^/test( all| logging),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.7
    context: ci/openshift-jenkins/gcp
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_gce_37
    rerun_command: /test gcp
    trigger: ((?m)^/test( all| gcp),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.9
    context: ci/openshift-jenkins/gcp
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_gce_39
    rerun_command: /test gcp
    trigger: ((?m)^/test( all| gcp),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    - dockerless-build-temporary
    context: ci/prow/gcp
    decorate: true
    name: pull-ci-openshift-openshift-ansible-e2e-gcp
    rerun_command: /test gcp
    skip_cloning: true
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -e
          export RPM_REPO="$( curl -q "${RPM_REPO_BASEURL_REF}" 2>/dev/null)"
          ci-operator \
            --artifact-dir=$(ARTIFACTS) \
            --secret-dir=/usr/local/e2e-gcp-cluster-profile --template=/usr/local/e2e-gcp \
            --target=e2e-gcp
        env:
        - name: TEST_FOCUS
          value: Suite:openshift/conformance/parallel
        - name: JOB_NAME_SAFE
          value: e2e-gcp
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.json
              name: ci-operator-openshift-openshift-ansible
        - name: RPM_REPO_BASEURL_REF
          value: https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/master/.latest-rpms
        image: ci-operator:latest
        name: test
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp
          name: job-definition
          subPath: cluster-launch-e2e.yaml
        - mountPath: /usr/local/e2e-gcp-cluster-profile
          name: cluster-profile
      serviceAccountName: ci-operator
      volumes:
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
    trigger: ((?m)^/test( all| gcp),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - release-3.10
    context: ci/prow/gcp
    decorate: true
    name: pull-ci-openshift-openshift-ansible-e2e-gcp-310
    rerun_command: /test gcp
    skip_cloning: true
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -e
          export RPM_REPO="$( curl -q "${RPM_REPO_BASEURL_REF}" 2>/dev/null)"
          ci-operator \
            --artifact-dir=$(ARTIFACTS) \
            --secret-dir=/usr/local/e2e-gcp-cluster-profile --template=/usr/local/e2e-gcp \
            --target=e2e-gcp
        env:
        - name: TEST_FOCUS
          value: Suite:openshift/conformance/parallel
        - name: JOB_NAME_SAFE
          value: e2e-gcp
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: release-3.10.json
              name: ci-operator-openshift-openshift-ansible
        - name: RPM_REPO_BASEURL_REF
          value: https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/release-3.10/.latest-rpms
        image: ci-operator:latest
        name: test
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp
          name: job-definition
          subPath: cluster-launch-e2e.yaml
        - mountPath: /usr/local/e2e-gcp-cluster-profile
          name: cluster-profile
      serviceAccountName: ci-operator
      volumes:
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
    trigger: ((?m)^/test( all| gcp),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    - dockerless-build-temporary
    context: ci/prow/gcp-crio
    decorate: true
    name: pull-ci-openshift-openshift-ansible-e2e-gcp-crio
    rerun_command: /test gcp-crio
    run_if_changed: ^roles/(container_runtime|openshift_node|openshift_node_group)|^(playbooks/prerequisites)
    skip_cloning: true
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -e
          export RPM_REPO="$( curl -q "${RPM_REPO_BASEURL_REF}" 2>/dev/null)"
          ci-operator \
            --artifact-dir=$(ARTIFACTS) \
            --secret-dir=/usr/local/e2e-gcp-crio-cluster-profile \
            --template=/usr/local/e2e-gcp-crio \
            --target=e2e-gcp-crio
        env:
        - name: TEST_FOCUS
          value: Suite:openshift/conformance/parallel/minimal
        - name: JOB_NAME_SAFE
          value: e2e-gcp-crio
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.json
              name: ci-operator-openshift-openshift-ansible
        - name: RPM_REPO_BASEURL_REF
          value: https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/master/.latest-rpms
        image: ci-operator:latest
        name: test
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-crio
          name: job-definition
          subPath: cluster-launch-e2e.yaml
        - mountPath: /usr/local/e2e-gcp-crio-cluster-profile
          name: cluster-profile
      serviceAccountName: ci-operator
      volumes:
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp-crio
    trigger: ((?m)^/test( gcp-crio),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - release-3.10
    context: ci/prow/gcp-minor-upgrade
    decorate: true
    name: pull-ci-openshift-openshift-ansible-310-gcp-minor-upgrade
    rerun_command: /test gcp-minor-upgrade
    skip_cloning: true
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -e
          export RPM_REPO="$( curl -q "${RPM_REPO_BASEURL_REF}" 2>/dev/null)"
          export PREVIOUS_IMAGE_ANSIBLE=${IMAGE_ANSIBLE}
          export PREVIOUS_RPM_REPO=${RPM_REPO}
          ci-operator \
            --artifact-dir=$(ARTIFACTS) \
            --secret-dir=/usr/local/e2e-gcp-cluster-profile \
            --template=/usr/local/e2e-gcp-310-minor-upgrade \
            --target=e2e-gcp-310-minor-upgrade \
            --give-pr-author-access-to-namespace=true
        env:
        - name: TEST_FOCUS
          value: Suite:openshift/conformance/parallel
        - name: JOB_NAME_SAFE
          value: e2e-gcp-310-minor-upgrade
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: release-3.10.json
              name: ci-operator-openshift-openshift-ansible
        - name: RPM_REPO_BASEURL_REF
          value: https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/release-3.10/.latest-rpms
        image: ci-operator:latest
        name: test
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-310-minor-upgrade
          name: job-definition
          subPath: cluster-launch-e2e-upgrade.yaml
        - mountPath: /usr/local/e2e-gcp-cluster-profile
          name: e2e-gcp-310-minor-upgrade-cluster-profile
      serviceAccountName: ci-operator
      volumes:
      - configMap:
          name: prow-job-cluster-launch-e2e-upgrade
        name: job-definition
      - name: e2e-gcp-310-minor-upgrade-cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
    trigger: ((?m)^/test( all| gcp-minor-upgrade),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/gcp-minor-upgrade
    decorate: true
    name: pull-ci-openshift-openshift-ansible-master-gcp-minor-upgrade
    rerun_command: /test gcp-minor-upgrade
    skip_cloning: true
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -e
          export RPM_REPO="$( curl -q "${RPM_REPO_BASEURL_REF}" 2>/dev/null)"
          export PREVIOUS_RPM_REPO=${RPM_REPO}
          export PREVIOUS_IMAGE_ANSIBLE=${IMAGE_ANSIBLE}
          ci-operator \
            --artifact-dir=$(ARTIFACTS) \
            --secret-dir=/usr/local/e2e-gcp-cluster-profile \
            --template=/usr/local/e2e-gcp-master-minor-upgrade \
            --target=e2e-gcp-master-minor-upgrade \
            --give-pr-author-access-to-namespace=true
        env:
        - name: TEST_FOCUS
          value: Suite:openshift/conformance/parallel
        - name: JOB_NAME_SAFE
          value: e2e-gcp-master-minor-upgrade
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.json
              name: ci-operator-openshift-openshift-ansible
        - name: RPM_REPO_BASEURL_REF
          value: https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/master/.latest-rpms
        image: ci-operator:latest
        name: test
        resources: {}
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-master-minor-upgrade
          name: job-definition
          subPath: cluster-launch-e2e-upgrade.yaml
        - mountPath: /usr/local/e2e-gcp-cluster-profile
          name: e2e-gcp-master-minor-upgrade
      serviceAccountName: ci-operator
      volumes:
      - configMap:
          name: prow-job-cluster-launch-e2e-upgrade
        name: job-definition
      - name: e2e-gcp-master-minor-upgrade
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
    trigger: ((?m)^/test( all| gcp-minor-upgrade),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/gcp-major-upgrade
    decorate: true
    name: pull-ci-openshift-openshift-ansible-master-gcp-major-upgrade
    rerun_command: /test gcp-major-upgrade
    skip_cloning: true
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -e
          export PREVIOUS_RPM_REPO="$( curl -q "${PREVIOUS_RPM_REPO_BASEURL_REF}" 2>/dev/null)"
          export RPM_REPO="$( curl -q "${RPM_REPO_BASEURL_REF}" 2>/dev/null)"
          ci-operator \
            --artifact-dir=$(ARTIFACTS) \
            --secret-dir=/usr/local/e2e-gcp-cluster-profile \
            --template=/usr/local/e2e-gcp-major-upgrade-master \
            --target=e2e-gcp-major-upgrade-master \
            --give-pr-author-access-to-namespace=true
        env:
        - name: TEST_FOCUS
          value: Suite:openshift/conformance/parallel
        - name: JOB_NAME_SAFE
          value: e2e-gcp-major-upgrade-master
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.json
              name: ci-operator-openshift-openshift-ansible
        - name: PREVIOUS_RPM_REPO_BASEURL_REF
          value: https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/release-3.10/.latest-rpms
        - name: RPM_REPO_BASEURL_REF
          value: https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/master/.latest-rpms
        - name: PREVIOUS_IMAGE_ANSIBLE
          value: docker.io/openshift/origin-ansible:v3.10
        - name: PREVIOUS_IMAGE_TAG
          value: v3.10
        image: ci-operator:latest
        name: test
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-major-upgrade-master
          name: job-definition
          subPath: cluster-launch-e2e-upgrade.yaml
        - mountPath: /usr/local/e2e-gcp-cluster-profile
          name: e2e-gcp-major-upgrade-master
      serviceAccountName: ci-operator
      volumes:
      - configMap:
          name: prow-job-cluster-launch-e2e-upgrade
        name: job-definition
      - name: e2e-gcp-major-upgrade-master
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
    trigger: ((?m)^/test( all| gcp-major-upgrade),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    - dockerless-build-temporary
    context: ci/prow/gcp-ha
    decorate: true
    name: pull-ci-openshift-openshift-ansible-e2e-gcp-ha
    rerun_command: /test gcp-ha
    skip_cloning: true
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -e
          export RPM_REPO="$( curl -q "${RPM_REPO_BASEURL_REF}" 2>/dev/null)"
          ci-operator \
            --artifact-dir=$(ARTIFACTS) \
            --secret-dir=/usr/local/e2e-gcp-cluster-profile --template=/usr/local/e2e-gcp \
            --target=e2e-gcp
        env:
        - name: TEST_FOCUS
          value: Suite:openshift/conformance/parallel
        - name: JOB_NAME_SAFE
          value: e2e-gcp
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.json
              name: ci-operator-openshift-openshift-ansible
        - name: RPM_REPO_BASEURL_REF
          value: https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/master/.latest-rpms
        image: ci-operator:latest
        name: test
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp
          name: job-definition
          subPath: cluster-launch-e2e.yaml
        - mountPath: /usr/local/e2e-gcp-cluster-profile
          name: cluster-profile
      serviceAccountName: ci-operator
      volumes:
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp-ha
    trigger: ((?m)^/test( all| gcp-ha),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    - dockerless-build-temporary
    context: ci/prow/launch-gcp
    decorate: true
    name: pull-ci-openshift-openshift-ansible-launch-gcp
    rerun_command: /test launch-gcp
    skip_cloning: true
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -e
          export RPM_REPO="$( curl -q "${RPM_REPO_BASEURL_REF}" 2>/dev/null)"
          ci-operator \
            --artifact-dir=$(ARTIFACTS) \
            --secret-dir=/usr/local/e2e-gcp-cluster-profile --template=/usr/local/e2e-gcp \
            --target=e2e-gcp
        env:
        - name: TEST_COMMAND
          value: sleep 7200 & wait
        - name: JOB_NAME_SAFE
          value: e2e-gcp
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.json
              name: ci-operator-openshift-openshift-ansible
        - name: RPM_REPO_BASEURL_REF
          value: https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/master/.latest-rpms
        image: ci-operator:latest
        name: test
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp
          name: job-definition
          subPath: cluster-launch-e2e.yaml
        - mountPath: /usr/local/e2e-gcp-cluster-profile
          name: cluster-profile
      serviceAccountName: ci-operator
      volumes:
      - configMap:
          name: prow-job-cluster-launch-e2e
        name: job-definition
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
    trigger: ((?m)^/test( launch-gcp),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    - dockerless-build-temporary
    context: ci/prow/aws
    decorate: true
    name: pull-ci-openshift-openshift-ansible-e2e-aws
    rerun_command: /test aws
    skip_cloning: true
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -e
          export RPM_REPO_BASEURL="$( curl -q "${RPM_REPO_BASEURL_REF}" 2>/dev/null)"
          ci-operator \
            --artifact-dir=$(ARTIFACTS) \
            --secret-dir=/usr/local/e2e-aws-cluster-profile \
            --template=/usr/local/e2e-aws \
            --target=e2e-aws \
            --give-pr-author-access-to-namespace=true
        env:
        - name: TEST_FOCUS
          value: Suite:openshift/conformance/parallel
        - name: JOB_NAME_SAFE
          value: e2e-aws
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.json
              name: ci-operator-openshift-openshift-ansible
        - name: RPM_REPO_BASEURL_REF
          value: https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/master/.latest-rpms
        image: ci-operator:latest
        name: test
        resources: {}
        volumeMounts:
        - mountPath: /usr/local/e2e-aws
          name: job-definition
          subPath: cluster-launch-e2e-openshift-ansible.yaml
        - mountPath: /usr/local/e2e-aws-cluster-profile
          name: cluster-profile
      serviceAccountName: ci-operator
      volumes:
      - configMap:
          name: prow-job-cluster-launch-e2e-openshift-ansible
        name: job-definition
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
          - configMap:
              name: cluster-profile-aws
    trigger: ((?m)^/test( all| aws),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    context: ci/openshift-jenkins/gcp-ha
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_gce_ha_310
    rerun_command: /test gcp-ha
    trigger: ((?m)^/test gcp-ha,?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    context: ci/openshift-jenkins/gcp-upgrade
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_install_upgrade_gce_310
    rerun_command: /test gcp-upgrade
    skip_report: true
    trigger: ((?m)^/test( all| gcp-upgrade),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - master
    - dockerless-build-temporary
    context: ci/openshift-jenkins/azure
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_azure
    rerun_command: /test azure
    skip_report: true
    trigger: ((?m)^/test( all| azure),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    context: ci/openshift-jenkins/azure
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_azure_310
    rerun_command: /test azure
    skip_report: true
    trigger: ((?m)^/test( all| azure),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - master
    - dockerless-build-temporary
    context: ci/openshift-jenkins/install
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install
    rerun_command: /test install
    trigger: ((?m)^/test( all| install),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    context: ci/openshift-jenkins/install
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_310
    rerun_command: /test install
    trigger: ((?m)^/test( all| install),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.6
    context: ci/openshift-jenkins/install
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_release_36
    rerun_command: /test install
    trigger: ((?m)^/test( all| install),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.7
    context: ci/openshift-jenkins/install
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_release_37
    rerun_command: /test install
    trigger: ((?m)^/test( all| install),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.9
    context: ci/openshift-jenkins/install
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_release_39
    rerun_command: /test install
    trigger: ((?m)^/test( all| install),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    context: ci/openshift-jenkins/upgrade
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_update
    rerun_command: /test upgrade
    skip_report: true
    trigger: ((?m)^/test( upgrade),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.7
    - release-3.8
    - release-3.9
    context: ci/openshift-jenkins/containerized
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_containerized
    rerun_command: /test containerized
    skip_report: true
    trigger: ((?m)^/test( all| containerized),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.10
    context: ci/openshift-jenkins/extended_conformance_install_crio_rpm
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_crio_rpm_310
    rerun_command: /test crio
    skip_report: true
    trigger: ((?m)^/test( all| crio),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.7
    - release-3.8
    - release-3.9
    context: ci/openshift-jenkins/containerized_upgrade
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_update_containerized
    rerun_command: /test containerized-upgrade
    skip_report: true
    trigger: ((?m)^/test( containerized-upgrade),?(\s+|$))
  - agent: jenkins
    always_run: false
    context: ci/openshift-jenkins/install_in_tree
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_in_tree
    rerun_command: /test install-in-tree
    skip_report: true
    trigger: ((?m)^/test install-in-tree,?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.9
    context: ci/openshift-jenkins/system-containers
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_system_containers_39
    rerun_command: /test system-containers
    skip_report: true
    trigger: ((?m)^/test( all| system-containers),?(\s+|$))
  - agent: jenkins
    always_run: true
    branches:
    - release-3.7
    context: ci/openshift-jenkins/system-containers
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_extended_conformance_install_system_containers_37
    rerun_command: /test system-containers
    skip_report: true
    trigger: ((?m)^/test( all| system-containers),?(\s+|$))
  - agent: jenkins
    always_run: false
    branches:
    - release-3.10
    context: ci/openshift-jenkins/launch-gcp
    labels:
      master: ci.openshift.redhat.com
    name: test_pull_request_openshift_ansible_launch_gce_310
    rerun_command: /test launch-gcp
    trigger: ((?m)^/test launch-gcp,?(\s+|$))
