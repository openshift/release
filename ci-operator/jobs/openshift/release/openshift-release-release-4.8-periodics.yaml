periodics:
- agent: kubernetes
  cluster: build01
  decorate: true
  interval: 4h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: promote-release-openshift-machine-os-content-e2e-aws-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
      - --promote
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --image-mirror-push-secret=/etc/push-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.6/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # if the source and destination are identical, do nothing
        export KUBECONFIG=/etc/apici/kubeconfig
        from=$( oc get istag -n "${TAG_NS}" "${TAG_SOURCE}" -o template='{{ .image.metadata.name }}' )
        to=$( oc get istag --ignore-not-found -n ocp "${BRANCH}:${TAG}" -o template='{{ .image.metadata.name }}' )
        unset KUBECONFIG
        if [[ "${from}" == "${to}" ]]; then
          echo "info: ${TAG_NS}/${TAG_SOURCE} matches ocp/${BRANCH}:${TAG}"
          exit 0
        fi
        echo "Will promote ${from}, current is ${to}"

        # error out if the image isn't on quay
        to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@${from}"
        if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "${to_quay}"; then
          echo "error: The source image has not been pushed to quay ${from}"
          exit 1
        fi

        # verify the tests pass
        ci-operator $@

        # also tag the image into the ocp private stream
        oc tag "${to_quay}" "ocp-private/${BRANCH}-priv:${TAG}"
      - ""
      env:
      - name: TAG_NS
        value: rhcos
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.8"
      - name: TAG_SOURCE
        value: machine-os-content:$(BRANCH)
      - name: UNRESOLVED_CONFIG
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          promotion:
            name: "$(BRANCH)"
            namespace: ocp
            additional_images:
              $(TAG): $(TAG)
          build_root:
            image_stream_tag:
              name: release
              namespace: openshift
              tag: golang-1.12
          base_images:
            $(TAG):
              name: $(TAG)
              namespace: rhcos
              tag: "4.8"
          raw_steps:
          - output_image_tag_step:
              from: $(TAG)
              to:
                name: stable
                tag: $(TAG)
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-aws
            steps:
              cluster_profile: aws
              workflow: openshift-e2e-aws
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/push-secret
        name: push-secret
        readOnly: true
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: push-secret
      secret:
        secretName: registry-push-credentials-ci-central
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  decorate: true
  interval: 24h
  labels:
    job-release: "4.8"
  name: promote-release-openshift-machine-os-content-e2e-aws-4.8-s390x
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.6/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # if the source and destination are identical, do nothing
        from=$( oc get istag -n "${TAG_NS}" "${TAG_SOURCE}" -o template='{{ .image.metadata.name }}' )
        to=$( oc get istag --ignore-not-found -n ocp-${ARCH} "${BRANCH}-art-latest-${ARCH}:${TAG}" -o template='{{ .image.metadata.name }}' )
        if [[ "${from}" == "${to}" ]]; then
          echo "info: ${TAG_NS}/${TAG_SOURCE} already in ${BRANCH}-art-latest-${ARCH}:${TAG}"
          exit 0
        fi
        echo "Will promote ${from}, current is ${to}"

        # error out if the image isn't on quay
        to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@${from}"
        if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "${to_quay}"; then
          echo "error: The source image has not been pushed to quay ${from}"
          exit 1
        fi

        # TODO: Enable e2e testing when arch specific CI is available
      env:
      - name: TAG_NS
        value: rhcos
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.8"
      - name: ARCH
        value: s390x
      - name: TAG_SOURCE
        value: machine-os-content:$(BRANCH)-$(ARCH)
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  decorate: true
  interval: 24h
  labels:
    job-release: "4.8"
  name: promote-release-openshift-machine-os-content-e2e-aws-4.8-ppc64le
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.6/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # if the source and destination are identical, do nothing
        from=$( oc get istag -n "${TAG_NS}" "${TAG_SOURCE}" -o template='{{ .image.metadata.name }}' )
        to=$( oc get istag --ignore-not-found -n ocp-${ARCH} "${BRANCH}-art-latest-${ARCH}:${TAG}" -o template='{{ .image.metadata.name }}' )
        if [[ "${from}" == "${to}" ]]; then
          echo "info: ${TAG_NS}/${TAG_SOURCE} already in ${BRANCH}-art-latest-${ARCH}:${TAG}"
          exit 0
        fi
        echo "Will promote ${from}, current is ${to}"

        # error out if the image isn't on quay
        to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@${from}"
        if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "${to_quay}"; then
          echo "error: The source image has not been pushed to quay ${from}"
          exit 1
        fi

        # TODO: Enable e2e testing when arch specific CI is available
      env:
      - name: TAG_NS
        value: rhcos
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.8"
      - name: ARCH
        value: ppc64le
      - name: TAG_SOURCE
        value: machine-os-content:$(BRANCH)-$(ARCH)
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 0,12 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-remote-libvirt-ppc64le-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.185.14
      - name: BASTION_SVC_0_2_IP
        value: 172.30.68.38
      - name: BASTION_SVC_0_3_IP
        value: 172.30.83.172
      - name: BASTION_SVC_1_0_IP
        value: 172.30.254.137
      - name: BASTION_SVC_1_1_IP
        value: 172.30.70.187
      - name: BASTION_SVC_1_2_IP
        value: 172.30.114.129
      - name: BASTION_SVC_1_3_IP
        value: 172.30.131.153
      - name: BASTION_SVC_IP
        value: 172.30.185.48
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: libvirt-ppc64le
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: TEST_COMMAND
        value: |
          # these tests are not able to run in CI due to
          # missing test image dependencies.  They must be
          # run manually
          cat > invert_excluded.py <<EOSCRIPT
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          chmod +x invert_excluded.py
          cat > excluded_tests <<EOEXCLUDE
            "[sig-api-machinery] Servers with support for Table transformation should return chunks of table results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-api-machinery] Servers with support for Table transformation should return generic metadata details across all namespaces for nodes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when tagging images should successfully tag the deployed image [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app  should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app  should succeed with an imagestream [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc debug ensure it works with image streams [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc observe works as expected [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-imageregistry][Feature:ImageAppend] Image append should create images by appending them [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel]"
            "[sig-network] Internal connectivity for TCP and UDP on ports 9000-9999 is allowed [Suite:openshift/conformance/parallel]"
            "[sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for multiple endpoint-Services with same selector [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service(hostNetwork): udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should support basic nodePort: udp functionality [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI FSGroupPolicy [LinuxOnly] should not modify fsGroup if fsGroupPolicy=None [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Services should be able to create a functioning NodePort service [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
          EOEXCLUDE
          export PATH=/usr/libexec/origin:$PATH
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" TEST_UPGRADE_OPTIONS="--from-repository=quay.io/multi-arch/community-e2e-images" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 4,16 * * *
  decorate: true
  labels:
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-remote-libvirt-s390x-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.60.61
      - name: BASTION_SVC_0_2_IP
        value: 172.30.135.156
      - name: BASTION_SVC_0_3_IP
        value: 172.30.63.176
      - name: BASTION_SVC_0_4_IP
        value: 172.30.62.128
      - name: BASTION_SVC_1_0_IP
        value: 172.30.28.119
      - name: BASTION_SVC_1_1_IP
        value: 172.30.227.115
      - name: BASTION_SVC_1_2_IP
        value: 172.30.210.45
      - name: BASTION_SVC_1_3_IP
        value: 172.30.198.47
      - name: BASTION_SVC_1_4_IP
        value: 172.30.220.83
      - name: BASTION_SVC_IP
        value: 172.30.20.161
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: TEST_COMMAND
        value: |
          # these tests are not able to run in CI due to
          # missing test image dependencies.  They must be
          # run manually
          cat > invert_excluded.py <<EOSCRIPT
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          chmod +x invert_excluded.py
          cat > excluded_tests <<EOEXCLUDE
            "[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with terminating scopes through scope selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-api-machinery] Servers with support for Table transformation should return chunks of table results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-api-machinery] Servers with support for Table transformation should return generic metadata details across all namespaces for nodes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when run iteratively should immediately start a new deployment [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when tagging images should successfully tag the deployed image [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] clone repository using git:// protocol  should clone using git:// if no proxy is configured [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app  should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app  should succeed with an imagestream [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc debug ensure it works with image streams [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc observe works as expected [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel]"
            "[sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for multiple endpoint-Services with same selector [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service(hostNetwork): udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should support basic nodePort: udp functionality [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
          EOEXCLUDE
          export PATH=/usr/libexec/origin:$PATH
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" TEST_UPGRADE_OPTIONS="--from-repository=quay.io/multi-arch/community-e2e-images" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: release-4.8
    org: openshift
    repo: origin
    workdir: true
  interval: 2h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: promote-release-openshift-okd-machine-os-content-e2e-aws-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # fetch binaries and configure working env, prow doesn't allow init containers or a second container
        dir=$(ARTIFACTS)/ostree
        mkdir -p "${dir}"
        export PATH=$PATH:/tmp/bin
        export HOME=/tmp
        mkdir $HOME/.docker/
        cp /usr/local/pull-secret/.dockerconfigjson $HOME/.docker/config.json
        mkdir $HOME/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.6/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 2>/dev/null >/tmp/bin/jq
        chmod ug+x $HOME/bin/oc $HOME/bin/jq

        # guard against starting if no okd stream exists yet
        if ! oc get istag -n ${TAG_NS} ${BRANCH}:${TAG}; then
          echo "No build possible, no image stream"
          exit 0
        fi

        # populate the base_sha in job spec so we don't build something different
        origin_artifacts_id="$( oc get istag -n ${TAG_NS} ${BRANCH}:artifacts --template '{{ .image.metadata.name }}' )"
        origin_machine_config_operator_id="$( oc get istag -n ${TAG_NS} ${BRANCH}:machine-config-operator --template '{{ .image.metadata.name }}' )"
        # export JOB_SPEC="$( echo "${JOB_SPEC}" | jq -r ".extra_refs[0].base_sha = \"${origin_commit_id}\"" )"

        # fetch fcos release info and check whether we've already built this image
        stream=next-devel
        build_url="https://builds.coreos.fedoraproject.org/prod/streams/${stream}/builds"
        curl "${build_url}/builds.json" 2>/dev/null >${dir}/builds.json
        build_id="$( <"${dir}/builds.json" jq -r '.builds[0].id' )"
        base_url="${build_url}/${build_id}/x86_64"
        curl "${base_url}/meta.json" 2>/dev/null >${dir}/meta.json
        tar_url="${base_url}/$( <${dir}/meta.json jq -r .images.ostree.path )"
        commit_id="$( <${dir}/meta.json jq -r '."ostree-commit"' )"
        ostree_ref="fedora/x86_64/coreos/${stream}"

        # Build a semantic version as best we can from the build id, dropping any other
        # segments. Each version of machine-os-content is responsible for setting a
        # semver and this is only a workaround for now.
        if [[ ! "${build_id}" =~ ^(([0-9]+)\.)(([0-9]+)\.)?(([0-9]+)($|\.))? ]]; then
          echo "Build ID did not contain at least one major version"
          exit 1
        fi
        build_semver="${BASH_REMATCH[1]}"
        if [[ -n ${BASH_REMATCH[4]} ]]; then
          build_semver+="${BASH_REMATCH[3]}"
        else
          build_semver+="0."
        fi
        if [[ -n "${BASH_REMATCH[6]}" ]]; then
          build_semver+="${BASH_REMATCH[6]}"
        else
          build_semver+="0"
        fi

        # compare the latest image we have built against the potential candidate
        latest="$( oc get istag -n ${TAG_NS} ${BRANCH}:${TAG} --template '{{ index .image.dockerImageMetadata.Config.Labels "version" }} {{ index .image.dockerImageMetadata.Config.Labels "id-artifacts" }} {{ index .image.dockerImageMetadata.Config.Labels "id-machine-config-operator-rpms" }}' )"
        candidate="${build_id} ${origin_artifacts_id} ${origin_machine_config_operator_id}"
        echo "Comparing existing '$latest' against latest '$candidate'"
        if [[ "${latest}" == "${candidate}" ]]; then
          echo "No build necessary, content is up to date"
          exit 0
        fi

        # create namespace and craft a release image without the machine-os-content
        namespace="ci-op-$( echo "${JOB_NAME}-${BUILD_ID}" | md5sum -t | cut -c 1-8 )"
        oc registry login > /dev/null
        oc new-project ${namespace} > /dev/null
        oc policy add-role-to-group system:image-puller -n ${namespace} system:unauthenticated system:authenticated

        # initial import
        ci-operator $@ --target=[images] --namespace=${namespace}

        # force build from https://github.com/openshift/okd-machine-os master
        function build {
          oc -n ${namespace} create -f $1 >/dev/null
          while true; do
            oc -n ${namespace} logs -f build/$2 || true
            phase=$( oc -n ${namespace} get build/$2 -o 'jsonpath={.status.phase}' )
            if [[ "${phase}" == "Failed" || "${phase}" == "Cancelled" || "${phase}" == "Error" ]]; then
              oc -n ${namespace} describe build/$2
              exit 1
            fi
            if [[ "${phase}" == "Complete" ]]; then
              break
            fi
            sleep 5
          done
        }

        cat <<EOF > ${dir}/build.yaml
        kind: Build
        apiVersion: build.openshift.io/v1
        metadata:
          name: machine-os-content
        spec:
          output:
            to:
              kind: ImageStreamTag
              name: pipeline:machine-os-content
            imageLabels:
              - name: "version"
                value: "${build_id}"
              - name: "id-artifacts"
                value: "${origin_artifacts_id}"
              - name: "id-machine-config-operator-rpms"
                value: "${origin_machine_config_operator_id}"
              - name: "io.openshift.build.versions"
                value: "machine-os=${build_semver}"
              - name: "io.openshift.build.version-display-names"
                value: "machine-os=Fedora CoreOS"
          source:
            type: Git
            git:
              uri: 'https://github.com/openshift/okd-machine-os'
              ref: master
          strategy:
            dockerStrategy:
            type: Docker
        EOF
        oc -n ${namespace} create is machine-os-content >/dev/null
        build ${dir}/build.yaml machine-os-content

        # debug output
        oc describe -n ${namespace} istag/pipeline:machine-os-content

        # run promotion test
        ci-operator $@ --promote --namespace=${namespace}
      env:
      - name: TAG_NS
        value: origin
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.8"
      - name: TAG_SOURCE
        value: $(TAG):$(BRANCH)
      - name: UNRESOLVED_CONFIG
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: origin
          promotion:
            name: "$(BRANCH)"
            namespace: origin
            additional_images:
              $(TAG): $(TAG)
          build_root:
            image_stream_tag:
              name: release
              namespace: openshift
              tag: golang-1.13
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-aws
            steps:
              cluster_profile: aws
              workflow: openshift-e2e-aws
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-old-rhcos-e2e-aws-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -exuo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        export HOME=/tmp
        mkdir $HOME/.docker/
        cp /usr/local/pull-secret/.dockerconfigjson $HOME/.docker/config.json
        mkdir $HOME/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.6/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x $HOME/bin/oc

        # create namespace and craft a release image without the machine operator
        namespace="ci-op-$( echo "${JOB_NAME}-${BUILD_ID}" | md5sum -t | cut -c 1-8 )"
        oc registry login
        oc new-project ${namespace}
        oc create is --lookup-local -n "${namespace}" release
        oc create is --lookup-local -n "${namespace}" stable-initial
        RELEASE_REPO=$( oc get is -n "${namespace}" release -o 'jsonpath={.status.publicDockerImageRepository}' )
        INITIAL_REPO=$( oc get is -n "${namespace}" stable-initial -o 'jsonpath={.status.publicDockerImageRepository}' )
        export RELEASE_IMAGE_INITIAL=registry.ci.openshift.org/ocp/release:$(FROM_BRANCH)
        export RELEASE_IMAGE_LATEST=${RELEASE_REPO}:upgrade
        export IMAGE_TESTS=${INITIAL_REPO}:tests # use the older version of the payload
        oc policy add-role-to-group system:image-puller -n ${namespace} system:unauthenticated system:authenticated
        oc adm release new --from-release=registry.ci.openshift.org/ocp/release:$(BRANCH) \
          --to-image=${RELEASE_IMAGE_LATEST} \
          --exclude=machine-config-operator

        # execute the test
        ci-operator $@ --namespace=${namespace}
      - ""
      env:
      - name: FROM_BRANCH
        value: "4.7"
      - name: BRANCH
        value: 4.8-ci
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "none" # don't import anything to avoid a race between 4.7 latest and the chosen version
            namespace: ocp
          build_root:
            image_stream_tag:
              name: release
              namespace: openshift
              tag: golang-1.12
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: |
              TEST_SUITE=all run-upgrade-tests
              TEST_SUITE=openshift/conformance/parallel TEST_UNSUPPORTED_ALLOW_VERSION_SKEW=1 run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      - name: JOB_NAME_SAFE
        value: e2e-aws-upgrade
      - name: TEST_COMMAND
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-sdn-multitenant-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-sdn-multitenant-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_NETWORK_MANIFEST
        value: |
          apiVersion: operator.openshift.io/v1
          kind: Network
          metadata:
            name: cluster
          spec:
            defaultNetwork:
              type: OpenShiftSDN
              openshiftSDNConfig:
                mode: Multitenant
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-multitenant
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-sdn-multitenant
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-sdn-multitenant-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-ovn-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-ovn-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-ovn-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-gcp-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-calico-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-calico-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: calico
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-calico
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-calico
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-calico-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-rt-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-gcp-rt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: rt
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-rt
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-rt
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-rt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-ovn-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-azure-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  decorate: true
  interval: 12h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-azure-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-azure-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-fips-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-azure-fips-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure-fips
      - --template=/usr/local/e2e-azure-fips
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure-fips
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-fips-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure-fips
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-fips-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-fips-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-fips
      - --template=/usr/local/e2e-aws-fips
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-fips
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-fips-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-fips
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-metal-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-metal-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-metal
      - --template=/usr/local/e2e-metal
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: metal
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-metal
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-metal-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-metal
        name: job-definition
        subPath: cluster-launch-installer-metal-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-metal-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-metal-serial-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-metal-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-metal-serial
      - --template=/usr/local/e2e-metal-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: metal
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-metal-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-metal-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-metal-serial
        name: job-definition
        subPath: cluster-launch-installer-metal-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-metal-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-serial-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-azure-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure-serial
      - --template=/usr/local/e2e-azure-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-gcp-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-gcp-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-fips-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-gcp-fips-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp-fips
      - --template=/usr/local/e2e-gcp-fips
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-fips
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-fips-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-fips
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-fips-serial-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-azure-fips-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure-fips-serial
      - --template=/usr/local/e2e-azure-fips-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure-fips-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-fips-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure-fips-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-fips-serial-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-fips-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-fips-serial
      - --template=/usr/local/e2e-aws-fips-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-fips-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-fips-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-fips-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-serial-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-gcp-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp-serial
      - --template=/usr/local/e2e-gcp-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-fips-serial-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-gcp-fips-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp-fips-serial
      - --template=/usr/local/e2e-gcp-fips-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-fips-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-fips-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-fips-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 8h
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-sdn-network-stress-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-sdn-network-stress-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-sdn-network-stress
      - --template=/usr/local/e2e-aws-sdn-network-stress
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-sdn-network-stress
            commands: TEST_SUITE=openshift/network/stress run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-sdn-network-stress
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/network/stress run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-sdn-network-stress-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-sdn-network-stress
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-okd-installer-e2e-aws-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/origin/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: origin
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-compact-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-shared-vpc-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: shared-vpc
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-shared-vpc-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-gcp-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: shared-vpc
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-shared-vpc-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-azure-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: shared-vpc
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-compact-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-gcp-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-compact-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-azure-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-disruptive-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-disruptive-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-disruptive
      - --template=/usr/local/e2e-aws-disruptive
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: setup_ssh_bastion; TEST_SUITE=openshift/disruptive run-tests; TEST_SUITE=openshift/conformance/parallel
              run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-disruptive
      - name: TEST_COMMAND
        value: setup_ssh_bastion; TEST_SUITE=openshift/disruptive run-tests; TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-disruptive-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-disruptive
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-env: aws
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-serial-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-serial
      - --template=/usr/local/e2e-aws-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-env: gcp
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-serial-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-gcp-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp-serial
      - --template=/usr/local/e2e-gcp-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-console-aws-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-console-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-console
      - --template=/usr/local/e2e-aws-console
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-console
            commands: ./test-prow-e2e.sh release
            openshift_installer_custom_test_image:
              from: stable:console-tests
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-console
      - name: TEST_COMMAND
        value: ./test-prow-e2e.sh release
      - name: TEST_IMAGESTREAM_TAG
        value: stable:console-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-console-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-console
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-serial-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-serial
      - --template=/usr/local/e2e-aws-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-upi-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-upi-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-upi
      - --template=/usr/local/e2e-aws-upi
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer_upi:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer_upi:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-upi
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upi-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upi
        name: job-definition
        subPath: cluster-launch-installer-upi-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-upi-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
    release.openshift.io/verify: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-4.5-to-4.6-to-4.7-to-4.8-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -exuo pipefail

        data=$(ARTIFACTS)/release.json

        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.5.0 <4.6.0-0' > ${data}; then
          echo "error: Could not find an initial version"
          exit 1
        fi
        export RELEASE_IMAGE_INITIAL=$( python -c 'from __future__ import print_function; import json,sys; print(json.load(open(sys.argv[1], "r"))["pullSpec"])' "${data}" )

        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.6.0 <4.7.0-0' > ${data}; then
          echo "error: Could not find a middle version"
          exit 1
        fi
        next_0=$( python -c 'from __future__ import print_function; import json,sys; print(json.load(open(sys.argv[1], "r"))["pullSpec"])' "${data}" )

        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.7.0-0.nightly/latest > ${data}; then
          echo "error: Could not find newest version"
          exit 1
        fi
        next_1=$( python -c 'from __future__ import print_function; import json,sys; print(json.load(open(sys.argv[1], "r"))["pullSpec"])' "${data}" )

        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.8.0-0.ci/latest > ${data}; then
          echo "error: Could not find newest version"
          exit 1
        fi
        next_2=$( python -c 'from __future__ import print_function; import json,sys; print(json.load(open(sys.argv[1], "r"))["pullSpec"])' "${data}" )

        export RELEASE_IMAGE_LATEST=${next_2}
        export CONFIG_SPEC="${CONFIG_SPEC/RELEASE_IMAGES/$next_0,$next_1,$next_2}"

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: |
              TEST_SUITE=all IMAGE=RELEASE_IMAGES run-upgrade-tests
              TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
    release.openshift.io/verify: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-4.7-stable-to-4.8-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-aws-upgrade-cluster-profile
      - --target=e2e-aws-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: UNRESOLVED_CONFIG
        value: |
          base_images:
            base:
              name: "4.8"
              namespace: ocp
              tag: base
          releases:
            initial:
              prerelease:
                product: ocp
                version_bounds:
                  lower: "4.7.0"
                  upper: "4.8.0-0"
            latest:
              candidate:
                product: ocp
                stream: ci
                version: "4.8"
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-aws-upgrade
            steps:
              cluster_profile: aws
              env:
                TEST_TYPE: upgrade-conformance
              workflow: openshift-upgrade-aws
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-rollback-4.7-to-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_INITIAL
      - name: RELEASE_IMAGE_LATEST
      - name: CLUSTER_TYPE
        value: aws
      - name: UNRESOLVED_CONFIG
        value: |
          base_images:
            base:
              name: "4.8"
              namespace: ocp
              tag: base
          releases:
            initial:
              prerelease:
                product: ocp
                version_bounds:
                  lower: "4.7.0"
                  upper: "4.8.0-0"
            latest:
              candidate:
                product: ocp
                stream: ci
                version: "4.8"
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            steps:
              cluster_profile: "$(CLUSTER_TYPE)"
              env:
                TEST_TYPE: upgrade
                TEST_UPGRADE_OPTIONS: "abort-at=99"
                DELETE_MC: "false"
              workflow: openshift-upgrade-aws
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-rollback-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all TEST_UPGRADE_OPTIONS=abort-at=random run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: '@yearly'
  decorate: true
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
    release.openshift.io/verify: "true"
  name: release-openshift-origin-installer-e2e-aws-ovn-upgrade-4.7-stable-to-4.8-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-aws-upgrade-cluster-profile
      - --target=e2e-aws-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: UNRESOLVED_CONFIG
        value: |
          base_images:
            base:
              name: "4.8"
              namespace: ocp
              tag: base
          releases:
            initial:
              prerelease:
                product: ocp
                version_bounds:
                  lower: "4.7.0"
                  upper: "4.8.0-0"
            latest:
              candidate:
                product: ocp
                stream: ci
                version: "4.8"
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-aws-upgrade
            steps:
              cluster_profile: aws
              env:
                TEST_TYPE: upgrade-conformance
              workflow: openshift-upgrade-aws-ovn
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-env: aws
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: canary-release-openshift-origin-installer-e2e-aws-4.8-cnv
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-cnv-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-cnv
      - name: TEST_COMMAND
        value: ENABLE_SSP=true make start && make functest
      - name: TEST_IMAGESTREAM_TAG
        value: stable:hyperconverged-cluster-operator-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cnv-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-env: gcp
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-upgrade-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_INITIAL
      - name: RELEASE_IMAGE_LATEST
      - name: CLUSTER_TYPE
        value: gcp
      - name: BRANCH
        value: "4.8"
      - name: UNRESOLVED_CONFIG
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            steps:
              cluster_profile: $(CLUSTER_TYPE)
              workflow: openshift-upgrade-$(CLUSTER_TYPE)
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-env: azure
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-upgrade-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-azure-upgrade-cluster-profile
      - --target=e2e-azure-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: azure4
      - name: UNRESOLVED_CONFIG
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-azure-upgrade
            steps:
              cluster_profile: "$(CLUSTER_TYPE)"
              workflow: openshift-upgrade-azure
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 2,10,18 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  labels:
    job-env: openstack
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-openstack-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-openstack-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-openstack
      - --template=/usr/local/e2e-openstack
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: openstack-vexxhost
      - name: OPENSTACK_EXTERNAL_NETWORK
        value: public
      - name: OPENSTACK_FLAVOR
        value: v1-standard-4
      - name: OS_CLOUD
        value: openstack
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-openstack
      - name: KURYR_ENABLED
        value: "false"
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-openstack-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-openstack
        name: job-definition
        subPath: cluster-launch-installer-openstack-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            items:
            - key: clouds.yaml
              path: clouds.yaml
            name: cluster-secrets-openstack-vexxhost
        - secret:
            items:
            - key: .awscred
              path: .awscred
            - key: ssh-privatekey
              path: ssh-privatekey
            - key: ssh-publickey
              path: ssh-publickey
            - key: pull-secret
              path: pull-secret
            name: cluster-secrets-openstack
    - configMap:
        name: prow-job-cluster-launch-installer-openstack-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 6,14,22 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  labels:
    job-env: openstack
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-openstack-serial-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-openstack-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-openstack-serial
      - --template=/usr/local/e2e-openstack-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: openstack-vexxhost
      - name: OPENSTACK_EXTERNAL_NETWORK
        value: public
      - name: OPENSTACK_FLAVOR
        value: v1-standard-4
      - name: OS_CLOUD
        value: openstack
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-openstack-serial
      - name: KURYR_ENABLED
        value: "false"
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-openstack-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-openstack-serial
        name: job-definition
        subPath: cluster-launch-installer-openstack-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            items:
            - key: clouds.yaml
              path: clouds.yaml
            name: cluster-secrets-openstack-vexxhost
        - secret:
            items:
            - key: .awscred
              path: .awscred
            - key: ssh-privatekey
              path: ssh-privatekey
            - key: ssh-publickey
              path: ssh-publickey
            - key: pull-secret
              path: pull-secret
            name: cluster-secrets-openstack
    - configMap:
        name: prow-job-cluster-launch-installer-openstack-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-mirrors-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ZZ_TEST
        value: abc
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: mirror
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: |
          patch_image_specs
          TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-metal-compact-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-metal-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-metal
      - --template=/usr/local/e2e-metal
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8-ci
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: metal
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-metal
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-metal-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-metal
        name: job-definition
        subPath: cluster-launch-installer-metal-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-metal-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-cluster-logging-operator-e2e-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-operator-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-operator
      - --template=/usr/local/e2e-operator
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: JOB_NAME_SAFE
        value: e2e-operator
      - name: TEST_COMMAND
        value: FAKE_HOME_DIR=/tmp/home LOG_DIR=/tmp/artifacts/logging-logs ARTIFACT_DIR=/tmp/artifacts/logging-artifacts make test-e2e-olm
      - name: TEST_IMAGESTREAM_TAG
        value: stable:cluster-logging-operator-e2e
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-operator
            commands: FAKE_HOME_DIR=/tmp/home LOG_DIR=/tmp/artifacts/logging-logs ARTIFACT_DIR=/tmp/artifacts/logging-artifacts make test-e2e-olm
            openshift_installer_custom_test_image:
              cluster_profile: aws
              from: stable:cluster-logging-operator-e2e
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-operator-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-operator
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-elasticsearch-operator-e2e-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-operator-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-operator
      - --template=/usr/local/e2e-operator
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: JOB_NAME_SAFE
        value: e2e-operator
      - name: TEST_COMMAND
        value: make test-e2e-olm
      - name: TEST_IMAGESTREAM_TAG
        value: stable:elasticsearch-operator-src
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-operator
            commands: make test-e2e-olm
            openshift_installer_custom_test_image:
              cluster_profile: aws
              from: stable:elasticsearch-operator-src
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-operator-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-operator
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-env: gcp
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-upgrade-4.7-stable-to-4.8-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-gcp-upgrade-cluster-profile
      - --target=e2e-gcp-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: UNRESOLVED_CONFIG
        value: |
          base_images:
            base:
              name: "4.8"
              namespace: ocp
              tag: base
          releases:
            initial:
              prerelease:
                product: ocp
                version_bounds:
                  lower: "4.7.0"
                  upper: "4.8.0-0"
            latest:
              candidate:
                product: ocp
                stream: ci
                version: "4.8"
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-gcp-upgrade
            steps:
              cluster_profile: gcp
              env:
                TEST_TYPE: upgrade-conformance
              workflow: openshift-upgrade-gcp
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      secret:
        secretName: cluster-secrets-gcp
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: '@yearly'
  decorate: true
  labels:
    job-env: gcp
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-ovn-upgrade-4.7-stable-to-4.8-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.7"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      secret:
        secretName: cluster-secrets-gcp
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    job-env: azure
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-upgrade-4.7-stable-to-4.8-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-azure-upgrade-cluster-profile
      - --target=e2e-azure-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: UNRESOLVED_CONFIG
        value: |
          base_images:
            base:
              name: "4.8"
              namespace: ocp
              tag: base
          releases:
            initial:
              prerelease:
                product: ocp
                version_bounds:
                  lower: "4.7.0"
                  upper: "4.8.0-0"
            latest:
              candidate:
                product: ocp
                stream: ci
                version: "4.8"
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-azure-upgrade
            steps:
              cluster_profile: azure4
              env:
                TEST_TYPE: upgrade-conformance
              workflow: openshift-upgrade-azure
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      secret:
        secretName: cluster-secrets-azure4
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: '@yearly'
  decorate: true
  labels:
    job-env: azure
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-ovn-upgrade-4.7-stable-to-4.8-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-azure-upgrade-cluster-profile
      - --target=e2e-azure-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.7"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-azure-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      secret:
        secretName: cluster-secrets-azure4
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-csi-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-aws-csi-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-csi
      - --template=/usr/local/e2e-aws-csi
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws-csi
      - name: TEST_COMMAND
        value: make test-e2e ARTIFACT_DIR=/tmp/artifacts
      - name: TEST_IMAGESTREAM_TAG
        value: stable:aws-ebs-csi-driver-operator-test
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-csi
            commands: make test-e2e ARTIFACT_DIR=/tmp/artifacts
            openshift_installer_custom_test_image:
              cluster_profile: aws
              from: stable:aws-ebs-csi-driver-operator-test
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-csi-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-csi
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  decoration_config:
    skip_cloning: true
  labels:
    job-env: ovirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-ovirt-upgrade-4.7-stable-to-4.8-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/etc/boskos
      - --secret-dir=/usr/local/e2e-ovirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-ovirt
      - --template=/usr/local/e2e-ovirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.7"
      - name: CLUSTER_TYPE
        value: ovirt
      - name: LEASE_TYPE
        value: conformance
      - name: INSTALL_INITIAL_RELEASE
        value: "true"
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      - name: JOB_NAME_SAFE
        value: e2e-ovirt
      - name: TEST_COMMAND
        value: TEST_SUITE=all run-upgrade-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-ovirt-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-ovirt
        name: job-definition
        subPath: cluster-launch-installer-ovirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-ovirt
        - secret:
            name: ovirt-infra-secrets
    - configMap:
        name: prow-job-cluster-launch-installer-ovirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: build01
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  interval: 8h
  labels:
    ci-operator.openshift.io/variant: ocp-4.8
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-osd-gcp-nightly-4.8
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials
      - name: CONFIGS
        value: gcp,prod,e2e-suite
      - name: INSTALL_LATEST_NIGHTLY
        value: "4.8"
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
- agent: kubernetes
  cluster: build01
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  interval: 8h
  labels:
    ci-operator.openshift.io/variant: ocp-4.8
    job-release: "4.8"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-osd-aws-nightly-4.8
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials
      - name: CONFIGS
        value: aws,prod,e2e-suite
      - name: INSTALL_LATEST_NIGHTLY
        value: "4.8"
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 0,12 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-remote-libvirt-image-ecosystem-ppc64le-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/image-ecosystem-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.185.14
      - name: BASTION_SVC_0_2_IP
        value: 172.30.68.38
      - name: BASTION_SVC_0_3_IP
        value: 172.30.83.172
      - name: BASTION_SVC_1_0_IP
        value: 172.30.254.137
      - name: BASTION_SVC_1_1_IP
        value: 172.30.70.187
      - name: BASTION_SVC_1_2_IP
        value: 172.30.114.129
      - name: BASTION_SVC_1_3_IP
        value: 172.30.131.153
      - name: BASTION_SVC_IP
        value: 172.30.185.48
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: image-ecosystem
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/image-ecosystem run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/image-ecosystem-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 6,18 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-remote-libvirt-image-ecosystem-s390x-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/image-ecosystem-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.60.61
      - name: BASTION_SVC_0_2_IP
        value: 172.30.135.156
      - name: BASTION_SVC_0_3_IP
        value: 172.30.63.176
      - name: BASTION_SVC_0_4_IP
        value: 172.30.62.128
      - name: BASTION_SVC_1_0_IP
        value: 172.30.28.119
      - name: BASTION_SVC_1_1_IP
        value: 172.30.227.115
      - name: BASTION_SVC_1_2_IP
        value: 172.30.210.45
      - name: BASTION_SVC_1_3_IP
        value: 172.30.198.47
      - name: BASTION_SVC_1_4_IP
        value: 172.30.220.83
      - name: BASTION_SVC_IP
        value: 172.30.20.161
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: image-ecosystem
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/image-ecosystem run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/image-ecosystem-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 0,12 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-remote-libvirt-jenkins-e2e-ppc64le-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/jenkins-e2e-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.185.14
      - name: BASTION_SVC_0_2_IP
        value: 172.30.68.38
      - name: BASTION_SVC_0_3_IP
        value: 172.30.83.172
      - name: BASTION_SVC_1_0_IP
        value: 172.30.254.137
      - name: BASTION_SVC_1_1_IP
        value: 172.30.70.187
      - name: BASTION_SVC_1_2_IP
        value: 172.30.114.129
      - name: BASTION_SVC_1_3_IP
        value: 172.30.131.153
      - name: BASTION_SVC_IP
        value: 172.30.185.48
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: jenkins-e2e
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/jenkins-e2e-rhel-only run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/jenkins-e2e-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 6,18 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-remote-libvirt-jenkins-e2e-s390x-4.8
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/jenkins-e2e-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.60.61
      - name: BASTION_SVC_0_2_IP
        value: 172.30.135.156
      - name: BASTION_SVC_0_3_IP
        value: 172.30.63.176
      - name: BASTION_SVC_0_4_IP
        value: 172.30.62.128
      - name: BASTION_SVC_1_0_IP
        value: 172.30.28.119
      - name: BASTION_SVC_1_1_IP
        value: 172.30.227.115
      - name: BASTION_SVC_1_2_IP
        value: 172.30.210.45
      - name: BASTION_SVC_1_3_IP
        value: 172.30.198.47
      - name: BASTION_SVC_1_4_IP
        value: 172.30.220.83
      - name: BASTION_SVC_IP
        value: 172.30.20.161
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: jenkins-e2e
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/jenkins-e2e-rhel-only run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/jenkins-e2e-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
