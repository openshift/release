periodics:
- agent: kubernetes
  cron: 0 0 * * 1
  decorate: true
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: endurance-upgrade-aws-4.1
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        ci-operator --artifact-dir=$(ARTIFACTS) \
          --secret-dir=/usr/local/pull-secret \
          --secret-dir=/usr/local/ci-credentials \
          --secret-dir=/usr/local/endurance-cluster-credentials-aws \
          --template=/usr/local/endurance-test/endurance-test.yaml \
          --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME) \
          --target=endurance-test
      env:
      - name: BRANCH
        value: "4.1"
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.1-ci
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              requests:
                cpu: 10m
          tests:
          - as: endurance-upgrade-$(CLUSTER_TYPE)
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      - name: JOB_NAME_SAFE
        value: endurance-aws-upgrade
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/endurance-test
        name: job-definition
        subPath: endurance-test.yaml
      - mountPath: /usr/local/ci-credentials
        name: ci-credentials
      - mountPath: /usr/local/pull-secret
        name: pull-secret
      - mountPath: /usr/local/endurance-cluster-credentials-aws
        name: endurance-cluster-credentials-aws
    serviceAccountName: ci-operator
    volumes:
    - configMap:
        name: prow-job-endurance-test
      name: job-definition
    - name: ci-credentials
      secret:
        secretName: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: endurance-cluster-credentials-aws
      secret:
        secretName: endurance-cluster-credentials-aws
- agent: kubernetes
  cron: 0 12 * * 1-5
  decorate: true
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: endurance-e2e-aws-4.1
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        ci-operator --artifact-dir=$(ARTIFACTS) \
          --secret-dir=/usr/local/pull-secret \
          --secret-dir=/usr/local/endurance-cluster-credentials-aws \
          --template=/usr/local/endurance-test/endurance-test.yaml \
          --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME) \
          --target=endurance-test
      env:
      - name: BRANCH
        value: "4.1"
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.1-ci
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              requests:
                cpu: 10m
          tests:
          - as: endurance-e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: false
      - name: JOB_NAME_SAFE
        value: endurance-e2e-aws
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/endurance-test
        name: job-definition
        subPath: endurance-test.yaml
      - mountPath: /usr/local/pull-secret
        name: pull-secret
      - mountPath: /usr/local/endurance-cluster-credentials-aws
        name: endurance-cluster-credentials-aws
    serviceAccountName: ci-operator
    volumes:
    - configMap:
        name: prow-job-endurance-test
      name: job-definition
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: endurance-cluster-credentials-aws
      secret:
        secretName: endurance-cluster-credentials-aws
- agent: kubernetes
  cron: 0 9 * * 1-5
  decorate: true
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: endurance-aws-cluster-maintenance-4.1
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - "#!/bin/bash\nset -euo pipefail\n\nexport PATH=$PATH:/tmp/bin\nmkdir /tmp/bin\ncurl
        https://storage.googleapis.com/origin-ci-test/_tools/4.1.0/oc >/tmp/bin/oc
        2>/dev/null\nchmod ug+x /tmp/bin/oc\n\nset +e\nci-operator --artifact-dir=$(ARTIFACTS)
        \\\n  --secret-dir=/usr/local/pull-secret \\\n  --secret-dir=/usr/local/ci-credentials
        \\\n  --secret-dir=/usr/local/endurance-cluster-credentials-aws \\\n  --secret-dir=/usr/local/aws-openshift-llc-account-credentials
        \\\n  --template=/usr/local/endurance-install/endurance-install.yaml \\\n
        \ --target=endurance-install \\\n  --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
        | tee /tmp/ci-operator.log      \nset -e\nnamespace=$(grep \"Using namespace\"
        /tmp/ci-operator.log | awk '{print $NF}')\n\n# copy the cluster credentials
        secret that was created in the job namespace, into the ci namespace\n# so
        it is persisted for future runs.\noc get --export secret endurance-cluster-credentials-aws-new
        -n $namespace -o yaml | grep -v namespace: > /tmp/secret.yaml\nsed -i s/endurance-cluster-credentials-aws-new/endurance-cluster-credentials-aws/
        /tmp/secret.yaml\noc apply -f /tmp/secret.yaml -n ci\n"
      env:
      - name: BRANCH
        value: "4.1"
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.1-ci
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: endurance-install-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: false
      - name: JOB_NAME_SAFE
        value: endurance-install-$(CLUSTER_TYPE)
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/endurance-install
        name: job-definition
      - mountPath: /usr/local/pull-secret
        name: pull-secret
      - mountPath: /usr/local/ci-credentials
        name: ci-credentials
      - mountPath: /usr/local/aws-openshift-llc-account-credentials
        name: aws-openshift-llc-account-credentials
      - mountPath: /usr/local/endurance-cluster-credentials-aws
        name: endurance-cluster-credentials-aws
    serviceAccountName: ci-operator
    volumes:
    - configMap:
        name: prow-job-endurance-install
      name: job-definition
    - name: ci-credentials
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: aws-openshift-llc-account-credentials
      secret:
        secretName: aws-openshift-llc-account-credentials
    - name: endurance-cluster-credentials-aws
      secret:
        secretName: endurance-cluster-credentials-aws
- agent: kubernetes
  decorate: true
  interval: 15m
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.2"
  name: release-promote-openshift-machine-os-content-e2e-aws-4.1
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://storage.googleapis.com/origin-ci-test/_tools/4.1.0/oc >/tmp/bin/oc 2>/dev/null
        chmod ug+x /tmp/bin/oc

        # if the source and destination are identical, do nothing
        from=$( oc get istag -n "${TAG_NS}" "${TAG_SOURCE}" -o template='{{ .image.metadata.name }}' )
        to=$( oc get istag -n ocp "${BRANCH}:${TAG}" -o template='{{ .image.metadata.name }}' )
        if [[ "${from}" == "${to}" ]]; then
          echo "info: ${TAG_NS}/${TAG_SOURCE} matches ocp/${BRANCH}:${TAG}"
          exit 0
        fi
        echo "Will promote ${from}, current is ${to}"

        # error out if the image isn't on quay
        to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@${from}"
        if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "${to_quay}"; then
          echo "error: The source image has not been pushed to quay ${from}"
          exit 1
        fi

        # verify the tests pass
        ci-operator --artifact-dir=$(ARTIFACTS) --secret-dir=/usr/local/pull-secret \
          --secret-dir=/usr/local/e2e-aws-cluster-profile --template=/usr/local/e2e-aws \
          --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME) --promote

        # also tag the image into the art-latest stream
        oc tag "${to_quay}" "ocp/${BRANCH}-art-latest:${TAG}"
      env:
      - name: TAG_NS
        value: rhcos
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.1"
      - name: TAG_SOURCE
        value: machine-os-content:$(BRANCH)
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          promotion:
            name: "$(BRANCH)"
            namespace: ocp
            additional_images:
              $(TAG): $(TAG)
          build_root:
            image_stream_tag:
              cluster: https://api.ci.openshift.org
              name: release
              namespace: openshift
              tag: golang-1.11
          base_images:
            $(TAG):
              name: $(TAG)
              namespace: rhcos
              tag: "$(BRANCH)"
          raw_steps:
          - output_image_tag_step:
              from: $(TAG)
              to:
                name: stable
                tag: $(TAG)
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /usr/local/pull-secret
        name: pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.1"
    job-test: e2e
  name: release-openshift-origin-installer-e2e-aws-4.1
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.1-ci
      - name: BRANCH
        value: "4.1"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /usr/local/pull-secret
        name: pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cron: '@yearly'
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.1"
    job-test: e2e
    job-type: upgrade
  name: release-openshift-origin-installer-e2e-aws-upgrade-4.1
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-aws-upgrade-cluster-profile
      - --target=e2e-aws-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_INITIAL
      - name: RELEASE_IMAGE_LATEST
      - name: BRANCH
        value: "4.1"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.1"
    job-test: e2e-serial
  name: release-openshift-origin-installer-e2e-aws-serial-4.1
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-aws-serial-cluster-profile
      - --target=e2e-aws-serial
      - --template=/usr/local/e2e-aws-serial
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.1-ci
      - name: BRANCH
        value: "4.1"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/e2e-aws-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /usr/local/pull-secret
        name: pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.1"
  name: release-openshift-ocp-installer-e2e-aws-4.1
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.1
      - name: BRANCH
        value: "4.1"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /usr/local/pull-secret
        name: pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.1"
  name: release-openshift-ocp-installer-e2e-aws-serial-4.1
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-aws-serial-cluster-profile
      - --target=e2e-aws-serial
      - --template=/usr/local/e2e-aws-serial
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.1
      - name: BRANCH
        value: "4.1"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/e2e-aws-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /usr/local/pull-secret
        name: pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.1"
    job-test: e2e
    job-type: upgrade
    release.openshift.io/verify: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-4.1-to-nightly
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        initial=$(ARTIFACTS)/release-initial.json
        latest=$(ARTIFACTS)/release-latest.json
        if ! curl -X GET -G https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.1.0-0 <4.2.0-0' > ${initial}; then
          echo "error: Could not find a stable version"
          exit 1
        fi
        if ! curl -X GET -G https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.1.0-0.nightly/latest > ${latest}; then
          echo "error: Could not find newest version"
          exit 1
        fi

        from=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${initial}" )
        to=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${latest}" )
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${initial}" )
        export RELEASE_IMAGE_LATEST=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${latest}" )

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://storage.googleapis.com/origin-ci-test/_tools/4.1.0/oc >/tmp/bin/oc 2>/dev/null
        chmod ug+x /tmp/bin/oc

        # annotate the information about this job so that the release controller adds it to the upgrade graph
        oc annotate pj/${PROW_JOB_ID} "release.openshift.io/from-tag=${from}" "release.openshift.io/tag=${to}" "release.openshift.io/source=ocp/$(BRANCH)"

        ci-operator --artifact-dir=$(ARTIFACTS) \
          --secret-dir=/usr/local/pull-secret --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile \
          --target=e2e-$(CLUSTER_TYPE)-upgrade --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
      env:
      - name: BRANCH
        value: "4.1"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.1"
    job-test: e2e
    job-type: upgrade
  name: release-openshift-origin-installer-e2e-aws-upgrade-rollback-4.1
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        initial=$(ARTIFACTS)/release-initial.json
        latest=$(ARTIFACTS)/release-latest.json
        if ! curl -X GET -G https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.1.0-0 <4.2.0-0' > ${initial}; then
          echo "error: Could not find a stable version"
          exit 1
        fi
        if ! curl -X GET -G https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.1.0-0.nightly/latest > ${latest}; then
          echo "error: Could not find newest version"
          exit 1
        fi

        from=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${initial}" )
        to=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${latest}" )
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${initial}" )
        export RELEASE_IMAGE_LATEST=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${latest}" )

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://storage.googleapis.com/origin-ci-test/_tools/4.1.0/oc >/tmp/bin/oc 2>/dev/null
        chmod ug+x /tmp/bin/oc

        # annotate the information about this job so that we can query for it
        oc annotate pj/${PROW_JOB_ID} "release.openshift.io/from-tag=${from}" "release.openshift.io/tag=${to}" "release.openshift.io/source=ocp/$(BRANCH)"

        ci-operator --artifact-dir=$(ARTIFACTS) \
          --secret-dir=/usr/local/pull-secret --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile \
          --target=e2e-$(CLUSTER_TYPE)-upgrade --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
      env:
      - name: BRANCH
        value: "4.1"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all TEST_OPTIONS=abort-at=random run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: ci-pull-credentials
