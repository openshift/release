periodics:
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 15m
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
  name: promote-release-openshift-machine-os-content-e2e-aws-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --template=/usr/local/e2e-aws
      - --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
      - --promote
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # if the source and destination are identical, do nothing
        from=$( oc get istag -n "${TAG_NS}" "${TAG_SOURCE}" -o template='{{ .image.metadata.name }}' )
        to=$( oc get istag --ignore-not-found -n ocp "${BRANCH}:${TAG}" -o template='{{ .image.metadata.name }}' )
        if [[ "${from}" == "${to}" ]]; then
          echo "info: ${TAG_NS}/${TAG_SOURCE} matches ocp/${BRANCH}:${TAG}"
          exit 0
        fi
        echo "Will promote ${from}, current is ${to}"

        # error out if the image isn't on quay
        to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@${from}"
        if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "${to_quay}"; then
          echo "error: The source image has not been pushed to quay ${from}"
          exit 1
        fi

        # verify the tests pass
        ci-operator $@

        # also tag the image into the art-latest stream
        oc tag "${to_quay}" "ocp/${BRANCH}-art-latest:${TAG}"

        # also tag the image into the ocp private stream
        oc tag "${to_quay}" "ocp-private/${BRANCH}-priv:${TAG}"
      - ""
      env:
      - name: TAG_NS
        value: rhcos
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.5"
      - name: TAG_SOURCE
        value: machine-os-content:$(BRANCH)
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          promotion:
            name: "$(BRANCH)"
            namespace: ocp
            additional_images:
              $(TAG): $(TAG)
          build_root:
            image_stream_tag:
              name: release
              namespace: openshift
              tag: golang-1.12
          base_images:
            $(TAG):
              name: $(TAG)
              namespace: rhcos
              tag: "4.5"
          raw_steps:
          - output_image_tag_step:
              from: $(TAG)
              to:
                name: stable
                tag: $(TAG)
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
  name: promote-release-openshift-machine-os-content-e2e-aws-4.5-s390x
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # if the source and destination are identical, do nothing
        from=$( oc get istag -n "${TAG_NS}" "${TAG_SOURCE}" -o template='{{ .image.metadata.name }}' )
        to=$( oc get istag --ignore-not-found -n ocp-${ARCH} "${BRANCH}-art-latest-${ARCH}:${TAG}" -o template='{{ .image.metadata.name }}' )
        if [[ "${from}" == "${to}" ]]; then
          echo "info: ${TAG_NS}/${TAG_SOURCE} already in ${BRANCH}-art-latest-${ARCH}:${TAG}"
          exit 0
        fi
        echo "Will promote ${from}, current is ${to}"

        # error out if the image isn't on quay
        to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@${from}"
        if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "${to_quay}"; then
          echo "error: The source image has not been pushed to quay ${from}"
          exit 1
        fi

        # TODO: Enable e2e testing when arch specific CI is available

        # Tag the image into the art-latest stream for the arch
        oc tag "${to_quay}" "ocp-${ARCH}/${BRANCH}-art-latest-${ARCH}:${TAG}"
      env:
      - name: TAG_NS
        value: rhcos
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.5"
      - name: ARCH
        value: s390x
      - name: TAG_SOURCE
        value: machine-os-content:$(BRANCH)-$(ARCH)
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: "ocp-$(ARCH)"
          promotion:
            name: "$(BRANCH)"
            namespace: "ocp-$(ARCH)"
            additional_images:
              $(TAG): $(TAG)
          build_root:
            image_stream_tag:
              name: release
              namespace: openshift
              tag: golang-1.12
          base_images:
            $(TAG):
              name: $(TAG)
              namespace: rhcos
              tag: "$(BRANCH)-$(ARCH)"
          raw_steps:
          - output_image_tag_step:
              from: $(TAG)
              to:
                name: stable
                tag: $(TAG)
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
  name: promote-release-openshift-machine-os-content-e2e-aws-4.5-ppc64le
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # if the source and destination are identical, do nothing
        from=$( oc get istag -n "${TAG_NS}" "${TAG_SOURCE}" -o template='{{ .image.metadata.name }}' )
        to=$( oc get istag --ignore-not-found -n ocp-${ARCH} "${BRANCH}-art-latest-${ARCH}:${TAG}" -o template='{{ .image.metadata.name }}' )
        if [[ "${from}" == "${to}" ]]; then
          echo "info: ${TAG_NS}/${TAG_SOURCE} already in ${BRANCH}-art-latest-${ARCH}:${TAG}"
          exit 0
        fi
        echo "Will promote ${from}, current is ${to}"

        # error out if the image isn't on quay
        to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@${from}"
        if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "${to_quay}"; then
          echo "error: The source image has not been pushed to quay ${from}"
          exit 1
        fi

        # TODO: Enable e2e testing when arch specific CI is available

        # Tag the image into the art-latest stream for the arch
        oc tag "${to_quay}" "ocp-${ARCH}/${BRANCH}-art-latest-${ARCH}:${TAG}"
      env:
      - name: TAG_NS
        value: rhcos
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.5"
      - name: ARCH
        value: ppc64le
      - name: TAG_SOURCE
        value: machine-os-content:$(BRANCH)-$(ARCH)
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: "ocp-$(ARCH)"
          promotion:
            name: "$(BRANCH)"
            namespace: "ocp-$(ARCH)"
            additional_images:
              $(TAG): $(TAG)
          build_root:
            image_stream_tag:
              name: release
              namespace: openshift
              tag: golang-1.12
          base_images:
            $(TAG):
              name: $(TAG)
              namespace: rhcos
              tag: "$(BRANCH)-$(ARCH)"
          raw_steps:
          - output_image_tag_step:
              from: $(TAG)
              to:
                name: stable
                tag: $(TAG)
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: release-4.5
    org: openshift
    repo: origin
    workdir: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: promote-release-openshift-okd-machine-os-content-e2e-aws-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID) --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --template=/usr/local/e2e-aws
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # fetch binaries and configure working env, prow doesn't allow init containers or a second container
        dir=$(ARTIFACTS)/ostree
        mkdir -p "${dir}"
        export PATH=$PATH:/tmp/bin
        export HOME=/tmp
        mkdir $HOME/.docker/
        cp /usr/local/pull-secret/.dockerconfigjson $HOME/.docker/config.json
        mkdir $HOME/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 2>/dev/null >/tmp/bin/jq
        chmod ug+x $HOME/bin/oc $HOME/bin/jq

        # guard against starting if no okd stream exists yet
        if ! oc get istag -n origin ${BRANCH}:${TAG}; then
          echo "No build possible, no image stream"
          exit 0
        fi

        # populate the base_sha in job spec so we don't build something different
        origin_artifacts_id="$( oc get istag -n ${TAG_NS} ${BRANCH}:artifacts --template '{{ .image.metadata.name }}' )"
        origin_machine_config_operator_rpms_id="$( oc get istag -n ${TAG_NS} ${BRANCH}:machine-config-operator-rpms --template '{{ .image.metadata.name }}' )"
        # export JOB_SPEC="$( echo "${JOB_SPEC}" | jq -r ".extra_refs[0].base_sha = \"${origin_commit_id}\"" )"

        # fetch fcos release info and check whether we've already built this image
        stream=stable
        build_url="https://builds.coreos.fedoraproject.org/prod/streams/${stream}/builds"
        curl "${build_url}/builds.json" 2>/dev/null >${dir}/builds.json
        build_id="$( <"${dir}/builds.json" jq -r '.builds[0].id' )"
        base_url="${build_url}/${build_id}/x86_64"
        curl "${base_url}/meta.json" 2>/dev/null >${dir}/meta.json
        tar_url="${base_url}/$( <${dir}/meta.json jq -r .images.ostree.path )"
        commit_id="$( <${dir}/meta.json jq -r '."ostree-commit"' )"
        ostree_ref="fedora/x86_64/coreos/${stream}"

        # Build a semantic version as best we can from the build id, dropping any other
        # segments. Each version of machine-os-content is responsible for setting a
        # semver and this is only a workaround for now.
        if [[ ! "${build_id}" =~ ^(([0-9]+)\.)(([0-9]+)\.)?(([0-9]+)($|\.))? ]]; then
          echo "Build ID did not contain at least one major version"
          exit 1
        fi
        build_semver="${BASH_REMATCH[1]}"
        if [[ -n ${BASH_REMATCH[4]} ]]; then
          build_semver+="${BASH_REMATCH[3]}"
        else
          build_semver+="0."
        fi
        if [[ -n "${BASH_REMATCH[6]}" ]]; then
          build_semver+="${BASH_REMATCH[6]}"
        else
          build_semver+="0"
        fi


        # compare the latest image we have built against the potential candidate
        latest="$( oc get istag -n origin ${BRANCH}:${TAG} --template '{{ index .image.dockerImageMetadata.Config.Labels "version" }} {{ index .image.dockerImageMetadata.Config.Labels "id-artifacts" }} {{ index .image.dockerImageMetadata.Config.Labels "id-machine-config-operator-rpms" }}' )"
        candidate="${build_id} ${origin_artifacts_id} ${origin_machine_config_operator_rpms_id}"
        echo "Comparing existing '$latest' against latest '$candidate'"
        if [[ "${latest}" == "${candidate}" ]]; then
         echo "No build necessary, content is up to date"
         exit 0
        fi

        curl -L https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64 2>/dev/null >/tmp/bin/yq
        chmod ug+x $HOME/bin/yq

        namespace="ci-op-$( echo "${JOB_NAME}-${BUILD_ID}" | md5sum -t | cut -c 1-8 )"
        echo
        echo "--- Building machine-os-content for ${build_id} in namespace ${namespace}"
        oc registry login >/dev/null

        # run build to do the image imports
        ci-operator $@ --target=[images] --namespace=${namespace}

        function build {
          oc -n ${namespace} create -f $1 >/dev/null
          while true; do
            oc -n ${namespace} logs -f build/$2 || true
            phase=$( oc -n ${namespace} get build/$2 -o 'jsonpath={.status.phase}' )
            if [[ "${phase}" == "Failed" || "${phase}" == "Cancelled" || "${phase}" == "Error" ]]; then
              oc -n ${namespace} describe build/$2
              exit 1
            fi
            if [[ "${phase}" == "Complete" ]]; then
              break
            fi
            sleep 5
          done
        }

        # build an FCoS machine-os-content from the ostree tar, the artifacts rpms, and the latest MCD and cri-o
        cat <<EOF > ${dir}/build.yaml
        kind: Build
        apiVersion: build.openshift.io/v1
        metadata:
          name: machine-os-content
        spec:
          output:
            to:
              kind: ImageStreamTag
              name: pipeline:machine-os-content
          source:
            dockerfile: |
              FROM registry.svc.ci.openshift.org/${TAG_NS}/${BRANCH}@${origin_artifacts_id} AS artifacts
              FROM registry.svc.ci.openshift.org/${TAG_NS}/${BRANCH}@${origin_machine_config_operator_rpms_id} AS machine_config_operator_rpms

              FROM quay.io/coreos-assembler/coreos-assembler:latest AS build
              USER 0
              COPY --from=artifacts /srv/repo/*.rpm /tmp/rpms/
              COPY --from=machine_config_operator_rpms /srv/repo/*.rpm /tmp/rpms/
              RUN set -xeuo pipefail && \\
                  mkdir -p /srv/repo /tmp/working && \\
                  curl -L "${tar_url}" | tar xf - -C /srv/repo/ && \\
                  rm -rf /etc/yum.repos.d && \\
                  ostree --repo=/srv/repo checkout "${ostree_ref}" --subpath /usr/etc/yum.repos.d --user-mode /etc/yum.repos.d && \\
                  ostree --repo=/srv/repo cat "${ostree_ref}" /usr/lib/os-release > /tmp/os-release && \\
                  source /tmp/os-release && \\
                  sed -i 's/enabled=0/enabled=1/g' /etc/yum.repos.d/fedora-updates-testing-modular.repo && \\
                  yum-config-manager --add-repo https://mirror.openshift.com/pub/openshift-v4/dependencies/rpms/4.5-beta && \\
                  rpm-ostree db list --repo /srv/repo "${ostree_ref}" > /tmp/packages && \\
                  dnf clean all && \\
                  dnf --setopt=releasever="\${VERSION_ID}" module enable -y cri-o:1.18 && \\
                  if ! grep -q cri-o /tmp/packages; then yumdownloader -y --setopt=releasever="\${VERSION_ID}" --archlist=x86_64 --disablerepo=* --enablerepo=updates-testing-modular --destdir=/tmp/rpms cri-o && \\
                  yumdownloader -y --setopt=releasever="\${VERSION_ID}" --archlist=x86_64 --enablerepo=* --destdir=/tmp/rpms cri-tools; fi && \\
                  if ! grep -q glusterfs-fuse /tmp/packages; then yumdownloader --setopt=releasever="\${VERSION_ID}" -y --archlist=x86_64 --disablerepo=* --enablerepo=fedora --enablerepo=updates --destdir=/tmp/rpms  glusterfs glusterfs-client-xlators glusterfs-fuse glusterfs-libs psmisc; fi && \\
                  if ! grep -q open-vm-tools /tmp/packages; then yumdownloader --setopt=releasever="\${VERSION_ID}" -y --archlist=x86_64 --disablerepo=* --enablerepo=fedora --enablerepo=updates --destdir=/tmp/rpms  open-vm-tools xmlsec1 xmlsec1-openssl libxslt libtool-ltdl; fi && \\
                  if ! grep -q policycoreutils /tmp/packages; then yumdownloader --setopt=releasever="\${VERSION_ID}" -y --archlist=noarch --disablerepo=* --enablerepo=fedora --enablerepo=updates --destdir=/tmp/rpms policycoreutils; fi && \\
                  cd /tmp/working && \\
                  for i in \$(find /tmp/rpms/ -name *.rpm); do echo "Extracting \$i ..."; rpm2cpio \$i | cpio -div; done && \\
                  mv etc usr/ && mv sbin/* usr/sbin/ && rm -rf sbin/ && \\
                  mkdir -p usr/lib/systemd/system/multi-user.target.wants && \\
                  ln -s usr/lib/systemd/system/vmtoolsd.service usr/lib/systemd/system/multi-user.target.wants/vmtoolsd.service && \\
                  coreos-assembler dev-overlay --repo /srv/repo --rev "${ostree_ref}" --add-tree /tmp/working --output-ref "${ostree_ref}"

              FROM scratch
              COPY --from=build /srv/ /srv/
              LABEL version=${build_id} \\
                    id-artifacts=${origin_artifacts_id} \\
                    id-machine-config-operator-rpms=${origin_machine_config_operator_rpms_id} \\
                    "io.openshift.build.versions=machine-os=${build_semver}" \\
                    "io.openshift.build.version-display-names=machine-os=Fedora CoreOS"
              ENTRYPOINT ["/noentry"]

          strategy:
            dockerStrategy:
            type: Docker
        EOF
        oc -n ${namespace} create is machine-os-content >/dev/null
        build ${dir}/build.yaml machine-os-content

        # debug output
        oc describe -n ${namespace} istag/pipeline:machine-os-content
        # run tests
        ci-operator $@ --target=e2e-aws --promote --namespace=${namespace}
      env:
      - name: TAG_NS
        value: origin
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.5"
      - name: TAG_SOURCE
        value: $(TAG):$(BRANCH)
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: origin
          promotion:
            name: "$(BRANCH)"
            namespace: origin
            additional_images:
              $(TAG): $(TAG)
          build_root:
            image_stream_tag:
              name: release
              namespace: openshift
              tag: golang-1.13
          base_images:
            $(TAG):
              name: $(TAG)
              namespace: origin
              tag: "4.5"
          raw_steps:
          - output_image_tag_step:
              from: $(TAG)
              to:
                name: stable
                tag: $(TAG)
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 12h
  labels:
    ci.openshift.io/release-type: informing
    job-env: remote-libvirt
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-remote-libvirt-s390x-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: ARCH
        value: s390x
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp-s390x/release-s390x:4.5
      - name: BASTION_SVC_IP
        value: 172.30.211.152
      - name: BASTION_SVC_1_IP
        value: 172.30.90.239
      - name: BASTION_SVC_2_IP
        value: 172.30.142.218
      - name: BASTION_SVC_3_IP
        value: 172.30.160.230
      - name: BASTION_SVC_4_IP
        value: 172.30.145.116
      - name: BASTION_SVC
        value: sshd.bastion-z.svc.cluster.local
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: libvirt-s390x
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: TEST_COMMAND
        value: |
          # these tests are not able to run in CI due to
          # missing test image dependencies.  They must be
          # run manually
          cat > invert_excluded.py <<EOSCRIPT
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          chmod +x invert_excluded.py
          cat > excluded_tests <<EOEXCLUDE
            "[Area:Networking] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should allow multicast traffic in namespaces where it is enabled [Suite:openshift/conformance/parallel]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing conflicting status [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router converges when multiple routers are writing status [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should enable openshift-monitoring to pull metrics [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should respond with 503 to unrecognized hosts [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][templates] templateinstance readiness test  should report failed soon after an annotated objects has failed [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds] Multi-stage image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds] Optimized image builds  should succeed [Conformance] [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]"
            "[Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]"
            "[Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution custom [Suite:openshift/conformance/parallel]"
            "[Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution docker [Suite:openshift/conformance/parallel]"
            "[Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution s2i [Suite:openshift/conformance/parallel]"
            "[Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]"
            "[Feature:Builds][Conformance] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance] oc new-app  should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance] oc new-app  should succeed with an imagestream [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in docker build environment variables [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Conformance] buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]"
            "[Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune completed builds based on the successfulBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune failed builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]"
            "[Feature:DeploymentConfig] deploymentconfigs when tagging images [Conformance] should successfully tag the deployed image [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set [Conformance] should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with a trigger used by different containers [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers [Conformance] should run a successful deployment with multiple triggers [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:ImageAppend] Image append should create images by appending them [Suite:openshift/conformance/parallel]"
            "[Feature:ImageExtract] Image extract should extract content from an image [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have a Watchdog alert in firing state [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Prometheus][Conformance] Prometheus when installed on the cluster should have non-Pod host cAdvisor metrics [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Prometheus][Conformance] Prometheus when installed on the cluster should provide ingress metrics [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Prometheus][Conformance] Prometheus when installed on the cluster should report less than two alerts in firing or pending state [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Prometheus][Conformance] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Prometheus][Conformance] Prometheus when installed on the cluster should start and expose a secured proxy and unsecured metrics [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't have failing rules evaluation [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Prometheus][Conformance] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Prometheus][Conformance] Prometheus when installed on the cluster when using openshift-sdn should be able to get the sdn ovs flows [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Prometheus][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [Suite:openshift/conformance/parallel]"
            "[Suite:openshift/oauth/htpasswd] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[Suite:openshift/oauth] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[Suite:openshift/oauth] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]"
            "[cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]"
            "[cli] oc adm must-gather runs successfully with options [Suite:openshift/conformance/parallel]"
            "[cli]oc rsh[Conformance] rsh specific flags should work well when access to a remote shell [Suite:openshift/conformance/parallel/minimal]"
            "[image_ecosystem][mongodb] openshift mongodb image  creating from a template should instantiate the template [Suite:openshift/conformance/parallel]"
            "[job][Conformance] openshift can execute jobs controller should create and run a job in user project [Suite:openshift/conformance/parallel/minimal]"
            "[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] Pods should contain environment variables for services [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] Pods should support pod readiness gates [NodeFeature:PodReadinessGate] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] [sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] Aggregator Should be able to support the 1.10 Sample API Server using the current Aggregator [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when run iteratively should only deploy the last deployment [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when tagging images should successfully tag the deployed image [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with a trigger used by different containers [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with multiple triggers [Suite:openshift/conformance/parallel]"
            "[sig-auth] [Feature:NodeAuthenticator] The kubelet can delegate ServiceAccount tokens to the API server [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-auth] [Feature:NodeAuthenticator] The kubelet's main port 10250 should reject requests with no credentials [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] ReplicationController light Should scale from 1 pod to 2 pods [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] ReplicationController light Should scale from 2 pods to 1 pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-builds][Feature:Builds] Multi-stage image builds  should succeed [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] Optimized image builds  should succeed [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution custom [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution docker [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] forcePull should affect pulling builder images  ForcePull test case execution s2i [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app  should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app  should succeed with an imagestream [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune completed builds based on the successfulBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig  should prune failed builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in docker build environment variables [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc adm must-gather runs successfully with options [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc rsh rsh specific flags should work well when access to a remote shell [Suite:openshift/conformance/parallel]"
            "[sig-cluster-lifecycle] Pods cannot access the /config/master API endpoint [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:ImageEcosystem][mongodb] openshift mongodb image  creating from a template should instantiate the template [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report failed soon after an annotated objects has failed [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-imageregistry][Feature:ImageAppend] Image append should create images by appending them [Suite:openshift/conformance/parallel]"
            "[sig-imageregistry][Feature:ImageExtract] Image extract should extract content from an image [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should have a AlertmanagerReceiversNotConfigured alert in firing state [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should have important platform topology metrics [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should have non-Pod host cAdvisor metrics [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should provide ingress metrics [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should start and expose a secured proxy and unsecured metrics [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster shouldn't have failing rules evaluation [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster when using openshift-sdn should be able to get the sdn ovs flows [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation][Late] Alerts should have a Watchdog alert in firing state the entire cluster run [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation][Late] Alerts shouldn't exceed the 500 series limit of total series sent via telemetry from each cluster [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation][Late] Alerts shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation][sig-builds][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [Suite:openshift/conformance/parallel]"
            "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should pass the gRPC interoperability tests [Suite:openshift/conformance/parallel/minimal]"
            "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should pass the h2spec conformance tests [Suite:openshift/conformance/parallel/minimal]"
            "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should pass the http2 tests [Suite:openshift/conformance/parallel/minimal]"
            "[sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Internal connectivity for TCP and UDP on ports 9000-9999 is allowed [Suite:openshift/conformance/parallel]"
            "[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [Suite:openshift/conformance/parallel] [Suite:k8s] [Skipped:Network/OVNKubernetes]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [Suite:openshift/conformance/parallel] [Suite:k8s] [Skipped:Network/OVNKubernetes]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s] [Skipped:Network/OVNKubernetes]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s] [Skipped:Network/OVNKubernetes]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Suite:openshift/conformance/parallel] [Suite:k8s] [Skipped:azure]"
            "[sig-network] Services should allow pods to hairpin back to themselves through services [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should be able to create a functioning NodePort service [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should be able to switch session affinity for NodePort service [Suite:openshift/conformance/parallel] [Suite:k8s] [Skipped:Network/OVNKubernetes]"
            "[sig-network] Services should be able to switch session affinity for service with type clusterIP [Suite:openshift/conformance/parallel] [Suite:k8s] [Skipped:Network/OVNKubernetes]"
            "[sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Services should have session affinity work for NodePort service [Suite:openshift/conformance/parallel] [Suite:k8s] [Skipped:Network/OVNKubernetes]"
            "[sig-network] Services should have session affinity work for service with type clusterIP [Suite:openshift/conformance/parallel] [Suite:k8s] [Skipped:Network/OVNKubernetes]"
            "[sig-network][Feature:Router] The HAProxy router should enable openshift-monitoring to pull metrics [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should expose a health check on the metrics port [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should expose the profiling endpoints [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should respond with 503 to unrecognized hosts [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Suite:openshift/conformance/parallel]"
            "[sig-operator] an end user use OLM can subscribe to the cockroachdb operator [Suite:openshift/conformance/parallel]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable should create snapshot with defaults [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume without restarting pod if nodeExpansion=off [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should not expand volume if resizingOnDriver=off, resizingOnSC=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI attach test using mock driver should preserve attachment policy when no CSIDriver present [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI volume limit information using mock driver should report attach limit when limit is bigger than 0 [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=true when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=true [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when CSIDriver does not exist [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=false [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=nil [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] GCP Volumes GlusterFS should be mountable [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] GCP Volumes GlusterFS should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] GCP Volumes NFSv3 should be mountable for NFSv3 [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] GCP Volumes NFSv4 should be mountable for NFSv4 [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to create pod by failing to mount volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should create sc, pod, pv, and pvc, read/write to the pv, and delete all created resources [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with defaults [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should create sc, pod, pv, and pvc, read/write to the pv, and delete all created resources [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] subPath should verify container cannot write to subpath readonly volumes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (block volmode)] volumeMode should fail to create pod by failing to mount volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] subPath should verify container cannot write to subpath readonly volumes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should be mountable [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should create sc, pod, pv, and pvc, read/write to the pv, and delete all created resources [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PV and a pre-bound PVC: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and a pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and non-pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs should create a non-pre-bound PV and PVC: test write access  [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 2 PVs and 4 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 3 PVs and 3 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
          EOEXCLUDE
          export PATH=/usr/libexec/origin:$PATH
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-old-rhcos-e2e-aws-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -exuo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        export HOME=/tmp
        mkdir $HOME/.docker/
        cp /usr/local/pull-secret/.dockerconfigjson $HOME/.docker/config.json
        mkdir $HOME/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x $HOME/bin/oc

        # create namespace and craft a release image without the machine operator
        namespace="ci-op-$( echo "${JOB_NAME}-${BUILD_ID}" | md5sum -t | cut -c 1-8 )"
        export RELEASE_IMAGE_INITIAL=registry.svc.ci.openshift.org/ocp/release:$(FROM_BRANCH)
        export RELEASE_IMAGE_LATEST=registry.svc.ci.openshift.org/${namespace}/release:upgrade
        export IMAGE_TESTS=registry.svc.ci.openshift.org/${namespace}/stable-initial:tests # use the older version of the payload
        oc registry login
        oc new-project ${namespace}
        oc policy add-role-to-group system:image-puller -n ${namespace} system:unauthenticated system:authenticated
        oc adm release new --from-release=registry.svc.ci.openshift.org/ocp/release:$(BRANCH) \
          --to-image=registry.svc.ci.openshift.org/${namespace}/release:upgrade \
          --exclude=machine-config-operator

        # execute the test
        ci-operator $@ --namespace=${namespace}
      - ""
      env:
      - name: FROM_BRANCH
        value: "4.4"
      - name: BRANCH
        value: 4.5-ci
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "none" # don't import anything to avoid a race between 4.4 latest and the chosen version
            namespace: ocp
          build_root:
            image_stream_tag:
              name: release
              namespace: openshift
              tag: golang-1.12
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: |
              TEST_SUITE=all run-upgrade-tests
              TEST_SUITE=openshift/conformance/parallel TEST_UNSUPPORTED_ALLOW_VERSION_SKEW=1 run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      - name: JOB_NAME_SAFE
        value: e2e-aws-upgrade
      - name: TEST_COMMAND
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-sdn-multitenant-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-sdn-multitenant-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_NETWORK_MANIFEST
        value: |
          apiVersion: operator.openshift.io/v1
          kind: Network
          metadata:
            name: cluster
          spec:
            defaultNetwork:
              type: OpenShiftSDN
              openshiftSDNConfig:
                mode: Multitenant
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-multitenant
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-sdn-multitenant
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-sdn-multitenant-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-ovn-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-calico-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-calico-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: calico
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-calico
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-calico
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-calico-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-ovn-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: broken
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-ovn-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-gcp-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-rt-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-gcp-rt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: rt
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-rt
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-rt
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-rt-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: broken
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-ovn-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-azure-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 12h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-azure-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-fips-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-azure-fips-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure-fips
      - --template=/usr/local/e2e-azure-fips
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure-fips
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-fips-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-azure-fips
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-fips-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-fips-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-fips
      - --template=/usr/local/e2e-aws-fips
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-fips
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-fips-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-fips
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-proxy-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-proxy-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-proxy
      - --template=/usr/local/e2e-aws-proxy
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: proxy
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-proxy
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-proxy-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-proxy
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-proxy-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-proxy
        name: job-definition
        subPath: cluster-launch-installer-upi-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-upi-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 12h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-metal-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-metal-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-metal
      - --template=/usr/local/e2e-metal
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: metal
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-metal
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-metal-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-metal
        name: job-definition
        subPath: cluster-launch-installer-metal-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-metal-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-metal-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-metal-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-metal-serial
      - --template=/usr/local/e2e-metal-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: metal
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-metal-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-metal-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-metal-serial
        name: job-definition
        subPath: cluster-launch-installer-metal-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-metal-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-azure-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure-serial
      - --template=/usr/local/e2e-azure-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-azure-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-gcp-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 12h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-gcp-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-fips-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-gcp-fips-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp-fips
      - --template=/usr/local/e2e-gcp-fips
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-fips
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-fips-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-gcp-fips
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-fips-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-azure-fips-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure-fips-serial
      - --template=/usr/local/e2e-azure-fips-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure-fips-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-fips-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-azure-fips-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-fips-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-fips-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-fips-serial
      - --template=/usr/local/e2e-aws-fips-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-fips-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-fips-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-fips-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-gcp-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp-serial
      - --template=/usr/local/e2e-gcp-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-gcp-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: '@yearly'
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-fips-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-gcp-fips-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp-fips-serial
      - --template=/usr/local/e2e-gcp-fips-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: fips
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-fips
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-fips-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-fips-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-fips-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-gcp-fips-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 8h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e-network-stress
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-sdn-network-stress-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-sdn-network-stress-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-sdn-network-stress
      - --template=/usr/local/e2e-aws-sdn-network-stress
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-sdn-network-stress
            commands: TEST_SUITE=openshift/network/stress run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-sdn-network-stress
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/network/stress run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-sdn-network-stress-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-sdn-network-stress
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 8h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e-network-stress
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-ovn-network-stress-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-ovn-network-stress-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-ovn-network-stress
      - --template=/usr/local/e2e-aws-ovn-network-stress
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-ovn-network-stress
            commands: TEST_SUITE=openshift/network/stress run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-ovn-network-stress
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/network/stress run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-ovn-network-stress-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-ovn-network-stress
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-okd-installer-e2e-aws-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/origin/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: origin
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-compact-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-shared-vpc-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: shared-vpc
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-shared-vpc-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-gcp-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: shared-vpc
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-shared-vpc-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-azure-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: shared-vpc
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-compact-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-gcp-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-compact-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-azure-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-disruptive-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-disruptive-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-disruptive
      - --template=/usr/local/e2e-aws-disruptive
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: setup_ssh_bastion; TEST_SUITE=openshift/disruptive run-tests; TEST_SUITE=openshift/conformance/parallel
              run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-disruptive
      - name: TEST_COMMAND
        value: setup_ssh_bastion; TEST_SUITE=openshift/disruptive run-tests; TEST_SUITE=openshift/conformance/parallel
          run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-disruptive-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-disruptive
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-serial
      - --template=/usr/local/e2e-aws-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-env: gcp
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-gcp-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp-serial
      - --template=/usr/local/e2e-gcp-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-gcp-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-console-aws-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-console-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-console
      - --template=/usr/local/e2e-aws-console
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-console
            commands: ./test-prow-e2e.sh release
            openshift_installer_console:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-console
      - name: TEST_COMMAND
        value: ./test-prow-e2e.sh release
      - name: TEST_IMAGESTREAM_TAG
        value: stable:console-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-console-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-console
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 12h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-serial
      - --template=/usr/local/e2e-aws-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-vsphere-upi-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-vsphere-upi-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-vsphere-upi
      - --template=/usr/local/e2e-vsphere-upi
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: vsphere
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer_upi:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer_upi:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-vsphere-upi
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-vsphere-upi-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-vsphere-upi
        name: job-definition
        subPath: cluster-launch-installer-upi-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-vsphere
    - configMap:
        name: prow-job-cluster-launch-installer-upi-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-vsphere-upi-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-vsphere-upi-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-vsphere-upi-serial
      - --template=/usr/local/e2e-vsphere-upi-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: vsphere
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer_upi:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer_upi:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-vsphere-upi-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-vsphere-upi-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-vsphere-upi-serial
        name: job-definition
        subPath: cluster-launch-installer-upi-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-vsphere
    - configMap:
        name: prow-job-cluster-launch-installer-upi-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-upi-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-upi-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-upi
      - --template=/usr/local/e2e-aws-upi
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer_upi:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer_upi:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-upi
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upi-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-upi
        name: job-definition
        subPath: cluster-launch-installer-upi-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-upi-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
    release.openshift.io/verify: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-4.2-to-4.3-to-4.4-to-4.5-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -exuo pipefail

        data=$(ARTIFACTS)/release.json

        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.2.0 <4.3.0-0' > ${data}; then
          echo "error: Could not find an initial version"
          exit 1
        fi
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${data}" )

        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.3.0 <4.4.0-0' > ${data}; then
          echo "error: Could not find a middle version"
          exit 1
        fi
        next_0=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${data}" )

        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.4.0-0.nightly/latest > ${data}; then
          echo "error: Could not find newest version"
          exit 1
        fi
        next_1=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${data}" )

        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest > ${data}; then
          echo "error: Could not find newest version"
          exit 1
        fi
        next_2=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${data}" )

        export RELEASE_IMAGE_LATEST=${next_2}
        export CONFIG_SPEC="${CONFIG_SPEC/RELEASE_IMAGES/$next_0,$next_1,$next_2}"

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.2"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: |
              TEST_SUITE=all IMAGE=RELEASE_IMAGES run-upgrade-tests
              TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
    release.openshift.io/verify: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-4.4-stable-to-4.5-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        initial=$(ARTIFACTS)/release-initial.json
        latest=$(ARTIFACTS)/release-latest.json
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.4.0-0 <4.5.0-0' > ${initial}; then
          echo "error: Could not find a stable version"
          exit 1
        fi
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest > ${latest}; then
          echo "error: Could not find newest version"
          exit 1
        fi

        from=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${initial}" )
        to=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${latest}" )
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${initial}" )
        export RELEASE_IMAGE_LATEST=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${latest}" )

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # annotate the information about this job so that the release controller adds it to the upgrade graph
        oc --kubeconfig /etc/appci/sa.release-bot.app.ci.config annotate pj/${PROW_JOB_ID} "release.openshift.io/from-tag=${from}" "release.openshift.io/tag=${to}" "release.openshift.io/source=ocp/$(BRANCH)"

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.4"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-rollback-4.4-to-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        initial=$(ARTIFACTS)/release-initial.json
        latest=$(ARTIFACTS)/release-latest.json
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.4.0-0 <4.5.0-0' > ${initial}; then
          echo "error: Could not find a stable version"
          exit 1
        fi
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest > ${latest}; then
          echo "error: Could not find newest version"
          exit 1
        fi

        from=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${initial}" )
        to=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${latest}" )
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${initial}" )
        export RELEASE_IMAGE_LATEST=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${latest}" )

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # annotate the information about this job so that we can query for it
        oc --kubeconfig /etc/appci/sa.release-bot.app.ci.config annotate pj/${PROW_JOB_ID} "release.openshift.io/from-tag=${from}" "release.openshift.io/tag=${to}" "release.openshift.io/source=ocp/$(BRANCH)"

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.4"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all TEST_OPTIONS=abort-at=99 run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-rollback-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        initial=$(ARTIFACTS)/release-initial.json
        latest=$(ARTIFACTS)/release-latest.json
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest --data-urlencode 'rel=1' > ${initial}; then
          echo "error: Could not find a stable version"
          exit 1
        fi
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest > ${latest}; then
          echo "error: Could not find newest version"
          exit 1
        fi

        from=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${initial}" )
        to=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${latest}" )
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${initial}" )
        export RELEASE_IMAGE_LATEST=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${latest}" )

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # annotate the information about this job so that we can query for it
        oc --kubeconfig /etc/appci/sa.release-bot.app.ci.config annotate pj/${PROW_JOB_ID} "release.openshift.io/from-tag=${from}" "release.openshift.io/tag=${to}" "release.openshift.io/source=ocp/$(BRANCH)"

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all TEST_OPTIONS=abort-at=random run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-env: aws
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: canary-release-openshift-origin-installer-e2e-aws-4.5-cnv
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-cnv-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-cnv
      - name: TEST_COMMAND
        value: make start && make functest
      - name: TEST_IMAGESTREAM_TAG
        value: stable:hyperconverged-cluster-operator-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cnv-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-env: gcp
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-upgrade-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        initial=$(ARTIFACTS)/release-initial.json
        latest=$(ARTIFACTS)/release-latest.json
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest --data-urlencode 'rel=1' > ${initial}; then
          echo "error: Could not find a stable version"
          exit 1
        fi
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest > ${latest}; then
          echo "error: Could not find newest version"
          exit 1
        fi

        from=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${initial}" )
        to=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${latest}" )
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${initial}" )
        export RELEASE_IMAGE_LATEST=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${latest}" )

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # annotate the information about this job so that we can query for it
        oc --kubeconfig /etc/appci/sa.release-bot.app.ci.config annotate pj/${PROW_JOB_ID} "release.openshift.io/from-tag=${from}" "release.openshift.io/tag=${to}" "release.openshift.io/source=ocp/$(BRANCH)"

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 6h
  labels:
    ci.openshift.io/release-type: informing
    job-env: azure
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-upgrade-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-azure-upgrade-cluster-profile
      - --target=e2e-azure-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        initial=$(ARTIFACTS)/release-initial.json
        latest=$(ARTIFACTS)/release-latest.json
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest --data-urlencode 'rel=1' > ${initial}; then
          echo "error: Could not find a stable version"
          exit 1
        fi
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest > ${latest}; then
          echo "error: Could not find newest version"
          exit 1
        fi

        from=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${initial}" )
        to=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${latest}" )
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${initial}" )
        export RELEASE_IMAGE_LATEST=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${latest}" )

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # annotate the information about this job so that we can query for it
        oc --kubeconfig /etc/appci/sa.release-bot.app.ci.config annotate pj/${PROW_JOB_ID} "release.openshift.io/from-tag=${from}" "release.openshift.io/tag=${to}" "release.openshift.io/source=ocp/$(BRANCH)"

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-azure-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 1,5,9,13,17,21 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  labels:
    ci.openshift.io/release-type: informing
    job-env: openstack
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  max_concurrency: 1
  name: release-openshift-ocp-installer-e2e-openstack-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-openstack-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-openstack
      - --template=/usr/local/e2e-openstack
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: openstack-vexxhost
      - name: OPENSTACK_EXTERNAL_NETWORK
        value: public
      - name: OPENSTACK_FLAVOR
        value: v1-standard-4
      - name: OPENSTACK_MASTER_VOLUME_TYPE
        value: rbd
      - name: OS_CLOUD
        value: openstack
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-openstack
      - name: KURYR_ENABLED
        value: "false"
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-openstack-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-openstack
        name: job-definition
        subPath: cluster-launch-installer-openstack-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            items:
            - key: clouds.yaml
              path: clouds.yaml
            name: cluster-secrets-openstack-vexxhost
        - secret:
            items:
            - key: .awscred
              path: .awscred
            - key: ssh-privatekey
              path: ssh-privatekey
            - key: ssh-publickey
              path: ssh-publickey
            - key: pull-secret
              path: pull-secret
            name: cluster-secrets-openstack
    - configMap:
        name: prow-job-cluster-launch-installer-openstack-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  decoration_config:
    skip_cloning: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-env: openstack
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-openstack-ppc64le-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-openstack-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-openstack
      - --template=/usr/local/e2e-openstack
      command:
      - ci-operator
      env:
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.5
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: openstack-ppc64le
      - name: CUSTOM_IMAGE_OPENSTACK_INSTALLER
        value: registry.svc.ci.openshift.org/ppc64le-openstack-installer-45/ppc64le-ci:latest
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-openstack
      - name: KURYR_ENABLED
        value: "false"
      - name: TEST_COMMAND
        value: |
          cat > excluded_tests <<EOFILE
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when tagging images should successfully tag the deployed image [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with a trigger used by different containers [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with multiple triggers [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] forcePull should affect pulling builder images ForcePull test case execution custom [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] forcePull should affect pulling builder images ForcePull test case execution docker [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] forcePull should affect pulling builder images ForcePull test case execution s2i [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel] expand_more"
            "[sig-builds][Feature:Builds] oc new-app should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app should succeed with an imagestream [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune completed builds based on the successfulBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune failed builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should successfully resolve valueFrom in docker build environment variables [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]"
            "[sig-cluster-lifecycle] Pods cannot access the /config/master API endpoint [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:ImageEcosystem][mongodb] openshift mongodb image creating from a template should instantiate the template [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test should report failed soon after an annotated objects has failed [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-imageregistry][Feature:ImageAppend] Image append should create images by appending them [Suite:openshift/conformance/parallel]"
            "[sig-imageregistry][Feature:ImageExtract] Image extract should extract content from an image [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should have important platform topology metrics [Suite:openshift/conformance/parallel]"
            "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should pass the h2spec conformance tests [Suite:openshift/conformance/parallel/minimal]"
            "[sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel]"
            "[sig-operator] an end user use OLM can subscribe to the cockroachdb operator [Suite:openshift/conformance/parallel]"
            "[sig-storage] CSI mock volume CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI attach test using mock driver should preserve attachment policy when no CSIDriver present [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume without restarting pod if nodeExpansion=off [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should not expand volume if resizingOnDriver=off, resizingOnSC=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=true when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=true [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when CSIDriver does not exist [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=nil [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=false [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable should create snapshot with defaults [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] GCP Volumes GlusterFS should be mountable [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] GCP Volumes NFSv3 should be mountable for NFSv3 [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] GCP Volumes NFSv4 should be mountable for NFSv4 [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 2 PVs and 4 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 3 PVs and 3 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PV and a pre-bound PVC: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and a pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and non-pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs should create a non-pre-bound PV and PVC: test write access  [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
          EOFILE
          cat > invert_excluded.py <<EOSCRIPT; chmod +x invert_excluded.py
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-openstack-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-openstack
        name: job-definition
        subPath: cluster-launch-installer-openstack-e2e-ppc64le.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            items:
            - key: clouds.yaml
              path: clouds.yaml
            - key: ca-cert.pem
              path: ca-cert.pem
            name: cluster-secrets-openstack-ppc64le
        - secret:
            items:
            - key: ssh-privatekey
              path: ssh-privatekey
            - key: ssh-publickey
              path: ssh-publickey
            - key: pull-secret
              path: pull-secret
            name: cluster-secrets-openstack
    - configMap:
        name: prow-job-cluster-launch-installer-openstack-e2e-ppc64le
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  extra_refs:
  - base_ref: release-4.5
    org: openshift
    repo: openshift-ansible
    workdir: true
  interval: 6h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-e2e-aws-scaleup-rhel7-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-scaleup-rhel7-cluster-profile
      - --target=e2e-aws-scaleup-rhel7
      - --template=/usr/local/e2e-aws-scaleup-rhel7
      - --org=openshift
      - --branch=release-4.5
      command:
      - ci-operator
      env:
      - name: CLUSTER_TYPE
        value: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws-scaleup-rhel7
      - name: RPM_REPO_CRIO_DIR
        value: 4.5-rhel-7
      - name: RPM_REPO_OPENSHIFT_ORIGIN
        value: https://rpms.svc.ci.openshift.org/openshift-origin-v4.5/
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-scaleup-rhel7-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-scaleup-rhel7
        name: job-definition
        subPath: cluster-scaleup-e2e-40.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/sentry-dsn
        name: sentry-dsn
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
        - configMap:
            name: cluster-profile-aws-centos-40
    - configMap:
        name: prow-job-cluster-scaleup-e2e-40
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: sentry-dsn
      secret:
        secretName: sentry-dsn
- agent: kubernetes
  cluster: api.ci
  cron: 0 0,4,8,12,16,20 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  labels:
    ci.openshift.io/release-type: informing
    job-env: openstack
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  max_concurrency: 1
  name: release-openshift-ocp-installer-e2e-openstack-serial-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-openstack-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-openstack-serial
      - --template=/usr/local/e2e-openstack-serial
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: openstack-vexxhost
      - name: OPENSTACK_EXTERNAL_NETWORK
        value: public
      - name: OPENSTACK_FLAVOR
        value: v1-standard-4
      - name: OPENSTACK_MASTER_VOLUME_TYPE
        value: rbd
      - name: OS_CLOUD
        value: openstack
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-openstack-serial
      - name: KURYR_ENABLED
        value: "false"
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-openstack-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-openstack-serial
        name: job-definition
        subPath: cluster-launch-installer-openstack-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            items:
            - key: clouds.yaml
              path: clouds.yaml
            name: cluster-secrets-openstack-vexxhost
        - secret:
            items:
            - key: .awscred
              path: .awscred
            - key: ssh-privatekey
              path: ssh-privatekey
            - key: ssh-publickey
              path: ssh-publickey
            - key: pull-secret
              path: pull-secret
            name: cluster-secrets-openstack
    - configMap:
        name: prow-job-cluster-launch-installer-openstack-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-mirrors-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: mirror
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: |
          patch_image_specs
          TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 12h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-metal-compact-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-metal-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-metal
      - --template=/usr/local/e2e-metal
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: metal
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-metal
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-metal-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-metal
        name: job-definition
        subPath: cluster-launch-installer-metal-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-metal-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: broken
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-cluster-logging-operator-e2e-4.5
  reporter_config:
    slack:
      channel: '#forum-logging'
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-operator-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-operator
      - --template=/usr/local/e2e-operator
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: JOB_NAME_SAFE
        value: e2e-operator
      - name: TEST_COMMAND
        value: FAKE_HOME_DIR=/tmp/home LOG_DIR=/tmp/artifacts/logging-logs ARTIFACT_DIR=/tmp/artifacts/logging-artifacts
          make test-e2e-olm
      - name: TEST_IMAGESTREAM_TAG
        value: stable:cluster-logging-operator-e2e
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-operator
            commands: FAKE_HOME_DIR=/tmp/home LOG_DIR=/tmp/artifacts/logging-logs ARTIFACT_DIR=/tmp/artifacts/logging-artifacts make test-e2e-olm
            openshift_installer_custom_test_image:
              cluster_profile: aws
              from: stable:cluster-logging-operator-e2e
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-operator-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-operator
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: broken
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-elasticsearch-operator-e2e-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-operator-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-operator
      - --template=/usr/local/e2e-operator
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: JOB_NAME_SAFE
        value: e2e-operator
      - name: TEST_COMMAND
        value: make test-e2e-olm
      - name: TEST_IMAGESTREAM_TAG
        value: stable:elasticsearch-operator-src
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-operator
            commands: make test-e2e-olm
            openshift_installer_custom_test_image:
              cluster_profile: aws
              from: stable:elasticsearch-operator-src
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-operator-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-operator
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  decoration_config:
    skip_cloning: true
  interval: 6h
  labels:
    ci.openshift.io/release-type: informing
    job-env: ovirt
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-ovirt-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-ovirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-ovirt
      - --template=/usr/local/e2e-ovirt
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: ovirt
      - name: LEASE_TYPE
        value: conformance
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-parallel
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-ovirt
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-ovirt-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-ovirt
        name: job-definition
        subPath: cluster-launch-installer-ovirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-ovirt
        - secret:
            name: ovirt-infra-secrets
    - configMap:
        name: prow-job-cluster-launch-installer-ovirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 6h
  labels:
    ci.openshift.io/release-type: informing
    job-env: gcp
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-upgrade-4.4-stable-to-4.5-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        initial=$(ARTIFACTS)/release-initial.json
        latest=$(ARTIFACTS)/release-latest.json
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.4.0-0 <4.5.0-0' > ${initial}; then
          echo "error: Could not find a stable version"
          exit 1
        fi
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest > ${latest}; then
          echo "error: Could not find newest version"
          exit 1
        fi

        from=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${initial}" )
        to=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${latest}" )
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${initial}" )
        export RELEASE_IMAGE_LATEST=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${latest}" )

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # annotate the information about this job so that the release controller adds it to the upgrade graph
        oc --kubeconfig /etc/appci/sa.release-bot.app.ci.config annotate pj/${PROW_JOB_ID} "release.openshift.io/from-tag=${from}" "release.openshift.io/tag=${to}" "release.openshift.io/source=ocp/$(BRANCH)"

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.4"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      secret:
        secretName: cluster-secrets-gcp
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 6h
  labels:
    ci.openshift.io/release-type: informing
    job-env: azure
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-upgrade-4.4-stable-to-4.5-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-azure-upgrade-cluster-profile
      - --target=e2e-azure-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        initial=$(ARTIFACTS)/release-initial.json
        latest=$(ARTIFACTS)/release-latest.json
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.4.0-0 <4.5.0-0' > ${initial}; then
          echo "error: Could not find a stable version"
          exit 1
        fi
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest > ${latest}; then
          echo "error: Could not find newest version"
          exit 1
        fi

        from=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${initial}" )
        to=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${latest}" )
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${initial}" )
        export RELEASE_IMAGE_LATEST=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${latest}" )

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # annotate the information about this job so that the release controller adds it to the upgrade graph
        oc --kubeconfig /etc/appci/sa.release-bot.app.ci.config annotate pj/${PROW_JOB_ID} "release.openshift.io/from-tag=${from}" "release.openshift.io/tag=${to}" "release.openshift.io/source=ocp/$(BRANCH)"

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.4"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-azure-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      secret:
        secretName: cluster-secrets-azure4
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  interval: 24h
  labels:
    ci.openshift.io/release-type: informing
    job-release: "4.5"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-csi-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/e2e-aws-csi-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-csi
      - --template=/usr/local/e2e-aws-csi
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: BRANCH
        value: "4.5"
      - name: CLUSTER_TYPE
        value: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws-csi
      - name: TEST_COMMAND
        value: make test-e2e ARTIFACT_DIR=/tmp/artifacts
      - name: TEST_IMAGESTREAM_TAG
        value: stable:aws-ebs-csi-driver-operator-test
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-csi
            commands: make test-e2e ARTIFACT_DIR=/tmp/artifacts
            openshift_installer_custom_test_image:
              cluster_profile: aws
              from: stable:aws-ebs-csi-driver-operator-test
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-csi-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-aws-csi
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  decorate: true
  decoration_config:
    skip_cloning: true
  interval: 48h
  labels:
    ci.openshift.io/release-type: informing
    job-env: ovirt
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-ovirt-upgrade-4.4-stable-to-4.5-ci
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-ovirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-ovirt
      - --template=/usr/local/e2e-ovirt
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        initial=$(ARTIFACTS)/release-initial.json
        latest=$(ARTIFACTS)/release-latest.json
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.4.0-0 <4.5.0-0' > ${initial}; then
          echo "error: Could not find a stable version"
          exit 1
        fi
        if ! curl --fail -X GET -G --location https://openshift-release.svc.ci.openshift.org/api/v1/releasestream/4.5.0-0.ci/latest > ${latest}; then
          echo "error: Could not find newest version"
          exit 1
        fi

        from=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${initial}" )
        to=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["name"]' "${latest}" )
        export RELEASE_IMAGE_INITIAL=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${initial}" )
        export RELEASE_IMAGE_LATEST=$( python -c 'import json,sys; print json.load(open(sys.argv[1], "r"))["pullSpec"]' "${latest}" )
        export INSTALL_INITIAL_RELEASE="true"

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.4/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # annotate the information about this job so that the release controller adds it to the upgrade graph
        oc --kubeconfig /etc/appci/sa.release-bot.app.ci.config annotate pj/${PROW_JOB_ID} "release.openshift.io/from-tag=${from}" "release.openshift.io/tag=${to}" "release.openshift.io/source=ocp/$(BRANCH)"

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.4"
      - name: CLUSTER_TYPE
        value: ovirt
      - name: LEASE_TYPE
        value: conformance
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      - name: JOB_NAME_SAFE
        value: e2e-ovirt
      - name: TEST_COMMAND
        value: TEST_SUITE=all run-upgrade-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-ovirt-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-ovirt
        name: job-definition
        subPath: cluster-launch-installer-ovirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /etc/appci
        name: appci-release-bot-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-ovirt
        - secret:
            name: ovirt-infra-secrets
    - configMap:
        name: prow-job-cluster-launch-installer-ovirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
    - name: appci-release-bot-credentials
      secret:
        items:
        - key: sa.release-bot.app.ci.config
          path: sa.release-bot.app.ci.config
        secretName: build-farm-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 0 * * 1
  decorate: true
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: endurance-upgrade-aws-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/ci-credentials
      - --secret-dir=/usr/local/endurance-cluster-credentials-aws
      - --secret-dir=/usr/local/aws-openshift-llc-account-credentials
      - --secret-dir=/usr/local/pull-secret
      - --template=/usr/local/endurance-test/endurance-test.yaml
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --target=endurance-test
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.5"
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              requests:
                cpu: 10m
          tests:
          - as: endurance-upgrade-$(CLUSTER_TYPE)
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      - name: TEST_COMMAND
        value: TEST_SUITE=all run-upgrade-tests
      - name: JOB_NAME_SAFE
        value: endurance-aws-upgrade
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/endurance-test
        name: job-definition
      - mountPath: /usr/local/ci-credentials
        name: ci-credentials
      - mountPath: /usr/local/aws-openshift-llc-account-credentials
        name: aws-openshift-llc-account-credentials
      - mountPath: /usr/local/endurance-cluster-credentials-aws
        name: endurance-cluster-credentials-aws
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: aws-openshift-llc-account-credentials
      secret:
        secretName: aws-openshift-llc-account-credentials
    - name: ci-credentials
      secret:
        secretName: cluster-secrets-aws
    - name: endurance-cluster-credentials-aws
      secret:
        secretName: endurance-cluster-credentials-4.5-aws
    - configMap:
        name: prow-job-endurance-test
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 6 * * 1-5
  decorate: true
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: endurance-e2e-aws-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/ci-credentials
      - --secret-dir=/usr/local/endurance-cluster-credentials-aws
      - --secret-dir=/usr/local/aws-openshift-llc-account-credentials
      - --secret-dir=/usr/local/pull-secret
      - --template=/usr/local/endurance-test/endurance-test.yaml
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --target=endurance-test
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.5"
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              requests:
                cpu: 10m
          tests:
          - as: endurance-e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: false
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      - name: JOB_NAME_SAFE
        value: endurance-e2e-aws
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/endurance-test
        name: job-definition
      - mountPath: /usr/local/ci-credentials
        name: ci-credentials
      - mountPath: /usr/local/aws-openshift-llc-account-credentials
        name: aws-openshift-llc-account-credentials
      - mountPath: /usr/local/endurance-cluster-credentials-aws
        name: endurance-cluster-credentials-aws
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: aws-openshift-llc-account-credentials
      secret:
        secretName: aws-openshift-llc-account-credentials
    - name: ci-credentials
      secret:
        secretName: cluster-secrets-aws
    - name: endurance-cluster-credentials-aws
      secret:
        secretName: endurance-cluster-credentials-4.5-aws
    - configMap:
        name: prow-job-endurance-test
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 10 * * 1-5
  decorate: true
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: endurance-cluster-maintenance-aws-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --lease-server-username=ci
      - --lease-server=https://boskos-ci.svc.ci.openshift.org
      - --secret-dir=/usr/local/ci-credentials
      - --secret-dir=/usr/local/endurance-cluster-credentials-aws
      - --secret-dir=/usr/local/aws-openshift-llc-account-credentials
      - --secret-dir=/usr/local/pull-secret
      - --template=/usr/local/endurance-install/endurance-install.yaml
      - --target=endurance-install
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc
        set +e
        ci-operator $@ |& tee /tmp/ci-operator.log
        rc=$?
        set -e
        namespace=$(grep "Creating namespace" /tmp/ci-operator.log | awk '{print $NF}')
        # copy the cluster credentials secret that was created in the job namespace, into the ci namespace
        # so it is persisted for future runs.
        oc get --export secret endurance-cluster-credentials-aws-new -n $namespace -o yaml | grep -v namespace: > /tmp/secret.yaml
        sed -i s/endurance-cluster-credentials-aws-new/endurance-cluster-credentials-4.5-aws/ /tmp/secret.yaml
        oc apply -f /tmp/secret.yaml -n ci
        exit $rc
      - ""
      env:
      - name: BRANCH
        value: "4.5"
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: endurance-install-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: false
      - name: JOB_NAME_SAFE
        value: endurance-install-$(CLUSTER_TYPE)
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/endurance-install
        name: job-definition
      - mountPath: /usr/local/ci-credentials
        name: ci-credentials
      - mountPath: /usr/local/aws-openshift-llc-account-credentials
        name: aws-openshift-llc-account-credentials
      - mountPath: /usr/local/endurance-cluster-credentials-aws
        name: endurance-cluster-credentials-aws
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: aws-openshift-llc-account-credentials
      secret:
        secretName: aws-openshift-llc-account-credentials
    - name: ci-credentials
      secret:
        secretName: cluster-secrets-aws
    - name: endurance-cluster-credentials-aws
      secret:
        secretName: endurance-cluster-credentials-4.5-aws
    - configMap:
        name: prow-job-endurance-install
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: api.ci
  cron: 0 8,20 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    job-env: remote-libvirt
    job-release: "4.5"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-remote-libvirt-ppc64le-4.5
  spec:
    containers:
    - args:
      - --artifact-dir=$(ARTIFACTS)
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --kubeconfig=/etc/apici/kubeconfig
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp/release:4.5-ci
      - name: BRANCH
        value: "4.5"
      - name: ARCH
        value: ppc64le
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: BASTION_SVC
        value: sshd
      - name: BASTION_SVC_IP
        value: 172.30.168.41
      - name: BASTION_SVC_1_IP
        value: 172.30.19.226
      - name: BASTION_SVC_2_IP
        value: 172.30.230.16
      - name: BASTION_SVC_3_IP
        value: 172.30.54.14
      - name: BASTION_SVC_4_IP
        value: 172.30.3.15
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.svc.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.5
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: libvirt-ppc64le
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: TEST_COMMAND
        value: |
          # these tests are not able to run in CI due to
          # missing test image dependencies.  They must be
          # run manually
          cat > invert_excluded.py <<EOSCRIPT
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          chmod +x invert_excluded.py
          cat > excluded_tests <<EOEXCLUDE
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when tagging images should successfully tag the deployed image [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with a trigger used by different containers [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with multiple image change triggers should run a successful deployment with multiple triggers [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] forcePull should affect pulling builder images ForcePull test case execution custom [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] forcePull should affect pulling builder images ForcePull test case execution docker [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] forcePull should affect pulling builder images ForcePull test case execution s2i [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel] expand_more"
            "[sig-builds][Feature:Builds] oc new-app should succeed with a --name of 58 characters [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] oc new-app should succeed with an imagestream [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune completed builds based on the successfulBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] prune builds based on settings in the buildconfig should prune failed builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables should successfully resolve valueFrom in docker build environment variables [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]"
            "[sig-cluster-lifecycle] Pods cannot access the /config/master API endpoint [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:ImageEcosystem][mongodb] openshift mongodb image creating from a template should instantiate the template [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test should report failed soon after an annotated objects has failed [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-imageregistry][Feature:ImageAppend] Image append should create images by appending them [Suite:openshift/conformance/parallel]"
            "[sig-imageregistry][Feature:ImageExtract] Image extract should extract content from an image [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should have important platform topology metrics [Suite:openshift/conformance/parallel]"
            "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should pass the h2spec conformance tests [Suite:openshift/conformance/parallel/minimal]"
            "[sig-network] Networking Granular Checks: Services should be able to handle large requests: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should be able to handle large requests: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should update endpoints: http [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel]"
            "[sig-operator] an end user use OLM can subscribe to the cockroachdb operator [Suite:openshift/conformance/parallel]"
            "[sig-storage] CSI mock volume CSI attach test using mock driver should not require VolumeAttach for drivers without attachment [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI attach test using mock driver should preserve attachment policy when no CSIDriver present [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI attach test using mock driver should require VolumeAttach for drivers with attachment [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI online volume expansion should expand volume without restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=off, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume without restarting pod if nodeExpansion=off [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should not expand volume if resizingOnDriver=off, resizingOnSC=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver contain ephemeral=true when using inline volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should be passed when podInfoOnMount=true [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when CSIDriver does not exist [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=nil [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI workload information using mock driver should not be passed when podInfoOnMount=false [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (block volmode)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand should resize volume when PVC is edited while pod is using it [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)(allowExpansion)] volume-expand Verify if offline PVC expansion works [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with pvc data source [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with snapshot data source [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volume-expand should not allow expansion of pvcs without AllowVolumeExpansion property [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot] snapshottable should create snapshot with defaults [Feature:VolumeSnapshotDataSource] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read-only inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should create read/write inline ephemeral volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support multiple inline ephemeral volumes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: inline ephemeral CSI volume] ephemeral should support two pods which share the same volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] GCP Volumes GlusterFS should be mountable [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] GCP Volumes NFSv3 should be mountable for NFSv3 [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] GCP Volumes NFSv4 should be mountable for NFSv4 [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing single file [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support non-existent path [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] provisioning should provision storage with mount options [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing directory [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support existing single file [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support file as subpath [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Dynamic PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Inline-volume (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should allow exec of files on the volume [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (default fs)] volumes should store data [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: nfs] [Testpattern: Pre-provisioned PV (filesystem volmode)] volumeMode should not mount / map unused volumes in a pod [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 2 PVs and 4 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 3 PVs and 3 PVCs: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PV and a pre-bound PVC: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and a pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and non-pre-bound PV: test write access [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs should create a non-pre-bound PV and PVC: test write access  [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: http [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for client IP based session affinity: udp [LinuxOnly] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for endpoint-Service: http [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for node-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should function for pod-Service: udp [Skipped:ovirt] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Services should update endpoints: udp [Suite:openshift/conformance/parallel] [Suite:k8s]"
          EOEXCLUDE
          export PATH=/usr/libexec/origin:$PATH
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
