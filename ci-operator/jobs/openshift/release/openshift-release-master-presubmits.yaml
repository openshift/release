presubmits:
  openshift/release:
  - agent: kubernetes
    always_run: false
    branches:
    - ^master$
    - ^master-
    cluster: app.ci
    context: ci/build-farm/build01-dry
    decorate: true
    labels:
      ci.openshift.io/build-farm: build01
      ci.openshift.io/generator: cluster-init
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-build01-dry
    rerun_command: /test build01-dry
    run_if_changed: ^clusters/.*
    spec:
      containers:
      - args:
        - --config-dir=clusters/build-clusters/build01
        - --as=
        - --kubeconfig=/etc/build-farm-credentials/kubeconfig
        command:
        - applyconfig
        env:
        - name: HOME
          value: /tmp
        - name: build01_id
          valueFrom:
            secretKeyRef:
              key: build01-id
              name: build01-dex-oidc
        - name: slack_api_url
          valueFrom:
            secretKeyRef:
              key: url
              name: ci-slack-api-url
        image: registry.ci.openshift.org/ci/applyconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/build-farm-credentials
          name: build-farm-credentials
          readOnly: true
        - mountPath: /tmp
          name: tmp
      serviceAccountName: config-updater
      volumes:
      - name: build-farm-credentials
        secret:
          items:
          - key: sa.config-updater.build01.config
            path: kubeconfig
          secretName: config-updater
      - emptyDir: {}
        name: tmp
    trigger: (?m)^/test( | .* )build01-dry,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - ^master$
    - ^master-
    cluster: app.ci
    context: ci/build-farm/build02-dry
    decorate: true
    labels:
      ci.openshift.io/build-farm: build02
      ci.openshift.io/generator: cluster-init
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-build02-dry
    rerun_command: /test build02-dry
    run_if_changed: ^clusters/.*
    spec:
      containers:
      - args:
        - --config-dir=clusters/build-clusters/build02
        - --as=
        - --kubeconfig=/etc/build-farm-credentials/kubeconfig
        command:
        - applyconfig
        env:
        - name: HOME
          value: /tmp
        - name: build02_id
          valueFrom:
            secretKeyRef:
              key: build02-id
              name: build02-dex-oidc
        - name: slack_api_url
          valueFrom:
            secretKeyRef:
              key: url
              name: ci-slack-api-url
        image: registry.ci.openshift.org/ci/applyconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/build-farm-credentials
          name: build-farm-credentials
          readOnly: true
        - mountPath: /tmp
          name: tmp
      serviceAccountName: config-updater
      volumes:
      - name: build-farm-credentials
        secret:
          items:
          - key: sa.config-updater.build02.config
            path: kubeconfig
          secretName: config-updater
      - emptyDir: {}
        name: tmp
    trigger: (?m)^/test( | .* )build02-dry,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - ^master$
    - ^master-
    cluster: app.ci
    context: ci/build-farm/build03-dry
    decorate: true
    labels:
      ci.openshift.io/build-farm: build03
      ci.openshift.io/generator: cluster-init
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-build03-dry
    rerun_command: /test build03-dry
    run_if_changed: ^clusters/.*
    spec:
      containers:
      - args:
        - --config-dir=clusters/build-clusters/build03
        - --as=
        - --kubeconfig=/etc/build-farm-credentials/kubeconfig
        command:
        - applyconfig
        env:
        - name: HOME
          value: /tmp
        image: registry.ci.openshift.org/ci/applyconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/build-farm-credentials
          name: build-farm-credentials
          readOnly: true
        - mountPath: /tmp
          name: tmp
      serviceAccountName: config-updater
      volumes:
      - name: build-farm-credentials
        secret:
          items:
          - key: sa.config-updater.build03.config
            path: kubeconfig
          secretName: config-updater
      - emptyDir: {}
        name: tmp
    trigger: (?m)^/test( | .* )build03-dry,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - ^master$
    - ^master-
    cluster: app.ci
    context: ci/build-farm/build04-dry
    decorate: true
    labels:
      ci.openshift.io/build-farm: build04
      ci.openshift.io/generator: cluster-init
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-build04-dry
    rerun_command: /test build04-dry
    run_if_changed: ^clusters/.*
    spec:
      containers:
      - args:
        - --config-dir=clusters/build-clusters/build04
        - --as=
        - --kubeconfig=/etc/build-farm-credentials/kubeconfig
        command:
        - applyconfig
        env:
        - name: HOME
          value: /tmp
        image: registry.ci.openshift.org/ci/applyconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/build-farm-credentials
          name: build-farm-credentials
          readOnly: true
        - mountPath: /tmp
          name: tmp
      serviceAccountName: config-updater
      volumes:
      - name: build-farm-credentials
        secret:
          items:
          - key: sa.config-updater.build04.config
            path: kubeconfig
          secretName: config-updater
      - emptyDir: {}
        name: tmp
    trigger: (?m)^/test( | .* )build04-dry,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - ^master$
    - ^master-
    cluster: app.ci
    context: ci/build-farm/build05-dry
    decorate: true
    labels:
      ci.openshift.io/build-farm: build05
      ci.openshift.io/generator: cluster-init
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-build05-dry
    rerun_command: /test build05-dry
    run_if_changed: ^clusters/.*
    spec:
      containers:
      - args:
        - --config-dir=clusters/build-clusters/build05
        - --as=
        - --kubeconfig=/etc/build-farm-credentials/kubeconfig
        command:
        - applyconfig
        env:
        - name: HOME
          value: /tmp
        image: registry.ci.openshift.org/ci/applyconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/build-farm-credentials
          name: build-farm-credentials
          readOnly: true
        - mountPath: /tmp
          name: tmp
      serviceAccountName: config-updater
      volumes:
      - name: build-farm-credentials
        secret:
          items:
          - key: sa.config-updater.build05.config
            path: kubeconfig
          secretName: config-updater
      - emptyDir: {}
        name: tmp
    trigger: (?m)^/test( | .* )build05-dry,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - ^master$
    - ^master-
    cluster: app.ci
    context: ci/build-farm/build09-dry
    decorate: true
    labels:
      ci.openshift.io/build-farm: build09
      ci.openshift.io/generator: cluster-init
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-build09-dry
    rerun_command: /test build09-dry
    run_if_changed: ^clusters/.*
    spec:
      containers:
      - args:
        - --config-dir=clusters/build-clusters/build09
        - --as=
        - --kubeconfig=/etc/build-farm-credentials/kubeconfig
        command:
        - applyconfig
        env:
        - name: HOME
          value: /tmp
        - name: build09_id
          valueFrom:
            secretKeyRef:
              key: build09-id
              name: build09-dex-oidc
        image: registry.ci.openshift.org/ci/applyconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/build-farm-credentials
          name: build-farm-credentials
          readOnly: true
        - mountPath: /tmp
          name: tmp
      serviceAccountName: config-updater
      volumes:
      - name: build-farm-credentials
        secret:
          items:
          - key: sa.config-updater.build09.config
            path: kubeconfig
          secretName: config-updater
      - emptyDir: {}
        name: tmp
    trigger: (?m)^/test( | .* )build09-dry,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - ^master$
    - ^master-
    cluster: app.ci
    context: ci/build-farm/build10-dry
    decorate: true
    labels:
      ci.openshift.io/build-farm: build10
      ci.openshift.io/generator: cluster-init
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-build10-dry
    rerun_command: /test build10-dry
    run_if_changed: ^clusters/.*
    spec:
      containers:
      - args:
        - --config-dir=clusters/build-clusters/build10
        - --as=
        - --kubeconfig=/etc/build-farm-credentials/kubeconfig
        command:
        - applyconfig
        env:
        - name: HOME
          value: /tmp
        - name: build10_id
          valueFrom:
            secretKeyRef:
              key: build10-id
              name: build10-dex-oidc
        image: registry.ci.openshift.org/ci/applyconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/build-farm-credentials
          name: build-farm-credentials
          readOnly: true
        - mountPath: /tmp
          name: tmp
      serviceAccountName: config-updater
      volumes:
      - name: build-farm-credentials
        secret:
          items:
          - key: sa.config-updater.build10.config
            path: kubeconfig
          secretName: config-updater
      - emptyDir: {}
        name: tmp
    trigger: (?m)^/test( | .* )build10-dry,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - ^master$
    - ^master-
    cluster: build05
    context: ci/prow/core-valid
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci.openshift.io/generator: prowgen
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-core-valid
    rerun_command: /test core-valid
    spec:
      containers:
      - args:
        - --gcs-upload-secret=/secrets/gcs/service-account.json
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --report-credentials-file=/etc/report/credentials
        - --target=core-valid
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /secrets/gcs
          name: gcs-credentials
          readOnly: true
        - mountPath: /secrets/manifest-tool
          name: manifest-tool-local-pusher
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/report
          name: result-aggregator
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: manifest-tool-local-pusher
        secret:
          secretName: manifest-tool-local-pusher
      - name: pull-secret
        secret:
          secretName: registry-pull-credentials
      - name: result-aggregator
        secret:
          secretName: result-aggregator
    trigger: (?m)^/test( | .* )core-valid,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - ^master$
    - ^master-
    cluster: build05
    context: ci/prow/services-valid
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci.openshift.io/generator: prowgen
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-services-valid
    rerun_command: /test services-valid
    spec:
      containers:
      - args:
        - --gcs-upload-secret=/secrets/gcs/service-account.json
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --report-credentials-file=/etc/report/credentials
        - --target=services-valid
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /secrets/gcs
          name: gcs-credentials
          readOnly: true
        - mountPath: /secrets/manifest-tool
          name: manifest-tool-local-pusher
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/report
          name: result-aggregator
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: manifest-tool-local-pusher
        secret:
          secretName: manifest-tool-local-pusher
      - name: pull-secret
        secret:
          secretName: registry-pull-credentials
      - name: result-aggregator
        secret:
          secretName: result-aggregator
    trigger: (?m)^/test( | .* )services-valid,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - ^master$
    - ^master-
    cluster: build05
    context: ci/prow/stackrox-stackrox-stackrox-stackrox-check
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/variant: stackrox-stackrox
      ci.openshift.io/generator: prowgen
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-stackrox-stackrox-stackrox-stackrox-check
    rerun_command: /test stackrox-stackrox-stackrox-stackrox-check
    run_if_changed: ci-operator/(config|jobs)/stackrox/stackrox
    spec:
      containers:
      - args:
        - --gcs-upload-secret=/secrets/gcs/service-account.json
        - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
        - --report-credentials-file=/etc/report/credentials
        - --target=stackrox-stackrox-check
        - --variant=stackrox-stackrox
        command:
        - ci-operator
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /secrets/gcs
          name: gcs-credentials
          readOnly: true
        - mountPath: /secrets/manifest-tool
          name: manifest-tool-local-pusher
          readOnly: true
        - mountPath: /etc/pull-secret
          name: pull-secret
          readOnly: true
        - mountPath: /etc/report
          name: result-aggregator
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: manifest-tool-local-pusher
        secret:
          secretName: manifest-tool-local-pusher
      - name: pull-secret
        secret:
          secretName: registry-pull-credentials
      - name: result-aggregator
        secret:
          secretName: result-aggregator
    trigger: (?m)^/test( | .* )stackrox-stackrox-stackrox-stackrox-check,?($|\s.*)
