presubmits:
  openshift/release:
  - agent: kubernetes
    always_run: false
    context: ci/openshift/promrules
    decorate: true
    name: check_prometheus_rules
    rerun_command: /test promrules
    run_if_changed: ^(projects/prometheus/prometheus.rules.yaml)$
    spec:
      containers:
      - command:
        - /go/entrypoint.sh
        image: registry.svc.ci.openshift.org/ci/promrules:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: ((?m)^/test promrules,?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/build-farm-consistency
    decorate: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-build-farm-consistency
    rerun_command: /test build-farm-consistency
    spec:
      containers:
      - args:
        - -c
        - |
          set -o errexit
          set -o nounset
          set -o pipefail
          make build-farm-consistency
        command:
        - /bin/bash
        image: registry.svc.ci.openshift.org/openshift/release:golang-1.13
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )build-farm-consistency,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/build-farm/build01-dry
    decorate: true
    name: pull-ci-openshift-release-master-build01-dry
    rerun_command: /test build01-dry
    spec:
      containers:
      - args:
        - --config-dir
        - clusters/build-clusters/01_cluster
        - --kubeconfig
        - /etc/build-farm-credentials/kubeconfig
        - --context
        - ci/api-build01-ci-devcluster-openshift-com:6443
        command:
        - applyconfig
        env:
        - name: build01_build01_reg_auth_value
          valueFrom:
            secretKeyRef:
              key: build01_build01_reg_auth_value.txt
              name: build-farm-credentials
        - name: build01_ci_reg_auth_value
          valueFrom:
            secretKeyRef:
              key: build01_ci_reg_auth_value.txt
              name: build-farm-credentials
        - name: github_client_secret
          valueFrom:
            secretKeyRef:
              key: build01_github_client_secret
              name: build-farm-credentials
        - name: slack_api_url
          valueFrom:
            secretKeyRef:
              key: url
              name: ci-slack-api-url
        image: registry.svc.ci.openshift.org/ci/applyconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/build-farm-credentials
          name: build-farm-credentials
          readOnly: true
      serviceAccountName: config-updater
      volumes:
      - name: build-farm-credentials
        secret:
          items:
          - key: sa.config-updater.build01.config
            path: kubeconfig
          secretName: build-farm-credentials
    trigger: (?m)^/test( | .* )build01-dry,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/ci-operator-config
    decorate: true
    name: pull-ci-openshift-release-master-ci-operator-config
    rerun_command: /test ci-operator-config
    spec:
      containers:
      - args:
        - --config-dir
        - ./ci-operator/config/
        command:
        - ci-operator-checkconfig
        image: ci-operator-checkconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )ci-operator-config,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/ci-operator-registry
    decorate: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-ci-operator-registry
    rerun_command: /test ci-operator-registry
    spec:
      containers:
      - args:
        - --config
        - ./ci-operator/config/
        - --registry
        - ./ci-operator/step-registry/
        - --validate-only
        command:
        - ci-operator-configresolver
        image: ci-operator-configresolver:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )ci-operator-registry,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/config
    decorate: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-config
    rerun_command: /test config
    spec:
      containers:
      - args:
        - --config-path
        - ./core-services/prow/02_config/_config.yaml
        - --job-config-path
        - ./ci-operator/jobs/
        - --plugin-config
        - ./core-services/prow/02_config/_plugins.yaml
        - --strict
        - --exclude-warning
        - long-job-names
        - --exclude-warning
        - mismatched-tide-lenient
        command:
        - /checkconfig
        image: gcr.io/k8s-prow/checkconfig:v20200109-b8502cc02
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )config,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/core-dry
    decorate: true
    name: pull-ci-openshift-release-master-core-dry
    rerun_command: /test core-dry
    spec:
      containers:
      - args:
        - --config-dir
        - core-services
        command:
        - applyconfig
        env:
        - name: build01_build01_reg_auth_value
          valueFrom:
            secretKeyRef:
              key: build01_build01_reg_auth_value.txt
              name: build-farm-credentials
        - name: build01_ci_reg_auth_value
          valueFrom:
            secretKeyRef:
              key: build01_ci_reg_auth_value.txt
              name: build-farm-credentials
        - name: slack_api_url
          valueFrom:
            secretKeyRef:
              key: url
              name: ci-slack-api-url
        image: registry.svc.ci.openshift.org/ci/applyconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: config-updater
    trigger: (?m)^/test( | .* )core-dry,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/core-valid
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-core-valid
    rerun_command: /test core-valid
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=release
        - --resolver-address=http://ci-operator-configresolver-ci.svc.ci.openshift.org
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=core-valid
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-release-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )core-valid,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/correctly-sharded-config
    decorate: true
    name: pull-ci-openshift-release-master-correctly-sharded-config
    rerun_command: /test correctly-sharded-config
    spec:
      containers:
      - command:
        - hack/validate-config-sharding.sh
        image: config-shard-validator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )correctly-sharded-config,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/generated-config
    decorate: true
    name: pull-ci-openshift-release-master-generated-config
    rerun_command: /test generated-config
    spec:
      containers:
      - command:
        - hack/validate-generated-config.sh
        image: ci-operator-prowgen:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: ((?m)^/test generated-config,?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/generated-dashboards
    decorate: true
    name: pull-ci-openshift-release-master-generated-dashboards
    rerun_command: /test generated-dashboards
    spec:
      containers:
      - command:
        - hack/validate-generated-dashboards.sh
        image: registry.svc.ci.openshift.org/ci/dashboards-validation:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: ((?m)^/test generated-dashboards,?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/ordered-prow-config
    decorate: true
    name: pull-ci-openshift-release-master-ordered-prow-config
    rerun_command: /test ordered-prow-config
    spec:
      containers:
      - command:
        - hack/validate-prow-job-ordering.sh
        image: determinize-prow-jobs:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )ordered-prow-config,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/owners
    decorate: true
    name: pull-ci-openshift-release-master-owners
    rerun_command: /test owners
    spec:
      containers:
      - command:
        - hack/validate-owners.sh
        image: centos:7
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )owners,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/pj-rehearse
    decorate: true
    name: pull-ci-openshift-release-master-pj-rehearse
    optional: true
    rerun_command: /test pj-rehearse
    spec:
      containers:
      - args:
        - --candidate-path=.
        - --debug-log
        - $(ARTIFACTS)/debug-log.txt
        - --no-fail=false
        - --dry-run=false
        - --metrics-output=$(ARTIFACTS)/rehearse-metrics.json
        - --rehearsal-limit=35
        command:
        - /bin/pj-rehearse
        image: pj-rehearse:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 500m
      serviceAccountName: ci-operator
    trigger: (?m)^/test( | .* )pj-rehearse,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/prow-config
    decorate: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-prow-config
    rerun_command: /test prow-config
    spec:
      containers:
      - command:
        - hack/validate-prow-config-formatting.sh
        image: determinize-prow-config:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: ((?m)^/test prow-config,?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/prow-config-filenames
    decorate: true
    name: pull-ci-openshift-release-master-prow-config-filenames
    rerun_command: /test prow-config-filenames
    spec:
      containers:
      - command:
        - hack/validate-ci-operator-config-filename.py
        image: registry.svc.ci.openshift.org/ci/python-validation
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )prow-config-filenames,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/prow-config-semantics
    decorate: true
    name: pull-ci-openshift-release-master-prow-config-semantics
    rerun_command: /test prow-config-semantics
    spec:
      containers:
      - command:
        - hack/validate-prow-job-semantics.py
        image: registry.svc.ci.openshift.org/ci/python-validation
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )prow-config-semantics,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/services-dry
    decorate: true
    name: pull-ci-openshift-release-master-services-dry
    rerun_command: /test services-dry
    spec:
      containers:
      - args:
        - --config-dir
        - services
        command:
        - applyconfig
        image: registry.svc.ci.openshift.org/ci/applyconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
      serviceAccountName: config-updater
    trigger: (?m)^/test( | .* )services-dry,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/services-valid
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-services-valid
    rerun_command: /test services-valid
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=release
        - --resolver-address=http://ci-operator-configresolver-ci.svc.ci.openshift.org
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=services-valid
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-release-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )services-valid,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/step-registry-shellcheck
    decorate: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-release-master-step-registry-shellcheck
    rerun_command: /test step-registry-shellcheck
    spec:
      containers:
      - command:
        - hack/validate-registry-commands.sh
        image: registry.svc.ci.openshift.org/ci/shellcheck
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )step-registry-shellcheck,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/pylint
    decorate: true
    name: pull-ci-openshift-release-pylint
    rerun_command: /test pylint
    run_if_changed: ^hack/.*\.py$
    spec:
      containers:
      - args:
        - --rcfile=hack/.pylintrc
        - --ignore=lib
        - --persistent=n
        - hack
        command:
        - pylint
        image: registry.svc.ci.openshift.org/ci/python-validation
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: (?m)^/test( | .* )pylint,?($|\s.*)
