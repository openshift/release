presubmits:
  openshift/release:
  - agent: kubernetes
    always_run: false
    context: ci/openshift/promrules
    decorate: true
    name: check_prometheus_rules
    rerun_command: /test promrules
    run_if_changed: ^(projects/prometheus/prometheus.rules.yaml)$
    spec:
      containers:
      - command:
        - /go/entrypoint.sh
        image: registry.svc.ci.openshift.org/ci/promrules:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: ((?m)^/test promrules,?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/ci-operator-config
    decorate: true
    name: pull-ci-openshift-release-master-ci-operator-config
    rerun_command: /test ci-operator-config
    spec:
      containers:
      - args:
        - --config-dir
        - ./ci-operator/config/
        command:
        - ci-operator-checkconfig
        image: ci-operator-checkconfig:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: '(?m)^/test (?:.*? )?ci-operator-config(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/config
    decorate: true
    name: pull-ci-openshift-release-master-config
    rerun_command: /test config
    spec:
      containers:
      - args:
        - --config-path
        - ./cluster/ci/config/prow/config.yaml
        - --job-config-path
        - ./ci-operator/jobs/
        - --plugin-config
        - ./cluster/ci/config/prow/plugins.yaml
        - --strict
        - --exclude-warning
        - long-job-names
        - --exclude-warning
        - mismatched-tide-lenient
        command:
        - /checkconfig
        image: gcr.io/k8s-prow/checkconfig:v20190502-b23cfa09f
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: '(?m)^/test (?:.*? )?config(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/correctly-sharded-config
    decorate: true
    name: pull-ci-openshift-release-master-correctly-sharded-config
    rerun_command: /test correctly-sharded-config
    spec:
      containers:
      - command:
        - hack/validate-config-sharding.sh
        image: config-shard-validator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: '(?m)^/test (?:.*? )?correctly-sharded-config(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/generated-config
    decorate: true
    name: pull-ci-openshift-release-master-generated-config
    rerun_command: /test generated-config
    spec:
      containers:
      - command:
        - hack/validate-generated-config.sh
        image: ci-operator-prowgen:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: ((?m)^/test generated-config,?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/ordered-prow-config
    decorate: true
    name: pull-ci-openshift-release-master-ordered-prow-config
    rerun_command: /test ordered-prow-config
    spec:
      containers:
      - command:
        - hack/validate-prow-job-ordering.sh
        image: determinize-prow-jobs:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: '(?m)^/test (?:.*? )?ordered-prow-config(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/owners
    decorate: true
    name: pull-ci-openshift-release-master-owners
    rerun_command: /test owners
    spec:
      containers:
      - command:
        - hack/validate-owners.sh
        image: centos:7
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: '(?m)^/test (?:.*? )?owners(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/pj-rehearse
    decorate: true
    name: pull-ci-openshift-release-master-pj-rehearse
    optional: true
    rerun_command: /test pj-rehearse
    spec:
      containers:
      - args:
        - --candidate-path=.
        - --debug-log
        - $(ARTIFACTS)/debug-log.txt
        - --no-fail=false
        - --dry-run=false
        - --allow-volumes=true
        - --metrics-output=$(ARTIFACTS)/rehearse-metrics.json
        command:
        - /bin/pj-rehearse
        image: pj-rehearse:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 500m
      serviceAccountName: ci-operator
    trigger: '(?m)^/test (?:.*? )?pj-rehearse(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/prow-config-filenames
    decorate: true
    name: pull-ci-openshift-release-master-prow-config-filenames
    rerun_command: /test prow-config-filenames
    spec:
      containers:
      - command:
        - hack/validate-ci-operator-config-filename.py
        image: registry.svc.ci.openshift.org/ci/python-validation
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: '(?m)^/test (?:.*? )?prow-config-filenames(?: .*?)?$'
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/prow-config-semantics
    decorate: true
    name: pull-ci-openshift-release-master-prow-config-semantics
    rerun_command: /test prow-config-semantics
    spec:
      containers:
      - command:
        - hack/validate-prow-job-semantics.py
        image: registry.svc.ci.openshift.org/ci/python-validation
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: '(?m)^/test (?:.*? )?prow-config-semantics(?: .*?)?$'
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/pylint
    decorate: true
    name: pull-ci-openshift-release-pylint
    rerun_command: /test pylint
    run_if_changed: ^hack/.*\.py$
    spec:
      containers:
      - args:
        - --rcfile=hack/.pylintrc
        - --ignore=lib
        - --persistent=n
        - hack
        command:
        - pylint
        image: registry.svc.ci.openshift.org/ci/python-validation
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
    trigger: '(?m)^/test (?:.*? )?pylint(?: .*?)?$'
