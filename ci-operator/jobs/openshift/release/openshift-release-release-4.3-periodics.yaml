periodics:
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 30m
  labels:
    job-release: "4.3"
  name: promote-release-openshift-machine-os-content-e2e-aws-4.3
  spec:
    containers:
    - args:
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --target=e2e-aws
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --promote
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --image-mirror-push-secret=/etc/push-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.3/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # if the source and destination are identical, do nothing
        export KUBECONFIG=/etc/app.ci/kubeconfig
        from=$( oc get istag -n "${TAG_NS}" "${TAG_SOURCE}" -o template='{{ .image.metadata.name }}' )
        to=$( oc get istag --ignore-not-found -n ocp "${BRANCH}:${TAG}" -o template='{{ .image.metadata.name }}' )
        unset KUBECONFIG
        if [[ "${from}" == "${to}" ]]; then
          echo "info: ${TAG_NS}/${TAG_SOURCE} matches ocp/${BRANCH}:${TAG}"
          exit 0
        fi
        echo "Will promote ${from}, current is ${to}"

        # error out if the image isn't on quay
        to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@${from}"
        if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "${to_quay}"; then
          echo "error: The source image has not been pushed to quay ${from}"
          exit 1
        fi

        # verify the tests pass
        ci-operator $@

        # also tag the image into the ocp private stream
        oc tag "${to_quay}" "ocp-private/${BRANCH}-priv:${TAG}"
      - ""
      env:
      - name: TAG_NS
        value: rhcos
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.3"
      - name: TAG_SOURCE
        value: machine-os-content:$(BRANCH)
      - name: UNRESOLVED_CONFIG
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          promotion:
            name: "$(BRANCH)"
            namespace: ocp
            additional_images:
              $(TAG): $(TAG)
          build_root:
            image_stream_tag:
              name: release
              namespace: openshift
              tag: golang-1.12
          base_images:
            $(TAG):
              name: $(TAG)
              namespace: rhcos
              tag: "4.3"
          raw_steps:
          - output_image_tag_step:
              from: $(TAG)
              to:
                name: stable
                tag: $(TAG)
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-aws
            steps:
              cluster_profile: aws
              workflow: openshift-e2e-aws
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/app.ci
        name: appci-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/push-secret
        name: push-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: appci-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.app.ci.config
          path: kubeconfig
        secretName: app.ci-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: push-secret
      secret:
        secretName: registry-push-credentials-ci-central
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 8h
  labels:
    job-release: "4.3"
  name: promote-release-openshift-machine-os-content-e2e-aws-4.3-s390x
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.3/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # if the source and destination are identical, do nothing
        from=$( oc get istag -n "${TAG_NS}" "${TAG_SOURCE}" -o template='{{ .image.metadata.name }}' )
        to=$( oc get istag --ignore-not-found -n ocp-${ARCH} "${BRANCH}-art-latest-${ARCH}:${TAG}" -o template='{{ .image.metadata.name }}' )
        if [[ "${from}" == "${to}" ]]; then
          echo "info: ${TAG_NS}/${TAG_SOURCE} already in ${BRANCH}-art-latest-${ARCH}:${TAG}"
          exit 0
        fi
        echo "Will promote ${from}, current is ${to}"

        # error out if the image isn't on quay
        to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@${from}"
        if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "${to_quay}"; then
          echo "error: The source image has not been pushed to quay ${from}"
          exit 1
        fi

        # TODO: Enable e2e testing when arch specific CI is available
      env:
      - name: TAG_NS
        value: rhcos
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.3"
      - name: ARCH
        value: s390x
      - name: TAG_SOURCE
        value: machine-os-content:$(BRANCH)-$(ARCH)
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 8h
  labels:
    job-release: "4.3"
  name: promote-release-openshift-machine-os-content-e2e-aws-4.3-ppc64le
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.3/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc

        # if the source and destination are identical, do nothing
        from=$( oc get istag -n "${TAG_NS}" "${TAG_SOURCE}" -o template='{{ .image.metadata.name }}' )
        to=$( oc get istag --ignore-not-found -n ocp-${ARCH} "${BRANCH}-art-latest-${ARCH}:${TAG}" -o template='{{ .image.metadata.name }}' )
        if [[ "${from}" == "${to}" ]]; then
          echo "info: ${TAG_NS}/${TAG_SOURCE} already in ${BRANCH}-art-latest-${ARCH}:${TAG}"
          exit 0
        fi
        echo "Will promote ${from}, current is ${to}"

        # error out if the image isn't on quay
        to_quay="quay.io/openshift-release-dev/ocp-v4.0-art-dev@${from}"
        if ! oc image info -a "/usr/local/pull-secret/.dockerconfigjson" "${to_quay}"; then
          echo "error: The source image has not been pushed to quay ${from}"
          exit 1
        fi

        # TODO: Enable e2e testing when arch specific CI is available
      env:
      - name: TAG_NS
        value: rhcos
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.3"
      - name: ARCH
        value: ppc64le
      - name: TAG_SOURCE
        value: machine-os-content:$(BRANCH)-$(ARCH)
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: release-4.3
    org: openshift
    repo: origin
    workdir: true
  interval: 2h
  labels:
    job-release: "4.3"
  name: promote-release-openshift-okd-machine-os-content-e2e-aws-4.3
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        # fetch binaries and configure working env, prow doesn't allow init containers or a second container
        dir=$(ARTIFACTS)/ostree
        mkdir -p "${dir}"
        export PATH=$PATH:/tmp/bin
        export HOME=/tmp
        mkdir $HOME/.docker/
        cp /usr/local/pull-secret/.dockerconfigjson $HOME/.docker/config.json
        mkdir $HOME/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.3/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 2>/dev/null >/tmp/bin/jq
        chmod ug+x $HOME/bin/oc $HOME/bin/jq

        # guard against starting if no okd stream exists yet
        if ! oc get istag -n fcos ${TAG}:${BRANCH}; then
          echo "No build possible, no image stream"
          exit 0
        fi

        # populate the base_sha in job spec so we don't build something different
        origin_artifacts_id="$( oc get istag -n ${TAG_NS} ${BRANCH}:artifacts --template '{{ .image.metadata.name }}' )"
        origin_machine_config_operator_rpms_id="$( oc get istag -n ${TAG_NS} ${BRANCH}:machine-config-operator-rpms --template '{{ .image.metadata.name }}' )"
        # export JOB_SPEC="$( echo "${JOB_SPEC}" | jq -r ".extra_refs[0].base_sha = \"${origin_commit_id}\"" )"

        # fetch fcos release info and check whether we've already built this image
        stream=stable
        build_url="https://builds.coreos.fedoraproject.org/prod/streams/${stream}/builds"
        curl "${build_url}/builds.json" 2>/dev/null >${dir}/builds.json
        build_id="$( <"${dir}/builds.json" jq -r '.builds[0].id' )"
        base_url="${build_url}/${build_id}/x86_64"
        curl "${base_url}/meta.json" 2>/dev/null >${dir}/meta.json
        tar_url="${base_url}/$( <${dir}/meta.json jq -r .images.ostree.path )"
        commit_id="$( <${dir}/meta.json jq -r '."ostree-commit"' )"
        ostree_ref="fedora/x86_64/coreos/${stream}"

        # compare the latest image we have built against the potential candidate
        latest="$( oc get istag -n fcos ${TAG}:${BRANCH} --template '{{ index .image.dockerImageMetadata.Config.Labels "version" }} {{ index .image.dockerImageMetadata.Config.Labels "id-artifacts" }} {{ index .image.dockerImageMetadata.Config.Labels "id-machine-config-operator-rpms" }}' )"
        candidate="${build_id} ${origin_artifacts_id} ${origin_machine_config_operator_rpms_id}"
        echo "Comparing existing '$latest' against latest '$candidate'"
        if [[ "${latest}" == "${candidate}" ]]; then
          echo "No build necessary, content is up to date"
          exit 0
        fi

        curl -L https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_amd64 2>/dev/null >/tmp/bin/yq
        chmod ug+x $HOME/bin/yq

        # create namespace and set up basic environment
        namespace="ci-op-$( echo "${JOB_NAME}-${BUILD_ID}" | md5sum -t | cut -c 1-8 )"
        echo
        echo "--- Building machine-os-content for ${build_id} in namespace ${namespace}"
        oc registry login >/dev/null
        oc new-project ${namespace} >/dev/null
        oc policy add-role-to-group system:image-puller -n ${namespace} system:unauthenticated system:authenticated >/dev/null

        function build {
          oc -n ${namespace} create -f $1 >/dev/null
          while true; do
            oc -n ${namespace} logs -f build/$2 || true
            phase=$( oc -n ${namespace} get build/$2 -o 'jsonpath={.status.phase}' )
            if [[ "${phase}" == "Failed" || "${phase}" == "Cancelled" || "${phase}" == "Error" ]]; then
              oc -n ${namespace} describe build/$2
              exit 1
            fi
            if [[ "${phase}" == "Complete" ]]; then
              break
            fi
            sleep 5
          done
        }

        # build an FCoS machine-os-content from the ostree tar, the artifacts rpms, and the latest MCD and cri-o
        cat <<EOF > ${dir}/build.yaml
        kind: Build
        apiVersion: build.openshift.io/v1
        metadata:
          name: machine-os-content
        spec:
          output:
            to:
              kind: ImageStreamTag
              name: machine-os-content:latest
          source:
            dockerfile: |
              FROM registry.ci.openshift.org/${TAG_NS}/${BRANCH}@${origin_artifacts_id} AS artifacts
              FROM registry.ci.openshift.org/${TAG_NS}/${BRANCH}@${origin_machine_config_operator_rpms_id} AS machine_config_operator_rpms

              FROM quay.io/coreos-assembler/coreos-assembler:latest AS build
              USER 0
              COPY --from=artifacts /srv/repo/*.rpm /tmp/rpms/
              COPY --from=machine_config_operator_rpms /srv/repo/*.rpm /tmp/rpms/
              RUN set -xeuo pipefail && \\
                  mkdir -p /srv/repo /tmp/working && \\
                  curl -L "${tar_url}" | tar xf - -C /srv/repo/ && \\
                  rm -rf /etc/yum.repos.d/* && \\
                  rpm-ostree db list --repo /srv/repo "${ostree_ref}" > /tmp/packages && \\
                  curl http://base-${BRANCH//\./-}-rhel8.ocp.svc > /etc/yum.repos.d/rhel8.repo && \\
                  if ! grep -q cri-o /tmp/packages; then yumdownloader -y --disablerepo=* --enablerepo=rhel-8* --destdir=/tmp/rpms cri-o cri-tools; fi && \\
                  if ! grep -q glusterfs-fuse /tmp/packages; then yumdownloader -y --disablerepo=* --enablerepo=rhel-8* --destdir=/tmp/rpms attr glusterfs glusterfs-client-xlators glusterfs-fuse glusterfs-libs psmisc; fi && \\
                  cd /tmp/working && \\
                  for i in \$(find /tmp/rpms/ -name *.rpm); do echo "Extracting \$i ..."; rpm2cpio \$i | cpio -div; done && \\
                  mv etc usr/ && mv sbin/* usr/sbin/ && rm -rf sbin/ && \\
                  coreos-assembler dev-overlay --repo /srv/repo --rev "${ostree_ref}" --add-tree /tmp/working --output-ref "${ostree_ref}"

              FROM scratch
              COPY --from=build /srv/ /srv/
              LABEL version=${build_id} \\
                    id-artifacts=${origin_artifacts_id} \\
                    id-machine-config-operator-rpms=${origin_machine_config_operator_rpms_id}
              ENTRYPOINT ["/noentry"]

          strategy:
            dockerStrategy:
            type: Docker
        EOF
        oc -n ${namespace} create is machine-os-content >/dev/null
        build ${dir}/build.yaml machine-os-content

        # debug output
        oc describe -n ${namespace} istag/machine-os-content:latest
        oc tag ${namespace}/machine-os-content:latest fcos/machine-os-content:${BRANCH}
        oc tag fcos/machine-os-content:${BRANCH} ${TAG_NS}/${BRANCH}:machine-os-content
      env:
      - name: TAG_NS
        value: origin
      - name: TAG
        value: machine-os-content
      - name: BRANCH
        value: "4.3"
      - name: TAG_SOURCE
        value: $(BRANCH):$(TAG)
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-old-rhcos-e2e-aws-4.3
  spec:
    containers:
    - args:
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -exuo pipefail

        # prow doesn't allow init containers or a second container
        export PATH=$PATH:/tmp/bin
        export HOME=/tmp
        mkdir $HOME/.docker/
        cp /usr/local/pull-secret/.dockerconfigjson $HOME/.docker/config.json
        mkdir $HOME/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.3/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x $HOME/bin/oc

        # create namespace and craft a release image without the machine operator
        namespace="ci-op-$( echo "${JOB_NAME}-${BUILD_ID}" | md5sum -t | cut -c 1-8 )"
        oc registry login
        oc new-project ${namespace}
        oc create is --lookup-local -n "${namespace}" release
        oc create is --lookup-local -n "${namespace}" stable-initial
        RELEASE_REPO=$( oc get is -n "${namespace}" release -o 'jsonpath={.status.publicDockerImageRepository}' )
        INITIAL_REPO=$( oc get is -n "${namespace}" stable-initial -o 'jsonpath={.status.publicDockerImageRepository}' )
        export RELEASE_IMAGE_INITIAL=registry.ci.openshift.org/ocp/release:$(FROM_BRANCH)
        export RELEASE_IMAGE_LATEST=${RELEASE_REPO}:upgrade
        export IMAGE_TESTS=${INITIAL_REPO}:tests # use the older version of the payload
        oc policy add-role-to-group system:image-puller -n ${namespace} system:unauthenticated system:authenticated
        oc adm release new --from-release=registry.ci.openshift.org/ocp/release:$(BRANCH) \
          --to-image=${RELEASE_IMAGE_LATEST} \
          --exclude=machine-config-operator

        # execute the test
        ci-operator $@ --namespace=${namespace}
      - ""
      env:
      - name: FROM_BRANCH
        value: "4.2"
      - name: BRANCH
        value: 4.3-ci
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "none" # don't import anything to avoid a race between 4.2 latest and the chosen version
            namespace: ocp
          build_root:
            image_stream_tag:
              name: release
              namespace: openshift
              tag: golang-1.12
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: |
              TEST_SUITE=all run-upgrade-tests
              TEST_SUITE=openshift/conformance/parallel TEST_UNSUPPORTED_ALLOW_VERSION_SKEW=1 run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      - name: JOB_NAME_SAFE
        value: e2e-aws-upgrade
      - name: TEST_COMMAND
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-ovn-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-aws-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 16h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-ovn-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-aws-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 16h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-ovn-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-gcp-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 16h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-ovn-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-azure-ovn-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: ovn
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-ovn
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure-ovn
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-ovn-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 16h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-proxy-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-aws-proxy-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-proxy
      - --template=/usr/local/e2e-aws-proxy
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: proxy
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-proxy
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-proxy-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-proxy
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-proxy-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-proxy
        name: job-definition
        subPath: cluster-launch-installer-upi-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-upi-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 16h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-metal-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-metal-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-metal
      - --template=/usr/local/e2e-metal
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: metal
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-metal
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-metal-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-metal
        name: job-definition
        subPath: cluster-launch-installer-metal-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-metal-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-metal-serial-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-metal-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-metal-serial
      - --template=/usr/local/e2e-metal-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: metal
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-metal-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-metal-serial-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-metal-serial
        name: job-definition
        subPath: cluster-launch-installer-metal-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-metal-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 16h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-azure-serial-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-azure-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure-serial
      - --template=/usr/local/e2e-azure-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-gcp-serial-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-gcp-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp-serial
      - --template=/usr/local/e2e-gcp-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-env: aws
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-compact-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3-ci
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-env: aws
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-shared-vpc-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3-ci
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: shared-vpc
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-shared-vpc-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-gcp-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3-ci
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: shared-vpc
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-shared-vpc-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-azure-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3-ci
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: shared-vpc
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-compact-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-gcp-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp
      - --template=/usr/local/e2e-gcp
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3-ci
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-compact-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-azure-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-azure
      - --template=/usr/local/e2e-azure
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3-ci
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CLUSTER_VARIANT
        value: compact
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-azure
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-azure
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-env: aws
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-disruptive-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-aws-disruptive-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-disruptive
      - --template=/usr/local/e2e-aws-disruptive
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3-ci
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: setup_ssh_bastion; TEST_SUITE=openshift/disruptive run-tests; TEST_SUITE=openshift/conformance/parallel
              run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-disruptive
      - name: TEST_COMMAND
        value: setup_ssh_bastion; TEST_SUITE=openshift/disruptive run-tests; TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-disruptive-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-disruptive
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-env: gcp
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-serial-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-gcp-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-gcp-serial
      - --template=/usr/local/e2e-gcp-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3-ci
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-gcp-serial
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-serial
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-upi-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-aws-upi-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws-upi
      - --template=/usr/local/e2e-aws-upi
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer_upi:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer_upi:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-upi
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upi-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upi
        name: job-definition
        subPath: cluster-launch-installer-upi-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-upi-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  cron: '@yearly'
  decorate: true
  labels:
    job-env: aws
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
    release.openshift.io/verify: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-4.2-to-4.3
  spec:
    containers:
    - args:
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.2"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-env: aws
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
    release.openshift.io/verify: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-4.1-to-4.2-to-4.3-nightly
  spec:
    containers:
    - args:
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -exuo pipefail

        data=$(ARTIFACTS)/release.json
        if ! curl --fail -X GET -G --location https://amd64.ocp.releases.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.1.0 <4.2.0-0' > ${data}; then
          echo "error: Could not find an initial version"
          exit 1
        fi
        export RELEASE_IMAGE_INITIAL=$( python -c 'from __future__ import print_function; import json,sys; print(json.load(open(sys.argv[1], "r"))["pullSpec"])' "${data}" )

        if ! curl --fail -X GET -G --location https://amd64.ocp.releases.ci.openshift.org/api/v1/releasestream/4-stable/latest --data-urlencode 'in=>4.2.0 <4.3.0-0' > ${data}; then
          echo "error: Could not find a middle version"
          exit 1
        fi
        next=$( python -c 'from __future__ import print_function; import json,sys; print(json.load(open(sys.argv[1], "r"))["pullSpec"])' "${data}" )
        export CONFIG_SPEC="${CONFIG_SPEC/RELEASE_IMAGE_NEXT_0/$next}"

        if ! curl --fail -X GET -G --location https://amd64.ocp.releases.ci.openshift.org/api/v1/releasestream/4.3.0-0.nightly/latest > ${data}; then
          echo "error: Could not find newest version"
          exit 1
        fi
        export RELEASE_IMAGE_LATEST=$( python -c 'from __future__ import print_function; import json,sys; print(json.load(open(sys.argv[1], "r"))["pullSpec"])' "${data}" )

        ci-operator $@
      - ""
      env:
      - name: BRANCH
        value: "4.2"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: |
              TEST_SUITE=all IMAGE=RELEASE_IMAGE_NEXT_0 run-upgrade-tests
              TEST_SUITE=all run-upgrade-tests
              TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  cron: '@yearly'
  decorate: true
  labels:
    job-env: aws
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
    release.openshift.io/verify: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-4.2-nightly-to-4.3-nightly
  spec:
    containers:
    - args:
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
          - as: launch-$(CLUSTER_TYPE)
            commands: sleep 9000 & wait
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  cron: '@yearly'
  decorate: true
  labels:
    job-env: aws
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-rollback-4.2-to-4.3
  spec:
    containers:
    - args:
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.2"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all TEST_UPGRADE_OPTIONS=abort-at=99 run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  cron: '@yearly'
  decorate: true
  labels:
    job-env: aws
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-upgrade-rollback-4.3
  spec:
    containers:
    - args:
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all TEST_UPGRADE_OPTIONS=abort-at=random run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 24h
  labels:
    job-env: aws
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-4.3-cnv
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-aws-cnv-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3-ci
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-cnv
      - name: TEST_COMMAND
        value: make start && make functest
      - name: TEST_IMAGESTREAM_TAG
        value: stable:hyperconverged-cluster-operator-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cnv-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  cron: '@yearly'
  decorate: true
  labels:
    job-env: gcp
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-gcp-upgrade-4.3
  spec:
    containers:
    - args:
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-$(CLUSTER_TYPE)-upgrade-cluster-profile
      - --target=e2e-$(CLUSTER_TYPE)-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: gcp
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-gcp-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  cron: '@yearly'
  decorate: true
  labels:
    job-env: azure
    job-release: "4.3"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-azure-upgrade-4.3
  spec:
    containers:
    - args:
      - --secret-dir=/usr/local/pull-secret
      - --secret-dir=/usr/local/e2e-azure-upgrade-cluster-profile
      - --target=e2e-azure-upgrade
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: azure4
      - name: CONFIG_SPEC
        value: |
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tests:
          - as: e2e-azure-upgrade
            commands: TEST_SUITE=all run-upgrade-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-azure-upgrade-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-azure4
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  cron: 0 4,16 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  labels:
    job-env: openstack
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-openstack-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-openstack-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-openstack
      - --template=/usr/local/e2e-openstack
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: openstack
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-openstack
      - name: KURYR_ENABLED
        value: "false"
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-openstack-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-openstack
        name: job-definition
        subPath: cluster-launch-installer-openstack-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-openstack
    - configMap:
        name: prow-job-cluster-launch-installer-openstack-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  extra_refs:
  - base_ref: release-4.3
    org: openshift
    repo: openshift-ansible
    workdir: true
  interval: 16h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-e2e-aws-scaleup-rhel7-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --secret-dir=/usr/local/e2e-aws-scaleup-rhel7-cluster-profile
      - --target=e2e-aws-scaleup-rhel7
      - --template=/usr/local/e2e-aws-scaleup-rhel7
      - --org=openshift
      - --branch=release-4.3
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: CLUSTER_TYPE
        value: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws-scaleup-rhel7
      - name: RPM_REPO_CRIO_DIR
        value: 4.3-rhel-7
      - name: RPM_REPO_OPENSHIFT_ORIGIN
        value: https://artifacts-rpms-openshift-origin-ci-rpms.apps.ci.l2s4.p1.openshiftapps.com/openshift-origin-v4.3/
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-scaleup-rhel7-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws-scaleup-rhel7
        name: job-definition
        subPath: cluster-scaleup-e2e-40.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
        - configMap:
            name: cluster-profile-aws-centos-40
    - configMap:
        name: prow-job-cluster-scaleup-e2e-40
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
- agent: kubernetes
  cluster: build02
  cron: 0 10,22 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  labels:
    job-env: openstack
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-openstack-serial-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-openstack-serial-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-openstack-serial
      - --template=/usr/local/e2e-openstack-serial
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: openstack
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
          - as: e2e-$(CLUSTER_TYPE)-serial
            commands: TEST_SUITE=openshift/conformance/serial run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-openstack-serial
      - name: KURYR_ENABLED
        value: "false"
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/serial run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-openstack-serial-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-openstack-serial
        name: job-definition
        subPath: cluster-launch-installer-openstack-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-openstack
    - configMap:
        name: prow-job-cluster-launch-installer-openstack-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 16h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-aws-mirrors-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-aws-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: mirror
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-aws
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: aws
      - name: JOB_NAME_SAFE
        value: e2e-aws
      - name: TEST_COMMAND
        value: |
          patch_image_specs
          TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build02
  decorate: true
  interval: 48h
  labels:
    job-release: "4.3"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-origin-installer-e2e-aws-calico-4.3
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-aws-calico-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-aws
      - --template=/usr/local/e2e-aws
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.3
      - name: BRANCH
        value: "4.3"
      - name: CLUSTER_TYPE
        value: aws
      - name: CLUSTER_VARIANT
        value: calico
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-calico
            commands: TEST_SUITE=openshift/conformance/parallel run-tests
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-aws-calico
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/conformance/parallel run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-aws-calico-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-aws
        name: job-definition
        subPath: cluster-launch-installer-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-aws
    - configMap:
        name: prow-job-cluster-launch-installer-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
