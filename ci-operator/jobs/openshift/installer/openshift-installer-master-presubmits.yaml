presubmits:
  openshift/installer:
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e
    optional: true
    rerun_command: /test e2e
    skip_report: true
    spec:
      containers:
      - args:
        - -c
        - |
          set -eux
          target=$(awk < /usr/local/e2e-targets \
              --assign "r=$RANDOM" \
              'BEGIN { r /= 32767 } (r -= $1) <= 0 { print $2; exit }')
          case "$target" in
              aws) template=e2e; CLUSTER_TYPE=aws;;
              azure) template=e2e; CLUSTER_TYPE=azure4;;
              aws-upi) template=upi-e2e; CLUSTER_TYPE=aws;;
              vsphere) template=upi-e2e; CLUSTER_TYPE=vsphere;;
              *) echo >&2 "invalid target $target"; exit 1 ;;
          esac
          ln -s "/usr/local/job-definition/cluster-launch-installer-$template.yaml" /tmp/e2e
          ln -s "/usr/local/cluster-profiles/$CLUSTER_TYPE" /tmp/e2e-cluster-profile
          export CLUSTER_TYPE
          exec ci-operator \
              --artifact-dir=$(ARTIFACTS) \
              --give-pr-author-access-to-namespace=true \
              --secret-dir=/tmp/e2e-cluster-profile \
              --sentry-dsn-path=/etc/sentry-dsn/ci-operator \
              --target=e2e \
              --template=/tmp/e2e
        command:
        - bash
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/cluster-profiles/aws
          name: cluster-profile-aws
        - mountPath: /usr/local/cluster-profiles/azure4
          name: cluster-profile-azure4
        - mountPath: /usr/local/cluster-profiles/vsphere
          name: cluster-profile-vsphere
        - mountPath: /usr/local/e2e-targets
          name: e2e-targets
          subPath: e2e-targets
        - mountPath: /usr/local/job-definition
          name: job-definition
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile-aws
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - name: cluster-profile-azure4
        projected:
          sources:
          - secret:
              name: cluster-secrets-azure4
      - name: cluster-profile-vsphere
        projected:
          sources:
          - secret:
              name: cluster-secrets-vsphere
      - configMap:
          name: e2e-targets
        name: e2e-targets
      - name: job-definition
        projected:
          sources:
          - configMap:
              name: prow-job-cluster-launch-installer-e2e
          - configMap:
              name: prow-job-cluster-launch-installer-upi-e2e
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-aws
    rerun_command: /test e2e-aws
    run_if_changed: ^([^d]|d(d|o(d|cd))*([^do]|o([^cd]|c[^ds])))*(d(d|o(d|cd))*(oc?)?)?$
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-aws-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-aws
        - --template=/usr/local/e2e-aws
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-aws,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-disruptive
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-aws-disruptive
    optional: true
    rerun_command: /test e2e-aws-disruptive
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-aws-disruptive-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-aws-disruptive
        - --template=/usr/local/e2e-aws-disruptive
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-disruptive
        - name: TEST_COMMAND
          value: setup_ssh_bastion; TEST_SUITE=openshift/disruptive run-tests; TEST_SUITE=openshift/conformance/parallel
            run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-disruptive-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-disruptive
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-aws-disruptive,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-proxy
    decorate: true
    decoration_config:
      skip_cloning: true
    name: pull-ci-openshift-installer-master-e2e-aws-proxy
    optional: true
    rerun_command: /test e2e-aws-proxy
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-proxy-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-aws-proxy
        - --template=/usr/local/e2e-aws-proxy
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: ENABLE_PROXY
          value: "true"
        - name: JOB_NAME_SAFE
          value: e2e-aws-proxy
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-proxy-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-proxy
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-aws-proxy,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-rhel8
    decorate: true
    decoration_config:
      skip_cloning: true
    name: pull-ci-openshift-installer-master-e2e-aws-rhel8
    optional: true
    rerun_command: /test e2e-aws-rhel8
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-aws-rhel8-cluster-profile
        - --target=e2e-aws-rhel8
        - --template=/usr/local/e2e-aws-rhel8
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          value: |
            tag_specification:
              name: '4.0'
              namespace: ocp
            build_root:
              image_stream_tag:
                cluster: https://api.ci.openshift.org
                name: release
                namespace: openshift
                tag: golang-1.10
            base_images:
              base:
                name: '4.0'
                namespace: ocp
                tag: base
              machine-os-content:
                name: machine-os-content
                namespace: rhcos
                tag: latest
            canonical_go_repository: github.com/openshift/installer
            images:
            - dockerfile_path: images/installer/Dockerfile.ci
              from: base
              inputs:
                root:
                  as:
                  - build
              to: installer
            raw_steps:
            - output_image_tag_step:
                from: machine-os-content
                to:
                  name: stable
                  tag: machine-os-content
            resources:
              '*':
                limits:
                  memory: 4Gi
                requests:
                  cpu: 100m
                  memory: 200Mi
            tests:
            - as: e2e-aws
              commands: TEST_SUITE=openshift/conformance/parallel run-tests
              openshift_installer:
                cluster_profile: aws
        - name: JOB_NAME_SAFE
          value: e2e-aws-rhel8
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-rhel8-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-rhel8
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: (?m)^/test( | .* )e2e-aws-rhel8,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-aws-scaleup-rhel7
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-aws-scaleup-rhel7
    optional: true
    rerun_command: /test e2e-aws-scaleup-rhel7
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-aws-scaleup-rhel7-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-aws-scaleup-rhel7
        - --template=/usr/local/e2e-aws-scaleup-rhel7
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-scaleup-rhel7
        - name: RPM_REPO_CRIO_DIR
          value: 4.3-rhel-7
        - name: RPM_REPO_OPENSHIFT_ORIGIN
          value: https://rpms.svc.ci.openshift.org/openshift-origin-v4.3/
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-scaleup-rhel7-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-scaleup-rhel7
          name: job-definition
          subPath: cluster-scaleup-e2e-40.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
          - configMap:
              name: cluster-profile-aws-centos-40
      - configMap:
          name: prow-job-cluster-scaleup-e2e-40
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-aws-scaleup-rhel7,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-shared-vpc
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-aws-shared-vpc
    optional: true
    rerun_command: /test e2e-aws-shared-vpc
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-aws-shared-vpc-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-aws-shared-vpc
        - --template=/usr/local/e2e-aws-shared-vpc
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CLUSTER_VARIANT
          value: shared-vpc
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-shared-vpc
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-shared-vpc-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-shared-vpc
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-aws-shared-vpc,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/e2e-aws-upgrade
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-aws-upgrade
    rerun_command: /test e2e-aws-upgrade
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-aws-upgrade-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-aws-upgrade
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-upgrade-cluster-profile
          name: cluster-profile
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-aws-upgrade,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-upi
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-aws-upi
    optional: true
    rerun_command: /test e2e-aws-upi
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-aws-upi-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-aws-upi
        - --template=/usr/local/e2e-aws-upi
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-upi
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-upi-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-upi
          name: job-definition
          subPath: cluster-launch-installer-upi-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-upi-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-aws-upi,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-azure
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-azure
    optional: true
    rerun_command: /test e2e-azure
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-azure-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-azure
        - --template=/usr/local/e2e-azure
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: azure4
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-azure
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-azure-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-azure
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-azure4
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-azure,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-azure-shared-vpc
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-azure-shared-vpc
    optional: true
    rerun_command: /test e2e-azure-shared-vpc
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-azure-shared-vpc-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-azure-shared-vpc
        - --template=/usr/local/e2e-azure-shared-vpc
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: azure4
        - name: CLUSTER_VARIANT
          value: shared-vpc
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-azure-shared-vpc
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-azure-shared-vpc-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-azure-shared-vpc
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-azure4
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-azure-shared-vpc,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-gcp
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-gcp
    optional: true
    rerun_command: /test e2e-gcp
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-gcp-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-gcp
        - --template=/usr/local/e2e-gcp
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-gcp
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-gcp
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-gcp,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-gcp-shared-vpc
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-gcp-shared-vpc
    optional: true
    rerun_command: /test e2e-gcp-shared-vpc
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-gcp-shared-vpc-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-gcp-shared-vpc
        - --template=/usr/local/e2e-gcp-shared-vpc
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CLUSTER_VARIANT
          value: shared-vpc
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-gcp-shared-vpc
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-shared-vpc-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-gcp-shared-vpc
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-gcp-shared-vpc,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-gcp-upgrade
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-gcp-upgrade
    rerun_command: /test e2e-gcp-upgrade
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-gcp-upgrade-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-gcp-upgrade
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-upgrade-cluster-profile
          name: cluster-profile
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-gcp-upgrade,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-gcp-upi
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-gcp-upi
    optional: true
    rerun_command: /test e2e-gcp-upi
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-gcp-upi-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-gcp-upi
        - --template=/usr/local/e2e-gcp-upi
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-gcp-upi
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-gcp-upi-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-gcp-upi
          name: job-definition
          subPath: cluster-launch-installer-upi-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-installer-upi-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-gcp-upi,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-libvirt
    decorate: true
    name: pull-ci-openshift-installer-master-e2e-libvirt
    optional: true
    rerun_command: /test e2e-libvirt
    run_if_changed: ^([^d]|d(d|o(d|cd))*([^do]|o([^cd]|c[^ds])))*(d(d|o(d|cd))*(oc?)?)?$
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-libvirt-cluster-profile
        - --target=e2e-libvirt
        - --template=/usr/local/e2e-libvirt
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: gcp
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-libvirt
        - name: TEST_COMMAND
          value: |
            cat >tests <<EOTESTS
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][Area:Networking][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][templates] templateinstance creation with invalid object reports error  should report a failure on creation [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][templates] templateinstance cross-namespace test should create and delete objects across namespaces [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][templates] templateinstance impersonation tests should pass impersonation creation tests [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][templates] templateinstance impersonation tests should pass impersonation deletion tests [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][templates] templateinstance impersonation tests should pass impersonation update tests [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][templates] templateinstance object kinds test should create and delete objects from varying API groups [Suite:openshift/conformance/parallel/minimal]"
            "[Conformance][templates] templateinstance security tests  should pass security tests [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:AnnotationTrigger] Annotation trigger reconciles after the image is overwritten [Suite:openshift/conformance/parallel]"
            "[Feature:Builds] buildconfig secret injector  should inject secrets to the appropriate buildconfigs [Suite:openshift/conformance/parallel]"
            "[Feature:Builds][Conformance] imagechangetriggers  imagechangetriggers should trigger builds of all types [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance] oc new-app  should fail with a --name longer than 58 characters [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance] remove all builds when build configuration is removed  oc delete buildconfig should start builds and delete the buildconfig [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in docker build environment variable references [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][Conformance][valueFrom] process valueFrom in build strategy environment variables  should fail resolving unresolvable valueFrom in sti build environment variable references [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][pruning] prune builds based on settings in the buildconfig  [Conformance] buildconfigs should have a default history limit set when created via the group api [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune builds after a buildConfig change [Suite:openshift/conformance/parallel]"
            "[Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune canceled builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[Feature:Builds][pruning] prune builds based on settings in the buildconfig  should prune errored builds based on the failedBuildsHistoryLimit setting [Suite:openshift/conformance/parallel]"
            "[Feature:Builds][pullsecret][Conformance] docker build using a pull secret  Building from a template should create a docker build that pulls using a secret run it [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:DeploymentConfig] deploymentconfigs ignores deployer and lets the config with a NewReplicationControllerCreated reason [Conformance] should let the deployment config with a NewReplicationControllerCreated reason [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:DeploymentConfig] deploymentconfigs initially [Conformance] should not deploy if pods never transition to ready [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:DeploymentConfig] deploymentconfigs should respect image stream tag reference policy [Conformance] resolve the image pull spec [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:DeploymentConfig] deploymentconfigs when run iteratively [Conformance] should immediately start a new deployment [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap [Conformance] should expand the config map key to a value [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:ImageLayers][registry] Image layer subresource should identify a deleted image as missing [Suite:openshift/conformance/parallel]"
            "[Feature:ImageLookup][registry][Conformance] Image policy should perform lookup when the pod has the resolve-names annotation [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:ImageLookup][registry][Conformance] Image policy should update standard Kube object image fields when local names are on [Suite:openshift/conformance/parallel/minimal]"
            "[Feature:Machines][Smoke] Managed cluster should have machine resources [Suite:openshift/conformance/parallel]"
            "[Feature:Platform] Managed cluster should have operators on the cluster version [Suite:openshift/conformance/parallel]"
            "[Feature:Platform] OLM should list catalogsources [Suite:openshift/conformance/parallel]"
            "[Feature:Platform] OLM should list clusterserviceversions [Suite:openshift/conformance/parallel]"
            "[Feature:Platform] OLM should list installplans [Suite:openshift/conformance/parallel]"
            "[Feature:Platform] OLM should list operatorgroups [Suite:openshift/conformance/parallel]"
            "[Feature:Platform] OLM should list packagemanifests [Suite:openshift/conformance/parallel]"
            "[Feature:Platform] OLM should list subscriptions [Suite:openshift/conformance/parallel]"
            "[Feature:Platform][Smoke] Managed cluster should ensure pods use images from our release image with proper ImagePullPolicy [Suite:openshift/conformance/parallel]"
            "[Feature:Platform][Smoke] Managed cluster should start all core operators [Suite:openshift/conformance/parallel]"
            "[k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull from private registry with secret [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] Container Runtime blackbox test when running a container with a new image should be able to pull image from docker hub [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] Container Runtime blackbox test when starting a container that exits should report termination message from log output if TerminationMessagePolicy FallbackToLogOnError is set [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] Container Runtime blackbox test when starting a container that exits should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] Docker Containers should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] Pods should be submitted and removed [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] Security Context When creating a container with runAsUser should run the container with uid 0 [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] Security Context When creating a pod with privileged should run the container as unprivileged when false [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] Security Context When creating a pod with readOnlyRootFilesystem should run the container with readonly rootfs when readOnlyRootFilesystem=true [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [NodeConformance] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class should be submitted and removed  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support pod.Spec.SecurityContext.SupplementalGroups [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support seccomp alpha unconfined annotation on the container [Feature:Seccomp] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support seccomp alpha unconfined annotation on the pod [Feature:Seccomp] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support seccomp default which is unconfined [Feature:Seccomp] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] Generated clientset should create v1beta1 cronJobs, delete cronJobs, watch cronJobs [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-api-machinery] Servers with support for Table transformation should return chunks of table results for list calls [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-apps] CronJob should remove from active list jobs that have been deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-apps] Deployment deployment reaping should cascade to its replica sets and pods [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps] Deployment deployment should delete old replica sets [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-apps] Deployment deployment should support proportional scaling [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-apps] Deployment iterative rollouts should eventually progress [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps] DisruptionController evictions: maxUnavailable deny evictions, integer => should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps] DisruptionController evictions: no PDB => should allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps] DisruptionController evictions: too few pods, replicaSet, percentage => should not allow an eviction [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps] DisruptionController should update PodDisruptionBudget status [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps] Job should delete a job [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-auth] Certificates API should support building a client with a CSR [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to create another node [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-auth] [Feature:NodeAuthorizer] A node shouldn't be able to delete another node [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-auth] [Feature:NodeAuthorizer] Getting a non-existent secret should exit with the Forbidden error, not a NotFound error [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-cli] Kubectl client [k8s.io] Kubectl apply should reuse port when apply to an existing SVC [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-cli] Kubectl client [k8s.io] Kubectl run default should create an rc or deployment from an image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-cli] Kubectl client [k8s.io] Kubectl run job should create a job from an image when restart is OnFailure  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-cli] Kubectl client [k8s.io] Kubectl run pod should create a pod from an image when restart is Never  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-cli] Kubectl client [k8s.io] Kubectl version should check is all data is printed  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-cli] Kubectl client [k8s.io] Proxy server should support --unix-socket=/path  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-cli] Kubectl client [k8s.io] Simple pod should support exec [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-cli] Kubectl client [k8s.io] Simple pod should support exec through kubectl proxy [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-cli] Kubectl client [k8s.io] Simple pod should support port-forward [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-cli] Kubectl client [k8s.io] Update Demo should scale a replication controller  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-instrumentation] MetricsGrabber should grab all metrics from a Kubelet. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should be able to update NodePorts with two same port numbers but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Services should check NodePort out-of-range [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Services should use same NodePort with same port but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-scheduling] ResourceQuota [Feature:PodPriority] should verify ResourceQuota's priority class scope (cpu, memory quota set) against a pod with same priority class. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-scheduling] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with terminating scopes through scope selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-scheduling] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim with a storage class. [sig-storage] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-scheduling] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-scheduling] ResourceQuota should verify ResourceQuota with best effort scope. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-scheduling] ResourceQuota should verify ResourceQuota with terminating scopes. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] Downward API volume should provide podname as non-root with fsgroup [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Downward API volume should provide podname as non-root with fsgroup and defaultMode [NodeFeature:FSGroup] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] EmptyDir volumes when FSGroup is specified [NodeFeature:FSGroup] volume on tmpfs should have the correct mode using FSGroup [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : configmap [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : secret [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: emptydir] [Testpattern: Inline-volume (default fs)] subPath should support readOnly directory specified in the volumeMount [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should be able to unmount after the subpath directory is deleted [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support existing single file [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: hostPath] [Testpattern: Inline-volume (default fs)] subPath should support non-existent path [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            EOTESTS
            TEST_SUITE="--file=tests" run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-libvirt-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-libvirt
          name: job-definition
          subPath: cluster-launch-installer-libvirt-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-gcp
          - configMap:
              name: cluster-profile-gcp
      - configMap:
          name: prow-job-cluster-launch-installer-libvirt-e2e
        name: job-definition
    trigger: (?m)^/test( | .* )e2e-libvirt,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-metal
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-metal
    optional: true
    rerun_command: /test e2e-metal
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-metal-cluster-profile
        - --target=e2e-metal
        - --template=/usr/local/e2e-metal
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: metal
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-metal
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-metal-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-metal
          name: job-definition
          subPath: cluster-launch-installer-metal-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-metal
      - configMap:
          name: prow-job-cluster-launch-installer-metal-e2e
        name: job-definition
    trigger: (?m)^/test( | .* )e2e-metal,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-openstack
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-openstack
    optional: true
    rerun_command: /test e2e-openstack
    run_if_changed: ^([^d]|d(d|o(d|cd))*([^do]|o([^cd]|c[^ds])))*(d(d|o(d|cd))*(oc?)?)?$
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-openstack-cluster-profile
        - --target=e2e-openstack
        - --template=/usr/local/e2e-openstack
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: openstack
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-openstack
        - name: KURYR_ENABLED
          value: "false"
        - name: TEST_COMMAND
          value: run-minimal-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-openstack-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-openstack
          name: job-definition
          subPath: cluster-launch-installer-openstack-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-openstack
      - configMap:
          name: prow-job-cluster-launch-installer-openstack-e2e
        name: job-definition
    trigger: (?m)^/test( | .* )e2e-openstack,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-openstack-parallel
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-openstack-parallel
    optional: true
    rerun_command: /test e2e-openstack-parallel
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-openstack-parallel-cluster-profile
        - --target=e2e-openstack-parallel
        - --template=/usr/local/e2e-openstack-parallel
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: openstack
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-openstack-parallel
        - name: KURYR_ENABLED
          value: "false"
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-openstack-parallel-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-openstack-parallel
          name: job-definition
          subPath: cluster-launch-installer-openstack-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-openstack
      - configMap:
          name: prow-job-cluster-launch-installer-openstack-e2e
        name: job-definition
    trigger: (?m)^/test( | .* )e2e-openstack-parallel,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-ovirt
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-ovirt
    optional: true
    rerun_command: /test e2e-ovirt
    run_if_changed: ^([^d]|d(d|o(d|cd))*([^do]|o([^cd]|c[^ds])))*(d(d|o(d|cd))*(oc?)?)?$
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --secret-dir=/usr/local/e2e-ovirt-cluster-profile
        - --target=e2e-ovirt
        - --template=/usr/local/e2e-ovirt
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: ovirt
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-ovirt
        - name: TEST_COMMAND
          value: run-minimal-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-ovirt-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-ovirt
          name: job-definition
          subPath: cluster-launch-installer-ovirt-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-ovirt
          - configMap:
              name: cluster-profile-ovirt
      - configMap:
          name: prow-job-cluster-launch-installer-ovirt-e2e
        name: job-definition
    trigger: (?m)^/test( | .* )e2e-ovirt,?($|\s.*)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-vsphere
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-e2e-vsphere
    optional: true
    rerun_command: /test e2e-vsphere
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --secret-dir=/usr/local/e2e-vsphere-cluster-profile
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=e2e-vsphere
        - --template=/usr/local/e2e-vsphere
        command:
        - ci-operator
        env:
        - name: CLUSTER_TYPE
          value: vsphere
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        - name: JOB_NAME_SAFE
          value: e2e-vsphere
        - name: TEST_COMMAND
          value: TEST_SUITE=openshift/conformance/parallel run-tests
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-vsphere-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-vsphere
          name: job-definition
          subPath: cluster-launch-installer-upi-e2e.yaml
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-vsphere
      - configMap:
          name: prow-job-cluster-launch-installer-upi-e2e
        name: job-definition
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )e2e-vsphere,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/gofmt
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-gofmt
    rerun_command: /test gofmt
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=gofmt
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )gofmt,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/golint
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-golint
    rerun_command: /test golint
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=golint
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )golint,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/govet
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-govet
    rerun_command: /test govet
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=govet
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )govet,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/images
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-images
    rerun_command: /test images
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=[images]
        - --target=[release:latest]
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )images,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/unit
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-unit
    rerun_command: /test unit
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=unit
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )unit,?($|\s.*)
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/verify-vendor
    decorate: true
    decoration_config:
      skip_cloning: true
    labels:
      ci-operator.openshift.io/prowgen-controlled: "true"
      pj-rehearse.openshift.io/can-be-rehearsed: "true"
    name: pull-ci-openshift-installer-master-verify-vendor
    rerun_command: /test verify-vendor
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --branch=master
        - --give-pr-author-access-to-namespace=true
        - --org=openshift
        - --repo=installer
        - --resolver-address=http://ci-operator-configresolver
        - --sentry-dsn-path=/etc/sentry-dsn/ci-operator
        - --target=verify-vendor
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-master-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /etc/sentry-dsn
          name: sentry-dsn
          readOnly: true
      serviceAccountName: ci-operator
      volumes:
      - name: sentry-dsn
        secret:
          secretName: sentry-dsn
    trigger: (?m)^/test( | .* )verify-vendor,?($|\s.*)
  - agent: kubernetes
    always_run: true
    context: ci/prow/shellcheck
    decorate: true
    name: pull-ci-openshift-installer-shellcheck
    rerun_command: /test shellcheck
    spec:
      containers:
      - args:
        - ./hack/shellcheck.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/coreos/shellcheck-alpine:v0.5.0
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 500m
    trigger: (?m)^/test shellcheck
  - agent: kubernetes
    always_run: true
    context: ci/prow/tf-fmt
    decorate: true
    name: pull-ci-openshift-installer-tf-fmt
    optional: true
    rerun_command: /test tf-fmt
    spec:
      containers:
      - args:
        - ./hack/tf-fmt.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/coreos/terraform-alpine:v0.12.0-rc1
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 500m
    trigger: (?m)^/test( | .* )tf-fmt,?($|\s.*)
  - agent: kubernetes
    always_run: true
    context: ci/prow/tf-lint
    decorate: true
    name: pull-ci-openshift-installer-tf-lint
    rerun_command: /test tf-lint
    spec:
      containers:
      - args:
        - ./hack/tf-lint.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/coreos/tflint
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 500m
    trigger: (?m)^/test tf-lint
  - agent: kubernetes
    always_run: true
    context: ci/prow/yaml-lint
    decorate: true
    name: pull-ci-openshift-installer-yaml-lint
    rerun_command: /test yaml-lint
    spec:
      containers:
      - args:
        - ./hack/yaml-lint.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/coreos/yamllint
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: 500m
    trigger: (?m)^/test yaml-lint
