presubmits:
  openshift/installer:
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws
    decorate: true
    name: pull-ci-openshift-installer-master-e2e-aws
    rerun_command: /test e2e-aws
    run_if_changed: ^([^d]|d(d|o(d|cd))*([^do]|o([^cd]|c[^ds])))*(d(d|o(d|cd))*(oc?)?)?$
    skip_cloning: true
    spec:
      containers:
      - command:
        - ci-operator
        - --give-pr-author-access-to-namespace=true
        - --artifact-dir=$(ARTIFACTS)
        - --secret-dir=/usr/local/e2e-aws-cluster-profile
        - --template=/usr/local/e2e-aws
        - --target=e2e-aws
        - --give-pr-author-access-to-namespace
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws
        - name: TEST_FOCUS
          value: Secrets should be consumable from pods in volume with defaultMode
            set
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( all| e2e-aws),?(\s+|$))
  - agent: kubernetes
    always_run: false
    branches:
    - master
    context: ci/prow/e2e-aws-all
    decorate: true
    name: pull-ci-openshift-installer-master-e2e-aws-all
    rerun_command: /test e2e-aws-all
    skip_cloning: true
    spec:
      containers:
      - command:
        - ci-operator
        - --give-pr-author-access-to-namespace=true
        - --artifact-dir=$(ARTIFACTS)
        - --secret-dir=/usr/local/e2e-aws-all-cluster-profile
        - --template=/usr/local/e2e-aws-all
        - --target=e2e-aws-all
        - --give-pr-author-access-to-namespace
        env:
        - name: CLUSTER_TYPE
          value: aws
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-configs
        - name: JOB_NAME_SAFE
          value: e2e-aws-all
        - name: TEST_FOCUS
          value: Suite:openshift/conformance/parallel
        - name: TEST_FOCUS_SERIAL
          value: Suite:openshift/conformance/serial
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
        volumeMounts:
        - mountPath: /usr/local/e2e-aws-all-cluster-profile
          name: cluster-profile
        - mountPath: /usr/local/e2e-aws-all
          name: job-definition
          subPath: cluster-launch-installer-e2e.yaml
      serviceAccountName: ci-operator
      volumes:
      - name: cluster-profile
        projected:
          sources:
          - secret:
              name: cluster-secrets-aws
      - configMap:
          name: prow-job-cluster-launch-installer-e2e
        name: job-definition
    trigger: ((?m)^/test( e2e-aws-all),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/gofmt
    decorate: true
    name: pull-ci-openshift-installer-master-gofmt
    rerun_command: /test gofmt
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=gofmt
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| gofmt),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/golint
    decorate: true
    name: pull-ci-openshift-installer-master-golint
    rerun_command: /test golint
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=golint
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| golint),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/govet
    decorate: true
    name: pull-ci-openshift-installer-master-govet
    rerun_command: /test govet
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=govet
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| govet),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/images
    decorate: true
    name: pull-ci-openshift-installer-master-images
    rerun_command: /test images
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=[images]
        - --target=[release:latest]
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| images),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/unit
    decorate: true
    name: pull-ci-openshift-installer-master-unit
    rerun_command: /test unit
    skip_cloning: true
    spec:
      containers:
      - args:
        - --artifact-dir=$(ARTIFACTS)
        - --give-pr-author-access-to-namespace=true
        - --target=unit
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: openshift-installer-master.yaml
              name: ci-operator-configs
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| unit),?(\s+|$))
  - agent: kubernetes
    always_run: true
    context: ci/prow/shellcheck
    decorate: true
    name: pull-ci-openshift-installer-shellcheck
    rerun_command: /test shellcheck
    spec:
      containers:
      - args:
        - ./hack/shellcheck.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/coreos/shellcheck-alpine:v0.5.0
        imagePullPolicy: Always
        name: ""
        resources: {}
    trigger: (?m)^/test shellcheck
  - agent: kubernetes
    always_run: true
    context: ci/prow/tf-fmt
    decorate: true
    name: pull-ci-openshift-installer-tf-fmt
    rerun_command: /test tf-fmt
    spec:
      containers:
      - args:
        - ./hack/tf-fmt.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/coreos/terraform-alpine:v0.11.8
        imagePullPolicy: Always
        name: ""
        resources: {}
    trigger: ((?m)^/test( all| tf-fmt),?(\s+|$))
  - agent: kubernetes
    always_run: true
    context: ci/prow/tf-lint
    decorate: true
    name: pull-ci-openshift-installer-tf-lint
    rerun_command: /test tf-lint
    spec:
      containers:
      - args:
        - ./hack/tf-lint.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/coreos/tflint
        imagePullPolicy: Always
        name: ""
        resources: {}
    trigger: (?m)^/test tf-lint
  - agent: kubernetes
    always_run: true
    context: ci/prow/yaml-lint
    decorate: true
    name: pull-ci-openshift-installer-yaml-lint
    rerun_command: /test yaml-lint
    spec:
      containers:
      - args:
        - ./hack/yaml-lint.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/coreos/yamllint
        imagePullPolicy: Always
        name: ""
        resources: {}
    trigger: (?m)^/test yaml-lint
