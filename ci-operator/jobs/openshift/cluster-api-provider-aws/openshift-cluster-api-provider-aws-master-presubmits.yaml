presubmits:
  openshift/cluster-api-provider-aws:
  - agent: jenkins
    always_run: true
    context: ci/jenkins/e2e
    labels:
      master: ci.openshift.redhat.com
    name: ci-kubernetes-aws-actuator
    rerun_command: /test e2e
    trigger: ((?m)^/test( all| e2e),?(\s+|$))
  - agent: kubernetes
    always_run: true
    context: ci/prow/go-fmt
    decorate: true
    name: pull-ci-openshift-cluster-api-provider-aws-master-gofmt
    rerun_command: /test go-fmt
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --artifact-dir=$(ARTIFACTS)
        - --target=gofmt
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.yaml
              name: ci-operator-openshift-cluster-api-provider-aws
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test(all| go-fmt),?(\s+|$))
  - agent: kubernetes
    always_run: true
    context: ci/prow/golint
    decorate: true
    name: pull-ci-openshift-cluster-api-provider-aws-master-golint
    rerun_command: /test golint
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --artifact-dir=$(ARTIFACTS)
        - --target=golint
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.yaml
              name: ci-operator-openshift-cluster-api-provider-aws
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test(all| golint),?(\s+|$))
  - agent: kubernetes
    always_run: true
    context: ci/prow/go-vet
    decorate: true
    name: pull-ci-openshift-cluster-api-provider-aws-master-govet
    rerun_command: /test go-vet
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --artifact-dir=$(ARTIFACTS)
        - --target=govet
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.yaml
              name: ci-operator-openshift-cluster-api-provider-aws
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test(all| go-vet),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/images
    decorate: true
    name: pull-ci-openshift-cluster-api-provider-aws-master-images
    rerun_command: /test images
    skip_cloning: true
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --artifact-dir=$(ARTIFACTS)
        - --target=[images]
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.yaml
              name: ci-operator-openshift-cluster-api-provider-aws
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| images),?(\s+|$))
  - agent: kubernetes
    always_run: true
    branches:
    - master
    context: ci/prow/unit
    decorate: true
    name: pull-ci-openshift-cluster-api-provider-aws-master-unit
    rerun_command: /test unit
    skip_cloning: true
    spec:
      containers:
      - args:
        - --give-pr-author-access-to-namespace=true
        - --artifact-dir=$(ARTIFACTS)
        - --target=unit
        command:
        - ci-operator
        env:
        - name: CONFIG_SPEC
          valueFrom:
            configMapKeyRef:
              key: master.yaml
              name: ci-operator-openshift-cluster-api-provider-aws
        image: ci-operator:latest
        imagePullPolicy: Always
        name: ""
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 10m
      serviceAccountName: ci-operator
    trigger: ((?m)^/test( all| unit),?(\s+|$))
  - agent: kubernetes
    always_run: true
    context: ci/prow/yaml-lint
    decorate: true
    name: pull-ci-openshift-cluster-api-provider-aws-yaml-lint
    rerun_command: /test yaml-lint
    spec:
      containers:
      - args:
        - ./hack/yaml-lint.sh
        command:
        - sh
        env:
        - name: IS_CONTAINER
          value: "TRUE"
        image: quay.io/coreos/yamllint
        imagePullPolicy: Always
        name: ""
        resources: {}
    trigger: ((?m)^/test(all| yaml-lint),?(\s+|$))
