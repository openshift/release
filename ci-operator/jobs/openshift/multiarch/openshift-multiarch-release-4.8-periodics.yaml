periodics:
- agent: kubernetes
  cluster: build01
  cron: 0 0,12 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-ppc64le-4.8
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.197.185
      - name: BASTION_SVC_0_2_IP
        value: 172.30.198.104
      - name: BASTION_SVC_0_3_IP
        value: 172.30.62.154
      - name: BASTION_SVC_1_0_IP
        value: 172.30.86.105
      - name: BASTION_SVC_1_1_IP
        value: 172.30.222.65
      - name: BASTION_SVC_1_2_IP
        value: 172.30.119.201
      - name: BASTION_SVC_1_3_IP
        value: 172.30.171.36
      - name: BASTION_SVC_2_0_IP
        value: 172.30.141.175
      - name: BASTION_SVC_2_1_IP
        value: 172.30.190.57
      - name: BASTION_SVC_2_2_IP
        value: 172.30.161.102
      - name: BASTION_SVC_2_3_IP
        value: 172.30.133.69
      - name: BASTION_SVC_IP
        value: 172.30.213.49
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: libvirt-ppc64le
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: c155f2u35
      - name: TEST_COMMAND
        value: |
          # these tests are not able to run in CI due to
          # missing test image dependencies.  They must be
          # run manually
          cat > invert_excluded.py <<EOSCRIPT
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          chmod +x invert_excluded.py
          cat > excluded_tests <<EOEXCLUDE
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel]"
            "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should be able to connect to a service that is idled because a GET on the route will unidle it [Suite:openshift/conformance/parallel/minimal]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow egress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from namespace on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce egress policy allowing traffic to a server in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce except clause while egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple egress policies with egress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should ensure an IP overlapping both IPBlock.CIDR and IPBlock.Except is allowed [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny-all' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should work with Ingress,Egress specified together [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI FSGroupPolicy [LinuxOnly] should not modify fsGroup if fsGroupPolicy=None [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
          EOEXCLUDE
          export PATH=/usr/libexec/origin:$PATH
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" TEST_UPGRADE_OPTIONS="--from-repository=quay.io/multi-arch/community-e2e-images" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 0,12 * * *
  decorate: true
  labels:
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-s390x-4.8
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.12.147
      - name: BASTION_SVC_0_2_IP
        value: 172.30.226.233
      - name: BASTION_SVC_0_3_IP
        value: 172.30.227.193
      - name: BASTION_SVC_0_4_IP
        value: 172.30.226.24
      - name: BASTION_SVC_1_0_IP
        value: 172.30.109.91
      - name: BASTION_SVC_1_1_IP
        value: 172.30.107.233
      - name: BASTION_SVC_1_2_IP
        value: 172.30.162.64
      - name: BASTION_SVC_1_3_IP
        value: 172.30.206.72
      - name: BASTION_SVC_1_4_IP
        value: 172.30.55.51
      - name: BASTION_SVC_IP
        value: 172.30.93.139
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: ocponz3
      - name: TEST_COMMAND
        value: |
          # these tests are not able to run in CI due to
          # missing test image dependencies.  They must be
          # run manually
          cat > invert_excluded.py <<EOSCRIPT
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          chmod +x invert_excluded.py
          cat > excluded_tests <<EOEXCLUDE
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] clone repository using git:// protocol  should clone using git:// if no proxy is configured [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow egress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from namespace on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce egress policy allowing traffic to a server in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce except clause while egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple egress policies with egress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should ensure an IP overlapping both IPBlock.CIDR and IPBlock.Except is allowed [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny-all' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should work with Ingress,Egress specified together [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
          EOEXCLUDE
          export PATH=/usr/libexec/origin:$PATH
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" TEST_UPGRADE_OPTIONS="--from-repository=quay.io/multi-arch/community-e2e-images" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 4,16 * * *
  decorate: true
  labels:
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-upgrade-remote-libvirt-s390x-4.7-to-4.8
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.12.147
      - name: BASTION_SVC_0_2_IP
        value: 172.30.226.233
      - name: BASTION_SVC_0_3_IP
        value: 172.30.227.193
      - name: BASTION_SVC_0_4_IP
        value: 172.30.226.24
      - name: BASTION_SVC_1_0_IP
        value: 172.30.109.91
      - name: BASTION_SVC_1_1_IP
        value: 172.30.107.233
      - name: BASTION_SVC_1_2_IP
        value: 172.30.162.64
      - name: BASTION_SVC_1_3_IP
        value: 172.30.206.72
      - name: BASTION_SVC_1_4_IP
        value: 172.30.55.51
      - name: BASTION_SVC_IP
        value: 172.30.93.139
      - name: BRANCH
        value: "4.8"
      - name: BRANCH_FROM
        value: "4.7"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH_FROM)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: INSTALL_INITIAL_RELEASE
        value: "true"
      - name: MULTIARCH_RELEASE_IMAGE_INITIAL
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:$(BRANCH_FROM)
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:$(BRANCH)
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:$(BRANCH)
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: ocponz3
      - name: TEST_COMMAND
        value: TEST_SUITE=all run-upgrade-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 4,16 * * *
  decorate: true
  labels:
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-upgrade-remote-libvirt-ppc64le-4.7-to-4.8
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.197.185
      - name: BASTION_SVC_0_2_IP
        value: 172.30.198.104
      - name: BASTION_SVC_0_3_IP
        value: 172.30.62.154
      - name: BASTION_SVC_1_0_IP
        value: 172.30.86.105
      - name: BASTION_SVC_1_1_IP
        value: 172.30.222.65
      - name: BASTION_SVC_1_2_IP
        value: 172.30.119.201
      - name: BASTION_SVC_1_3_IP
        value: 172.30.171.36
      - name: BASTION_SVC_2_0_IP
        value: 172.30.141.175
      - name: BASTION_SVC_2_1_IP
        value: 172.30.190.57
      - name: BASTION_SVC_2_2_IP
        value: 172.30.161.102
      - name: BASTION_SVC_2_3_IP
        value: 172.30.133.69
      - name: BASTION_SVC_IP
        value: 172.30.213.49
      - name: BRANCH
        value: "4.8"
      - name: BRANCH_FROM
        value: "4.7"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH_FROM)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-upgrade
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
              upgrade: true
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: INSTALL_INITIAL_RELEASE
        value: "true"
      - name: MULTIARCH_RELEASE_IMAGE_INITIAL
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:$(BRANCH_FROM)
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:$(BRANCH)
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:$(BRANCH)
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: c155f2u35
      - name: TEST_COMMAND
        value: TEST_SUITE=all run-upgrade-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 2,14 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-image-ecosystem-ppc64le-4.8
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/image-ecosystem-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.197.185
      - name: BASTION_SVC_0_2_IP
        value: 172.30.198.104
      - name: BASTION_SVC_0_3_IP
        value: 172.30.62.154
      - name: BASTION_SVC_1_0_IP
        value: 172.30.86.105
      - name: BASTION_SVC_1_1_IP
        value: 172.30.222.65
      - name: BASTION_SVC_1_2_IP
        value: 172.30.119.201
      - name: BASTION_SVC_1_3_IP
        value: 172.30.171.36
      - name: BASTION_SVC_2_0_IP
        value: 172.30.141.175
      - name: BASTION_SVC_2_1_IP
        value: 172.30.190.57
      - name: BASTION_SVC_2_2_IP
        value: 172.30.161.102
      - name: BASTION_SVC_2_3_IP
        value: 172.30.133.69
      - name: BASTION_SVC_IP
        value: 172.30.213.49
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: image-ecosystem
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: c155f2u35
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/image-ecosystem run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/image-ecosystem-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 2,14 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-image-ecosystem-s390x-4.8
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/image-ecosystem-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.12.147
      - name: BASTION_SVC_0_2_IP
        value: 172.30.226.233
      - name: BASTION_SVC_0_3_IP
        value: 172.30.227.193
      - name: BASTION_SVC_0_4_IP
        value: 172.30.226.24
      - name: BASTION_SVC_1_0_IP
        value: 172.30.109.91
      - name: BASTION_SVC_1_1_IP
        value: 172.30.107.233
      - name: BASTION_SVC_1_2_IP
        value: 172.30.162.64
      - name: BASTION_SVC_1_3_IP
        value: 172.30.206.72
      - name: BASTION_SVC_1_4_IP
        value: 172.30.55.51
      - name: BASTION_SVC_IP
        value: 172.30.93.139
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: image-ecosystem
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: ocponz3
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/image-ecosystem run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/image-ecosystem-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 2,14 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-jenkins-e2e-ppc64le-4.8
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/jenkins-e2e-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.197.185
      - name: BASTION_SVC_0_2_IP
        value: 172.30.198.104
      - name: BASTION_SVC_0_3_IP
        value: 172.30.62.154
      - name: BASTION_SVC_1_0_IP
        value: 172.30.86.105
      - name: BASTION_SVC_1_1_IP
        value: 172.30.222.65
      - name: BASTION_SVC_1_2_IP
        value: 172.30.119.201
      - name: BASTION_SVC_1_3_IP
        value: 172.30.171.36
      - name: BASTION_SVC_2_0_IP
        value: 172.30.141.175
      - name: BASTION_SVC_2_1_IP
        value: 172.30.190.57
      - name: BASTION_SVC_2_2_IP
        value: 172.30.161.102
      - name: BASTION_SVC_2_3_IP
        value: 172.30.133.69
      - name: BASTION_SVC_IP
        value: 172.30.213.49
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: jenkins-e2e
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: c155f2u35
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/jenkins-e2e-rhel-only run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/jenkins-e2e-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 2,14 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-jenkins-e2e-s390x-4.8
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/jenkins-e2e-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.12.147
      - name: BASTION_SVC_0_2_IP
        value: 172.30.226.233
      - name: BASTION_SVC_0_3_IP
        value: 172.30.227.193
      - name: BASTION_SVC_0_4_IP
        value: 172.30.226.24
      - name: BASTION_SVC_1_0_IP
        value: 172.30.109.91
      - name: BASTION_SVC_1_1_IP
        value: 172.30.107.233
      - name: BASTION_SVC_1_2_IP
        value: 172.30.162.64
      - name: BASTION_SVC_1_3_IP
        value: 172.30.206.72
      - name: BASTION_SVC_1_4_IP
        value: 172.30.55.51
      - name: BASTION_SVC_IP
        value: 172.30.93.139
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: jenkins-e2e
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: ocponz3
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/jenkins-e2e-rhel-only run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/jenkins-e2e-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 8,20 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-compact-ppc64le-4.8
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.197.185
      - name: BASTION_SVC_0_2_IP
        value: 172.30.198.104
      - name: BASTION_SVC_0_3_IP
        value: 172.30.62.154
      - name: BASTION_SVC_1_0_IP
        value: 172.30.86.105
      - name: BASTION_SVC_1_1_IP
        value: 172.30.222.65
      - name: BASTION_SVC_1_2_IP
        value: 172.30.119.201
      - name: BASTION_SVC_1_3_IP
        value: 172.30.171.36
      - name: BASTION_SVC_2_0_IP
        value: 172.30.141.175
      - name: BASTION_SVC_2_1_IP
        value: 172.30.190.57
      - name: BASTION_SVC_2_2_IP
        value: 172.30.161.102
      - name: BASTION_SVC_2_3_IP
        value: 172.30.133.69
      - name: BASTION_SVC_IP
        value: 172.30.213.49
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: libvirt-ppc64le
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: MASTER_MEMORY
        value: "32768"
      - name: MASTER_DISK
        value: "32212254720"
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: c155f2u35
      - name: WORKER_REPLICAS
        value: "0"
      - name: TEST_COMMAND
        value: |
          # these tests are not able to run in CI due to
          # missing test image dependencies.  They must be
          # run manually
          cat > invert_excluded.py <<EOSCRIPT
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          chmod +x invert_excluded.py
          cat > excluded_tests <<EOEXCLUDE
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel]"
            "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should be able to connect to a service that is idled because a GET on the route will unidle it [Suite:openshift/conformance/parallel/minimal]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow egress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from namespace on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce egress policy allowing traffic to a server in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce except clause while egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple egress policies with egress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple ingress policies with ingress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should ensure an IP overlapping both IPBlock.CIDR and IPBlock.Except is allowed [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny-all' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should work with Ingress,Egress specified together [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI FSGroupPolicy [LinuxOnly] should not modify fsGroup if fsGroupPolicy=None [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
          EOEXCLUDE
          export PATH=/usr/libexec/origin:$PATH
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" TEST_UPGRADE_OPTIONS="--from-repository=quay.io/multi-arch/community-e2e-images" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 8,20 * * *
  decorate: true
  labels:
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.8"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-compact-s390x-4.8
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.12.147
      - name: BASTION_SVC_0_2_IP
        value: 172.30.226.233
      - name: BASTION_SVC_0_3_IP
        value: 172.30.227.193
      - name: BASTION_SVC_0_4_IP
        value: 172.30.226.24
      - name: BASTION_SVC_1_0_IP
        value: 172.30.109.91
      - name: BASTION_SVC_1_1_IP
        value: 172.30.107.233
      - name: BASTION_SVC_1_2_IP
        value: 172.30.162.64
      - name: BASTION_SVC_1_3_IP
        value: 172.30.206.72
      - name: BASTION_SVC_1_4_IP
        value: 172.30.55.51
      - name: BASTION_SVC_IP
        value: 172.30.93.139
      - name: BRANCH
        value: "4.8"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 6Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: MASTER_MEMORY
        value: "32768"
      - name: MASTER_DISK
        value: "32212254720"
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:4.8
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.8
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: ocponz3
      - name: WORKER_REPLICAS
        value: "0"
      - name: TEST_COMMAND
        value: |
          # these tests are not able to run in CI due to
          # missing test image dependencies.  They must be
          # run manually
          cat > invert_excluded.py <<EOSCRIPT
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          chmod +x invert_excluded.py
          cat > excluded_tests <<EOEXCLUDE
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] clone repository using git:// protocol  should clone using git:// if no proxy is configured [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Skipped:Disconnected] [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow egress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access from namespace on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should allow ingress access on one named port [Feature:NetworkPolicy] [Skipped:Network/OVNKubernetes] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce egress policy allowing traffic to a server in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce except clause while egress access to server in CIDR block [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce multiple egress policies with egress allow-all policy taking precedence [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy to allow traffic only from a pod in a different namespace based on PodSelector and NamespaceSelector [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should ensure an IP overlapping both IPBlock.CIDR and IPBlock.Except is allowed [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should support a 'default-deny-all' policy [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should work with Ingress,Egress specified together [Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Skipped:Network/OpenShiftSDN] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] CSI mock volume CSI Volume expansion should expand volume by restarting pod if attach=on, nodeExpansion=on [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
          EOEXCLUDE
          export PATH=/usr/libexec/origin:$PATH
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" TEST_UPGRADE_OPTIONS="--from-repository=quay.io/multi-arch/community-e2e-images" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
