periodics:
- agent: kubernetes
  cluster: build01
  cron: 0 4,16 * * *
  decorate: true
  labels:
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.6"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-ppc64le-4.6
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.197.185
      - name: BASTION_SVC_0_2_IP
        value: 172.30.198.104
      - name: BASTION_SVC_0_3_IP
        value: 172.30.62.154
      - name: BASTION_SVC_1_0_IP
        value: 172.30.86.105
      - name: BASTION_SVC_1_1_IP
        value: 172.30.222.65
      - name: BASTION_SVC_1_2_IP
        value: 172.30.119.201
      - name: BASTION_SVC_1_3_IP
        value: 172.30.171.36
      - name: BASTION_SVC_2_0_IP
        value: 172.30.141.175
      - name: BASTION_SVC_2_1_IP
        value: 172.30.190.57
      - name: BASTION_SVC_2_2_IP
        value: 172.30.161.102
      - name: BASTION_SVC_2_3_IP
        value: 172.30.133.69
      - name: BASTION_SVC_IP
        value: 172.30.213.49
      - name: BRANCH
        value: "4.6"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: libvirt-ppc64le
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.6
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.6
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: c155f2u35
      - name: TEST_COMMAND
        value: |
          # these tests are not able to run in CI due to
          # missing test image dependencies.  They must be
          # run manually
          cat > invert_excluded.py <<EOSCRIPT
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          chmod +x invert_excluded.py
          cat > excluded_tests <<EOEXCLUDE
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when tagging images should successfully tag the deployed image [Suite:openshift/conformance/parallel]"
            "[sig-arch] Managed cluster should have no crashlooping pods in core namespaces over four minutes [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] well-known endpoint should be reachable [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel]"
            "[sig-cluster-lifecycle] Pods cannot access the /config/master API endpoint [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should be able to connect to a service that is idled because a GET on the route will unidle it [Suite:openshift/conformance/parallel/minimal]"
            "[sig-network][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel]"
            "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Inline-volume (default fs)] subPath should support file as subpath [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should allow multicast traffic in namespaces where it is enabled [Suite:openshift/conformance/parallel]"
            "[sig-network] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should block multicast traffic in namespaces where it is disabled [Suite:openshift/conformance/parallel]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directory [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: gluster] [Testpattern: Pre-provisioned PV (default fs)] subPath should support readOnly file specified in the volumeMount [LinuxOnly] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
          EOEXCLUDE
          export PATH=/usr/libexec/origin:$PATH
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 4,16 * * *
  decorate: true
  labels:
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.6"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-s390x-4.6
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/e2e-remote-libvirt-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.12.147
      - name: BASTION_SVC_0_2_IP
        value: 172.30.226.233
      - name: BASTION_SVC_0_3_IP
        value: 172.30.227.193
      - name: BASTION_SVC_0_4_IP
        value: 172.30.226.24
      - name: BASTION_SVC_1_0_IP
        value: 172.30.109.91
      - name: BASTION_SVC_1_1_IP
        value: 172.30.107.233
      - name: BASTION_SVC_1_2_IP
        value: 172.30.162.64
      - name: BASTION_SVC_1_3_IP
        value: 172.30.206.72
      - name: BASTION_SVC_1_4_IP
        value: 172.30.55.51
      - name: BASTION_SVC_IP
        value: 172.30.93.139
      - name: BRANCH
        value: "4.6"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: e2e-remote-libvirt
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:4.6
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.6
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: ocponz3
      - name: TEST_COMMAND
        value: |
          # these tests are not able to run in CI due to
          # missing test image dependencies.  They must be
          # run manually
          cat > invert_excluded.py <<EOSCRIPT
          #!/usr/libexec/platform-python
          import sys
          all_tests = set()
          excluded_tests = set()
          for l in sys.stdin.readlines():
            all_tests.add(l.strip())
          with open(sys.argv[1], "r") as f:
            for l in f.readlines():
              excluded_tests.add(l.strip())
          test_suite = all_tests - excluded_tests
          for t in test_suite:
            print(t)
          EOSCRIPT
          chmod +x invert_excluded.py
          cat > excluded_tests <<EOEXCLUDE
            "[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-api-machinery] ResourceQuota [Feature:ScopeSelectors] should verify ResourceQuota with best effort scope using scope-selectors. [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs adoption will orphan all RCs and adopt them back when recreated [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs when tagging images should successfully tag the deployed image [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with env in params referencing the configmap should expand the config map key to a value [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with minimum ready seconds set should not transition the deployment to Complete before satisfied [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:DeploymentConfig] deploymentconfigs with test deployments should run a deployment to completion and then scale to zero [Suite:openshift/conformance/parallel]"
            "[sig-apps][Feature:OpenShiftControllerManager] TestDeployScale [Suite:openshift/conformance/parallel]"
            "[sig-arch] Managed cluster should have no crashlooping pods in core namespaces over four minutes [Suite:openshift/conformance/parallel]"
            "[sig-auth] [Feature:NodeAuthenticator] The kubelet can delegate ServiceAccount tokens to the API server [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-auth] [Feature:NodeAuthenticator] The kubelet's main port 10250 should reject requests with no credentials [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-auth][Feature:HTPasswdAuth] HTPasswd IDP should successfully configure htpasswd and be responsive [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP IDP should authenticate against an ldap server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:LDAP] LDAP should start an OpenLDAP test server [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] OAuth Authenticator accepts sha256 access tokens [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the authorize URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the grant URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the allow all IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for the bootstrap IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the login URL for when there is only one IDP [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the logout URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the root URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Headers] expected headers returned from the token request URL [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that do not expire works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a code authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:OAuthServer] [Token Expiration] Using a OAuth client with a non-default token max age to generate tokens that expire shortly works as expected when using a token authorization flow [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:ProjectAPI]  TestProjectWatch should succeed [Suite:openshift/conformance/parallel]"
            "[sig-auth][Feature:ProjectAPI]  TestScopedProjectAccess should succeed [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] Multi-stage image builds  should succeed [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] Optimized image builds  should succeed [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build can reference a cluster service  with a build being created from new-build should be able to run a build that references a cluster service [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build have source revision metadata  started build should contain source revision information [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build with empty source  started build should build even with an empty source in build config [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] build without output image  building from templates should create an image from a S2i template without an output image reference defined [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] custom build with buildah  being created from new-build should complete build with custom builder image [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] result image should have proper labels set  S2I build from a template should create a image from \"test-s2i-build.json\" template with proper Docker labels [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a quota  Building from a template should create an s2i build with a quota and run it [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds] s2i build with a root user image should create a root build and pass with a privileged SCC [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][timing] capture build stages and durations  should record build stages and durations for s2i [Suite:openshift/conformance/parallel]"
            "[sig-builds][Feature:Builds][valueFrom] process valueFrom in build strategy environment variables  should successfully resolve valueFrom in s2i build environment variables [Suite:openshift/conformance/parallel]"
            "[sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-cli] Kubectl client Simple pod should contain last line of the log [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-cli] Kubectl client Simple pod should return command exit codes [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-cli] Kubectl client Simple pod should support exec using resource/name [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-cli] Kubectl client Simple pod should support inline execution and attach [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-cli] oc adm must-gather runs successfully [Suite:openshift/conformance/parallel]"
            "[sig-cli] oc rsh rsh specific flags should work well when access to a remote shell [Suite:openshift/conformance/parallel]"
            "[sig-cluster-lifecycle] Pods cannot access the /config/master API endpoint [Suite:openshift/conformance/parallel]"
            "[sig-devex][Feature:Templates] templateinstance readiness test  should report ready soon after all annotated objects are ready [Suite:openshift/conformance/parallel]"
            "[sig-imageregistry][Feature:Image] oc tag should work when only imagestreams api is available [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should have a AlertmanagerReceiversNotConfigured alert in firing state [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should have important platform topology metrics [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should have non-Pod host cAdvisor metrics [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should provide ingress metrics [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should provide named network metrics [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should report telemetry if a cloud.openshift.com token is present [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster should start and expose a secured proxy and unsecured metrics [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster shouldn't have failing rules evaluation [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Early] [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation] Prometheus when installed on the cluster when using openshift-sdn should be able to get the sdn ovs flows [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation][Late] Alerts should have a Watchdog alert in firing state the entire cluster run [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation][Late] Alerts shouldn't exceed the 500 series limit of total series sent via telemetry from each cluster [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation][Late] Alerts shouldn't report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured [Suite:openshift/conformance/parallel]"
            "[sig-instrumentation][sig-builds][Feature:Builds] Prometheus when installed on the cluster should start and expose a secured proxy and verify build metrics [Suite:openshift/conformance/parallel]"
            "[sig-network] DNS should provide /etc/hosts entries for the cluster [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should provide DNS for ExternalName services [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should provide DNS for pods for Hostname [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should provide DNS for services  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should provide DNS for the cluster  [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] DNS should resolve DNS of partial qualified names for the cluster [LinuxOnly] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] DNS should support configurable pod resolv.conf [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Internal connectivity for TCP and UDP on ports 9000-9999 is allowed [Suite:openshift/conformance/parallel]"
            "[sig-network] NetworkPolicy [LinuxOnly] NetworkPolicy between server and client should enforce policy based on PodSelector with MatchExpressions[Feature:NetworkPolicy] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4] [Skipped:azure] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Services should allow pods to hairpin back to themselves through services [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should be able to create a functioning NodePort service [Conformance] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should be able to update service type to NodePort listening on same port number but different protocols [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Services should create endpoints for unready pods [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [Skipped:Network/OVNKubernetes] [Suite:openshift/conformance/parallel/minimal] [Suite:k8s]"
            "[sig-network] Services should preserve source pod IP for traffic thru service cluster IP [LinuxOnly] [Skipped:Network/OpenShiftSDN/Multitenant] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-network] multicast when using one of the plugins 'redhat/openshift-ovs-multitenant, redhat/openshift-ovs-networkpolicy' should allow multicast traffic in namespaces where it is enabled [Suite:openshift/conformance/parallel]"
            "[sig-network-edge][Conformance][Area:Networking][Feature:Router] The HAProxy router should be able to connect to a service that is idled because a GET on the route will unidle it [Suite:openshift/conformance/parallel/minimal]"
            "[sig-network][Feature:Router] The HAProxy router should enable openshift-monitoring to pull metrics [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should expose a health check on the metrics port [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should expose prometheus metrics for a route [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should expose the profiling endpoints [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should override the route host for overridden domains with a custom value [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should override the route host with a custom value [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should run even if it has no access to update status [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve a route that points to two services and respect weights [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve routes that were created from an ingress [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should serve the correct routes when scoped to a single namespace and label set [Suite:openshift/conformance/parallel]"
            "[sig-network][Feature:Router] The HAProxy router should support reencrypt to services backed by a serving certificate automatically [Suite:openshift/conformance/parallel]"
            "[sig-storage] CSI Volumes [Driver: csi-hostpath] [Testpattern: Dynamic Snapshot (delete policy)] snapshottable[Feature:VolumeSnapshotDataSource] volume snapshot controller  should delete the VolumeSnapshotContent according to its deletion policy [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast] [Skipped:ibmcloud] [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] In-tree Volumes [Driver: local][LocalVolumeType: dir-link] [Testpattern: Pre-provisioned PV (default fs)] subPath should support existing directories when readOnly specified in the volumeSource [Suite:openshift/conformance/parallel] [Suite:k8s]"
            "[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2 [Suite:openshift/conformance/parallel] [Suite:k8s]"
          EOEXCLUDE
          export PATH=/usr/libexec/origin:$PATH
          openshift-tests run openshift/conformance/parallel --dry-run | ./invert_excluded.py excluded_tests > test-suite.txt
          TEST_SUITE="--file=test-suite.txt" run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 6,18 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.6"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-image-ecosystem-ppc64le-4.6
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/image-ecosystem-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.197.185
      - name: BASTION_SVC_0_2_IP
        value: 172.30.198.104
      - name: BASTION_SVC_0_3_IP
        value: 172.30.62.154
      - name: BASTION_SVC_1_0_IP
        value: 172.30.86.105
      - name: BASTION_SVC_1_1_IP
        value: 172.30.222.65
      - name: BASTION_SVC_1_2_IP
        value: 172.30.119.201
      - name: BASTION_SVC_1_3_IP
        value: 172.30.171.36
      - name: BASTION_SVC_2_0_IP
        value: 172.30.141.175
      - name: BASTION_SVC_2_1_IP
        value: 172.30.190.57
      - name: BASTION_SVC_2_2_IP
        value: 172.30.161.102
      - name: BASTION_SVC_2_3_IP
        value: 172.30.133.69
      - name: BASTION_SVC_IP
        value: 172.30.213.49
      - name: BRANCH
        value: "4.6"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: image-ecosystem
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.6
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.6
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: c155f2u35
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/image-ecosystem run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/image-ecosystem-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 6,18 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.6"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-image-ecosystem-s390x-4.6
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/image-ecosystem-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.12.147
      - name: BASTION_SVC_0_2_IP
        value: 172.30.226.233
      - name: BASTION_SVC_0_3_IP
        value: 172.30.227.193
      - name: BASTION_SVC_0_4_IP
        value: 172.30.226.24
      - name: BASTION_SVC_1_0_IP
        value: 172.30.109.91
      - name: BASTION_SVC_1_1_IP
        value: 172.30.107.233
      - name: BASTION_SVC_1_2_IP
        value: 172.30.162.64
      - name: BASTION_SVC_1_3_IP
        value: 172.30.206.72
      - name: BASTION_SVC_1_4_IP
        value: 172.30.55.51
      - name: BASTION_SVC_IP
        value: 172.30.93.139
      - name: BRANCH
        value: "4.6"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: image-ecosystem
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:4.6
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.6
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: ocponz3
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/image-ecosystem run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/image-ecosystem-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 6,18 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.6"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-jenkins-e2e-ppc64le-4.6
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/jenkins-e2e-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: ppc64le
      - name: BASTION_SVC_0_1_IP
        value: 172.30.197.185
      - name: BASTION_SVC_0_2_IP
        value: 172.30.198.104
      - name: BASTION_SVC_0_3_IP
        value: 172.30.62.154
      - name: BASTION_SVC_1_0_IP
        value: 172.30.86.105
      - name: BASTION_SVC_1_1_IP
        value: 172.30.222.65
      - name: BASTION_SVC_1_2_IP
        value: 172.30.119.201
      - name: BASTION_SVC_1_3_IP
        value: 172.30.171.36
      - name: BASTION_SVC_2_0_IP
        value: 172.30.141.175
      - name: BASTION_SVC_2_1_IP
        value: 172.30.190.57
      - name: BASTION_SVC_2_2_IP
        value: 172.30.161.102
      - name: BASTION_SVC_2_3_IP
        value: 172.30.133.69
      - name: BASTION_SVC_IP
        value: 172.30.213.49
      - name: BRANCH
        value: "4.6"
      - name: CLUSTER_TYPE
        value: libvirt-ppc64le
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: jenkins-e2e
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-ppc64le/release-ppc64le:4.6
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.6
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: c155f2u33
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: c155f2u31
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: c155f2u35
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/jenkins-e2e-rhel-only run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/jenkins-e2e-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
- agent: kubernetes
  cluster: build01
  cron: 0 6,18 * * *
  decorate: true
  labels:
    ci.openshift.io/release-type: informing
    dptp.openshift.io/ssh-bastion: "true"
    job-env: remote-libvirt
    job-release: "4.6"
    job-test: e2e
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: release-openshift-ocp-installer-e2e-remote-libvirt-jenkins-e2e-s390x-4.6
  spec:
    containers:
    - args:
      - --give-pr-author-access-to-namespace=true
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --input-hash=$(BUILD_ID)
      - --input-hash=$(JOB_NAME)
      - --secret-dir=/usr/local/jenkins-e2e-cluster-profile
      - --secret-dir=/usr/local/pull-secret
      - --target=e2e-remote-libvirt
      - --template=/usr/local/e2e-remote-libvirt
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --lease-server-credentials-file=/etc/boskos/credentials
      command:
      - ci-operator
      env:
      - name: ARCH
        value: s390x
      - name: BASTION_SVC_0_1_IP
        value: 172.30.12.147
      - name: BASTION_SVC_0_2_IP
        value: 172.30.226.233
      - name: BASTION_SVC_0_3_IP
        value: 172.30.227.193
      - name: BASTION_SVC_0_4_IP
        value: 172.30.226.24
      - name: BASTION_SVC_1_0_IP
        value: 172.30.109.91
      - name: BASTION_SVC_1_1_IP
        value: 172.30.107.233
      - name: BASTION_SVC_1_2_IP
        value: 172.30.162.64
      - name: BASTION_SVC_1_3_IP
        value: 172.30.206.72
      - name: BASTION_SVC_1_4_IP
        value: 172.30.55.51
      - name: BASTION_SVC_IP
        value: 172.30.93.139
      - name: BRANCH
        value: "4.6"
      - name: CLUSTER_TYPE
        value: libvirt-s390x
      - name: CONFIG_SPEC
        value: |
          resources:
            '*':
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
                memory: 200Mi
          tag_specification:
            name: "$(BRANCH)"
            namespace: ocp
          tests:
          - as: e2e-$(CLUSTER_TYPE)-all
            commands: $(TEST_COMMAND)
            openshift_installer:
              cluster_profile: "$(CLUSTER_TYPE)"
      - name: JOB_NAME_SAFE
        value: jenkins-e2e
      - name: MULTIARCH_RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp-s390x/release-s390x:4.6
      - name: RELEASE_IMAGE_LATEST
        value: registry.ci.openshift.org/ocp/release:4.6
      - name: REMOTE_LIBVIRT_HOSTNAME
        value: ocponz
      - name: REMOTE_LIBVIRT_HOSTNAME_1
        value: ocponz2
      - name: REMOTE_LIBVIRT_HOSTNAME_2
        value: ocponz3
      - name: TEST_COMMAND
        value: TEST_SUITE=openshift/jenkins-e2e-rhel-only run-tests
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/jenkins-e2e-cluster-profile
        name: cluster-profile
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /usr/local/e2e-remote-libvirt
        name: job-definition
        subPath: cluster-launch-installer-remote-libvirt-e2e.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /usr/local/pull-secret
        name: release-pull-secret
    serviceAccountName: ci-operator
    volumes:
    - name: boskos
      secret:
        items:
        - key: credentials
          path: credentials
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-metal
    - configMap:
        name: prow-job-cluster-launch-installer-remote-libvirt-e2e
      name: job-definition
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: release-pull-secret
      secret:
        secretName: ci-pull-credentials
