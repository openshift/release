periodics:
- agent: kubernetes
  cluster: api.ci
  cron: 2 3 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: master
    org: kubevirt
    path_alias: kubevirt.io/kubevirt
    repo: kubevirt
  labels:
    ci-operator.openshift.io/prowgen-controlled: "true"
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-kubevirt-kubevirt-master-e2e-periodic-gcp-nested-virt
  spec:
    containers:
    - args:
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --kubeconfig=/etc/apici/kubeconfig
      - --lease-server-password-file=/etc/boskos/password
      - --report-password-file=/etc/report/password.txt
      - --report-username=ci
      - --secret-dir=/usr/local/e2e-periodic-gcp-nested-virt-cluster-profile
      - --target=e2e-periodic-gcp-nested-virt
      - --template=/usr/local/e2e-periodic-gcp-nested-virt
      command:
      - ci-operator
      env:
      - name: CLUSTER_ENABLE_NESTED_VIRT
        value: "true"
      - name: CLUSTER_NESTED_VIRT_IMAGE
        value: rhcos43-nested-virt
      - name: CLUSTER_TYPE
        value: gcp
      - name: JOB_NAME_SAFE
        value: e2e-periodic-gcp-nested-virt
      - name: TEST_COMMAND
        value: |
          cd /go/src/kubevirt.io/kubevirt
          #./hack/ci/test.sh

          # TODO: this needs to be moved into kubevirt 'hack/ci/test.sh' again after the template has been merged,
          # putting it back in here for now to avoid fiddling with two repos in order to get it
          # working

          export PATH=$PATH:/usr/local/go/bin/

          export GIMME_GO_VERSION=1.12.8
          export GOPATH="/go"
          export GOBIN="/usr/bin"
          source /etc/profile.d/gimme.sh

          export DOCKER_PREFIX='kubevirtnightlybuilds'
          export DOCKER_TAG="latest"
          export KUBEVIRT_PROVIDER=external

          echo "calling cluster-up to prepare config and check whether cluster is reachable"
          bash -x ./cluster-up/up.sh

          echo "deploying"
          bash -x ./hack/cluster-deploy.sh

          echo "testing"
          mkdir -p "$ARTIFACT_DIR"
          TESTS_TO_FOCUS=$(grep -E -o '\[crit\:high\]' tests/*_test.go | sort | uniq | sed -E 's/tests\/([a-z_]+)\.go\:.*/\1/' | tr '\n' '|' | sed 's/|$//')
          FUNC_TEST_ARGS='--ginkgo.noColor --ginkgo.focus='"$TESTS_TO_FOCUS"' --ginkgo.regexScansFilePath=true --junit-output='"$ARTIFACT_DIR"'/junit.functest.xml' \
              bash -x ./hack/functests.sh
      - name: TEST_IMAGESTREAM_TAG
        value: pipeline:kubevirt-test
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /etc/apici
        name: apici-ci-operator-credentials
        readOnly: true
      - mountPath: /etc/boskos
        name: boskos
        readOnly: true
      - mountPath: /usr/local/e2e-periodic-gcp-nested-virt-cluster-profile
        name: cluster-profile
      - mountPath: /usr/local/e2e-periodic-gcp-nested-virt
        name: job-definition
        subPath: cluster-launch-installer-custom-test-image.yaml
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: apici-ci-operator-credentials
      secret:
        items:
        - key: sa.ci-operator.apici.config
          path: kubeconfig
        secretName: apici-ci-operator-credentials
    - name: boskos
      secret:
        items:
        - key: password
          path: password
        secretName: boskos-credentials
    - name: cluster-profile
      projected:
        sources:
        - secret:
            name: cluster-secrets-gcp
        - configMap:
            name: cluster-profile-gcp
    - configMap:
        name: prow-job-cluster-launch-installer-custom-test-image
      name: job-definition
    - name: pull-secret
      secret:
        secretName: regcred
    - name: result-aggregator
      secret:
        secretName: result-aggregator
