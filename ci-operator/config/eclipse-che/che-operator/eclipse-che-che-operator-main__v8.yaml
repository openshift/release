build_root:
  project_image:
    dockerfile_path: .ci/openshift-ci/Dockerfile
images:
- dockerfile_path: Dockerfile
  to: che-operator-image
operator:
  bundles:
  - context_dir: bundle/next/eclipse-che-preview-openshift
    dockerfile_path: bundle.Dockerfile
releases:
  initial:
    integration:
      name: "4.8"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.8"
      namespace: ocp
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: operator-test
  steps:
    cluster_profile: gcp
    env:
      OO_CHANNEL: next
      OO_INSTALL_NAMESPACE: eclipse-che
      OO_PACKAGE: eclipse-che-preview-openshift
      OO_TARGET_NAMESPACES: '!all'
    test:
    - as: operator-test
      cli: latest
      commands: |
        echo -e "[INFO] Test script content:"
        cat .ci/oci-single-host.sh

        /bin/bash .ci/oci-single-host.sh
      dependencies:
      - env: CI_CHE_OPERATOR_IMAGE
        name: che-operator-image
      env:
      - name: OO_CHANNEL
      - name: OO_INSTALL_NAMESPACE
      - name: OO_PACKAGE
      - name: OO_TARGET_NAMESPACES
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: optional-operators-ci-gcp
- as: che-behind-proxy
  steps:
    cluster_profile: aws
    env:
      COMPUTE_NODE_TYPE: m5.xlarge
      TEST_SKIPS: ""
    test:
    - as: che-behind-proxy
      cli: latest
      commands: |
        echo ${TEST_SKIPS}

        echo -e "Kubernetes proxy object:"
        oc get proxy/cluster -o yaml

        echo -e "[INFO] Test script content"
        cat .ci/oci-proxy.sh

        /bin/bash .ci/oci-proxy.sh
      dependencies:
      - env: CI_CHE_OPERATOR_IMAGE
        name: che-operator-image
      env:
      - name: TEST_SKIPS
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: openshift-e2e-aws-proxy
zz_generated_metadata:
  branch: main
  org: eclipse-che
  repo: che-operator
  variant: v8
