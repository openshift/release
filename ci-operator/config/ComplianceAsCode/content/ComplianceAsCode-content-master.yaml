build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.15
images:
- dockerfile_path: Dockerfiles/ocp4_content
  to: ocp4-content-ds
resources:
  '*':
    requests:
      cpu: 200m
      memory: 400Mi
tag_specification:
  name: "4.9"
  namespace: ocp
tests:
- as: e2e-aws-rhcos4-e8
  steps:
    cluster_profile: aws
    test:
    - as: test
      cli: latest
      commands: |
        export PROFILE=e8
        export PRODUCT=rhcos4
        export component=ocp4-content-ds
        export CONTENT_IMAGE=$(echo $IMAGE_FORMAT | envsubst)
        export ROOT_DIR=$PWD
        go get github.com/ComplianceAsCode/ocp4e2e
        go test -v -timeout 120m github.com/ComplianceAsCode/ocp4e2e -profile="$PROFILE" -product="$PRODUCT" -content-image="$CONTENT_IMAGE"
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
- as: e2e-aws-ocp4-e8
  steps:
    cluster_profile: aws
    test:
    - as: test
      cli: latest
      commands: |
        export PROFILE=e8
        export PRODUCT=ocp4
        export component=ocp4-content-ds
        export CONTENT_IMAGE=$(echo $IMAGE_FORMAT | envsubst)
        export ROOT_DIR=$PWD
        go get github.com/ComplianceAsCode/ocp4e2e
        go test -v -timeout 120m github.com/ComplianceAsCode/ocp4e2e -profile="$PROFILE" -product="$PRODUCT" -content-image="$CONTENT_IMAGE"
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
- as: e2e-aws-ocp4-moderate
  steps:
    cluster_profile: aws
    env:
      FIPS_ENABLED: "true"
    test:
    - as: test
      cli: latest
      commands: |
        export PROFILE=moderate
        export PRODUCT=ocp4
        export component=ocp4-content-ds
        export CONTENT_IMAGE=$(echo $IMAGE_FORMAT | envsubst)
        export ROOT_DIR=$PWD
        go get github.com/ComplianceAsCode/ocp4e2e
        go test -v -timeout 120m github.com/ComplianceAsCode/ocp4e2e -profile="$PROFILE" -product="$PRODUCT" -content-image="$CONTENT_IMAGE"
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
- as: e2e-aws-ocp4-moderate-node
  steps:
    cluster_profile: aws
    env:
      FIPS_ENABLED: "true"
    test:
    - as: test
      cli: latest
      commands: |
        export PROFILE=moderate-node
        export PRODUCT=ocp4
        export component=ocp4-content-ds
        export CONTENT_IMAGE=$(echo $IMAGE_FORMAT | envsubst)
        export ROOT_DIR=$PWD
        go get github.com/ComplianceAsCode/ocp4e2e
        go test -v -timeout 120m github.com/ComplianceAsCode/ocp4e2e -profile="$PROFILE" -product="$PRODUCT" -content-image="$CONTENT_IMAGE"
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
- as: e2e-aws-ocp4-cis
  steps:
    cluster_profile: aws
    test:
    - as: test
      cli: latest
      commands: |
        export PROFILE=cis
        export PRODUCT=ocp4
        export component=ocp4-content-ds
        export CONTENT_IMAGE=$(echo $IMAGE_FORMAT | envsubst)
        export ROOT_DIR=$PWD
        go get github.com/ComplianceAsCode/ocp4e2e
        go test -v -timeout 120m github.com/ComplianceAsCode/ocp4e2e -profile="$PROFILE" -product="$PRODUCT" -content-image="$CONTENT_IMAGE"
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
- as: e2e-aws-ocp4-cis-node
  steps:
    cluster_profile: aws
    test:
    - as: test
      cli: latest
      commands: |
        export PROFILE=cis-node
        export PRODUCT=ocp4
        export component=ocp4-content-ds
        export CONTENT_IMAGE=$(echo $IMAGE_FORMAT | envsubst)
        export ROOT_DIR=$PWD
        go get github.com/ComplianceAsCode/ocp4e2e
        go test -v -timeout 120m github.com/ComplianceAsCode/ocp4e2e -profile="$PROFILE" -product="$PRODUCT" -content-image="$CONTENT_IMAGE"
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
- as: e2e-aws-rhcos4-moderate
  steps:
    cluster_profile: aws
    env:
      FIPS_ENABLED: "true"
    pre:
    - chain: ipi-aws-pre
    - ref: fips-check
    test:
    - as: test
      cli: latest
      commands: |
        export PROFILE=moderate
        export PRODUCT=rhcos4
        export component=ocp4-content-ds
        export CONTENT_IMAGE=$(echo $IMAGE_FORMAT | envsubst)
        export ROOT_DIR=$PWD
        go get github.com/ComplianceAsCode/ocp4e2e
        go test -v -timeout 120m github.com/ComplianceAsCode/ocp4e2e -profile="$PROFILE" -product="$PRODUCT" -content-image="$CONTENT_IMAGE"
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
zz_generated_metadata:
  branch: master
  org: ComplianceAsCode
  repo: content
