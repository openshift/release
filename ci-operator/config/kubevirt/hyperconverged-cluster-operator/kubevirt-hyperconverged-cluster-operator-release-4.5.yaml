base_images:
  base:
    name: "4.5"
    namespace: ocp
    tag: base
  operator-registry:
    name: "4.5"
    namespace: ocp
    tag: operator-registry
binary_build_commands: make install
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.13
images:
- dockerfile_path: build/Dockerfile.okd
  from: base
  inputs:
    bin:
      paths:
      - destination_dir: .
        source_path: /go/bin/hyperconverged-cluster-operator
  to: hyperconverged-cluster-operator
- dockerfile_path: deploy/Dockerfile.registry.intermediate
  from: operator-registry
  to: operator-registry-base
- dockerfile_path: deploy/Dockerfile.registry.ci
  from: operator-registry-base
  to: hco-registry
- dockerfile_path: deploy/Dockerfile.registry.upgrade
  from: operator-registry-base
  to: hco-registry-upgrade
- dockerfile_path: deploy/nightly-bundle/Dockerfile
  from: base
  to: nightly-bundle-tests-runner
promotion:
  additional_images:
    hyperconverged-cluster-operator-tests: src
  excluded_images:
  - operator-registry-base
  - hco-registry
  - hco-registry-upgrade
  name: "4.5"
  namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tag_specification:
  name: "4.5"
  namespace: ocp
tests:
- as: hco-e2e-aws
  commands: |
    make start && make functest
  openshift_installer_src:
    cluster_profile: aws
- as: hco-e2e-upgrade-aws
  commands: |
    RELEASE_DELTA=1 make upgrade-test
  openshift_installer_src:
    cluster_profile: aws
- as: hco-e2e-upgrade-prev-aws
  commands: |
    RELEASE_DELTA=2 make upgrade-test
  openshift_installer_src:
    cluster_profile: aws
- as: hco-e2e-azure
  commands: |
    make start && make functest
  openshift_installer_src:
    cluster_profile: azure4
- as: hco-e2e-upgrade-azure
  commands: |
    RELEASE_DELTA=1 make upgrade-test
  openshift_installer_src:
    cluster_profile: azure4
- as: hco-e2e-upgrade-prev-azure
  commands: |
    RELEASE_DELTA=2 make upgrade-test
  openshift_installer_src:
    cluster_profile: azure4
- artifact_dir: /tmp/artifacts
  as: hco-e2e-nightly-bundle-release-4-5-azure4
  commands: |
    set -e
    export ARTIFACTS_DIR=/tmp/artifacts
    echo "Fetching quay secret"
    auth_file=/tmp/openshift-cnv-auth.json
    oc get secret/pull-secret -n openshift-config -o=jsonpath='{.data.\.dockerconfigjson}' | \
        base64 -w0 -d |
        jq 'map({"auths":{"quay.io/openshift-cnv"}})| .[]' -cM > "$auth_file"
    echo "Generating debug info"
    bundle_floating=quay.io/openshift-cnv/container-native-virtualization-hco-bundle-registry:2.4-latest
    bundle_metadata="$(skopeo inspect --authfile "$auth_file" "docker://${bundle_floating}")"
    bundle_under_test="$(jq -r '.Name + "@" + .Digest' <<<"$bundle_metadata")"
    echo "$bundle_under_test" > "${ARTIFACTS_DIR}/bundle_under_test.txt"
    set -x
    echo "Deploying test infra"
    oc create ns openshift-cnv
    oc create -f /kubevirt-testing-infra.yaml
    echo "Deploying nightly bundle"
    export HCO_REGISTRY_IMAGE="${bundle_under_test}"
    export HCO_VERSION=2.4.0
    export HCO_CHANNEL=2.4
    export TARGET_NAMESPACE=openshift-cnv
    /deploy.sh

    operator_image="$(oc get pod -n openshift-cnv -l kubevirt.io=virt-operator --no-headers -o=jsonpath='{.items[0].spec.containers[0].image}')"
    kv_tag="$(skopeo inspect --authfile "$auth_file" "docker://${operator_image}" | jq -r '.Labels["upstream-version"]')"

    echo '{' > /tmp/kv-testconfig.json
    echo '  "storageClassLocal": "hostpath-provisioner",' >> /tmp/kv-testconfig.json
    echo '  "storageClassHostPath": "hostpath-provisioner",' >> /tmp/kv-testconfig.json
    echo '  "storageClassRhel": "hostpath-provisioner",' >> /tmp/kv-testconfig.json
    echo '  "storageClassWindows": "hostpath-provisioner",' >> /tmp/kv-testconfig.json
    echo '  "manageStorageClasses": false' >> /tmp/kv-testconfig.json
    echo '}' >> /tmp/kv-testconfig.json
    curl -L https://github.com/kubevirt/kubevirt/releases/download/v${kv_tag}/tests.test -o /tmp/kubevirt.test
    chmod u+x /tmp/kubevirt.test
    ./tmp/kubevirt.test \
      -installed-namespace="$TARGET_NAMESPACE" \
      -cdi-namespace="$TARGET_NAMESPACE" \
      -config=/tmp/kv-testconfig.json \
      -kubeconfig="$KUBECONFIG" \
      -ginkgo.focus='(rfe_id:1177)|(rfe_id:273)|(rfe_id:151)' \
      -ginkgo.skip='(Slirp Networking)|(with CPU spec)|(with TX offload disabled)|(with cni flannel and ptp plugin interface)|(with ovs-cni plugin)|(test_id:1752)|(SRIOV)|(with EFI)|(Operator)|(GPU)|(DataVolume Integration)|(test_id:3468)|(test_id:3466)|(test_id:1015)|(rfe_id:393)' \
      -junit-output="${ARTIFACTS_DIR}/junit.functest.xml" \
      -ginkgo.seed=0
    echo "Test is finished"
    echo "Tagging tested bundle"
    TARGET_BUNDLE_REGISTRY=quay.io/openshift-cnv/container-native-virtualization-hco-bundle-registry-tested
    skopeo copy --authfile "$auth_file" "docker://${bundle_under_test}" "docker://${TARGET_BUNDLE_REGISTRY}:4.5-tested"
    echo "Nightly bundle test is finished."
  cron: 2 3 * * *
  openshift_installer_custom_test_image:
    cluster_profile: azure4
    from: pipeline:nightly-bundle-tests-runner
zz_generated_metadata:
  branch: release-4.5
  org: kubevirt
  repo: hyperconverged-cluster-operator
