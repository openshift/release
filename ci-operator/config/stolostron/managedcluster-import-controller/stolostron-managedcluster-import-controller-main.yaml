base_images:
  base:
    name: ubi-minimal
    namespace: ocp
    tag: "9"
  stolostron_builder_go1.21-linux:
    name: builder
    namespace: stolostron
    tag: go1.21-linux
  stolostron_builder_go1.22-linux:
    name: builder
    namespace: stolostron
    tag: go1.22-linux
binary_build_commands: go build ./cmd/manager
build_root:
  image_stream_tag:
    name: builder
    namespace: stolostron
    tag: go1.22-linux
images:
- dockerfile_path: build/Dockerfile
  from: base
  inputs:
    stolostron_builder_go1.21-linux:
      as:
      - registry.ci.openshift.org/stolostron/builder:go1.21-linux
  to: managedcluster-import-controller
promotion:
  to:
  - disabled: true
    name: "2.7"
    namespace: stolostron
releases:
  initial:
    integration:
      name: "4.10"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.10"
      namespace: ocp
resources:
  '*':
    limits:
      memory: 6Gi
    requests:
      cpu: 80m
      memory: 200Mi
tests:
- as: sonar-pre-submit
  commands: |
    export XDG_CACHE_HOME="/tmp"
    export SELF="make -f /opt/build-harness/Makefile.prow"
    make -f /opt/build-harness/Makefile.prow sonar/go/prow
  container:
    from: src
  secrets:
  - mount_path: /etc/sonarcloud/
    name: acm-sonarcloud-token
  skip_if_only_changed: ^\.tekton/|^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: sonar-post-submit
  commands: |
    export SONAR_GO_TEST_ARGS="./..."
    export XDG_CACHE_HOME="/tmp"
    export SELF="make -f /opt/build-harness/Makefile.prow"
    make -f /opt/build-harness/Makefile.prow sonar/go/prow
  container:
    from: src
  postsubmit: true
  secrets:
  - mount_path: /etc/sonarcloud/
    name: acm-sonarcloud-token
  skip_if_only_changed: ^\.tekton/|^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: check
  commands: make check
  container:
    from: src
  skip_if_only_changed: ^\.tekton/|^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: unit
  commands: make test
  container:
    from: src
  skip_if_only_changed: ^\.tekton/|^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: e2e
  skip_if_only_changed: ^\.tekton/|^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    dependencies:
      COMPONENT_IMAGE_REF: managedcluster-import-controller
    env:
      CLUSTER_NAMES: none
      CLUSTERPOOL_GROUP_NAME: Server Foundation
      CLUSTERPOOL_HOST_NAMESPACE: server-foundation
      CLUSTERPOOL_HOST_PROW_KUBE_SECRET: ocm-sf-clusterpool
      CLUSTERPOOL_LIFETIME: 2h
      CLUSTERPOOL_LIST_INCLUSION_FILTER: prow
      SKIP_COMPONENT_INSTALL: "true"
    test:
    - as: e2e
      cli: latest
      commands: |
        export KUBECONFIG="${SHARED_DIR}/hub-1.kc"
        KUBECTL=oc
        OCM_VERSION=main
        export KUBECTL OCM_VERSION
        set -o pipefail
        make e2e-test-prow 2>&1 | tee ${ARTIFACT_DIR}/e2e_tests_out.log
        set +o pipefail
      dependencies:
      - env: IMPORT_CONTROLLER_IMAGE_NAME
        name: managedcluster-import-controller
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: ocm-e2e-clusterpool
- as: pr-image-mirror
  steps:
    dependencies:
      SOURCE_IMAGE_REF: managedcluster-import-controller
    env:
      IMAGE_REPO: managedcluster-import-controller
      REGISTRY_ORG: stolostron
    workflow: ocm-ci-image-mirror
- as: pr-merge-image-mirror
  postsubmit: true
  steps:
    dependencies:
      SOURCE_IMAGE_REF: managedcluster-import-controller
    env:
      IMAGE_REPO: managedcluster-import-controller
      REGISTRY_ORG: stolostron
    workflow: ocm-ci-image-mirror
- as: fast-forward
  postsubmit: true
  steps:
    env:
      DESTINATION_BRANCH: backplane-2.7
    workflow: ocm-ci-fastforward
zz_generated_metadata:
  branch: main
  org: stolostron
  repo: managedcluster-import-controller
