base_images:
  stolostron_builder_go1.23-linux:
    name: builder
    namespace: stolostron
    tag: go1.23-linux
build_root:
  image_stream_tag:
    name: builder
    namespace: stolostron
    tag: go1.23-linux
images:
- dockerfile_path: Dockerfile
  inputs:
    stolostron_builder_go1.23-linux:
      as:
      - registry.ci.openshift.org/stolostron/builder:go1.23-linux
  to: mtv-integrations
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: unit-tests
  commands: |
    export SELF="make -f Makefile.prow"
    export HOME="/tmp"
    make -f Makefile.prow unit-tests
  container:
    from: src
- as: sonar
  commands: |
    set -euo pipefail
    export HOME="/tmp"
    export SELF="make -f /opt/build-harness/Makefile.prow"
    SONAR_GO_TEST_ARGS="$(go list ./... | grep -v /e2e || true)"
    export SONAR_GO_TEST_ARGS
    echo "SONAR_GO_TEST_ARGS=$SONAR_GO_TEST_ARGS"
    ls -l /opt/build-harness/Makefile.prow || true
    echo "Dumping failing makefile..."
    cat -n /opt/build-harness-extensions/modules/sonar/Makefile | tail -n +20 | head -n 20
    if [ -z "$SONAR_GO_TEST_ARGS" ]; then
      echo "No test packages to analyze. Exiting gracefully."
      exit 0
    fi
    make -f /opt/build-harness/Makefile.prow sonar/go/prow
  container:
    from: src
  secrets:
  - mount_path: /etc/sonarcloud/
    name: acm-sonarcloud-token
- as: sonar-post-submit
  commands: |
    set -euo pipefail

    export HOME="/tmp"
    export SELF="make -f /opt/build-harness/Makefile.prow"

    SONAR_GO_TEST_ARGS="$(go list ./... | grep -v /e2e || true)"
    export SONAR_GO_TEST_ARGS

    if [ -z "$SONAR_GO_TEST_ARGS" ]; then
      echo "No test packages to analyze. Exiting gracefully."
      exit 0
    fi

    make -f /opt/build-harness/Makefile.prow sonar/go/prow
  container:
    from: src
  postsubmit: true
  secrets:
  - mount_path: /etc/sonarcloud/
    name: acm-sonarcloud-token
zz_generated_metadata:
  branch: main
  org: stolostron
  repo: mtv-integrations
