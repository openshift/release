base_images:
  ocp_ubi-minimal_8:
    name: ubi-minimal
    namespace: ocp
    tag: "8"
  openshift_release_rhel-8-release-golang-1.23-openshift-4.19:
    name: release
    namespace: openshift
    tag: rhel-8-release-golang-1.23-openshift-4.19
build_root:
  project_image:
    dockerfile_literal: |
      FROM registry.ci.openshift.org/ocp/4.17:cli-artifacts as tools
      FROM registry.access.redhat.com/ubi8/ubi as builder
      ARG TARGETARCH
      ENV GO_VERSION=1.24.2
      RUN rm -rf /usr/local/go && \
        curl -fsSL https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz | tar -C /usr/local -xzf -
      ENV PATH="/usr/local/go/bin:$PATH"
      COPY --from=tools /usr/share/openshift/linux_$TARGETARCH/oc.rhel8 /usr/bin/oc
      RUN ln -s /usr/bin/oc /usr/bin/kubectl
      RUN yum install -y httpd-tools git
      RUN curl -Ls https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 -o get-helm-3 && \
          chmod 700 ./get-helm-3
      RUN ./get-helm-3 --version v3.11.3 --no-sudo && helm version
      RUN GOFLAGS='' go install github.com/mikefarah/yq/v3@latest
      RUN GOFLAGS='' go install -tags="exclude_graphdriver_btrfs containers_image_openpgp" github.com/containers/skopeo/cmd/skopeo@v1.16.1
      RUN rm -rf $GOPATH/.cache
images:
- dockerfile_literal: |
    ARG GO_BUILDER=registry.access.redhat.com/ubi8/ubi
    ARG GO_RUNTIME=registry.access.redhat.com/ubi8/ubi-minimal

    FROM registry.access.redhat.com/ubi8/ubi as builder
    ENV GO_VERSION=1.24.2
    RUN rm -rf /usr/local/go && \
       curl -fsSL https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz | tar -C /usr/local -xzf -
    ENV PATH="/usr/local/go/bin:$PATH"
    RUN yum install git

    WORKDIR /workspace
    COPY . .

    ENV CGO_ENABLED=1
    ENV GOEXPERIMENT=strictfipsruntime
    ENV GOFLAGS=''

    RUN go build -tags strictfipsruntime,exclude_graphdriver_btrfs -o /usr/bin/main ./cmd/func-util

    FROM $GO_RUNTIME

    ARG VERSION=knative-nightly

    RUN microdnf install socat tar

    COPY --from=builder /usr/bin/main /usr/bin/func-util
    COPY LICENSE /licenses/

    RUN ln -s /usr/bin/func-util /usr/local/bin/deploy && \
    ln -s /usr/bin/func-util /usr/local/bin/scaffold && \
    ln -s /usr/bin/func-util /usr/local/bin/s2i

    USER 65532

    LABEL \
    com.redhat.component="openshift-serverless-1-kn-plugin-func-func-util-rhel8-container" \
    name="openshift-serverless-1/kn-plugin-func-func-util-rhel8" \
    version=$VERSION \
    summary="Red Hat OpenShift Serverless 1 Kn Plugin Func Func Util" \
    maintainer="serverless-support@redhat.com" \
    description="Red Hat OpenShift Serverless 1 Kn Plugin Func Func Util" \
    io.k8s.display-name="Red Hat OpenShift Serverless 1 Kn Plugin Func Func Util" \
    io.k8s.description="Red Hat OpenShift Serverless Kn Plugin Func Func Util" \
    io.openshift.tags="func-util"

    ENTRYPOINT ["/usr/bin/bash"]
  inputs:
    ocp_ubi-minimal_8:
      as:
      - $GO_RUNTIME
    openshift_release_rhel-8-release-golang-1.23-openshift-4.19:
      as:
      - $GO_BUILDER
  to: knative-kn-plugin-func-func-util
- dockerfile_path: openshift/ci-operator/source-image/Dockerfile
  from: src
  to: knative-kn-plugin-func-source-image
promotion:
  to:
  - additional_images:
      kn-plugin-func-src: src
    name: knative-nightly
    namespace: openshift
releases:
  latest:
    release:
      channel: fast
      version: "4.17"
resources:
  '*':
    limits:
      memory: 8Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: unit
  commands: GOPATH=/tmp/go GOFLAGS="" make test
  container:
    from: src
- as: e2e-oncluster-test
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: serverless-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.16"
  steps:
    test:
    - as: test
      commands: |
        export GOPATH=/tmp/go
        export GOFLAGS=""
        openshift/cluster-prepare.sh
        openshift/e2e_oncluster_tests.sh
      dependencies:
      - env: FUNC_UTILS_IMG
        name: knative-kn-plugin-func-func-util
      from: src
      resources:
        requests:
          cpu: 100m
      timeout: 1h0m0s
    workflow: generic-claim
zz_generated_metadata:
  branch: release-next
  org: openshift-knative
  repo: kn-plugin-func
  variant: "417"
