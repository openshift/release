base_images:
  cli:
    name: "4.17"
    namespace: ocp
    tag: cli
  cli-ocm:
    name: cli-ocm
    namespace: ci
    tag: latest
  ocp_4.14_cli-artifacts:
    name: "4.14"
    namespace: ocp
    tag: cli-artifacts
  ocp_4.18_cli-artifacts:
    name: "4.18"
    namespace: ocp
    tag: cli-artifacts
  ocp_ubi-minimal_8:
    name: ubi-minimal
    namespace: ocp
    tag: "8"
  ocp_ubi-minimal_9:
    name: ubi-minimal
    namespace: ocp
    tag: "9"
  openshift_eventing-istio-src_knative-v1.15:
    name: eventing-istio-src
    namespace: openshift
    tag: knative-v1.15
  openshift_eventing-kafka-broker-src_knative-v1.15:
    name: eventing-kafka-broker-src
    namespace: openshift
    tag: knative-v1.15
  openshift_knative-eventing-src_knative-v1.15:
    name: knative-eventing-src
    namespace: openshift
    tag: knative-v1.15
  openshift_knative-serving-src_knative-v1.15:
    name: knative-serving-src
    namespace: openshift
    tag: knative-v1.15
  openshift_release_rhel-8-release-golang-1.22-openshift-4.17:
    name: release
    namespace: openshift
    tag: rhel-8-release-golang-1.22-openshift-4.17
  origin_4.18_operator-registry:
    name: "4.18"
    namespace: origin
    tag: operator-registry
  rosa-aws-cli:
    name: rosa-aws-cli
    namespace: ci
    tag: latest
build_root:
  project_image:
    dockerfile_path: openshift/ci-operator/build-image/Dockerfile
images:
- dockerfile_path: knative-operator/Dockerfile
  inputs:
    ocp_ubi-minimal_8:
      as:
      - $GO_RUNTIME
    openshift_release_rhel-8-release-golang-1.22-openshift-4.17:
      as:
      - $GO_BUILDER
  to: serverless-knative-operator
- dockerfile_path: must-gather/Dockerfile
  inputs:
    ocp_4.14_cli-artifacts:
      as:
      - $CLI_ARTIFACTS
    ocp_ubi-minimal_8:
      as:
      - $RUNTIME
  to: serverless-must-gather
- dockerfile_path: olm-catalog/serverless-operator-index/Dockerfile
  inputs:
    ocp_ubi-minimal_9:
      as:
      - registry.access.redhat.com/ubi9/ubi-minimal
    origin_4.18_operator-registry:
      as:
      - registry.ci.openshift.org/origin/4.18:operator-registry
  to: serverless-index
- dockerfile_path: olm-catalog/serverless-operator/Dockerfile
  inputs:
    ocp_ubi-minimal_8:
      as:
      - $GO_RUNTIME
  to: serverless-bundle
- dockerfile_path: openshift-knative-operator/Dockerfile
  inputs:
    ocp_ubi-minimal_8:
      as:
      - $GO_RUNTIME
    openshift_release_rhel-8-release-golang-1.22-openshift-4.17:
      as:
      - $GO_BUILDER
  to: serverless-openshift-knative-operator
- dockerfile_path: openshift/ci-operator/source-image/Dockerfile
  from: src
  inputs:
    ocp_4.18_cli-artifacts:
      as:
      - registry.ci.openshift.org/ocp/4.18:cli-artifacts
    openshift_eventing-istio-src_knative-v1.15:
      as:
      - registry.ci.openshift.org/openshift/eventing-istio-src:knative-v1.15
    openshift_eventing-kafka-broker-src_knative-v1.15:
      as:
      - registry.ci.openshift.org/openshift/eventing-kafka-broker-src:knative-v1.15
    openshift_knative-eventing-src_knative-v1.15:
      as:
      - registry.ci.openshift.org/openshift/knative-eventing-src:knative-v1.15
    openshift_knative-serving-src_knative-v1.15:
      as:
      - registry.ci.openshift.org/openshift/knative-serving-src:knative-v1.15
  to: serverless-source-image
- dockerfile_path: serving/ingress/Dockerfile
  inputs:
    ocp_ubi-minimal_8:
      as:
      - $GO_RUNTIME
    openshift_release_rhel-8-release-golang-1.22-openshift-4.17:
      as:
      - $GO_BUILDER
  to: serverless-ingress
- dockerfile_path: serving/metadata-webhook/Dockerfile
  inputs:
    ocp_ubi-minimal_8:
      as:
      - $GO_RUNTIME
    openshift_release_rhel-8-release-golang-1.22-openshift-4.17:
      as:
      - $GO_BUILDER
  to: serverless-metadata-webhook
releases:
  latest:
    integration:
      include_built_images: true
      name: "4.17"
      namespace: ocp
resources:
  '*':
    limits:
      memory: 6Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: operator-e2e-rosa-aws
  cron: 0 6 25 10 *
  steps:
    cluster_profile: aws-cspi-qe
    env:
      CHANNEL_GROUP: candidate
      FIREWATCH_CONFIG: |
        {
          "failure_rules":
            [
              {"step": "knative-eventing-kafka-broker-e2e", "failure_type": "test_failure", "classification": "knative-eventing-kafka-broker-e2e Test Failure", "jira_project": "SRVCOM", "jira_additional_labels": ["!default"]},
              {"step": "knative-serving-eventing-e2e", "failure_type": "test_failure", "classification": "knative-serving-eventing-e2e Test Failure", "jira_project": "SRVCOM", "jira_additional_labels": ["!default"]},
              {"step": "operator-e2e", "failure_type": "test_failure", "classification": "operator-e2e Test Failure", "jira_project": "SRVCOM", "jira_additional_labels": ["!default"]},
              {"step": "knative-*", "failure_type": "pod_failure", "classification": "knative Test Execution", "jira_additional_labels": ["!default"]},
              {"step": "operator-e2e", "failure_type": "pod_failure", "classification": "operator-e2e Test Execution", "jira_additional_labels": ["!default"]}
            ]
        }
      FIREWATCH_CONFIG_FILE_PATH: https://raw.githubusercontent.com/CSPI-QE/cspi-utils/main/firewatch-base-configs/rosa/lp-interop.json
      FIREWATCH_DEFAULT_JIRA_ADDITIONAL_LABELS: '["4.17-lp","rosa-classic-lp","serverless-lp"]'
      FIREWATCH_DEFAULT_JIRA_PROJECT: LPINTEROP
      FIREWATCH_FAIL_WITH_TEST_FAILURES: "true"
      OCM_LOGIN_ENV: staging
      OPENSHIFT_VERSION: "4.17"
    test:
    - ref: cucushift-installer-check-cluster-health
    - as: knative-eventing-kafka-broker-e2e
      commands: FORCE_KONFLUX_INDEX=true GOPATH=/tmp/go PATH=$PATH:/tmp/go/bin SKIP_MESH_AUTH_POLICY_GENERATION=true
        make test-upstream-e2e-kafka-no-upgrade
      dependencies:
      - env: SERVERLESS_KNATIVE_OPERATOR
        name: serverless-knative-operator
      - env: SERVERLESS_MUST_GATHER
        name: serverless-must-gather
      - env: SERVERLESS_INDEX
        name: serverless-index
      - env: SERVERLESS_BUNDLE
        name: serverless-bundle
      - env: SERVERLESS_OPENSHIFT_KNATIVE_OPERATOR
        name: serverless-openshift-knative-operator
      - env: SERVERLESS_SOURCE_IMAGE
        name: serverless-source-image
      - env: SERVERLESS_INGRESS
        name: serverless-ingress
      - env: SERVERLESS_METADATA_WEBHOOK
        name: serverless-metadata-webhook
      from: serverless-source-image
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    - as: operator-e2e
      commands: FORCE_KONFLUX_INDEX=true GOPATH=/tmp/go PATH=$PATH:/tmp/go/bin SKIP_MESH_AUTH_POLICY_GENERATION=true
        DELETE_CRD_ON_TEARDOWN=false make teardown test-e2e-with-kafka
      dependencies:
      - env: SERVERLESS_KNATIVE_OPERATOR
        name: serverless-knative-operator
      - env: SERVERLESS_MUST_GATHER
        name: serverless-must-gather
      - env: SERVERLESS_INDEX
        name: serverless-index
      - env: SERVERLESS_BUNDLE
        name: serverless-bundle
      - env: SERVERLESS_OPENSHIFT_KNATIVE_OPERATOR
        name: serverless-openshift-knative-operator
      - env: SERVERLESS_SOURCE_IMAGE
        name: serverless-source-image
      - env: SERVERLESS_INGRESS
        name: serverless-ingress
      - env: SERVERLESS_METADATA_WEBHOOK
        name: serverless-metadata-webhook
      from: serverless-source-image
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    - as: knative-serving-eventing-e2e
      commands: FORCE_KONFLUX_INDEX=true GOPATH=/tmp/go PATH=$PATH:/tmp/go/bin SKIP_MESH_AUTH_POLICY_GENERATION=true
        make test-upstream-e2e-no-upgrade
      dependencies:
      - env: SERVERLESS_KNATIVE_OPERATOR
        name: serverless-knative-operator
      - env: SERVERLESS_MUST_GATHER
        name: serverless-must-gather
      - env: SERVERLESS_INDEX
        name: serverless-index
      - env: SERVERLESS_BUNDLE
        name: serverless-bundle
      - env: SERVERLESS_OPENSHIFT_KNATIVE_OPERATOR
        name: serverless-openshift-knative-operator
      - env: SERVERLESS_SOURCE_IMAGE
        name: serverless-source-image
      - env: SERVERLESS_INGRESS
        name: serverless-ingress
      - env: SERVERLESS_METADATA_WEBHOOK
        name: serverless-metadata-webhook
      from: serverless-source-image
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: firewatch-rosa-aws-sts
  timeout: 8h0m0s
zz_generated_metadata:
  branch: main
  org: openshift-knative
  repo: serverless-operator
  variant: ocp4.17-lp-rosa-classic
