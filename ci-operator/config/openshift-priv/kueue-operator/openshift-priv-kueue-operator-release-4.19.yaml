base_images:
  ocp_builder_rhel-9-base-openshift-4.19:
    name: builder
    namespace: ocp
    tag: rhel-9-base-openshift-4.19
  ocp_builder_rhel-9-golang-1.23-openshift-4.19:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.23-openshift-4.19
build_root:
  from_repository: true
canonical_go_repository: github.com/openshift/kueue-operator
images:
- dockerfile_path: Dockerfile.ci
  inputs:
    ocp_builder_rhel-9-base-openshift-4.19:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-9-base-openshift-4.19
    ocp_builder_rhel-9-golang-1.23-openshift-4.19:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.23-openshift-4.19
  to: kueue-operator
- dockerfile_literal: |
    FROM src
    RUN dnf install -y skopeo git && dnf clean all
  from: src
  to: kueue-operator-src
promotion:
  to:
  - disabled: true
    name: 4.19-priv
    namespace: ocp-private
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tag_specification:
  name: 4.19-priv
  namespace: ocp-private
tests:
- as: test
  commands: make test
  container:
    from: src
- as: test-generate
  commands: make generate manifests regen-crd
  container:
    from: src
- as: lint
  commands: |
    export GOCACHE=/tmp/
    export GOLANGCI_LINT_CACHE=/tmp/.cache
    export GOPROXY=https://proxy.golang.org
    make lint
  container:
    clone: true
    from: src
- as: fips-image-scan-kueue-operator
  skip_if_only_changed: ^\.tekton/|\.md$|^(LICENSE|OWNERS)$
  steps:
    dependencies:
      SCAN_IMAGE: kueue-operator
    test:
    - ref: fips-check-image-scan
- as: security
  optional: true
  skip_if_only_changed: ^\.tekton/|\.md$|^(LICENSE|OWNERS)$
  steps:
    workflow: openshift-ci-security
- as: test-e2e
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.17"
  steps:
    test:
    - as: e2e-kueue
      cli: latest
      commands: |-
        echo "Current PWD: $(pwd)"
        echo "Listing directory contents:"
        ls -lah

        TEMP_DIR=$(mktemp -d)
        git clone --depth 1 https://github.com/openshift/kubernetes-sigs-kueue.git ${TEMP_DIR}
        cd ${TEMP_DIR}
        KUEUE_COMMIT_ID=$(git rev-parse HEAD)
        cd -
        rm -rf ${TEMP_DIR}

        REVISION=$(git log --oneline -1 | awk '{print $4}' | tr -d "'")
        export KUEUE_IMAGE=quay.io/redhat-user-workloads/kueue-operator-tenant/kubernetes-sigs-kueue:${KUEUE_COMMIT_ID}
        echo "Using Kueue Image: ${KUEUE_IMAGE}"

        echo "Current Git branch:"
        git branch --show-current

        echo "Latest Git commits:"
        git log --oneline -5

        echo "Git status:"
        git status

        export OPERATOR_IMAGE=quay.io/redhat-user-workloads/kueue-operator-tenant/kueue-operator:on-pr-${REVISION}
        echo "Using Operator Image: ${OPERATOR_IMAGE}"

        echo "Waiting for operator image ${OPERATOR_IMAGE} to be available..."
        function wait_for_image() {
            until skopeo inspect docker://${OPERATOR_IMAGE} >/dev/null 2>&1; do
                echo "Operator image not found yet. Retrying in 30s..."
                sleep 30
            done
        }
        export -f wait_for_image
        timeout 10m bash -c "wait_for_image"

        echo "Operator image is available. Proceeding with tests..."

        make deploy-cert-manager
        make test-e2e
        make undeploy-ocp
      from: kueue-operator-src
      resources:
        requests:
          cpu: 300m
          memory: 500Mi
zz_generated_metadata:
  branch: release-4.19
  org: openshift-priv
  repo: kueue-operator
