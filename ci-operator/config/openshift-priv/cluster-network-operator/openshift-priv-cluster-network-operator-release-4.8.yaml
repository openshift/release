base_images:
  base:
    name: 4.8-priv
    namespace: ocp-private
    tag: base
  dev-scripts:
    name: test
    namespace: ocp-kni
    tag: dev-scripts
  ocp_builder_golang-1.12:
    name: builder
    namespace: ocp
    tag: golang-1.12
  ocp_builder_golang-1.14:
    name: builder
    namespace: ocp
    tag: golang-1.14
  ocp_builder_rhel-8-golang-1.15-openshift-4.6:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-1.15-openshift-4.6
  ocp_builder_rhel-8-golang-1.15-openshift-4.7:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-1.15-openshift-4.7
  ocp_builder_rhel-8-golang-openshift-4.6:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-openshift-4.6
  openshift_release_golang-1.13:
    name: release
    namespace: openshift
    tag: golang-1.13
binary_build_commands: hack/build-go.sh
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.15
canonical_go_repository: github.com/openshift/cluster-network-operator
images:
- dockerfile_path: Dockerfile.rhel7
  from: base
  inputs:
    ocp_builder_rhel-8-golang-1.15-openshift-4.7:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.15-openshift-4.7
  to: cluster-network-operator
promotion:
  disabled: true
  name: 4.8-priv
  namespace: ocp-private
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tag_specification:
  name: 4.8-priv
  namespace: ocp-private
tests:
- artifact_dir: /tmp/artifacts
  as: unit
  commands: hack/test-go.sh
  container:
    from: src
- artifact_dir: /tmp/artifacts
  as: verify
  commands: "export GOLANGCI_LINT_VERSION=$(cat .golangciversion 2&> /dev/null || echo \"1.23.8\")  \nexport GOLANGCI_LINT_CACHE=/tmp/.cache\ncurl -sfL \"https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_LINT_VERSION:?'golangci-lint version is unset'}/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64.tar.gz\" | tar -C /go/bin -zx --strip-components=1 \"golangci-lint-${GOLANGCI_LINT_VERSION}-linux-amd64/golangci-lint\"\n ./hack/verify-style.sh\n"
  container:
    from: src
- artifact_dir: /tmp/artifacts
  as: e2e-gcp
  steps:
    cluster_profile: gcp
    workflow: openshift-e2e-gcp
- artifact_dir: /tmp/artifacts
  as: e2e-gcp-ovn-upgrade
  steps:
    cluster_profile: gcp
    workflow: openshift-upgrade-gcp-ovn
- artifact_dir: /tmp/artifacts
  as: e2e-agnostic-upgrade
  steps:
    cluster_profile: gcp
    workflow: openshift-upgrade-gcp
- artifact_dir: /tmp/artifacts
  as: e2e-aws-sdn-multi
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-sdn-multi
- artifact_dir: /tmp/artifacts
  as: e2e-ovn-step-registry
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-ovn
- artifact_dir: /tmp/artifacts
  as: e2e-ovn-hybrid-step-registry
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-ovn-hybrid
- artifact_dir: /tmp/artifacts
  as: e2e-ovn-ipsec-step-registry
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-ovn-ipsec
- artifact_dir: /tmp/artifacts
  as: e2e-metal-ipi-ovn-ipv6
  steps:
    cluster_profile: packet
    env:
      DEVSCRIPTS_CONFIG: |
        IP_STACK=v6
        NETWORK_TYPE=OVNKubernetes
    workflow: baremetalds-e2e
- artifact_dir: /tmp/artifacts
  as: e2e-aws-ovn-windows
  steps:
    cluster_profile: aws
    test:
    - ref: windows-e2e-operator-test-with-custom-vxlan-port
    workflow: ipi-aws-ovn-hybrid-custom-vxlan-port
- artifact_dir: /tmp/artifacts
  as: e2e-vsphere-ovn
  steps:
    cluster_profile: vsphere
    workflow: openshift-e2e-vsphere-ovn
- artifact_dir: /tmp/artifacts
  as: e2e-azure-ovn
  steps:
    cluster_profile: azure4
    workflow: openshift-e2e-azure-ovn
- artifact_dir: /tmp/artifacts
  as: e2e-gcp-ovn
  steps:
    cluster_profile: gcp
    workflow: openshift-e2e-gcp-ovn
zz_generated_metadata:
  branch: release-4.8
  org: openshift-priv
  repo: cluster-network-operator
