base_images:
  go-builder:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.21-openshift-4.16
binary_build_commands: go build
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.21
images:
- dockerfile_path: Dockerfile
  to: gitstream
promotion:
  to:
  - namespace: edge-infrastructure
    tag: latest
    tag_by_commit: true
releases:
  latest:
    release:
      channel: fast
      version: "4.15"
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: unit-tests
  steps:
    test:
    - as: run-and-upload-codecov
      commands: |
        go test -mod=readonly ./... -coverprofile cover.out
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov -t "$(cat /var/run/secrets/codecov-token)" -r "${REPO_OWNER}/${REPO_NAME}" -C "${PULL_PULL_SHA}" -P "${PULL_NUMBER}" -B "${PULL_HEAD_REF}" -N "${PULL_BASE_SHA}"
      credentials:
      - mount_path: /var/run/secrets
        name: codecov-token
        namespace: test-credentials
      from: src
      resources:
        requests:
          memory: 1Gi
- as: unit-tests-postsubmit
  postsubmit: true
  steps:
    test:
    - as: run-and-upload-codecov
      commands: |
        go test -mod=readonly ./... -coverprofile cover.out
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov -t "$(cat /var/run/secrets/codecov-token)" -r "${REPO_OWNER}/${REPO_NAME}" -B "${PULL_BASE_REF}" -C "${PULL_BASE_SHA}"
      credentials:
      - mount_path: /var/run/secrets
        name: codecov-token
        namespace: test-credentials
      from: src
      resources:
        requests:
          memory: 1Gi
- as: build
  commands: go build -mod=readonly
  container:
    clone: true
    from: go-builder
zz_generated_metadata:
  branch: main
  org: rh-ecosystem-edge
  repo: gitstream
