base_images:
  hadolint-image:
    name: hadolint
    namespace: ci
    tag: latest
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.18
images:
- dockerfile_literal: |-
    FROM src
    RUN pip3 install --upgrade setuptools pip && pip3 install yamllint && yamllint --version
    RUN curl --location -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.4.7/argocd-linux-amd64 && \
        chmod +x /usr/local/bin/argocd && \
        argocd version --client && \
        SHELLCHECK_VERSION=0.7.1 && \
        curl --fail -sSL  https://github.com/koalaman/shellcheck/releases/download/v$SHELLCHECK_VERSION/shellcheck-v$SHELLCHECK_VERSION.linux.x86_64.tar.xz | tar -xJvf - shellcheck-v$SHELLCHECK_VERSION/shellcheck && \
        mv shellcheck-v$SHELLCHECK_VERSION/shellcheck /usr/local/bin/shellcheck && \
        chmod 755 /usr/local/bin/shellcheck && \
        shellcheck -V && \
        KUBECTL_VERSION=1.24.3 && \
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VERSION/bin/linux/amd64/kubectl && \
        chmod +x ./kubectl && mv ./kubectl /usr/local/bin && \
        kubectl version --client=true && \
        wget https://github.com/mikefarah/yq/releases/download/v4.25.1/yq_linux_amd64 -O /usr/local/bin/yq && \
        chmod +x /usr/local/bin/yq && yq --version
  from: src
  to: plnsvc-test-image
releases:
  latest:
    release:
      architecture: amd64
      channel: stable
      version: "4.10"
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: plnsvc-ckcp-test
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.10"
  steps:
    test:
    - as: ckcp-setup
      cli: latest
      commands: |
        HOME_DIR="$(pwd)"

        echo "Start building kcp plugin ..."
        kcp_version="$(yq '.images[] | select(.name == "kcp") | .newTag' "ckcp/openshift/overlays/dev/kustomization.yaml")"
        echo "kcp version:" $kcp_version
        git clone https://github.com/kcp-dev/kcp.git -b $kcp_version
        cd $HOME_DIR/kcp && go mod vendor && make install
        kubectl-kcp --version

        echo "\n\nStart ckcp setup ..."
        cd $HOME_DIR/ckcp && ./openshift_dev_setup.sh -d
      from: plnsvc-test-image
      resources:
        requests:
          cpu: 1000m
    workflow: generic-claim
- as: plnsvc-shellcheck
  steps:
    test:
    - as: run-shellcheck
      cli: latest
      commands: |
        find . -name "*.sh" -exec shellcheck {} +
      from: plnsvc-test-image
      resources:
        requests:
          cpu: 100m
- as: plnsvc-yaml-lint
  steps:
    test:
    - as: run-yamllint
      cli: latest
      commands: |
        yamllint -c test/config/yamllint.yaml .
      from: plnsvc-test-image
      resources:
        requests:
          cpu: 100m
- as: plnsvc-hadolint
  commands: |
    find . -name Dockerfile -exec hadolint -c test/config/hadolint.yaml {} +
  container:
    clone: true
    from: hadolint-image
zz_generated_metadata:
  branch: main
  org: openshift-pipelines
  repo: pipeline-service
