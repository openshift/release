binary_build_commands: |
  # The CentOS 8 build root does not have golang package installed so that we
  # use the golang installed by Kata Containers setup script. Here it is
  # ensured the tools are searcheable.
  export GOPATH=/go
  export PATH="${GOPATH}/bin:/usr/local/go/bin/:$PATH"
  source ci/lib.sh
  clone_tests_repo
build_root:
  project_image:
    dockerfile_path: ci/openshift-ci/images/Dockerfile.buildroot
images:
- dockerfile_literal: |
    FROM bin
    RUN dnf install -y --nobest gettext
  from: bin
  to: with-deps
releases:
  initial:
    integration:
      name: "4.14"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.14"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 2Gi
tests:
- as: e2e-tests
  cron: 2 7 * * *
  steps:
    allow_best_effort_post_steps: true
    allow_skip_on_success: true
    cluster_profile: azure4
    env:
      TEST_SKIPS: \[sig-api-machinery\]\|\[sig-apps\]\|\[sig-arch\]\|\[sig-auth\]\|\[sig-autoscaling\]\|\[sig-builds\]\|\[sig-ci\]\|\[sig-cli\]\|\[sig-cloud-provider\]\|\[sig-cluster-lifecycle\]\|\[sig-coreos\]\|\[sig-devex\]\|\[sig-etcd\]\|\[sig-imageregistry\]\|\[sig-installer\]\|\[sig-instrumentation\]\|\[sig-kubevirt\]\|\[sig-network\]\|\[sig-network-edge\]\|\[sig-operator\]\|\[sig-scheduling\]\|\[sig-storage\]\|\[sig-node\]
        Security Context should support seccomp runtime/default\|\[sig-node\] Variable
        Expansion should allow substituting values in a volume subpath\|\[sig-node\]
        Container Runtime blackbox test on terminated container should report termination
        message\|\[k8s.io\] Probing container should be restarted with a docker exec
        liveness probe with timeout\|\[sig-node\] Probing container should be restarted
        with a failing exec liveness probe that took longer than the timeout\|\[sig-node\]
        Probing container should be restarted with an exec liveness probe with timeout
        \[MinimumKubeletVersion:1.20\]\|\[sig-node\] Pods Extended Pod Container Status
        should never report success for a pending container\|\[sig-node\] Probing
        container should \*not\* be restarted with a GRPC liveness probe\|\[sig-node\]
        Pods Extended Pod Container lifecycle evicted pods should be terminal\|\[sig-node\]
        PodOSRejection \[NodeConformance\] Kubelet should reject pod when the node
        OS doesn't match pod's OS\|\[sig-node\] Probing container should be restarted
        with a GRPC liveness probe
    pre:
    - chain: ipi-azure-pre
    - as: kata-containers-e2e-pre
      cli: latest
      commands: |
        # oc is made available to this script via cli configuration, but
        # kubectl is not. Since kubectl is used by kata-webhook scripts,
        # thus it is created a symlink to oc.
        pushd "$CLI_DIR"
        if [ ! -f kubectl ]; then
            ln -s oc kubectl
        fi
        popd
        # TODO: The ipi-azure test step does not export AZURE_AUTH_LOCATION
        # which causes openshift-tests to fail.
        export AZURE_AUTH_LOCATION=${SHARED_DIR}/metadata.json

        KATA_WORKDIR=/go/src/github.com/kata-containers/tests
        cd $KATA_WORKDIR

        # The installer is instructed to configure kata containers to use
        # QEMU from the RHCOS extension and host's kernel.
        export KATA_WITH_SYSTEM_QEMU="yes"
        export KATA_WITH_HOST_KERNEL="yes"
        export KATA_RUNTIME="kata-qemu"
        # Install Kata Containers and run a smoke test.
        .ci/openshift-ci/test.sh

        # Deploy the kata-webhook so that the tests ran on next step of the
        # workflow will use the kata runtime.
        .ci/openshift-ci/cluster/deploy_webhook.sh
      from: with-deps
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: openshift-e2e-azure
zz_generated_metadata:
  branch: main
  org: kata-containers
  repo: kata-containers
  variant: next
