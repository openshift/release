binary_build_commands: make install
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.18
images:
- dockerfile_literal: |
    FROM registry.access.redhat.com/ubi8/ubi:latest
    WORKDIR /root

    RUN yum install -y git &&\
        git config --global http.sslVerify false &&\
        git clone https://github.com/terraform-redhat/terraform-provider-ocm.git --branch main

    RUN curl -Ls https://go.dev/dl/go1.18.linux-amd64.tar.gz |tar -C /usr/local -xzf -
    ENV PATH="/usr/local/go/bin:${PATH}"
    ENV GOPATH=/usr/local/go
    ENV TEST_OFFLINE_TOKEN=""

    RUN yum install -y yum-utils && \
        yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo &&\
        yum -y install terraform python3 make jq &&\
        pip3 install PyYAML jinja2 &&\
        go env -w GO111MODULE=on &&\
        go install github.com/onsi/ginkgo/v2/ginkgo@latest &&\
        go install github.com/golang/mock/mockgen@v1.6.0 &&\
        cd terraform-provider-ocm && go mod tidy && go mod vendor && make install &&\
        chmod -R 777 $GOPATH &&\
        echo 'RUN done'
  to: ocm-tf-e2e
- dockerfile_literal: |
    FROM quay.io/ocp-edge-qe/aws-ocm-terraform-provider:latest
  to: ocm-tf-cli
releases:
  latest:
    integration:
      name: "4.14"
      namespace: ocp
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: unit
  commands: |-
    go install -mod=mod github.com/onsi/ginkgo/v2/ginkgo@latest
    unset GOFLAGS
    make unit-test
  container:
    from: src
- as: rehearse-e2e-debug
  cron: '@yearly'
  steps:
    cluster_profile: aws-qe
    env:
      GATEWAY_URL: https://api.stage.openshift.com
      OPENSHIFT_VERSION: "4.13"
      TOKEN_URL: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
    workflow: terraform-aws-e2e
- as: rehearse-single-debug
  cron: '@yearly'
  steps:
    cluster_profile: aws-qe
    env:
      TF_VARS: |
        url = "https://api.stage.openshift.com"
        account_role_prefix = "asher-ar"
    post:
    - ref: terraform-aws-cluster-delete
    - ref: terraform-aws-cluster-delete-account-roles
    pre:
    - ref: terraform-aws-cluster-name
    - ref: terraform-aws-cluster-create-account-roles
    - ref: terraform-aws-cluster-create
zz_generated_metadata:
  branch: main
  org: terraform-redhat
  repo: terraform-provider-ocm
