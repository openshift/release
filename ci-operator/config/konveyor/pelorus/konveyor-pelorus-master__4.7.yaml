base_images:
  cli:
    name: "4.7"
    namespace: ocp
    tag: cli
  ubi_minimal:
    name: ubi-minimal
    namespace: ocp
    tag: "8"
binary_build_commands: make dev-env
build_root:
  project_image:
    dockerfile_literal: |
      FROM registry.access.redhat.com/ubi8
      USER root
      RUN yum install -y python39 make diffutils openssl git && \
          yum clean all && rm -rf /var/cache/dnf/*
      ENV XDG_DATA_HOME=/.local
      WORKDIR pelorus
releases:
  latest:
    release:
      channel: stable
      version: "4.7"
resources:
  '*':
    limits:
      memory: 6Gi
    requests:
      cpu: 500m
      memory: 1Gi
tests:
- as: unit
  steps:
    test:
    - as: unit
      commands: |
        make lint
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
- as: e2e-openshift
  optional: true
  steps:
    cluster_profile: aws
    env:
      FIPS_ENABLED: "false"
    test:
    - as: e2e
      commands: |
        # TODO: optimize this
        set -x
        make dev-env
        source .venv/bin/activate
        export KUBECONFIG="${SHARED_DIR}/kubeconfig"
        oc create namespace pelorus
        timeout 30s bash -c 'until oc get project | grep pelorus; do sleep 10; done'
        helm install operators charts/operators --namespace pelorus --debug
        # check operators
        timeout 5m bash -c 'until oc get svc grafana-operator-controller-manager-metrics-service --namespace pelorus; do sleep 10; done'
        helm install pelorus charts/pelorus --namespace pelorus --debug
        # check final deployment
        timeout 10m bash -c 'until oc get svc grafana-service --namespace pelorus; do sleep 10; done'
        timeout 10m bash -c 'until oc get svc prometheus-operated --namespace pelorus; do sleep 10; done'
        timeout 10m bash -c 'until oc get svc prometheus-pelorus --namespace pelorus; do sleep 10; done'
        # update exporter values and helm upgrade
        timeout 1m bash -c 'until curl -o ci_values.yaml https://raw.githubusercontent.com/konveyor/mig-demo-apps/master/apps/todolist-mongo-go/pelorus/values.yaml; do sleep 20; done'
        timeout 10m bash -c 'until helm upgrade pelorus charts/pelorus --namespace pelorus --values ci_values.yaml; do sleep 10; done'
        timeout 10m bash -c 'until oc get svc committime-exporter --namespace pelorus; do sleep 10; done'
        timeout 10m bash -c 'until oc get svc deploytime-exporter --namespace pelorus; do sleep 10; done'
        # install the sample-app - https://github.com/konveyor/mig-demo-apps/tree/master/apps/todolist-mongo-go
        timeout 1m bash -c 'until curl -o mongo-persistent.yaml https://raw.githubusercontent.com/konveyor/mig-demo-apps/master/apps/todolist-mongo-go/mongo-persistent.yaml; do sleep 20; done'
        sed -i 's/your_org/konveyor/g' mongo-persistent.yaml
        timeout 10m bash -c 'until oc create -f mongo-persistent.yaml; do sleep 10; done'
        timeout 10m bash -c 'until oc get svc todolist --namespace mongo-persistent; do sleep 10; done'
        # TEST to ensure the todolist app commit and image sha are read by the exporters
        committime_route=`oc get route -n pelorus committime-exporter -o=template='http://{{.spec.host | printf "%s\n"}}'`
        deploytime_route=`oc get route -n pelorus deploytime-exporter -o=template='http://{{.spec.host | printf "%s\n"}}'`
        # check the logs for todolist-mongo-go in the mongo-persistent namespace
        timeout 5m bash -c 'until oc -n pelorus logs --since=10s service/committime-exporter | grep "namespace=mongo-persistent, app=todolist"; do sleep 10; done'
        timeout 5m bash -c 'until oc -n pelorus logs --since=5m service/deploytime-exporter | grep "namespace=mongo-persistent, app=todolist"; do sleep 10; done'
      from: src
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
    workflow: openshift-e2e-aws
zz_generated_metadata:
  branch: master
  org: konveyor
  repo: pelorus
  variant: "4.7"
