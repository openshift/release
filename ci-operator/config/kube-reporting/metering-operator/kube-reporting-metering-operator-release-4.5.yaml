base_images:
  ansible-operator:
    name: "4.5"
    namespace: ocp
    tag: ansible-operator
  base:
    name: "4.5"
    namespace: ocp
    tag: base
build_root:
  project_image:
    context_dir: .
    dockerfile_path: Dockerfile.src
images:
- dockerfile_path: Dockerfile.reporting-operator.okd
  from: base
  to: metering-reporting-operator
- dockerfile_path: Dockerfile.metering-ansible-operator
  from: ansible-operator
  to: metering-ansible-operator
promotion:
  name: "4.5"
  namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tag_specification:
  name: "4.5"
  namespace: ocp
tests:
- artifact_dir: /tmp/artifacts
  as: unit
  commands: make unit TEST_OUTPUT_DIR=${ARTIFACT_DIR}
  container:
    from: src
- artifact_dir: /tmp/artifacts
  as: verify
  commands: |
    set -x
    set -e
    # (chance): Hacks to allow us write access to our source files since
    # they're 664 in the image and owned by root:root, and we get a random UID
    # in Openshift pods which means we don't have write permissions.

    # create a copy of the source so we can modify the files.
    export GOPATH=/tmp/go
    mkdir -p $GOPATH/src/github.com/kube-reporting/
    cp -r /go/src/github.com/kube-reporting/metering-operator/ $GOPATH/src/github.com/kube-reporting/metering-operator
    cd $GOPATH/src/github.com/kube-reporting/metering-operator

    # Run the actual tests that nothing in the changes after re-generating
    # files. This ensures generated files aren't modified directly.
    make verify
  container:
    from: src
- artifact_dir: /tmp/artifacts
  as: metering-e2e-aws
  steps:
    cluster_profile: aws
    test:
    - as: e2e
      cli: latest
      commands: |
        set -x

        # Increase the size of the machines so that there are machines large enough to run Presto, and the full metering stack.
        kubectl -n openshift-machine-api get machinesets --no-headers | awk '{ print $1 }' | xargs -I{} kubectl -n openshift-machine-api patch machineset {} --type json -p '[{"op": "replace", "path": "/spec/template/spec/providerSpec/value/instanceType", "value": "m5.xlarge"}]'
        kubectl -n openshift-machine-api get machinesets -o name | grep worker | cut -d/ -f2 | xargs -I{} kubectl -n openshift-machine-api scale machineset {} --replicas 4

        TEST_OUTPUT_PATH=${ARTIFACT_DIR}/e2e EXTRA_TEST_FLAGS="-run TestManualMeteringInstall" make e2e
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
zz_generated_metadata:
  branch: release-4.5
  org: kube-reporting
  repo: metering-operator
