base_images:
  base:
    name: ubi-minimal
    namespace: ocp
    tag: "8"
  open-cluster-management_builder_go1.16-linux:
    name: builder
    namespace: open-cluster-management
    tag: go1.16-linux
  open-cluster-management_builder_go1.17-linux:
    name: builder
    namespace: open-cluster-management
    tag: go1.17-linux
build_root:
  image_stream_tag:
    name: builder
    namespace: open-cluster-management
    tag: go1.16-linux
images:
- dockerfile_path: operators/multiclusterobservability/Dockerfile
  from: base
  inputs:
    open-cluster-management_builder_go1.17-linux:
      as:
      - registry.ci.openshift.org/open-cluster-management/builder:go1.17-linux
  to: multicluster-observability-operator
- dockerfile_path: proxy/Dockerfile
  from: base
  inputs:
    open-cluster-management_builder_go1.17-linux:
      as:
      - registry.ci.openshift.org/open-cluster-management/builder:go1.17-linux
  to: rbac-query-proxy
- dockerfile_path: operators/endpointmetrics/Dockerfile
  from: base
  inputs:
    open-cluster-management_builder_go1.17-linux:
      as:
      - registry.ci.openshift.org/open-cluster-management/builder:go1.17-linux
  to: endpoint-monitoring-operator
- dockerfile_path: tests/Dockerfile
  from: base
  inputs:
    open-cluster-management_builder_go1.17-linux:
      as:
      - registry.ci.openshift.org/open-cluster-management/builder:go1.17-linux
  to: observability-e2e-test
- dockerfile_path: collectors/metrics/Dockerfile
  from: base
  inputs:
    open-cluster-management_builder_go1.17-linux:
      as:
      - registry.ci.openshift.org/open-cluster-management/builder:go1.17-linux
  to: metrics-collector
- dockerfile_path: loaders/dashboards/Dockerfile
  from: base
  inputs:
    open-cluster-management_builder_go1.17-linux:
      as:
      - registry.ci.openshift.org/open-cluster-management/builder:go1.17-linux
  to: grafana-dashboard-loader
promotion:
  name: "2.4"
  namespace: open-cluster-management
releases:
  initial:
    integration:
      name: "4.7"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.7"
      namespace: ocp
resources:
  '*':
    limits:
      memory: 6Gi
    requests:
      cpu: 100m
      memory: 1Gi
test_binary_build_commands: "true"
tests:
- as: test-unit
  commands: |
    export SELF="make -f Makefile"
    make -f Makefile unit-tests
  container:
    from: src
- as: e2e-kind
  steps:
    env:
      AWS_CREDENTIALS_SECRET: ocm-obs-china-aws-kind
      AWS_INSTANCE_TYPE: t3.xlarge
    post:
    - ref: ocm-e2e-kind-destroy
    pre:
    - ref: ocm-ci-rbac
    - ref: ocm-e2e-kind-create
    test:
    - as: test
      commands: |
        echo "MULTICLUSTER_OBSERVABILITY_OPERATOR_IMAGE_REF=$MULTICLUSTER_OBSERVABILITY_OPERATOR_IMAGE_REF"
        echo "ENDPOINT_MONITORING_OPERATOR_IMAGE_REF=$ENDPOINT_MONITORING_OPERATOR_IMAGE_REF"
        echo "GRAFANA_DASHBOARD_LOADER_IMAGE_REF=$GRAFANA_DASHBOARD_LOADER_IMAGE_REF"
        echo "METRICS_COLLECTOR_IMAGE_REF=$METRICS_COLLECTOR_IMAGE_REF"
        echo "RBAC_QUERY_PROXY_IMAGE_REF=$RBAC_QUERY_PROXY_IMAGE_REF"
        export SELF="make"
        set -o pipefail
        make e2e-tests-in-kind 2>&1 | tee ${ARTIFACT_DIR}/run-e2e-in-kind.log
        set +o pipefail
      dependencies:
      - env: MULTICLUSTER_OBSERVABILITY_OPERATOR_IMAGE_REF
        name: multicluster-observability-operator
      - env: ENDPOINT_MONITORING_OPERATOR_IMAGE_REF
        name: endpoint-monitoring-operator
      - env: GRAFANA_DASHBOARD_LOADER_IMAGE_REF
        name: grafana-dashboard-loader
      - env: METRICS_COLLECTOR_IMAGE_REF
        name: metrics-collector
      - env: RBAC_QUERY_PROXY_IMAGE_REF
        name: rbac-query-proxy
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: ocm-e2e-kind
- as: test-e2e
  skip_if_only_changed: ^docs/|hack/|\.md$|\.properties$|\.copyrightignore$|\.dockerignore$|^(?:.*/)?(?:\.gitignore|\.md$|OWNERS|PROJECT|LICENSE|DCO)$
  steps:
    dependencies:
      COMPONENT_IMAGE_REF: multicluster-observability-operator
    env:
      CLUSTERPOOL_GROUP_NAME: Core-Services
      CLUSTERPOOL_HOST_NAMESPACE: acm-observability-china
      CLUSTERPOOL_HOST_PROW_KUBE_SECRET: ocm-obs-china-clusterpool
      CLUSTERPOOL_LIFETIME: 1h
      CLUSTERPOOL_LIST_INCLUSION_FILTER: prow
      COMPONENT_NAME: multicluster-observability-operator
      DEPLOY_HUB_ADDITIONAL_YAML: |
        LS0tCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogQ2x1c3Rl
        clJvbGUKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBtdWx0aWNs
        dXN0ZXItb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci1lMmUtdGVzdGluZwpydWxlczoKICAtIGFkbWlz
        c2lvbnJlZ2lzdHJhdGlvbi5rOHMuaW8KICAgIHJlc291cmNlczoKICAgIC0gbXV0YXRpbmd3ZWJo
        b29rY29uZmlndXJhdGlvbnMKICAgIC0gdmFsaWRhdGluZ3dlYmhvb2tjb25maWd1cmF0aW9ucwog
        ICAgdmVyYnM6CiAgICAtIGNyZWF0ZQogICAgLSBkZWxldGUKICAgIC0gZ2V0CiAgICAtIGxpc3QK
        ICAgIC0gcGF0Y2gKICAgIC0gdXBkYXRlCiAgICAtIHdhdGNoCi0tLQpraW5kOiBDbHVzdGVyUm9s
        ZUJpbmRpbmcKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQptZXRhZGF0
        YToKICBuYW1lOiBtdWx0aWNsdXN0ZXItb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci1lMmUtdGVzdGlu
        Zwpyb2xlUmVmOgogIGFwaUdyb3VwOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvCiAga2luZDog
        Q2x1c3RlclJvbGUKICBuYW1lOiBtdWx0aWNsdXN0ZXItb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci1l
        MmUtdGVzdGluZwpzdWJqZWN0czoKLSBraW5kOiBTZXJ2aWNlQWNjb3VudAogIG5hbWU6IG11bHRp
        Y2x1c3Rlci1vYnNlcnZhYmlsaXR5LW9wZXJhdG9yCiAgbmFtZXNwYWNlOiBvcGVuLWNsdXN0ZXIt
        bWFuYWdlbWVudAotLS0K
    test:
    - as: e2e
      commands: |
        echo "ENDPOINT_MONITORING_OPERATOR_IMAGE_REF=$ENDPOINT_MONITORING_OPERATOR_IMAGE_REF"
        echo "GRAFANA_DASHBOARD_LOADER_IMAGE_REF=$GRAFANA_DASHBOARD_LOADER_IMAGE_REF"
        echo "METRICS_COLLECTOR_IMAGE_REF=$METRICS_COLLECTOR_IMAGE_REF"
        echo "RBAC_QUERY_PROXY_IMAGE_REF=$RBAC_QUERY_PROXY_IMAGE_REF"
        export SELF="make"
        set -o pipefail
        make e2e-tests 2>&1 | tee ${ARTIFACT_DIR}/e2e_tests_out.log
        set +o pipefail
      dependencies:
      - env: ENDPOINT_MONITORING_OPERATOR_IMAGE_REF
        name: endpoint-monitoring-operator
      - env: GRAFANA_DASHBOARD_LOADER_IMAGE_REF
        name: grafana-dashboard-loader
      - env: METRICS_COLLECTOR_IMAGE_REF
        name: metrics-collector
      - env: RBAC_QUERY_PROXY_IMAGE_REF
        name: rbac-query-proxy
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: ocm-e2e-clusterpool
- as: sonarcloud
  commands: |
    export SELF="make"
    make sonar/go/prow
  container:
    from: src
  secrets:
  - mount_path: /etc/sonarcloud/
    name: acm-sonarcloud-token
- as: sonarcloud-post-submit
  commands: |
    export SELF="make"
    make sonar/go/prow
  container:
    from: src
  postsubmit: true
  secrets:
  - mount_path: /etc/sonarcloud/
    name: acm-sonarcloud-token
zz_generated_metadata:
  branch: main
  org: open-cluster-management
  repo: multicluster-observability-operator
