build_root:
  project_image:
    dockerfile_literal: |-
      FROM registry.access.redhat.com/ubi9/ubi
      RUN yum install -y openssl git
images:
- dockerfile_literal: |-
    FROM src
    SHELL ["/bin/bash", "-c"]
    RUN yum install -y python3 python3-pip make gettext bc
    RUN curl -Lso /usr/local/bin/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && chmod +x /usr/local/bin/jq
    RUN curl -Lso /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.25.2/yq_linux_amd64 && chmod +x /usr/local/bin/yq
    RUN curl -Lso /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x /usr/local/bin/kubectl
    RUN curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh && helm version
  from: src
  to: backstage-performance-runner
releases:
  latest:
    release:
      architecture: amd64
      channel: fast
      version: "4.13"
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- always_run: false
  as: baseline
  steps:
    cluster_profile: aws-rhdh-performance
    env:
      DURATION: 1h0m0s
      SCENARIO: baseline-test
      SPAWN_RATE: "100"
      USE_PR_BRANCH: "false"
      USERS: "10000"
      WORKERS: "100"
    workflow: redhat-performance-backstage-performance
  timeout: 8h0m0s
- always_run: false
  as: baseline-pr
  steps:
    cluster_profile: aws-rhdh-performance
    env:
      DURATION: 1h0m0s
      SCENARIO: baseline-test
      SPAWN_RATE: "100"
      USE_PR_BRANCH: "true"
      USERS: "10000"
      WORKERS: "100"
    workflow: redhat-performance-backstage-performance
  timeout: 8h0m0s
- always_run: false
  as: search-catalog
  steps:
    cluster_profile: aws-rhdh-performance
    env:
      DURATION: 1h0m0s
      SCENARIO: search-catalog
      SPAWN_RATE: "100"
      USE_PR_BRANCH: "true"
      USERS: "10000"
      WORKERS: "100"
    workflow: redhat-performance-backstage-performance
  timeout: 8h0m0s
- always_run: false
  as: list-catalog
  steps:
    cluster_profile: aws-rhdh-performance
    env:
      DURATION: 1h0m0s
      SCENARIO: list-catalog
      SPAWN_RATE: "100"
      USE_PR_BRANCH: "true"
      USERS: "10000"
      WORKERS: "100"
    workflow: redhat-performance-backstage-performance
  timeout: 8h0m0s
- always_run: false
  as: list-catalog-empty
  steps:
    cluster_profile: aws-rhdh-performance
    env:
      DURATION: 1h0m0s
      PRE_LOAD_DB: "false"
      SCENARIO: list-catalog
      SPAWN_RATE: "100"
      USE_PR_BRANCH: "true"
      USERS: "10000"
      WORKERS: "100"
    workflow: redhat-performance-backstage-performance
  timeout: 8h0m0s
zz_generated_metadata:
  branch: main
  org: redhat-performance
  repo: backstage-performance
