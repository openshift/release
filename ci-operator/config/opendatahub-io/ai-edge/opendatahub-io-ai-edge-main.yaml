build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.21
releases:
  latest:
    release:
      architecture: multi
      channel: stable
      version: "4.14"
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: test-ai-edge
  skip_if_only_changed: \.github|\.md$|^LICENSE$|^OWNERS$|THIRD-PARTY-NOTICES.txt|^acm/|^byo-mgmt/|^docs/|^gitea/|pipelines/model-upload|pipelines/models|test/acm|test/gitops
  steps:
    cluster_profile: aws-opendatahub
    env:
      BASE_DOMAIN: openshift-ci-aws.rhaiseng.com
      HYPERSHIFT_AWS_REGION: us-west-2
      OPERATORS: |
        [
            {"name": "openshift-pipelines-operator-rh", "source": "redhat-operators", "channel": "!default", "install_namespace": "openshift-operators"}
        ]
    test:
    - as: wait-for-olm
      cli: latest
      commands: |
        set +e
        echo "Waiting for catalog sources to be available as they are not ready immediately due to a current issue with hypershift"
        date
        for i in {1..60}
        do
          oc get packagemanifest openshift-pipelines-operator-rh >/dev/null 2>&1
          if [ "$?" == 0 ]; then
            echo "packagemanifest openshift-pipelines-operator-rh found" && date && break
          elif [ "$i" == 60 ]; then
            echo "waiting for packagemanifest openshift-pipelines-operator-rh timed out" && date && exit 1
          else
            echo "packagemanifest openshift-pipelines-operator-rh NOT found, sleeping for 15s"
            sleep 15
          fi
        done
      from: src
      resources:
        requests:
          cpu: 500m
    - ref: install-operators
    - as: test-ai-edge
      cli: latest
      commands: |
        unset GOFLAGS
        make test
      credentials:
      - mount_path: /secrets/ai-edge-aws
        name: ai-edge-aws
        namespace: test-credentials
      - mount_path: /secrets/ai-edge-quay
        name: ai-edge-quay
        namespace: test-credentials
      - mount_path: /secrets/ai-edge-github
        name: ai-edge-github
        namespace: test-credentials
      from: src
      resources:
        requests:
          cpu: 500m
    workflow: hypershift-hostedcluster-workflow
- as: test-ai-edge-periodic
  cron: 0 3 * * *
  steps:
    cluster_profile: aws-opendatahub
    env:
      BASE_DOMAIN: openshift-ci-aws.rhaiseng.com
      HYPERSHIFT_AWS_REGION: us-west-2
      OPERATORS: |
        [
            {"name": "openshift-pipelines-operator-rh", "source": "redhat-operators", "channel": "!default", "install_namespace": "openshift-operators"}
        ]
    test:
    - as: wait-for-olm
      cli: latest
      commands: |
        set +e
        echo "Waiting for catalog sources to be available as they are not ready immediately due to a current issue with hypershift"
        date
        for i in {1..60}
        do
          oc get packagemanifest openshift-pipelines-operator-rh >/dev/null 2>&1
          if [ "$?" == 0 ]; then
            echo "packagemanifest openshift-pipelines-operator-rh found" && date && break
          elif [ "$i" == 60 ]; then
            echo "waiting for packagemanifest openshift-pipelines-operator-rh timed out" && date && exit 1
          else
            echo "packagemanifest openshift-pipelines-operator-rh NOT found, sleeping for 15s"
            sleep 15
          fi
        done
      from: src
      resources:
        requests:
          cpu: 500m
    - ref: install-operators
    - as: test-ai-edge
      cli: latest
      commands: |
        unset GOFLAGS
        make test
      credentials:
      - mount_path: /secrets/ai-edge-aws
        name: ai-edge-aws
        namespace: test-credentials
      - mount_path: /secrets/ai-edge-quay
        name: ai-edge-quay
        namespace: test-credentials
      - mount_path: /secrets/ai-edge-github
        name: ai-edge-github
        namespace: test-credentials
      from: src
      resources:
        requests:
          cpu: 500m
    workflow: hypershift-hostedcluster-workflow
zz_generated_metadata:
  branch: main
  org: opendatahub-io
  repo: ai-edge
