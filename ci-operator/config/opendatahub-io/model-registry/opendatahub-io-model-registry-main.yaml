build_root:
  project_image:
    dockerfile_literal: |
      FROM registry.access.redhat.com/ubi8/ubi
      RUN yum install -y --nodocs make git golang
      RUN ln -s /cli/oc /usr/bin/kubectl
images:
- dockerfile_path: Dockerfile
  to: model-registry
releases:
  latest:
    release:
      architecture: amd64
      channel: stable
      version: "4.14"
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: e2e-odh-mro-cron
  cron: 0 1 * * *
  steps:
    cluster_profile: aws-opendatahub
    env:
      BASE_DOMAIN: openshift-ci-aws.rhaiseng.com
      HYPERSHIFT_AWS_REGION: us-west-2
      HYPERSHIFT_NODE_COUNT: "3"
    test:
    - as: e2e-odh-mr
      cli: latest
      commands: |
        # Print current action
        echo "Waiting for readiness of community-operators CatalogSource..."
        # Wait for readiness of community-operators CatalogSource
        STATUS=$(oc get catalogsource -n openshift-marketplace community-operators -o=jsonpath='{.status.connectionState.lastObservedState}')
        while [ "${STATUS}" != "READY" ]
        do
          echo "Waiting for 30s to check again..."
          sleep 30
          STATUS=$(oc get catalogsource -n openshift-marketplace community-operators -o=jsonpath='{.status.connectionState.lastObservedState}')
        done
        ./openshift-ci/scripts/oci-model-registry-deploy.sh
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: hypershift-hostedcluster-workflow
- as: e2e-odh-mro-optional
  optional: true
  steps:
    cluster_profile: aws-opendatahub
    env:
      BASE_DOMAIN: openshift-ci-aws.rhaiseng.com
      HYPERSHIFT_AWS_REGION: us-west-2
      HYPERSHIFT_NODE_COUNT: "3"
    test:
    - as: e2e-odh-mr
      cli: latest
      commands: |
        ./openshift-ci/scripts/oci-model-registry-deploy.sh
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: hypershift-hostedcluster-workflow
zz_generated_metadata:
  branch: main
  org: opendatahub-io
  repo: model-registry
