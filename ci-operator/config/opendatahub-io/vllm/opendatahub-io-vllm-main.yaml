build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.13
images:
- build_args:
  - name: DOCKER_BUILDKIT
    value: "1"
  - name: BUILDKIT_PROGRESS
    value: plain
  - name: max_jobs
    value: "8"
  - name: nvcc_threads
    value: "2"
  context_dir: .
  dockerfile_path: Dockerfile
  to: vllm-build-main-cuda
promotion:
  to:
  - namespace: opendatahub-io
    tag: latest
releases:
  latest:
    release:
      architecture: amd64
      channel: fast
      version: "4.12"
resources:
  '*':
    requests:
      cpu: 200m
      memory: 200Mi
  smoke-test:
    limits:
      cpu: "4"
      memory: 24Gi
      nvidia.com/gpu: "1"
    requests:
      cpu: "4"
      memory: 8Gi
      nvidia.com/gpu: "1"
  vllm-build-main-cuda:
    limits:
      cpu: "16"
      memory: 24Gi
    requests:
      cpu: "16"
      memory: 24Gi
tests:
- always_run: false
  as: smoke-test
  cluster: build05
  commands: |
    set -euxo pipefail

    # we will need to download test models off HF hub
    unset HF_HUB_OFFLINE
    # spin up the server and run it in the background, allowing for images download
    python -m vllm.entrypoints.openai.api_server &
    server_pid=$!

    # wait for the server to be up
    sleep 60

    curl -v --no-progress-meter --fail-with-body \
      localhost:8000/v1/models | python -m json.tool || \
      (kill -9 $server_pid && exit 1)

    curl -v --no-progress-meter --fail-with-body \
      --header "Content-Type: application/json" \
      --data '{
        "prompt": "A red fedora symbolizes ",
        "model": "facebook/opt-125m"
    }' \
      localhost:8000/v1/completions | python -m json.tool || \
        (kill -9 $server_pid && exit 1)

    echo "success"
    kill -9 $server_pid
  container:
    clone: false
    from: vllm-build-main-cuda
- as: pr-image-mirror
  steps:
    dependencies:
      SOURCE_IMAGE_REF: vllm-build-main-cuda
    env:
      IMAGE_REPO: vllm
    workflow: opendatahub-io-ci-image-mirror
- as: fast-image-mirror
  postsubmit: true
  steps:
    dependencies:
      SOURCE_IMAGE_REF: vllm-build-main-cuda
    env:
      IMAGE_REPO: vllm
      RELEASE_VERSION: fast
    workflow: opendatahub-io-ci-image-mirror
- as: nightly-image-mirror
  cron: 0 0 * * *
  steps:
    dependencies:
      SOURCE_IMAGE_REF: vllm-build-main-cuda
    env:
      IMAGE_REPO: vllm
      RELEASE_VERSION: fast
    workflow: opendatahub-io-ci-image-mirror
zz_generated_metadata:
  branch: main
  org: opendatahub-io
  repo: vllm
