binary_build_commands: 'mkdir -p .workspace; echo {\"gitref\": \"$(git rev-parse \
  --short HEAD)\"} > .workspace/metadata.json'
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.13
  use_build_cache: true
images:
- build_args:
  - name: NVIDIA
    value: "1"
  - name: BASE_IMAGE
    value: nvcr.io/nvidia/cuda:11.8.0-runtime-ubi8
  - name: RELEASE_BASE_IMAGE
    value: nvcr.io/nvidia/cuda:11.8.0-runtime-ubi8
  - name: BASE_OS
    value: redhat
  - name: PROJECT_VERSION
    value: 2023.1.0
  - name: ov_source_branch
    value: releases/2023/1
  - name: ov_source_org
    value: openvinotoolkit
  - name: ov_contrib_branch
    value: releases/2023/1
  - name: ov_contrib_org
    value: openvinotoolkit
  - name: ov_use_binary
    value: "0"
  - name: sentencepiece
    value: "1"
  - name: CHECK_COVERAGE
    value: "1"
  - name: RUN_TESTS
    value: "1"
  - name: debug_bazel_flags
    value: --strip=always
  - name: CMAKE_BUILD_TYPE
    value: Release
  - name: GPU
    value: "1"
  dockerfile_path: Dockerfile.redhat
  to: model-server-release-cuda-intel-gpu
promotion:
  name: model-server-release-cuda-intel-gpu
  namespace: opendatahub-io
resources:
  '*':
    requests:
      cpu: 200m
      memory: 200Mi
  model-server-release-cuda-intel-gpu:
    limits:
      cpu: "12"
      memory: 24Gi
    requests:
      cpu: "6"
      memory: 12Gi
tests:
- as: openvino-model-server-unit
  run_if_changed: ^(Dockerfile.redhat)
  steps:
    test:
    - as: unit
      commands: |
        yum install -y python39-pip python39
        mkdir -p /model/1
        cd $(mktemp -d)      
        curl -O https://storage.googleapis.com/tfhub-modules/tensorflow/faster_rcnn/resnet50_v1_640x640/1.tar.gz
        tar xvf 1.tar.gz -C /model/1/
        if [ $? -eq 0 ]; then
          echo "File downloaded successfully."
        else
          echo "Failed to download file."
        fi
        curl -O https://raw.githubusercontent.com/openvinotoolkit/model_server/main/demos/object_detection/python/object_detection.py 
        curl -O https://raw.githubusercontent.com/openvinotoolkit/model_server/main/demos/object_detection/python/requirements.txt
        curl -O https://raw.githubusercontent.com/openvinotoolkit/open_model_zoo/master/data/dataset_classes/coco_91cl.txt
        curl -O https://storage.openvinotoolkit.org/repositories/openvino_notebooks/data/data/image/coco_bike.jpg
        pip3 install -r requirements.txt
        /ovms/bin/ovms --model_name faster_rcnn --model_path /model --port 9000 &
        sleep 15
        python3 object_detection.py --image coco_bike.jpg --output output.jpg --service_url localhost:9000
        echo $?
      from: model-server-release-cuda-intel-gpu 
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
- as: pr-image-mirror
  run_if_changed: ^(Dockerfile.redhat)
  steps:
    dependencies:
      SOURCE_IMAGE_REF: model-server-release-cuda-intel-gpu
    env:
      IMAGE_REPO: openvino_model_server
    workflow: opendatahub-io-ci-image-mirror
- as: fast-image-mirror
  postsubmit: true
  run_if_changed: ^(Dockerfile.redhat)
  steps:
    dependencies:
      SOURCE_IMAGE_REF: model-server-release-cuda-intel-gpu
    env:
      IMAGE_REPO: openvino_model_server
      RELEASE_VERSION: stable
    workflow: opendatahub-io-ci-image-mirror
- as: nightly-image-mirror
  cron: 0 0 * * 0
  steps:
    dependencies:
      SOURCE_IMAGE_REF: model-server-release-cuda-intel-gpu
    env:
      IMAGE_REPO: openvino_model_server
      RELEASE_VERSION: stable
    workflow: opendatahub-io-ci-image-mirror
zz_generated_metadata:
  branch: 2023.1-release
  org: opendatahub-io
  repo: openvino_model_server
