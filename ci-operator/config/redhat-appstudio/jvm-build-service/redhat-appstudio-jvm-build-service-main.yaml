base_images:
  ocp_builder_rhel-8-golang-1.17-openshift-4.10:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-1.17-openshift-4.10
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.17
# switch to this when we do e2e tests, but make sure golang base image is still present    
#  project_image:
#    dockerfile_path: .ci/openshift-ci/Dockerfile
images:
- dockerfile_path: Dockerfile
  to: redhat-appstudio-jvm-build-service-image
releases:
  latest:
    release:
      architecture: amd64
      channel: stable
      version: "4.10"
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: unit-tests
  commands: make test
  container:
    clone: true
    from: ocp_builder_rhel-8-golang-1.17-openshift-4.10
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: envtests
  commands: make e2etest
  container:
    clone: true
    from: ocp_builder_rhel-8-golang-1.17-openshift-4.10
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
#- as: build-service-e2e
#  cluster_claim:
#    architecture: amd64
#    cloud: aws
#    owner: openshift-ci
#    product: ocp
#    timeout: 1h0m0s
#    version: "4.9"
#  skip_if_only_changed: ^docs/|^\.github/|^\.tekton/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
#  steps:
#    test:
#    - as: build-service-e2e
#      cli: latest
#      commands: |
#        export GITHUB_USER=$(cat /usr/local/ci-secrets/redhat-appstudio-qe/github-user)
#        export GITHUB_TOKEN=$(cat /usr/local/ci-secrets/redhat-appstudio-qe/github-token)
#        export QUAY_TOKEN=$(cat /usr/local/ci-secrets/redhat-appstudio-qe/quay-token)

#        git config --global user.name "redhat-appstudio-qe-bot"
#        git config --global user.email redhat-appstudio-qe-bot@redhat.com

#        mkdir -p ${HOME}/creds
#        GIT_CREDS_PATH="${HOME}/creds/file"
#        git config --global credential.helper "store --file ${GIT_CREDS_PATH}"
#        echo "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com" > ${GIT_CREDS_PATH}

#        echo ${BUILD_SERVICE_IMAGE%@*}
#        /bin/bash .ci/oci-e2e-build-service.sh
#      credentials:
#      - mount_path: /usr/local/ci-secrets/redhat-appstudio-qe
#        name: ci-secrets
#        namespace: test-credentials
#      dependencies:
#      - env: BUILD_SERVICE_IMAGE
#        name: redhat-appstudio-build-service-image
#      from: src
#      resources:
#        requests:
#          cpu: 100m
#    workflow: generic-claim
zz_generated_metadata:
  branch: main
  org: redhat-appstudio
  repo: jvm-build-service
