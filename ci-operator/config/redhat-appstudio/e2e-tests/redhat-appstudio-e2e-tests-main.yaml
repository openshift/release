base_images:
  hypershift-operator:
    name: "4.12"
    namespace: ocp
    tag: hypershift-operator
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.19
images:
- dockerfile_literal: |-
    FROM src
    SHELL ["/bin/bash", "-c"]

    ENV YQ_VERSION=v4.25.2
    ENV KUBELOGIN_VERSION=v1.25.3

    # Install yq and kubectl
    RUN curl -Lso /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 && chmod +x /usr/local/bin/yq
    RUN curl -Lso /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x /usr/local/bin/kubectl
    RUN yum install -y httpd-tools
    RUN curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh
    RUN curl -L -o vcluster "https://github.com/loft-sh/vcluster/releases/latest/download/vcluster-linux-amd64" && install -c -m 0755 vcluster /usr/local/bin && rm -f vcluster
    RUN vcluster --version && helm version
  from: src
  to: e2e-test-runner
promotion:
  name: redhat-appstudio
  namespace: ci
releases:
  latest:
    release:
      architecture: amd64
      channel: fast
      version: "4.12"
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: redhat-appstudio-e2e
  skip_if_only_changed: ^docs/|^\.github/|^\.tekton/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    env:
      HYPERSHIFT_HC_RELEASE_IMAGE: quay.io/openshift-release-dev/ocp-release:4.12.4-multi
    test:
    # - ref: redhat-appstudio-e2e
    - ref:
      as: hac-ui-test
      from_image: 
        name: hac-dev
        namespace: ci
        tag: e2e-runner
      credentials:
      - mount_path: /usr/local/ci-secrets/redhat-appstudio-qe
        name: ci-secrets
        namespace: test-credentials
      commands: |
        export HAC_SA_TOKEN QONTRACT_PASSWORD QONTRACT_USERNAME
        HAC_SA_TOKEN=$(cat /usr/local/ci-secrets/redhat-appstudio-qe/c-rh-ceph_SA_bot)
        QONTRACT_PASSWORD=$(cat /usr/local/ci-secrets/redhat-appstudio-qe/qontract_password)
        QONTRACT_USERNAME=$(cat /usr/local/ci-secrets/redhat-appstudio-qe/qontract_username)
        git clone https://github.com/redhat-appstudio/infra-deployments
        cd infra-deployments
        HAC_KUBECONFIG=/tmp/hac.kubeconfig
        oc login --kubeconfig=$HAC_KUBECONFIG --token=$HAC_SA_TOKEN --server=https://api.c-rh-c-eph.8p0c.p1.openshiftapps.com:6443
        echo "=== INSTALLING HAC ==="
        INSTALL_OUTPUT=$(hack/hac/installHac.sh -ehk $HAC_KUBECONFIG -sk $KUBECONFIG)
        CYPRESS_HAC_BASE_URL=$(echo $INSTALL_OUTPUT | grep "Stonesoup URL:" |sed "s/Stonesoup URL: //g")
        HAC_NAMESPACE=$(echo $INSTALL_OUTPUT |grep "Eph cluster namespace: " | sed "s/Eph cluster namespace: //g")
        echo "=== HAC INSTALLED ==="
        echo $CYPRESS_HAC_BASE_URL
        echo $HAC_NAMESPACE
        CYPRESS_USERNAME=user1
        CYPRESS_PASSWORD=user1
        cd /tmp/e2e

        npm run cy:run || TEST_RUN=1
        cp -a /tmp/e2e/cypress/* ${ARTIFACT_DIR}
        KUBECONFIG=$HAC_KUBECONFIG bonfire namespace release $HAC_NAMESPACE
        exit $TEST_RUN

      resources:
        requests:
          cpu: 1000m
          memory: 100Mi
    workflow: redhat-appstudio-install
- as: appstudio-dump-external-resources
  cron: 0 */24 * * *
  steps:
    test:
    - ref: redhat-appstudio-clean-external-resources
zz_generated_metadata:
  branch: main
  org: redhat-appstudio
  repo: e2e-tests
