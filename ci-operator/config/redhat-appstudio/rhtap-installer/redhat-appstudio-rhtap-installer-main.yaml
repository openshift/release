build_root:
  project_image:
    dockerfile_path: ci/Dockerfile
images:
- dockerfile_path: ci/Dockerfile
  from: src
  to: rhtap-installer
promotion:
  to:
  - name: redhat-appstudio
    namespace: ci
releases:
  latest:
    release:
      architecture: amd64
      channel: fast
      version: "4.14"
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: nightly
  cron: 0 0 * * *
  steps:
    test:
    - as: stage-environment-update
      cli: latest
      commands: |
        export OPENSHIFT_LOGIN_USERNAME="$(cat /usr/local/ci-secrets/rhtap-stage-secrets/openshift_login_username)"
        export OPENSHIFT_LOGIN_PASSWORD="$(cat /usr/local/ci-secrets/rhtap-stage-secrets/openshift_login_password)"
        export OPENSHIFT_API_URL="$(cat /usr/local/ci-secrets/rhtap-stage-secrets/openshift_api_url)"
        source /usr/local/ci-secrets/rhtap-stage-secrets/stage-secrets-environments
        unset KUBECONFIG

        # Login to Staging Openshift Cluster
        oc login -u "${OPENSHIFT_LOGIN_USERNAME}" -p "${OPENSHIFT_LOGIN_PASSWORD}" "${OPENSHIFT_API_URL}" --insecure-skip-tls-verify=true

        # Remove previous installation
        helm uninstall developer-hub -n rhtap || true
        helm uninstall installer -n rhtap || true
        helm uninstall tpa -n rhtap || true
        helm uninstall tpa-infrastructure -n rhtap || true

        resource_names=$(oc get applications -n rhtap -o jsonpath='{.items[*].metadata.name}')

        # Loop through each resource and remove finalizers
        for resource_name in $resource_names; do
            oc patch application $resource_name -n rhtap --type merge -p '{"metadata":{"finalizers":null}}'
            oc delete application $resource_name -n rhtap
        done

        oc delete namespace rhtap || true

        # Run the installation in debug mode
        ./bin/make.sh values
        yq e -i '.debug.script=true' private-values.yaml
        ./bin/make.sh apply -n rhtap -- --debug --values private-values.yaml
      credentials:
      - mount_path: /usr/local/ci-secrets/rhtap-stage-secrets
        name: rhtap-stage-secrets
        namespace: test-credentials
      from: rhtap-installer
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
- as: rhtap-installer-shellcheck
  commands: |
    #!/usr/bin/env bash
    set -o errexit
    set -o nounset
    set -o pipefail
    find . -type f -name "*.sh" -print0 | xargs -r -0 shellcheck
  container:
    from: rhtap-installer
- as: rhtap-installer-yamllint
  commands: |
    #!/usr/bin/env bash
    set -o errexit
    set -o nounset
    set -o pipefail

    CONFIG_FILE="ci/config/yamllint.yaml"

    yamllint -c "$CONFIG_FILE" .
  container:
    from: rhtap-installer
  optional: true
- as: rhtap-dump-external-resources
  cron: 0 */24 * * *
  steps:
    test:
    - ref: redhat-appstudio-rhtap-installer-sprayproxy-cleanup
- as: rhtap-installer-e2e-nightly
  cluster_claim:
    architecture: amd64
    cloud: aws
    labels:
      region: us-east-2
    owner: rhtap
    product: ocp
    timeout: 1h0m0s
    version: "4.14"
  cron: 0 */4 * * *
  steps:
    env:
      RHTAP_ENABLE_TPA: "false"
    test:
    - ref: redhat-appstudio-rhtap-installer-e2e-test
    workflow: redhat-appstudio-rhtap-installer
- as: rhtap-installer-reinstall-nightly
  cluster_claim:
    architecture: amd64
    cloud: aws
    labels:
      region: us-east-2
    owner: rhtap
    product: ocp
    timeout: 1h0m0s
    version: "4.14"
  cron: 0 */24 * * *
  steps:
    env:
      RHTAP_ENABLE_TPA: "true"
    test:
    - ref: redhat-appstudio-rhtap-installer-reinstall-rhtap
    workflow: redhat-appstudio-rhtap-installer
zz_generated_metadata:
  branch: main
  org: redhat-appstudio
  repo: rhtap-installer
