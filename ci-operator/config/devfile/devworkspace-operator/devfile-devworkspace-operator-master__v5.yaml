base_images:
  cli:
    name: "4.5"
    namespace: ocp
    tag: cli
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.13
images:
- dockerfile_path: build/Dockerfile
  to: devworkspace-operator
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tag_specification:
  name: "4.5"
  namespace: ocp
tests:
- as: devworkspaces-operator-e2e
  steps:
    cluster_profile: aws
    test:
    - as: devworkspaces-operator-e2e
      commands: |
        export PATH=$PATH:/tmp/bin
        mkdir /tmp/bin
        curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz | tar xvzf - -C /tmp/bin/ oc
        chmod ug+x /tmp/bin/oc
        echo ${DEVWORKSACE_OPERATOR}
        set -ex

        # ENV used by PROW ci
        export CI="openshift"
        export ARTIFACTS_DIR="/tmp/artifacts"

        # Component is defined in Openshift CI job configuration. See: https://github.com/openshift/release/blob/master/ci-operator/config/devfile/devworkspace-operator/devfile-devworkspace-operator-master__v4.yaml#L8
        export CI_COMPONENT="devworkspace-operator"
        # OPENSHIFT_BUILD_NAMESPACE env var exposed by Openshift CI. More info about how images are builded in Openshift CI: https://github.com/openshift/ci-tools/blob/master/TEMPLATES.md#parameters-available-to-templates
        export IMG=${DEVWORKSACE_OPERATOR}

        # Pod created by openshift ci don't have user. Using this envs should avoid errors with git user.
        export GIT_COMMITTER_NAME="CI BOT"
        export GIT_COMMITTER_EMAIL="ci_bot@notused.com"

        # Check if operator-sdk is installed and if not install operator sdk in $GOPATH/bin dir
        if ! hash operator-sdk 2>/dev/null; then
            mkdir -p $GOPATH/bin
            export PATH="$PATH:$(pwd):$GOPATH/bin"
            OPERATOR_SDK_VERSION=v0.17.0

            curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${OPERATOR_SDK_VERSION}/operator-sdk-${OPERATOR_SDK_VERSION}-x86_64-linux-gnu

            chmod +x operator-sdk-${OPERATOR_SDK_VERSION}-x86_64-linux-gnu && \
                cp operator-sdk-${OPERATOR_SDK_VERSION}-x86_64-linux-gnu $GOPATH/bin/operator-sdk && \
                rm operator-sdk-${OPERATOR_SDK_VERSION}-x86_64-linux-gnu
        fi

        # For some reason go on PROW force usage vendor folder
        # This workaround is here until we don't figure out cause
        go mod tidy
        go mod vendor

        make test_e2e
      dependencies:
      - env: DEVWORKSACE_OPERATOR
        name: devworkspace-operator
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: ipi-aws
zz_generated_metadata:
  branch: master
  org: devfile
  repo: devworkspace-operator
  variant: v5
