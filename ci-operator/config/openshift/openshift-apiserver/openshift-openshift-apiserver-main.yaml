base_images:
  ocp_4.20_base-rhel9:
    name: "4.21"
    namespace: ocp
    tag: base-rhel9
  ocp_builder_rhel-9-golang-1.24-openshift-4.20:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.24-openshift-4.20
binary_build_commands: make build --warn-undefined-variables
build_root:
  from_repository: true
images:
- dockerfile_path: images/Dockerfile.rhel
  inputs:
    ocp_4.20_base-rhel9:
      as:
      - registry.ci.openshift.org/ocp/4.20:base-rhel9
    ocp_builder_rhel-9-golang-1.24-openshift-4.20:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.24-openshift-4.20
  to: openshift-apiserver
promotion:
  to:
  - name: "4.21"
    namespace: ocp
releases:
  initial:
    integration:
      name: "4.21"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.21"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: "3"
      memory: 6Gi
test_binary_build_commands: make build GO_BUILD_FLAGS:='-race' --warn-undefined-variables
tests:
- as: verify
  commands: |
    make verify -k --warn-undefined-variables
  container:
    from: bin
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: verify-deps
  commands: |
    make verify-deps -k --warn-undefined-variables
  container:
    from: src
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: unit
  commands: |
    make test-unit JUNITFILE=${ARTIFACT_DIR}/junit_report.xml --warn-undefined-variables
  container:
    from: test-bin
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: e2e-aws-ovn
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws
- as: e2e-aws-ovn-builds
  run_if_changed: ^(pkg/build/.+\.(go|json|yaml))$
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-builds
- as: e2e-aws-ovn-cmd
  optional: true
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-cmd
- as: e2e-aws-ovn-upgrade
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    workflow: openshift-upgrade-aws
- as: e2e-aws-ovn-serial
  shard_count: 2
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-serial
- as: e2e-tests-extension
  optional: true
  steps:
    cluster_profile: aws
    post:
    - chain: gather-core-dump
    - chain: ipi-aws-post
    pre:
    - chain: ipi-aws-pre
    test:
    - as: tests-extension
      cli: latest
      commands: |
        echo "Build binary openshift-apiserver-tests-ext"
        make tests-ext-build
        echo "Set up cluster access"
        export KUBECONFIG=${SHARED_DIR}/kubeconfig
        echo "Verify cluster is accessible"
        oc get clusterversion
        echo "--------------"
        echo "Running make run-suite SUITE=openshift/openshift-apiserver/conformance/parallel JUNIT_DIR=${ARTIFACT_DIR}"
        make run-suite SUITE=openshift/openshift-apiserver/conformance/parallel JUNIT_DIR=${ARTIFACT_DIR}
      from: src
      resources:
        requests:
          cpu: 100m
- as: e2e-tests-extension-serial
  optional: true
  steps:
    cluster_profile: aws
    post:
    - chain: gather-core-dump
    - chain: ipi-aws-post
    pre:
    - chain: ipi-aws-pre
    test:
    - as: tests-extension
      cli: latest
      commands: |
        echo "Build binary openshift-apiserver-tests-ext"
        make tests-ext-build
        echo "Set up cluster access"
        export KUBECONFIG=${SHARED_DIR}/kubeconfig
        echo "Verify cluster is accessible"
        oc get clusterversion
        echo "--------------"
        echo "Running make run-suite SUITE=openshift/openshift-apiserver/conformance/serial JUNIT_DIR=${ARTIFACT_DIR}"
        make run-suite SUITE=openshift/openshift-apiserver/conformance/serial JUNIT_DIR=${ARTIFACT_DIR}
      from: src
      resources:
        requests:
          cpu: 100m
zz_generated_metadata:
  branch: main
  org: openshift
  repo: openshift-apiserver
