base_images:
  base:
    name: ubi
    namespace: ocp
    tag: "8"
  osde2e:
    name: osde2e
    namespace: ci
    tag: latest
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.20
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: code-quality-checks
  commands: |
    export GOFLAGS=""
    export HOME=$(mktemp -d)
    export REPORT_DIR="$ARTIFACT_DIR"

    make check
  container:
    from: src
- as: rosa-pr-check
  commands: |
    export GOFLAGS=""
    export REPORT_DIR="$ARTIFACT_DIR"
    export CONFIGS="rosa,pr-check"
    export ROSA_ENV="stage"
    export ROSA_STS="true"
    export SKIP_MUST_GATHER="true"
    export CHANNEL="candidate"
    export INSTALL_LATEST_XY="4.12"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-dev"

    go mod tidy
    make build

    out/osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    from: src
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
  - mount_path: /usr/local/osde2e-dev
    name: osde2e-dev
  skip_if_only_changed: ^(?:docs|\.github|scripts|test)|\.md$|^(?:\.gitignore|.golang-ci.yml|OWNERS|LICENSE)$
- as: hypershift-pr-check
  commands: |
    export GOFLAGS=""
    export REPORT_DIR="$ARTIFACT_DIR"
    export CONFIGS="hypershift"
    export CHANNEL="candidate"
    export INSTALL_LATEST_XY="4.12"
    export SKIP_MUST_GATHER="true"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-hypershift-byovpc"

    go mod tidy
    make build

    out/osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    from: src
  optional: true
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
  - mount_path: /usr/local/osde2e-hypershift-byovpc
    name: osde2e-hypershift-byovpc
  skip_if_only_changed: ^(?:docs|\.github|scripts|test)|\.md$|^(?:\.gitignore|.golang-ci.yml|OWNERS|LICENSE)$
- as: rosa-stage-e2e-byo-vpc-proxy-install
  commands: |
    export REPORT_DIR="$ARTIFACT_DIR"
    export CLUSTER_EXPIRY_IN_MINUTES="480"
    export HIBERNATE_AFTER_USE="false"
    export ROSA_ENV="stage"
    export ROSA_STS="true"
    export USE_EXISTING_CLUSTER="false"
    export USE_PROXY_FOR_INSTALL="true"
    export USE_LATEST_VERSION_FOR_INSTALL="true"
    export CHANNEL="candidate"
    export CONFIGS="rosa,e2e-suite"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-static-byo-vpc,/usr/local/osde2e-dev"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 19 14,28 * *
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
  - mount_path: /usr/local/osde2e-dev
    name: osde2e-dev
  - mount_path: /usr/local/osde2e-static-byo-vpc
    name: osde2e-static-byo-vpc
- as: rosa-stage-e2e-byo-vpc-proxy-postinstall
  commands: |
    export REPORT_DIR="$ARTIFACT_DIR"
    export CLUSTER_EXPIRY_IN_MINUTES="480"
    export HIBERNATE_AFTER_USE="false"
    export ROSA_ENV="stage"
    export ROSA_STS="true"
    export USE_EXISTING_CLUSTER="false"
    export USE_LATEST_VERSION_FOR_INSTALL="true"
    export CHANNEL="candidate"
    export CONFIGS="rosa,proxy-suite"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-static-byo-vpc,/usr/local/osde2e-dev"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 19 15,29 * *
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
  - mount_path: /usr/local/osde2e-dev
    name: osde2e-dev
  - mount_path: /usr/local/osde2e-static-byo-vpc
    name: osde2e-static-byo-vpc
- as: aws-stage-informing-default
  commands: |
    export REPORT_DIR="$ARTIFACT_DIR"
    export CONFIGS="aws,stage,informing-suite"
    export CHANNEL="candidate"
    export USE_LATEST_VERSION_FOR_INSTALL="true"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 12 * * 1
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: aws-prod-cleanup
  commands: |
    export REPORT_DIR="$ARTIFACT_DIR"
    export CONFIGS="prod"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e cleanup --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 45 * * * *
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: osd-aws-upgrade-latest-default-z-minus-1-to-latest-default-z
  commands: |
    export REPORT_DIR="$ARTIFACT_DIR"
    export CONFIGS="aws,stage,e2e-suite"
    export CHANNEL="candidate"
    export INSTALL_LATEST_Z_FROM_DELTA="-1"
    export UPGRADE_TO_LATEST_Z="true"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 12 * * 1,5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: osd-aws-upgrade-latest-default-y-minus-1-to-latest-default-y
  commands: |
    export REPORT_DIR="$ARTIFACT_DIR"
    export CONFIGS="aws,stage,e2e-suite"
    export CHANNEL="candidate"
    export INSTALL_LATEST_Y_FROM_DELTA="-1"
    export UPGRADE_TO_LATEST_Y="true"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 12 * * 1,5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: osd-aws-upgrade-latest-default-y-to-latest-y-plus-1
  commands: |
    export REPORT_DIR="$ARTIFACT_DIR"
    export CONFIGS="aws,stage,e2e-suite"
    export CHANNEL="candidate"
    export UPGRADE_TO_LATEST_Y="true"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 12 * * 1,5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: osd-aws-upgrade-latest-default-y-plus-1-to-latest-y
  commands: |
    export REPORT_DIR="$ARTIFACT_DIR"
    export CONFIGS="aws,stage,e2e-suite"
    export CHANNEL="candidate"
    export LATEST_Y_RELEASE_AFTER_PROD_DEFAULT="true"
    export UPGRADE_TO_LATEST_Y="true"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 12 * * 1,5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: rosa-stage-complete-e2e
  commands: |
    export REPORT_DIR="$ARTIFACT_DIR"
    export CONFIGS="rosa,sts,stage,complete-e2e"
    export CHANNEL="stable"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-informing"
    export HARNESS_TIMEOUT="900"
    export POLLING_TIMEOUT="7200"
    export ROSA_AWS_REGION="random"

    osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 3 1 3 *
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
  - mount_path: /usr/local/osde2e-informing
    name: osde2e-informing
zz_generated_metadata:
  branch: main
  org: openshift
  repo: osde2e
