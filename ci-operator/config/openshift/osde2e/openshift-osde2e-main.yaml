base_images:
  azure:
    name: ci-base
    namespace: azure
    tag: latest
  osde2e:
    name: osde2e
    namespace: ci
    tag: latest
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.16
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: verify
  commands: |
    set -o pipefail

    export HOME=$(mktemp -d)

    export REPORT_DIR=/tmp/artifacts

    ci/prow_pr_check.sh
  container:
    from: src
  secrets:
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/sd-cicd-aws-prod
    name: sd-cicd-aws-prod
- as: aro-e2e-default
  cron: 0 0 3 * *
  steps:
    post:
    - as: cluster-destroy
      commands: |
        cd /tmp/
        git clone https://github.com/openshift/osde2e.git
        cd
        source /tmp/osde2e/ci/destroy-aro-cluster.sh
      credentials:
      - mount_path: /usr/local/osde2e-credentials
        name: osde2e-credentials
        namespace: test-credentials
      from: azure
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    pre:
    - as: cluster-create
      commands: |
        cd /tmp/
        git clone https://github.com/openshift/osde2e.git
        cd
        source /tmp/osde2e/ci/create-aro-cluster.sh
      credentials:
      - mount_path: /usr/local/osde2e-credentials
        name: osde2e-credentials
        namespace: test-credentials
      from: azure
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    test:
    - as: conformance-tests-pre-upgrade
      commands: |
        source ./ci/aro-e2e-tests.sh
      credentials:
      - mount_path: /usr/local/osde2e-credentials
        name: osde2e-credentials
        namespace: test-credentials
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    - as: upgrade-latest-y
      commands: |
        ./ci/upgrade-aro-cluster.sh y
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    - as: conformance-tests-post-upgrade
      commands: |
        source ./ci/aro-e2e-tests.sh
      credentials:
      - mount_path: /usr/local/osde2e-credentials
        name: osde2e-credentials
        namespace: test-credentials
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
- as: aro-e2e-ovn-default
  cron: 0 0 9 * *
  steps:
    post:
    - as: cluster-destroy
      commands: |
        cd /tmp/
        git clone https://github.com/openshift/osde2e.git
        cd
        source /tmp/osde2e/ci/destroy-aro-cluster.sh
      credentials:
      - mount_path: /usr/local/osde2e-credentials
        name: osde2e-credentials
        namespace: test-credentials
      from: azure
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    pre:
    - as: cluster-create
      commands: |
        cd /tmp/
        git clone https://github.com/openshift/osde2e.git
        cd
        source /tmp/osde2e/ci/create-aro-cluster-ovn.sh
      credentials:
      - mount_path: /usr/local/osde2e-credentials
        name: osde2e-credentials
        namespace: test-credentials
      from: azure
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    test:
    - as: conformance-tests-pre-upgrade
      commands: |
        source ./ci/aro-e2e-tests.sh
      credentials:
      - mount_path: /usr/local/osde2e-credentials
        name: osde2e-credentials
        namespace: test-credentials
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    - as: upgrade-latest-y
      commands: |
        ./ci/upgrade-aro-cluster.sh y
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    - as: conformance-tests-post-upgrade
      commands: |
        source ./ci/aro-e2e-tests.sh
      credentials:
      - mount_path: /usr/local/osde2e-credentials
        name: osde2e-credentials
        namespace: test-credentials
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
- as: aro-nightly-cleanup
  cron: '@midnight'
  steps:
    test:
    - as: aro-cleanup
      commands: |
        cd /tmp/
        git clone https://github.com/openshift/osde2e.git
        cd osde2e
        source ./ci/cleanup-aro-clusters.sh
      credentials:
      - mount_path: /usr/local/osde2e-credentials
        name: osde2e-credentials
        namespace: test-credentials
      from: azure
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
- as: aws-stage-e2e-upgrade-to-latest
  commands: |
    export CONFIGS="aws,stage,e2e-suite,upgrade-to-latest"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 */6 * * 0-5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: rosa-stage-e2e-default
  commands: |
    export CONFIGS="rosa,e2e-suite"
    export ROSA_ENV="stage"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-rosa-stage"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 */6 * * 0-5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
  - mount_path: /usr/local/osde2e-rosa-stage
    name: osde2e-rosa-stage
- as: rosa-sts-stage-e2e-default
  commands: |
    export CONFIGS="rosa,e2e-suite"
    export ROSA_ENV="stage"
    export ROSA_STS="true"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-rosa-stage"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 */6 * * 0-5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
  - mount_path: /usr/local/osde2e-rosa-stage
    name: osde2e-rosa-stage
- as: aws-stage-e2e-default
  commands: |
    export CONFIGS="aws,stage,e2e-suite"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 */6 * * 0-5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: gcp-stage-e2e-default
  commands: |
    export CONFIGS="gcp,stage,e2e-suite"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 */6 * * 0-5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: aws-prod-e2e-default
  commands: |
    export CONFIGS="aws,prod,e2e-suite"
    export ENABLE_ALERTS="true"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 */6 * * 0-5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: aws-prod-informing-default
  commands: |
    export CONFIGS="aws,prod,informing-suite"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 */6 * * 0-5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: aws-prod-cleanup
  commands: |
    export CONFIGS="prod"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e cleanup --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 45 * * * *
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: gcp-prod-e2e-default
  commands: |
    export CONFIGS="gcp,prod,e2e-suite"
    export ENABLE_ALERTS="true"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 */6 * * 0-5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
- as: rosa-prod-e2e-default
  commands: |
    export CONFIGS="rosa,e2e-suite"
    export ROSA_ENV="prod"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-rosa-prod"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 */6 * * 0-5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
  - mount_path: /usr/local/osde2e-rosa-prod
    name: osde2e-rosa-prod
- as: rosa-sts-prod-e2e-default
  commands: |
    export CONFIGS="rosa,e2e-suite"
    export ROSA_ENV="prod"
    export ROSA_STS="true"
    export SECRET_LOCATIONS="/usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-rosa-prod"

    /osde2e test --secret-locations ${SECRET_LOCATIONS} --configs ${CONFIGS}
  container:
    clone: true
    from: osde2e
  cron: 0 */6 * * 0-5
  secrets:
  - mount_path: /usr/local/osde2e-common
    name: osde2e-common
  - mount_path: /usr/local/osde2e-credentials
    name: osde2e-credentials
  - mount_path: /usr/local/osde2e-rosa-prod
    name: osde2e-rosa-prod
zz_generated_metadata:
  branch: main
  org: openshift
  repo: osde2e
