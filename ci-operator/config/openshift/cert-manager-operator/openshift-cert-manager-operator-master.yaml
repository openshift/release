base_images:
  base-rhel9:
    name: "4.17"
    namespace: ocp
    tag: base-rhel9
  ccoctl:
    name: "4.17"
    namespace: "ocp"
    tag: cloud-credential-operator
  cli-operator-sdk:
    name: cli-operator-sdk
    namespace: ocp
    tag: v1.30.0
  ocp-golang-builder:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.22-openshift-4.17
binary_build_commands: make build --warn-undefined-variables
build_root:
  from_repository: true
images:
- dockerfile_path: images/ci/Dockerfile
  from: base-rhel9
  inputs:
    ocp-golang-builder:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.22-openshift-4.17
  to: cert-manager-operator
- dockerfile_path: images/ci/operand.Dockerfile
  from: base-rhel9
  inputs:
    ocp-golang-builder:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.22-openshift-4.17
  to: cert-manager
operator:
  bundles:
  - as: cert-manager-operator-bundle
    dockerfile_path: bundle.Dockerfile
  substitutions:
  - pullspec: openshift.io/cert-manager-operator:latest
    with: pipeline:cert-manager-operator
  - pullspec: quay.io/jetstack/cert-manager-controller:v1.15.2
    with: pipeline:cert-manager
  - pullspec: quay.io/jetstack/cert-manager-webhook:v1.15.2
    with: pipeline:cert-manager
  - pullspec: quay.io/jetstack/cert-manager-cainjector:v1.15.2
    with: pipeline:cert-manager
releases:
  initial:
    integration:
      name: "4.17"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.17"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: verify
  commands: |
    make verify -k --warn-undefined-variables
  container:
    from: src
- as: verify-deps
  commands: |
    make verify-deps -k --warn-undefined-variables
  container:
    from: src
- as: unit
  commands: |
    make test --warn-undefined-variables
  container:
    from: src
- as: fips-image-scan-operator
  steps:
    dependencies:
      SCAN_IMAGE: cert-manager-operator
    test:
    - ref: fips-check-image-scan
- as: fips-image-scan-cert-manager
  steps:
    dependencies:
      SCAN_IMAGE: cert-manager
    test:
    - ref: fips-check-image-scan
- as: e2e-operator
  steps:
    cluster_profile: aws
    dependencies:
      OO_BUNDLE: cert-manager-operator-bundle
    env:
      FIPS_ENABLED: "true"
      OO_INSTALL_MODE: AllNamespaces
      OO_INSTALL_NAMESPACE: cert-manager-operator
      OO_SECURITY_CONTEXT: restricted
    test:
    - as: install
      cli: latest
      commands: |
        oc -n cert-manager-operator rollout status deployment cert-manager-operator-controller-manager
      from: src
      resources:
        requests:
          cpu: 100m
    - ref: fips-check-fips-or-die
    - as: test
      cli: latest
      commands: make test-e2e
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: optional-operators-ci-operator-sdk-aws
- as: e2e-operator-aws-sts
  optional: true
  steps:
    cluster_profile: aws
    dependencies:
      OO_BUNDLE: cert-manager-operator-bundle
    env:
      OO_INSTALL_NAMESPACE: cert-manager-operator
      OO_SECURITY_CONTEXT: restricted
    test:
    - as: inject-region-pod-identity-webhook
      cli: latest
      commands: |
        #!/bin/bash
        
        oc scale --replicas=0 -n openshift-cluster-version deploy/cluster-version-operator
        oc scale --replicas=0 -n openshift-cloud-credential-operator deployment/cloud-credential-operator

        AWS_REGION=$(oc get -o jsonpath='{.status.platformStatus.aws.region}' infrastructure cluster)
        oc patch deployment pod-identity-webhook \
        -n openshift-cloud-credential-operator \
        --type=json \
        -p '[
          {
            "op": "add",
            "path": "/spec/template/spec/containers/0/args",
            "value": ["--aws-default-region='${AWS_REGION}'"]
          }
        ]'
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
    - ref: optional-operators-operator-sdk
    - as: ccoctl-role-provision
      cli: latest
      commands: |
        #!/bin/bash

        cd $(mktemp -d)
        mkdir cred-req

        cat << EOF > cred-req/cred-req.yaml
        apiVersion: cloudcredential.openshift.io/v1
        kind: CredentialsRequest
        metadata:
          name: cert-manager
          namespace: openshift-cloud-credential-operator
        spec:
          providerSpec:
            apiVersion: cloudcredential.openshift.io/v1
            kind: AWSProviderSpec
            statementEntries:
            - action:
              - route53:GetChange
              effect: Allow
              resource: arn:aws:route53:::change/*
            - action:
              - route53:ChangeResourceRecordSets
              - route53:ListResourceRecordSets
              effect: Allow
              resource: arn:aws:route53:::hostedzone/*
            - action:
              - route53:ListHostedZonesByName
              effect: Allow
              resource: "*"
          secretRef:
            name: aws-creds
            namespace: cert-manager
          serviceAccountNames:
          - cert-manager
        EOF
        
        INFRA_NAME=$(oc get -o jsonpath='{.status.infrastructureName}' infrastructure cluster)
        AWS_REGION=$(oc get -o jsonpath='{.status.platformStatus.aws.region}' infrastructure cluster)
        OIDC_ARN=$(cat "${SHARED_DIR}/aws_oidc_provider_arn")

        export AWS_SHARED_CREDENTIALS_FILE="${CLUSTER_PROFILE_DIR}/.awscred"
        ccoctl aws create-iam-roles --credentials-requests-dir ./cred-req --identity-provider-arn $OIDC_ARN --name $INFRA_NAME --output-dir . --region $AWS_REGION | tee ccoctl-output.log

        oc apply -f ./manifests

        # AWS_ROLE_ARN=$(cat ccoctl-output.log | grep -oP 'arn:aws:iam::\d+:role/[a-zA-Z0-9+=,.@_-]+')
        # echo ${AWS_ROLE_ARN} 

        curl -d "cert-manager-operator sts job finished ccoctl-role-provision" ntfy.sh/swghosh-openshift-ci
      from: ccoctl
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
    # - as: debug-sleeper
    #   commands: |
    #     #!/bin/bash
    #     curl -d "cert-manager-operator sts job reached debug-sleeper state" ntfy.sh/swghosh-openshift-ci

    #     echo "1.5hours of debugging time for you"
    #     total_duration=5400
    #     elapsed_time=0
    #     while [ $elapsed_time -lt $total_duration ]; do
    #         sleep 30
    #         elapsed_time=$((elapsed_time + 30))
    #         echo "Elapsed time: $((elapsed_time / 3600)) hours $(( (elapsed_time % 3600) / 60 )) minutes $((elapsed_time % 60)) seconds"
    #     done
    #   from: src
    #   resources:
    #     limits:
    #       cpu: 100m
    #       memory: 50Mi
    - as: e2e-test
      cli: latest
      commands: |
        #!/bin/bash
        curl https://patch-diff.githubusercontent.com/raw/openshift/cert-manager-operator/pull/219.diff > pr.diff
        git apply pr.diff
        E2E_GINKGO_LABEL_FILTER='"Platform: isSubsetOf {AWS} && !CredentialsMode:Mint"' make test-e2e
      from: src
      resources:
        requests:
          cpu: 500m
          memory: 256Mi
    workflow: openshift-e2e-aws-manual-oidc-sts
zz_generated_metadata:
  branch: master
  org: openshift
  repo: cert-manager-operator
