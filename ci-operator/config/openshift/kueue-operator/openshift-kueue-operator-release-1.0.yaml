base_images:
  cli:
    name: "4.20"
    namespace: ocp
    tag: cli
  ocp_builder_rhel-9-base-openshift-4.19:
    name: builder
    namespace: ocp
    tag: rhel-9-base-openshift-4.19
  ocp_builder_rhel-9-golang-1.23-openshift-4.19:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.23-openshift-4.19
  operator-sdk:
    name: "4.19"
    namespace: origin
    tag: operator-sdk
  tools:
    name: "4.19"
    namespace: ocp
    tag: tools
  upi-installer:
    name: "4.19"
    namespace: ocp
    tag: upi-installer
build_root:
  from_repository: true
images:
- dockerfile_path: Dockerfile.ci
  inputs:
    ocp_builder_rhel-9-base-openshift-4.19:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-9-base-openshift-4.19
    ocp_builder_rhel-9-golang-1.23-openshift-4.19:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.23-openshift-4.19
  to: kueue-operator
- dockerfile_literal: |
    FROM src
    RUN dnf install -y skopeo git && dnf clean all
    RUN wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 && chmod +x /usr/local/bin/yq
  from: src
  to: kueue-operator-src
- dockerfile_literal: |
    FROM src
    COPY oc /usr/bin/oc
    RUN ln -s /usr/bin/oc /usr/bin/kubectl
    RUN dnf install -y skopeo git && dnf clean all
  from: src
  inputs:
    cli:
      paths:
      - destination_dir: .
        source_path: /usr/bin/oc
  to: src-with-oc-and-kubectl
releases:
  latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.20"
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: test
  commands: make test
  container:
    from: src
- as: test-generate
  commands: make generate manifests regen-crd
  container:
    from: src
- as: lint
  commands: |
    export GOCACHE=/tmp/
    export GOLANGCI_LINT_CACHE=/tmp/.cache
    export GOPROXY=https://proxy.golang.org
    make lint
  container:
    clone: true
    from: src
- as: fips-image-scan-kueue-operator
  skip_if_only_changed: ^\.tekton/|\.md$|^(LICENSE|OWNERS)$
  steps:
    dependencies:
      SCAN_IMAGE: kueue-operator
    test:
    - ref: fips-check-image-scan
- as: security
  optional: true
  skip_if_only_changed: ^\.tekton/|\.md$|^(LICENSE|OWNERS)$
  steps:
    workflow: openshift-ci-security
- as: test-e2e-4-17
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.17"
  optional: true
  steps:
    post:
    - chain: kueue-operator-post
    test:
    - chain: kueue-operator-test-e2e
- as: test-e2e-4-18
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.18"
  minimum_interval: 96h
  presubmit: true
  steps:
    post:
    - chain: kueue-operator-post
    test:
    - chain: kueue-operator-test-e2e
- as: test-e2e-4-19
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.19"
  minimum_interval: 96h
  presubmit: true
  steps:
    post:
    - chain: kueue-operator-post
    test:
    - chain: kueue-operator-test-e2e
- as: test-e2e-disconnected
  minimum_interval: 96h
  steps:
    cluster_profile: gcp
    env:
      CATSRC_IMG: registry.redhat.io/redhat/redhat-operator-index:v4.19
      CATSRC_NAME: redhat-operators
      MIRROR_OPERATORS: "true"
    post:
    - as: kueue-must-gather-disconnected
      cli: latest
      commands: |
        source "${SHARED_DIR}/env"
        export MUST_GATHER_IMAGE
        echo "Running must-gather to gather diagnostics..."
        mkdir -p ${ARTIFACT_DIR:-must-gather}/must-gather
        oc adm must-gather --image=${MUST_GATHER_IMAGE} --dest-dir=${ARTIFACT_DIR:-must-gather}/must-gather
      from: kueue-operator-src
      resources:
        requests:
          cpu: 300m
          memory: 500Mi
    - as: kueue-cleanup-disconnected
      cli: latest
      commands: make undeploy-ocp
      from: kueue-operator-src
      resources:
        requests:
          cpu: 300m
          memory: 500Mi
    test:
    - chain: cert-manager-install
    - chain: kueue-operator-disconnected
    - as: e2e-kueue
      cli: latest
      commands: |
        export CONTAINER_IMAGE=image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
        make test-e2e
      from: kueue-operator-src
      resources:
        requests:
          cpu: 300m
          memory: 500Mi
    workflow: cucushift-installer-rehearse-gcp-ipi-disconnected
zz_generated_metadata:
  branch: release-1.0
  org: openshift
  repo: kueue-operator
