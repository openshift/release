base_images:
  base:
    name: "4.13"
    namespace: ocp
    tag: base
  cli:
    name: "4.13"
    namespace: ocp
    tag: cli
  hypershift-operator-4.13:
    name: "4.13"
    namespace: ocp
    tag: hypershift-operator
  ocp_builder_rhel-8-golang-1.19-openshift-4.13:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-1.19-openshift-4.13
binary_build_commands: make build
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.18
canonical_go_repository: github.com/kubevirt/csi-driver
images:
- dockerfile_path: Dockerfile.openshift
  from: base
  inputs:
    ocp_builder_rhel-8-golang-1.19-openshift-4.13:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.19-openshift-4.13
  to: kubevirt-csi-driver
- build_args:
  - name: ARCH
    value: amd64
  - name: ldflags
  dockerfile_literal: |-
    FROM src
    COPY oc hypershift /usr/bin/
    RUN mkdir -p /go/src/github.com/openshift && \
        cd /go/src/github.com/openshift && \
        git clone https://github.com/openshift/hypershift.git && \
        cd hypershift/ && \
        go mod tidy && go mod vendor && \
        make e2e && \
        sed -i 's|global-pull-secret.json|/tmp/global-pull-secret.json|g' ./hack/ci/install-cnv.sh
    WORKDIR /go/src/github.com/openshift/hypershift
  from: src
  inputs:
    cli:
      paths:
      - destination_dir: .
        source_path: /usr/bin/oc
    hypershift-operator-4.13:
      paths:
      - destination_dir: .
        source_path: /usr/bin/hypershift
  to: hypershift-cli-e2e
promotion:
  excluded_images:
  - hypershift-cli-e2e
  name: "4.13"
  namespace: ocp
releases:
  hosted-ocp-previous:
    candidate:
      product: ocp
      relative: 1
      stream: ci
      version: "4.13"
  initial:
    integration:
      name: "4.13"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.13"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: unit
  commands: make test
  container:
    from: src
- as: cluster-api-provider-kubevirt-with-hypershift
  steps:
    cluster_profile: aws-virtualization
    env:
      BASE_DOMAIN: cnv-ci.syseng.devcluster.openshift.com
      COMPUTE_NODE_REPLICAS: "1"
      COMPUTE_NODE_TYPE: c5n.metal
      CONTROL_PLANE_INSTANCE_TYPE: m4.xlarge
    test:
    - as: deploy-cnv
      cli: latest
      commands: CNV_PRERELEASE_VERSION=4.13 ./hack/ci/install-cnv.sh
      credentials:
      - mount_path: /etc/cnv-nightly-pull-credentials
        name: openshift-cnv-quay-credentials
        namespace: test-credentials
      from: hypershift-cli-e2e
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
    - as: deploy-hypershift
      cli: latest
      commands: |-
        set -x
        hypershift install
      from: hypershift-cli-e2e
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
    - as: create-guest-cluster
      cli: latest
      commands: |-
        set -ex

        KUBEVIRT_CLUSTER_NAME="kv-nested"
        CLUSTER_NAMESPACE=clusters-${KUBEVIRT_CLUSTER_NAME}

        echo "$(date) Creating HyperShift cluster ${KUBEVIRT_CLUSTER_NAME}"
        hypershift create cluster kubevirt \
          --name ${KUBEVIRT_CLUSTER_NAME} \
          --node-pool-replicas 2 \
          --memory 8Gi \
          --cores 2 \
          --pull-secret=/etc/ci-pull-credentials/.dockerconfigjson \
          --release-image ${RELEASE_IMAGE_LATEST}

        echo "Waiting for cluster to become available"
        oc wait --timeout=30m --for=condition=Available --namespace=clusters hostedcluster/${KUBEVIRT_CLUSTER_NAME}
        echo "Cluster became available, creating kubeconfig"
        hypershift create kubeconfig --name=${KUBEVIRT_CLUSTER_NAME} >${SHARED_DIR}/nested_kubeconfig

        echo "Waiting for nested cluster's node count to reach the desired replicas count in the NodePool"
        until \
            [[ $(oc get nodepool ${KUBEVIRT_CLUSTER_NAME} -n clusters -o jsonpath='{.spec.replicas}') \
              == $(oc --kubeconfig=${SHARED_DIR}/nested_kubeconfig get nodes --no-headers | wc -l) ]]; do
                echo "$(date --rfc-3339=seconds) Nested cluster's node count is not equal to the desired replicas in the NodePool. Retrying in 30 seconds."
                oc get vmi -n ${CLUSTER_NAMESPACE}
                sleep 30s
        done

        echo "Waiting for clusteroperators to be ready"
        export GUEST_KUBECONFIG=${SHARED_DIR}/nested_kubeconfig

        until \
          oc --kubeconfig $GUEST_KUBECONFIG wait clusterversion/version --for='condition=Available=True' > /dev/null;  do
            echo "$(date --rfc-3339=seconds) Cluster Operators not yet ready"
            oc get clusteroperators 2>/dev/null || true
            sleep 1s
        done
      credentials:
      - mount_path: /etc/ci-pull-credentials
        name: ci-pull-credentials
        namespace: test-credentials
      dependencies:
      - env: OCP_IMAGE_LATEST
        name: release:latest
      - env: OCP_IMAGE_PREVIOUS
        name: release:hosted-ocp-previous
      from: hypershift-cli-e2e
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
    - as: kubevirt-csi-e2e
      cli: latest
      commands: |-
        set -x

        KUBEVIRT_CLUSTER_NAME="kv-nested"
        CLUSTER_NAMESPACE=clusters-${KUBEVIRT_CLUSTER_NAME}

        # TODO add kubevirt csi e2e test logic.
        # mgmt cluster kubeconfig is in KUBECONFIG env var
        # guest cluster is exported to GUEST_KUBECONFIG using the following export
        #
        # export GUEST_KUBECONFIG=${SHARED_DIR}/nested_kubeconfig

        hypershift destroy cluster kubevirt --name ${KUBEVIRT_CLUSTER_NAME}
      from: hypershift-cli-e2e
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
    workflow: ipi-aws-ovn
zz_generated_metadata:
  branch: master
  org: openshift
  repo: kubevirt-csi-driver
