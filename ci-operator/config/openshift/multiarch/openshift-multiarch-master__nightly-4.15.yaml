base_images:
  ansible:
    name: "4.15"
    namespace: ocp
    tag: ansible
  assisted-installer:
    name: assisted
    namespace: ocp-kni
    tag: assisted-installer
  assisted-installer-agent:
    name: assisted
    namespace: ocp-kni
    tag: assisted-installer-agent
  assisted-installer-controller:
    name: assisted
    namespace: ocp-kni
    tag: assisted-installer-controller
  assisted-service:
    name: assisted
    namespace: ocp-kni
    tag: assisted-service
  assisted-test-infra:
    name: assisted-test
    namespace: ocp-kni
    tag: assisted-test-infra
  aws-ebs-csi-driver-operator-test:
    name: "4.15"
    namespace: ocp
    tag: aws-ebs-csi-driver-operator-test
  azure-disk-csi-driver-operator-test:
    name: "4.15"
    namespace: ocp
    tag: azure-disk-csi-driver-operator-test
  base:
    name: "4.15"
    namespace: ocp
    tag: base
  console-tests:
    name: "4.15"
    namespace: ocp
    tag: console-tests
  dev-scripts:
    name: test
    namespace: ocp-kni
    tag: dev-scripts
  gcp-pd-csi-driver-operator-test:
    name: "4.15"
    namespace: ocp
    tag: gcp-pd-csi-driver-operator-test
  libvirt-installer:
    name: "4.15"
    namespace: ocp
    tag: libvirt-installer
  upi-installer:
    name: "4.15"
    namespace: ocp
    tag: upi-installer
  vsphere-csi-driver-operator-test:
    name: "4.15"
    namespace: ocp
    tag: vsphere-csi-driver-operator-test
releases:
  arm64-initial:
    candidate:
      architecture: arm64
      product: ocp
      relative: 1
      stream: nightly
      version: "4.15"
  arm64-latest:
    candidate:
      architecture: arm64
      product: ocp
      stream: nightly
      version: "4.15"
  initial:
    candidate:
      product: ocp
      relative: 1
      stream: nightly
      version: "4.15"
  latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.15"
  multi-initial:
    candidate:
      architecture: multi
      product: ocp
      relative: 1
      stream: nightly
      version: "4.15"
  multi-latest:
    candidate:
      architecture: multi
      product: ocp
      stream: nightly
      version: "4.15"
  ppc64le-initial:
    candidate:
      architecture: ppc64le
      product: ocp
      relative: 1
      stream: nightly
      version: "4.15"
  ppc64le-latest:
    candidate:
      architecture: ppc64le
      product: ocp
      stream: nightly
      version: "4.15"
  s390x-initial:
    candidate:
      architecture: s390x
      product: ocp
      relative: 1
      stream: nightly
      version: "4.15"
  s390x-latest:
    candidate:
      architecture: s390x
      product: ocp
      stream: nightly
      version: "4.15"
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: ocp-e2e-ibmcloud-ovn-multi-s390x
  cron: 17 8,20 * * *
  steps:
    cluster_profile: ibmcloud-multi-s390x
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: s390x
      ADDITIONAL_WORKER_VM_TYPE: bz2-4x16
      BASE_DOMAIN: ocp-dev-ppc64le.com
      LOKI_ENABLED: "false"
      RESOURCE_GROUP: ibmcloud-multi-s390x-rg
      TEST_SKIPS: deploymentconfigs\| should expose cluster services outside the cluster\|
        FIPS TestFIPS\| Multi-stage image builds should succeed\| Optimized image
        builds should succeed\| build can reference a cluster service\| custom build
        with buildah\| oc new-app should succeed\| prune builds based on settings\|
        s2i build with a root\| verify /run filesystem contents\| oc can run\| oc
        debug\| oc idle\| Pods cannot access\| Image append should create\| Image
        extract should extract\| Image info should display\| Image layer subresource\|
        oc tag should change image\| when installed on the cluster should\| OpenShift
        alerting rules\| The HAProxy router should\| egressrouter cni resources\|
        pod should start\| pod sysctls\| build volumes should mount given secrets
        and configmaps into the build pod
    workflow: openshift-e2e-ibmcloud-heterogeneous
- as: ocp-e2e-powervs-ovn-multi-ppc64le
  cron: 20 18 * * *
  steps:
    cluster_profile: powervs-multi-1
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      BASE_DOMAIN: ocp-dev-ppc64le.com
      IBMCLOUD_CIS_CRN: 'crn:v1:bluemix:public:internet-svcs:global:a/3c24cb272ca44aa1ac9f6e9490ac5ecd:9b372a78-cec3-45b7-875e-04ba0270c87d::'
      JQ_VERSION: "1.6"
      RESOURCE_GROUP: ipi-cicd-resource-group
      TERRAFORM_VERSION: 1.5.5
      TEST_SKIPS: deploymentconfigs\| should expose cluster services outside the cluster\|
        FIPS TestFIPS\| Multi-stage image builds should succeed\| Optimized image
        builds should succeed\| build can reference a cluster service\| custom build
        with buildah\| oc new-app should succeed\| prune builds based on settings\|
        s2i build with a root\| verify /run filesystem contents\| oc can run\| oc
        debug\| oc idle\| Pods cannot access\| Image append should create\| Image
        extract should extract\| Image info should display\| Image layer subresource\|
        oc tag should change image\| when installed on the cluster should\| OpenShift
        alerting rules\| The HAProxy router should\| egressrouter cni resources\|
        pod should start\| pod sysctls\| Managed cluster should have same number of
        Machines and Nodes \| Managed cluster should have machine resources \| should
        not have pod creation failures during install \| DNS should answer queries
        using the local DNS endpoint \| not repeat pathologically for ns/openshift-etcd
        \| egressFirewall should have no impact outside its namespace
    workflow: openshift-e2e-powervs-heterogeneous-upi
  timeout: 6h0m0s
- as: ocp-e2e-aws-ovn-heterogeneous-upgrade
  interval: 72h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-initial
      OPENSHIFT_UPGRADE_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
    workflow: openshift-upgrade-aws-heterogeneous
- as: ocp-e2e-aws-ovn-heterogeneous
  cron: 08 11 * * 5
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      TEST_SKIPS: deploymentconfigs\| should expose cluster services outside the cluster\|
        FIPS TestFIPS\| Multi-stage image builds should succeed\| Optimized image
        builds should succeed\| build can reference a cluster service\| custom build
        with buildah\| oc new-app should succeed\| prune builds based on settings\|
        s2i build with a root\| verify /run filesystem contents\| oc can run\| oc
        debug\| oc idle\| Pods cannot access\| Image append should create\| Image
        extract should extract\| Image info should display\| Image layer subresource\|
        oc tag should change image\| when installed on the cluster should\| OpenShift
        alerting rules\| The HAProxy router should\| egressrouter cni resources\|
        pod should start\| pod sysctls\| build volumes should mount given secrets
        and configmaps into the build pod
    workflow: openshift-e2e-aws-heterogeneous
- as: ocp-e2e-serial-aws-ovn-heterogeneous
  cron: 19 23 * * 2
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      TEST_SKIPS: EgressIPs can be assigned automatically\| OpenShift alerting rules\|
        pods should have the assigned EgressIPs\| only pods matched by the pod selector
        should have the EgressIPs\| Image signature workflow can push a signed image
        to openshift registry and verify it\| Multi-AZ Clusters should spread the
        pods of a service across zones\| pods should keep the assigned EgressIPs
      TEST_SUITE: openshift/conformance/serial
    workflow: openshift-e2e-aws-heterogeneous
- as: ocp-e2e-upgrade-aws-ovn-arm64
  interval: 72h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-initial
      OPENSHIFT_UPGRADE_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      OCP_ARCH: arm64
      TEST_SUITE: upgrade-conformance
    workflow: openshift-upgrade-aws
- as: ocp-installer-e2e-aws-ovn-arm64
  interval: 24h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      OCP_ARCH: arm64
    workflow: ipi-aws-ovn
- as: ocp-image-ecosystem-aws-ovn-arm64
  interval: 96h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      OCP_ARCH: arm64
    workflow: openshift-e2e-aws-image-ecosystem
- as: ocp-jenkins-e2e-aws-ovn-arm64
  interval: 96h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      OCP_ARCH: arm64
      TEST_SUITE: openshift/jenkins-e2e-rhel-only
    workflow: openshift-e2e-aws
- as: ocp-e2e-ovn-serial-aws-arm64
  interval: 72h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      OCP_ARCH: arm64
    workflow: openshift-e2e-aws-ovn-serial
- as: ocp-e2e-aws-ovn-arm64
  interval: 72h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      OCP_ARCH: arm64
    workflow: openshift-e2e-aws-ovn
- as: ocp-e2e-aws-upi-ovn-arm64
  interval: 72h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      BOOTSTRAP_INSTANCE_TYPE: m6g.large
      COMPUTE_NODE_TYPE: m6g.xlarge
      MASTER_INSTANCE_TYPE: m6g.xlarge
      OCP_ARCH: arm64
      WORKER_INSTANCE_TYPE: m6g.xlarge
    workflow: openshift-e2e-aws-upi
- as: ocp-e2e-aws-ovn-arm64-single-node
  interval: 72h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      OCP_ARCH: arm64
    workflow: openshift-e2e-aws-single-node
- as: ocp-e2e-aws-ovn-arm64-techpreview
  interval: 72h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      COMPUTE_NODE_TYPE: m6g.xlarge
      FEATURE_SET: TechPreviewNoUpgrade
      OCP_ARCH: arm64
    workflow: openshift-e2e-aws
- as: ocp-e2e-aws-ovn-arm64-techpreview-serial
  interval: 72h
  steps:
    cluster_profile: aws-2
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      COMPUTE_NODE_TYPE: m6g.xlarge
      FEATURE_SET: TechPreviewNoUpgrade
      OCP_ARCH: arm64
    workflow: openshift-e2e-aws-serial
- as: ocp-e2e-ibmcloud-ovn-multi-ppc64le
  cron: 20 7 * * *
  steps:
    cluster_profile: ibmcloud-multi-ppc64le
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: ppc64le
      BASE_DOMAIN: ocp-dev-ppc64le.com
      GO_VERSION: 1.20.7
      JQ_VERSION: "1.6"
      LOKI_ENABLED: "false"
      OCP_VERSION: "4.15"
      RESOURCE_GROUP: ipi-cicd-resource-group
      SIZE_VARIANT: large
      TERRAFORM_VERSION: 1.5.5
      TEST_SKIPS: deploymentconfigs\| should expose cluster services outside the cluster\|
        FIPS TestFIPS\| Multi-stage image builds should succeed\| Optimized image
        builds should succeed\| build can reference a cluster service\| custom build
        with buildah\| oc new-app should succeed\| prune builds based on settings\|
        s2i build with a root\| verify /run filesystem contents\| oc can run\| oc
        debug\| oc idle\| Pods cannot access\| Image append should create\| Image
        extract should extract\| Image info should display\| Image layer subresource\|
        oc tag should change image\| when installed on the cluster should\| OpenShift
        alerting rules\| The HAProxy router should\| egressrouter cni resources\|
        pod should start\| pod sysctls\| Managed cluster should have same number of
        Machines and Nodes \| Managed cluster should have machine resources \| should
        not have pod creation failures during install \| DNS should answer queries
        using the local DNS endpoint \| not repeat pathologically for ns/openshift-etcd
        \| egressFirewall should have no impact outside its namespace
      WORKERS: "2"
      YQ_VERSION: 4.30.5
    workflow: openshift-e2e-ibmcloud-heterogeneous-upi
  timeout: 6h0m0s
- as: ocp-e2e-azure-ovn-arm64
  interval: 72h
  steps:
    cluster_profile: azure-arm64
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: ci.azure.devcluster.openshift.com
      COMPUTE_NODE_TYPE: Standard_D4ps_v5
      OCP_ARCH: arm64
    workflow: openshift-e2e-azure-ovn
- as: ocp-e2e-upgrade-azure-ovn-arm64
  interval: 72h
  steps:
    cluster_profile: azure-arm64
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-initial
      OPENSHIFT_UPGRADE_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      BASE_DOMAIN: ci.azure.devcluster.openshift.com
      COMPUTE_NODE_TYPE: Standard_D4ps_v5
      OCP_ARCH: arm64
      TEST_SUITE: upgrade-conformance
    workflow: openshift-upgrade-azure
- as: ocp-e2e-ovn-remote-libvirt-s390x
  cluster: build01
  cron: 0 4,16 * * 1-5
  steps:
    cluster_profile: libvirt-s390x
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:s390x-latest
    env:
      ARCH: s390x
      BRANCH: "4.15"
      NODE_TUNING: "true"
      TEST_TYPE: conformance-parallel
    workflow: openshift-e2e-libvirt
- as: ocp-e2e-ovn-remote-libvirt-s390x-heterogeneous
  cluster: build01
  cron: 0 4,16 * * 1-5
  steps:
    cluster_profile: libvirt-s390x-amd64
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ARCH: s390x
      BRANCH: "4.15"
      OPENSHIFT_CLIENT_VERSION_OVERRIDE: fast-4.15
      TEST_TYPE: conformance-parallel
      USE_RAMFS: "true"
    workflow: openshift-e2e-libvirt-upi-heterogeneous
- as: ocp-heavy-build-ovn-remote-libvirt-s390x
  cluster: build01
  cron: 0 12 * * 1-5
  steps:
    cluster_profile: libvirt-s390x
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:s390x-latest
    env:
      ARCH: s390x
      BRANCH: "4.15"
      NODE_TUNING: "true"
      TEST_TYPE: heavy-build
    workflow: openshift-e2e-libvirt
- as: ocp-image-ecosystem-ovn-remote-libvirt-s390x
  cluster: build01
  cron: 0 15 * * 0
  steps:
    cluster_profile: libvirt-s390x
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ARCH: s390x
      BRANCH: "4.15"
      TEST_TYPE: image-ecosystem
    workflow: openshift-e2e-libvirt
- as: ocp-jenkins-e2e-ovn-remote-libvirt-s390x
  cluster: build01
  cron: 0 16 * * 0
  steps:
    cluster_profile: libvirt-s390x
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ARCH: s390x
      BRANCH: "4.15"
      TEST_TYPE: jenkins-e2e-rhel-only
    workflow: openshift-e2e-libvirt
- as: ocp-e2e-serial-ovn-remote-libvirt-s390x
  cluster: build01
  cron: 0 15 * * 6
  steps:
    cluster_profile: libvirt-s390x
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:s390x-latest
    env:
      ARCH: s390x
      BRANCH: "4.15"
      TEST_TYPE: conformance-serial
    workflow: openshift-e2e-libvirt
- as: ocp-fips-ovn-remote-libvirt-s390x
  cluster: build01
  cron: 0 16 * * 6
  steps:
    cluster_profile: libvirt-s390x
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:s390x-latest
    env:
      ARCH: s390x
      BRANCH: "4.15"
      FIPS_ENABLED: "true"
      NODE_TUNING: "true"
      TEST_TYPE: conformance-parallel
    workflow: openshift-e2e-libvirt-fips
- as: ocp-e2e-compact-ovn-remote-libvirt-s390x
  cluster: build01
  cron: 0 17 * * 6
  steps:
    cluster_profile: libvirt-s390x
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:s390x-latest
    env:
      ARCH: s390x
      BRANCH: "4.15"
      MASTER_DISK: "64424509440"
      MASTER_MEMORY: "32768"
      TEST_TYPE: conformance-parallel
      WORKER_DISK: "64424509440"
      WORKER_MEMORY: "32768"
      WORKER_REPLICAS: "0"
    workflow: openshift-e2e-libvirt
- as: ocp-e2e-ovn-remote-libvirt-ppc64le
  cluster: build01
  cron: 0 4,16 * * 1-5
  steps:
    cluster_profile: libvirt-ppc64le
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:ppc64le-latest
    env:
      ARCH: ppc64le
      BRANCH: "4.15"
      MASTER_MEMORY: "34816"
      TEST_TYPE: conformance-parallel
      USE_RAMFS: "true"
    workflow: openshift-e2e-libvirt
- as: ocp-heavy-build-ovn-remote-libvirt-ppc64le
  cluster: build01
  cron: 0 12 * * 1-5
  steps:
    cluster_profile: libvirt-ppc64le
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:ppc64le-latest
    env:
      ARCH: ppc64le
      BRANCH: "4.15"
      NODE_TUNING: "true"
      TEST_TYPE: heavy-build
      USE_RAMFS: "true"
    workflow: openshift-e2e-libvirt
- as: ocp-image-ecosystem-ovn-remote-libvirt-ppc64le
  cluster: build01
  cron: 0 15 * * 0
  steps:
    cluster_profile: libvirt-ppc64le
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ARCH: ppc64le
      BRANCH: "4.15"
      TEST_TYPE: image-ecosystem
    workflow: openshift-e2e-libvirt
- as: ocp-jenkins-e2e-ovn-remote-libvirt-ppc64le
  cluster: build01
  cron: 0 16 * * 0
  steps:
    cluster_profile: libvirt-ppc64le
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ARCH: ppc64le
      BRANCH: "4.15"
      TEST_TYPE: jenkins-e2e-rhel-only
    workflow: openshift-e2e-libvirt
- as: ocp-e2e-serial-ovn-remote-libvirt-ppc64le
  cluster: build01
  cron: 0 15 * * 6
  steps:
    cluster_profile: libvirt-ppc64le
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:ppc64le-latest
    env:
      ARCH: ppc64le
      BRANCH: "4.15"
      TEST_TYPE: conformance-serial
    workflow: openshift-e2e-libvirt
- as: ocp-fips-ovn-remote-libvirt-ppc64le
  cluster: build01
  cron: 0 16 * * 6
  steps:
    cluster_profile: libvirt-ppc64le
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:ppc64le-latest
    env:
      ARCH: ppc64le
      BRANCH: "4.15"
      FIPS_ENABLED: "true"
      TEST_TYPE: conformance-parallel
    workflow: openshift-e2e-libvirt-fips
- as: ocp-e2e-compact-ovn-remote-libvirt-ppc64le
  cluster: build01
  cron: 0 17 * * 6
  steps:
    cluster_profile: libvirt-ppc64le
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:ppc64le-latest
    env:
      ARCH: ppc64le
      BRANCH: "4.15"
      MASTER_DISK: "64424509440"
      MASTER_MEMORY: "32768"
      TEST_TYPE: conformance-parallel
      WORKER_DISK: "64424509440"
      WORKER_MEMORY: "32768"
      WORKER_REPLICAS: "0"
    workflow: openshift-e2e-libvirt
- as: ocp-e2e-ovn-ppc64le-powervs-original
  cluster: build01
  cron: 0 0,6,12,18 * * *
  steps:
    cluster_profile: powervs-3
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:ppc64le-latest
    env:
      ARCH: ppc64le
      BRANCH: "4.15"
      CLUSTER_NAME_MODIFIER: par-orig-415
      INSTALLER: powervs
      TEST_TYPE: conformance-parallel
    workflow: openshift-e2e-powervs-ipi
- as: ocp-e2e-azure-ovn-heterogeneous
  cron: 0 11 * * 0
  steps:
    cluster_profile: azure-arm64
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: aarch64
      ADDITIONAL_WORKER_VM_TYPE: Standard_D4ps_v5
      BASE_DOMAIN: ci.azure.devcluster.openshift.com
      OCP_ARCH: amd64
      TEST_SKIPS: deploymentconfigs\| should expose cluster services outside the cluster\|
        FIPS TestFIPS\| Multi-stage image builds should succeed\| Optimized image
        builds should succeed\| build can reference a cluster service\| custom build
        with buildah\| oc new-app should succeed\| prune builds based on settings\|
        s2i build with a root\| verify /run filesystem contents\| oc can run\| oc
        debug\| oc idle\| Pods cannot access\| Image append should create\| Image
        extract should extract\| Image info should display\| Image layer subresource\|
        oc tag should change image\| when installed on the cluster should\| OpenShift
        alerting rules\| The HAProxy router should\| egressrouter cni resources\|
        pod should start\| pod sysctls\| build volumes should mount given secrets
        and configmaps into the build pod
    test:
    - ref: ipi-install-heterogeneous
    - ref: openshift-e2e-test
    workflow: openshift-e2e-azure
- as: ocp-e2e-upgrade-azure-ovn-heterogeneous
  interval: 72h
  steps:
    cluster_profile: azure-arm64
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-initial
      OPENSHIFT_UPGRADE_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: aarch64
      ADDITIONAL_WORKER_VM_TYPE: Standard_D4ps_v5
      BASE_DOMAIN: ci.azure.devcluster.openshift.com
      OCP_ARCH: amd64
      TEST_SUITE: upgrade-conformance
    workflow: openshift-upgrade-azure-heterogeneous
- as: ocp-e2e-gcp-ovn-arm64
  cron: 0 11 * * 0
  steps:
    cluster_profile: gcp-arm64
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      COMPUTE_NODE_TYPE: t2a-standard-4
      OCP_ARCH: arm64
    workflow: openshift-e2e-gcp-ovn
- as: ocp-e2e-upgrade-gcp-ovn-arm64
  interval: 72h
  steps:
    cluster_profile: gcp-arm64
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:arm64-initial
      OPENSHIFT_UPGRADE_RELEASE_IMAGE_OVERRIDE: release:arm64-latest
    env:
      COMPUTE_NODE_TYPE: t2a-standard-4
      OCP_ARCH: arm64
      TEST_SUITE: upgrade-conformance
    workflow: openshift-upgrade-gcp
- as: ocp-e2e-gcp-ovn-heterogeneous
  cron: 0 11 * * 0
  steps:
    cluster_profile: gcp-arm64
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: aarch64
      ADDITIONAL_WORKER_VM_TYPE: t2a-standard-4
      OCP_ARCH: amd64
      TEST_SKIPS: deploymentconfigs\| should expose cluster services outside the cluster\|
        FIPS TestFIPS\| Multi-stage image builds should succeed\| Optimized image
        builds should succeed\| build can reference a cluster service\| custom build
        with buildah\| oc new-app should succeed\| prune builds based on settings\|
        s2i build with a root\| verify /run filesystem contents\| oc can run\| oc
        debug\| oc idle\| Pods cannot access\| Image append should create\| Image
        extract should extract\| Image info should display\| Image layer subresource\|
        oc tag should change image\| when installed on the cluster should\| OpenShift
        alerting rules\| The HAProxy router should\| egressrouter cni resources\|
        pod should start\| pod sysctls\| build volumes should mount given secrets
        and configmaps into the build pod
    test:
    - ref: ipi-install-heterogeneous
    - ref: openshift-e2e-test
    workflow: openshift-e2e-gcp-ovn
- as: ocp-e2e-upgrade-gcp-ovn-heterogeneous
  interval: 72h
  steps:
    cluster_profile: gcp-arm64
    dependencies:
      OPENSHIFT_INSTALL_RELEASE_IMAGE_OVERRIDE: release:multi-initial
      OPENSHIFT_UPGRADE_RELEASE_IMAGE_OVERRIDE: release:multi-latest
    env:
      ADDITIONAL_WORKER_ARCHITECTURE: aarch64
      ADDITIONAL_WORKER_VM_TYPE: t2a-standard-4
      OCP_ARCH: amd64
      TEST_SUITE: upgrade-conformance
    workflow: openshift-upgrade-gcp-heterogeneous
- as: ocp-assisted-sno-power
  cron: 0 8 * * 5
  steps:
    cluster_profile: powervs-1
    env:
      INSTALL_TYPE: assisted
      OCP_VERSION: "4.15"
      TEST_SKIPS: The HAProxy router should be able to connect to a service that is
        idled\| HTPasswd IDP should successfully configure htpasswd and be responsive\|
        LDAP IDP should authenticate against an ldap server\| expected headers returned
        from the authorize URL\| expected headers returned from the grant URL\| expected
        headers returned from the login URL for the allow all IDP\| expected headers
        returned from the login URL for the bootstrap IDP\| expected headers returned
        from the login URL for when there is only one IDP\| expected headers returned
        from the logout URL\| expected headers returned from the root URL\| expected
        headers returned from the token URL\| expected headers returned from the token
        request URL\| Using a OAuth client with a non-default token max age\| well-known
        endpoint should be reachable\|\[sig-api-machinery\]\[Feature:ClusterResourceQuota\]
        Cluster resource quota should control resource limits across namespaces\|\[sig-api-machinery\]\[Feature:ServerSideApply\]
        Server-Side Apply should work for route.openshift.io/v1, Resource=routes\|\[sig-api-machinery\]\[Feature:ServerSideApply\]
        Server-Side Apply should work for template.openshift.io/v1, Resource=brokertemplateinstances\|
        \[sig-apps\]\[Feature:DeploymentConfig\] deploymentconfigs with revision history
        limits should never persist more old deployments than acceptable after being
        observed by the controller\|\[sig-apps\]\[Feature:Jobs\] Users should be able
        to create and run a job in a user project\|\[sig-arch\] ClusterOperators \[apigroup:config.openshift.io\]
        should define valid related objects\|\[sig-arch\] Managed cluster should only
        include cluster daemonsets that have maxUnavailable or maxSurge update of
        10 percent or maxUnavailable of 33 percent\|\[sig-arch\] \[Conformance\] sysctl
        whitelists net.ipv4.ip_local_port_range\|\[sig-arch\]\[Late\] all registered
        tls artifacts must have no metadata violation regressions\|\[sig-arch\]\[Late\]
        all tls artifacts must be registered\|\[sig-arch\]\[Late\] clients should
        not use APIs that are removed in upcoming releases\|\[sig-auth\]\[Feature:OpenShiftAuthorization\]
        self-SAR compatibility TestBootstrapPolicySelfSubjectAccessReviews should
        succeed\|\[sig-auth\]\[Feature:RoleBindingRestrictions\] RoleBindingRestrictions
        should be functional Create a rolebinding when subject is not already bound
        and is not permitted by any RBR should fail\|\[sig-auth\]\[Feature:RoleBindingRestrictions\]
        RoleBindingRestrictions should be functional Rolebinding restrictions tests
        single project should succeed\|\[sig-builds\]\[Feature:Builds\] build with
        empty source started build should build even with an empty source in build
        config\|\[sig-builds\]\[Feature:Builds\] custom build with buildah being created
        from new-build should complete build with custom builder image\|\[sig-builds\]\[Feature:Builds\]
        prune builds based on settings in the buildconfig should prune failed builds
        based on the failedBuildsHistoryLimit setting\|\[sig-builds\]\[Feature:Builds\]\[valueFrom\]
        process valueFrom in build strategy environment variables should successfully
        resolve valueFrom in s2i build environment variables\|\[sig-builds\]\[Feature:Builds\]\[volumes\]
        build volumes should mount given secrets and configmaps into the build pod
        for docker strategy builds\|\[sig-builds\]\[Feature:Builds\]\[webhook\] TestWebhookGitHubPushWithImageStream\|\[sig-ci\]
        \[Early\] prow job name should match network type\|\[sig-ci\] \[Early\] prow
        job name should match platform type\|\[sig-cli\] oc --request-timeout works
        as expected\|\[sig-cli\] oc adm node-logs\|\[sig-cli\] oc adm serviceaccounts\|\[sig-cli\]
        oc api-resources can output expected information about snapshot.storage.k8s.io
        api-resources\| \[sig-cli\] oc basics can get version information from CLI
        \|\[sig-cli\] oc debug does not require a real resource on the server\|\[sig-cli\]
        oc explain should contain proper fields description for oauth.openshift.io\|\[sig-cli\]
        oc explain should contain spec+status for build.openshift.io\|\[sig-cli\]
        oc idle \[apigroup:apps.openshift.io\]\[apigroup:route.openshift.io\]\[apigroup:project.openshift.io\]\[apigroup:image.openshift.io\]
        by all\|\[sig-cli\] oc secret creates and retrieves expected\|\[sig-cluster-lifecycle\]
        Pods cannot access the /config/master API endpoint\|\[sig-devex\]\[Feature:Templates\]
        templateinstance impersonation tests \[apigroup:user.openshift.io\]\[apigroup:authorization.openshift.io\]
        should pass impersonation deletion tests\|\[sig-devex\]\[Feature:Templates\]
        templateinstance security tests \[apigroup:authorization.openshift.io\]\[apigroup:template.openshift.io\]
        should pass security tests\|\[sig-etcd\] etcd pod logs do not log slow fdatasync\|
        \[sig-imageregistry\]\[Feature:ImageExtract\] Image extract should extract
        content from an image\|\[sig-imageregistry\]\[Feature:ImageLayers\] Image
        layer subresource should return layers from tagged images\|\[sig-instrumentation\]
        Prometheus \[apigroup:image.openshift.io\] when installed on the cluster should
        provide named network metrics\|\[sig-instrumentation\] Prometheus \[apigroup:image.openshift.io\]
        when installed on the cluster should start and expose a secured proxy and
        unsecured metrics\|\[sig-kubevirt\] services when running openshift cluster
        on KubeVirt virtual machines should allow connections to pods from infra cluster
        pod via NodePort across different infra nodes\|\[sig-network\] ovs-vswitchd
        should not log any unreasonably long poll intervals to system journal\|\[sig-network\]
        services basic functionality should allow connections to another pod on a
        different node via a service IP\|\[sig-network\]\[Feature:EgressFirewall\]
        when using openshift ovn-kubernetes should ensure egressfirewall is created\|
        \[sig-network\]\[Feature:Router\]\[apigroup:route.openshift.io\] The HAProxy
        router reports the expected host names in admitted routes' statuses\|\[sig-network\]\[Feature:Whereabouts\]
        should use whereabouts net-attach-def to limit IP ranges for newly created
        pods\| \[sig-network\]\[Feature:tuning\] sysctl allowlist update should start
        a pod with custom sysctl only when the sysctl is added to whitelist\|\[sig-node\]
        Pods Extended Pod Container Status should never report container start when
        an init container fails
      TEST_TYPE: suite
    workflow: upi-powervs-sno
zz_generated_metadata:
  branch: master
  org: openshift
  repo: multiarch
  variant: nightly-4.15
