base_images:
  base:
    name: "4.21"
    namespace: ocp
    tag: base-rhel9
  ocp_builder_rhel-9-golang-1.24-openshift-4.21:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.24-openshift-4.21
build_root:
  image_stream_tag:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.24-openshift-4.21
images:
- dockerfile_path: Dockerfile
  from: base
  inputs:
    ocp_builder_rhel-9-golang-1.24-openshift-4.21: {}
  to: tls-scanner-tool
releases:
  initial:
    integration:
      name: "4.21"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.21"
      namespace: ocp
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: tls-scanner
  steps:
    cluster_profile: aws
    test:
    - as: run-scanner-on-cluster
      cli: latest
      commands: |
        set -euo pipefail

        # The tls-scanner binary has been updated to use the standard client-go authentication
        # loading rules. It will now automatically inherit the cluster-admin kubeconfig
        # provided by the CI environment to the test pod. No RBAC manipulation is needed.

        echo "--- Running scanner with inherited cluster-admin privileges to scan all pods ---"

        # Create the artifact directory before running the scanner
        mkdir -p "${ARTIFACT_DIR}/tls-scanner"

        /usr/local/bin/tls-scanner \
          --all-pods \
          --csv-file "${ARTIFACT_DIR}/tls-scanner/report.csv"
      from: tls-scanner-tool
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
zz_generated_metadata:
  branch: main
  org: openshift
  repo: tls-scanner
