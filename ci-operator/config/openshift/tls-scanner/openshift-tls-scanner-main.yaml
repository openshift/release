base_images:
  base:
    name: "4.21"
    namespace: ocp
    tag: base-rhel9
  ocp_builder_rhel-9-golang-1.24-openshift-4.21:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.24-openshift-4.21
build_root:
  image_stream_tag:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.24-openshift-4.21
images:
- dockerfile_path: Dockerfile
  from: base
  inputs:
    ocp_builder_rhel-9-golang-1.24-openshift-4.21: {}
  to: tls-scanner-tool
releases:
  initial:
    integration:
      name: "4.19"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.19"
      namespace: ocp
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: tls-scanner
  steps:
    cluster_profile: aws
    test:
    - as: run-scanner-on-cluster
      cli: latest
      commands: |
        set -euo pipefail

        echo "--- RBAC Debugging: Initial State ---"
        echo "CI pod running as: $(oc whoami)"
        echo "Target namespace: ${NAMESPACE}"
        echo "-----------------------------------------"

        oc create serviceaccount tls-scanner -n "${NAMESPACE}"
        oc adm policy add-scc-to-user privileged -z tls-scanner -n "${NAMESPACE}"
        CRB_NAME="tls-scanner-admin-${NAMESPACE}"
        oc create clusterrolebinding "${CRB_NAME}" --clusterrole=cluster-admin --serviceaccount="${NAMESPACE}:tls-scanner"
        echo "Created ServiceAccount, added privileged SCC, and created ClusterRoleBinding '${CRB_NAME}'"

        echo "--- Waiting for permissions to propagate for sa/tls-scanner ---"
        if ! timeout 60s bash -c "while ! oc auth can-i list pods --all-namespaces --as=\"system:serviceaccount:${NAMESPACE}:tls-scanner\"; do echo \"... permissions not ready, waiting ...\"; sleep 3; done"; then
            echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
            echo "Error: Timed out waiting for permissions to propagate."
            echo "--- Start Final RBAC Debug Info ---"
            echo "Final permissions list for system:serviceaccount:${NAMESPACE}:tls-scanner:"
            oc auth can-i --list --as="system:serviceaccount:${NAMESPACE}:tls-scanner" || echo "Warning: Failed to list permissions for SA."

            echo "---"
            echo "Checking specific resource permissions that failed previously:"
            for resource in pods ingresscontrollers apiservers kubeletconfigs; do
              printf "Can list %-20s: " "${resource}"
              if oc auth can-i list "${resource}" --all-namespaces --as="system:serviceaccount:${NAMESPACE}:tls-scanner" &> /dev/null; then
                echo "YES"
              else
                echo "NO"
              fi
            done
            echo "---"

            echo "Describing ClusterRoleBinding '${CRB_NAME}':"
            oc get clusterrolebinding "${CRB_NAME}" -o yaml || echo "Warning: Failed to get ClusterRoleBinding."
            echo "--- End Final RBAC Debug Info ---"
            echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
            exit 1
        fi
        echo "--- Permissions are ready. Proceeding with scan. ---"

        mkdir -p "${ARTIFACT_DIR}/tls-scanner"
        /usr/local/bin/tls-scanner -all-pods -csv-file "${ARTIFACT_DIR}/tls-scanner/report.csv" -limit-ips 4
      from: tls-scanner-tool
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
zz_generated_metadata:
  branch: main
  org: openshift
  repo: tls-scanner
