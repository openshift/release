base_images:
  base:
    name: "4.19"
    namespace: ocp
    tag: base
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.24
images:
- dockerfile_path: Dockerfile
  from: base
  inputs:
    openshift_release_golang-1.24:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.24
  to: tls-scanner-tool
promotion:
  to:
  - name: "4.19"
    namespace: ocp
releases:
  initial:
    integration:
      name: "4.19"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.19"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: tls-scanner
  steps:
    cluster_profile: aws
    test:
    - as: run-scanner-on-cluster
      cli: latest
      commands: |
        set -euo pipefail
        # The ${NAMESPACE} and ${ARTIFACT_DIR} variables are injected by the CI environment.
        oc create serviceaccount tls-scanner -n "${NAMESPACE}"
        oc adm policy add-scc-to-user privileged -z tls-scanner -n "${NAMESPACE}"
        oc adm policy add-cluster-role-to-user cluster-admin -z tls-scanner -n "${NAMESPACE}"

        echo "Waiting for permissions to propagate for sa/tls-scanner..."
        if ! timeout 30s bash -c "while ! oc auth can-i list pods --all-namespaces --as=\"system:serviceaccount:${NAMESPACE}:tls-scanner\"; do echo \"... permissions not ready, waiting ...\"; sleep 2; done"; then
            echo "Timed out waiting for permissions to propagate."
            exit 1
        fi
        echo "Permissions are ready for sa/tls-scanner."

        mkdir -p "${ARTIFACT_DIR}/tls-scanner"
        /usr/local/bin/tls-scanner \
          --all-pods \
          --output-format csv \
          --output-file "${ARTI-FACT_DIR}/tls-scanner/report.csv"
      from: tls-scanner-tool
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
zz_generated_metadata:
  branch: main
  org: openshift
  repo: tls-scanner
