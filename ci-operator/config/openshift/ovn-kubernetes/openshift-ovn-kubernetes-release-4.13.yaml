base_images:
  dev-scripts:
    name: test
    namespace: ocp-kni
    tag: dev-scripts
  ocp_builder_rhel-8-golang-1.19-openshift-4.13:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-1.19-openshift-4.13
  ocp_builder_rhel-9-base-openshift-4.13:
    name: builder
    namespace: ocp
    tag: rhel-9-base-openshift-4.13
  ocp_builder_rhel-9-golang-1.19-openshift-4.13:
    name: builder
    namespace: ocp
    tag: rhel-9-golang-1.19-openshift-4.13
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.18
images:
- dockerfile_path: Dockerfile.base
  from: ocp_builder_rhel-9-base-openshift-4.13
  to: ovn-kubernetes-base-rhel-9
- dockerfile_path: Dockerfile
  from: ovn-kubernetes-base-rhel-9
  inputs:
    ocp_builder_rhel-8-golang-1.19-openshift-4.13:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.19-openshift-4.13
    ocp_builder_rhel-9-golang-1.19-openshift-4.13:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.19-openshift-4.13
  to: ovn-kubernetes-rhel-9
- dockerfile_path: Dockerfile.microshift
  from: ovn-kubernetes-base-rhel-9
  inputs:
    ocp_builder_rhel-9-golang-1.19-openshift-4.13:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.19-openshift-4.13
  to: ovn-kubernetes-microshift-rhel-9
promotion:
  name: "4.13"
  namespace: ocp
releases:
  initial:
    integration:
      name: "4.13"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.13"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: e2e-aws-ovn-local-gateway
  steps:
    cluster_profile: aws-2
    env:
      BASE_DOMAIN: aws-2.ci.openshift.org
      GATEWAY_MODE: local
    workflow: openshift-e2e-aws-ovn
- as: e2e-metal-ipi-ovn-ipv4
  cluster: build05
  optional: true
  steps:
    cluster_profile: equinix-ocp-metal
    workflow: baremetalds-e2e-ovn-ipv4
- as: e2e-metal-ipi-ovn-ipv6
  cluster: build05
  steps:
    cluster_profile: equinix-ocp-metal
    workflow: baremetalds-e2e-ovn-ipv6
- as: e2e-metal-ipi-ovn-dualstack
  cluster: build05
  steps:
    cluster_profile: equinix-ocp-metal
    workflow: baremetalds-e2e-ovn-dualstack
- as: e2e-ovn-hybrid-step-registry
  optional: true
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-ovn-hybrid
- as: e2e-aws-ovn
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-ovn
- as: e2e-aws-ovn-windows
  steps:
    cluster_profile: aws
    env:
      WINDOWS_SERVER_VERSION: "2019"
    test:
    - ref: windows-e2e-operator-test
    workflow: ipi-aws-ovn-hybrid-toggle
- as: e2e-vsphere-ovn
  optional: true
  steps:
    cluster_profile: vsphere-2
    workflow: openshift-e2e-vsphere-ovn
- as: e2e-azure-ovn
  optional: true
  steps:
    cluster_profile: azure4
    workflow: openshift-e2e-azure-ovn
- as: e2e-aws-ovn-upgrade
  steps:
    cluster_profile: aws
    env:
      TEST_TYPE: upgrade-conformance
    workflow: openshift-upgrade-aws-ovn
- as: e2e-aws-ovn-upgrade-local-gateway
  steps:
    cluster_profile: aws
    env:
      GATEWAY_MODE: local
      TEST_TYPE: upgrade-conformance
    workflow: openshift-upgrade-aws-ovn
- as: e2e-gcp-ovn
  steps:
    cluster_profile: gcp-openshift-gce-devel-ci-2
    workflow: openshift-e2e-gcp-ovn
- as: e2e-vsphere-windows
  steps:
    cluster_profile: vsphere-2
    test:
    - ref: windows-e2e-operator-test-with-custom-vxlan-port
    workflow: ipi-vsphere-ovn-hybrid-custom-vxlan-port
- as: e2e-openstack-ovn
  optional: true
  steps:
    cluster_profile: openstack-vexxhost
    env:
      BASE_DOMAIN: shiftstack.devcluster.openshift.com
      CONFIG_TYPE: minimal
      NETWORK_TYPE: OVNKubernetes
      TEST_SUITE: openshift/conformance/parallel
    workflow: openshift-e2e-openstack-ipi
- as: e2e-ibmcloud-ipi-ovn-periodic
  cron: 0 0 * * *
  steps:
    cluster_profile: ibmcloud
    workflow: openshift-e2e-ibmcloud-ovn
- as: e2e-aws-ovn-shared-to-local-gateway-mode-migration
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-ovn-shared-to-local-gateway-mode-migration
- as: e2e-aws-ovn-shared-to-local-gateway-mode-migration-periodic
  cron: 0 0 */2 * *
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-ovn-shared-to-local-gateway-mode-migration
- as: e2e-aws-ovn-local-to-shared-gateway-mode-migration
  steps:
    cluster_profile: aws
    env:
      GATEWAY_MODE: local
    workflow: openshift-e2e-aws-ovn-local-to-shared-gateway-mode-migration
- as: e2e-aws-ovn-local-to-shared-gateway-mode-migration-periodic
  cron: 0 0 */2 * *
  steps:
    cluster_profile: aws
    env:
      GATEWAY_MODE: local
    workflow: openshift-e2e-aws-ovn-local-to-shared-gateway-mode-migration
- as: e2e-aws-ovn-hypershift
  optional: true
  steps:
    cluster_profile: hypershift
    workflow: hypershift-aws-conformance
- as: unit
  commands: |
    cd go-controller
    PKGS=$(go list -mod vendor -f '{{if len .TestGoFiles}} {{.ImportPath}} {{end}}' ${PKGS:-./cmd/... ./pkg/... ./hybrid-overlay/...} | xargs)
    # these packages need running as a container for TestNewClientset
    PKGS=${PKGS//"github.com/ovn-org/ovn-kubernetes/go-controller/pkg/util/batching"/ }
    PKGS=${PKGS//"github.com/ovn-org/ovn-kubernetes/go-controller/pkg/util"/ }
    PKGS=$PKGS make test NOROOT=TRUE
  container:
    from: src
- as: lint
  commands: |
    cd go-controller
    make lint
  container:
    from: src
- as: gofmt
  commands: |
    cd go-controller
    make gofmt
  container:
    from: src
- as: e2e-aws-ovn-serial
  optional: true
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-ovn-serial
- always_run: false
  as: qe-perfscale-aws-ovn-medium-cluster-density
  optional: true
  steps:
    cluster_profile: aws-perfscale
    env:
      BASE_DOMAIN: perfscale.devcluster.openshift.com
      COMPUTE_NODE_REPLICAS: "120"
      COMPUTE_NODE_TYPE: m5.xlarge
      SIZE_VARIANT: large
    post:
    - chain: ipi-aws-post
    pre:
    - chain: ipi-aws-pre
    - chain: create-infra-move-ingress-monitoring-registry
    workflow: openshift-qe-cluster-density-v2
  timeout: 5h0m0s
- always_run: false
  as: qe-perfscale-aws-ovn-small-cluster-density
  optional: true
  steps:
    cluster_profile: aws-perfscale-qe
    env:
      BASE_DOMAIN: qe.devcluster.openshift.com
      COMPUTE_NODE_REPLICAS: "24"
      COMPUTE_NODE_TYPE: m5.xlarge
    post:
    - chain: ipi-aws-post
    pre:
    - chain: ipi-aws-pre
    - chain: create-infra-move-ingress-monitoring-registry
    workflow: openshift-qe-cluster-density-v2
  timeout: 5h0m0s
- always_run: false
  as: qe-perfscale-aws-ovn-medium-node-density-cni
  optional: true
  steps:
    cluster_profile: aws-perfscale
    env:
      BASE_DOMAIN: perfscale.devcluster.openshift.com
      COMPUTE_NODE_REPLICAS: "120"
      COMPUTE_NODE_TYPE: m5.xlarge
      SIZE_VARIANT: large
    post:
    - chain: ipi-aws-post
    pre:
    - chain: ipi-aws-pre
    - chain: create-infra-move-ingress-monitoring-registry
    workflow: openshift-qe-cluster-density-v2
  timeout: 5h0m0s
- always_run: false
  as: qe-perfscale-aws-ovn-small-node-density-cni
  optional: true
  steps:
    cluster_profile: aws-perfscale-qe
    env:
      BASE_DOMAIN: qe.devcluster.openshift.com
      COMPUTE_NODE_REPLICAS: "24"
      COMPUTE_NODE_TYPE: m5.xlarge
    post:
    - chain: ipi-aws-post
    pre:
    - chain: ipi-aws-pre
    - chain: create-infra-move-ingress-monitoring-registry
    workflow: openshift-qe-node-density-cni
  timeout: 5h0m0s
- as: security
  optional: true
  steps:
    env:
      ALL_PROJECTS: "true"
      PROJECT_NAME: ovn-kubernetes
    workflow: openshift-ci-security
zz_generated_metadata:
  branch: release-4.13
  org: openshift
  repo: ovn-kubernetes
