base_images:
  base:
    name: "4.12"
    namespace: ocp
    tag: base
  ocp_builder_rhel-8-golang-1.18-openshift-4.11:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-1.18-openshift-4.11
build_root:
  from_repository: true
images:
- from: base
  inputs:
    ocp_builder_rhel-8-golang-1.18-openshift-4.11:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.18-openshift-4.11
  to: cluster-samples-operator
promotion:
  name: "4.12"
  namespace: ocp
releases:
  initial:
    integration:
      name: "4.12"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.12"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: verify
  commands: make verify
  container:
    from: src
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: unit
  commands: make test-unit
  container:
    from: src
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: e2e-aws
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws
- as: check-aws-no-capabilities
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    env:
      BASELINE_CAPABILITY_SET: None
    test:
    - as: test
      cli: latest
      commands: |
        SHOULD_BE_PRESENT="cli cli-artifacts driver-toolkit installer installer-artifacts must-gather oauth-proxy tests tools"
        function exists_in_list() {
          LIST=$1
          DELIMITER=$2
          VALUE=$3
          LIST_WHITESPACES=`echo $LIST | tr "$DELIMITER" " "`
          for x in $LIST_WHITESPACES; do
            if [ "$x" = "$VALUE" ]; then
              return 0
            fi
          done
          return 1
        }

        function check_present_list_is_correct() {
          CURRENT_LIST=("$@")
          for i in "${CURRENT_LIST[@]}";
          do
            if exists_in_list "$SHOULD_BE_PRESENT" " " $i; then
              echo "$i is present, which is expected"
            else
              echo "Should not be present, but we have: $i"
              return 1
            fi
          done
        }

        function assert_empty() {
          KIND="$1"
          NAMES="$(oc -n openshift get -o jsonpath='{.items[*].metadata.name}' "${KIND}")"
          if test -n "${NAMES}"
          then
            echo "${KIND} : ${NAMES} present in the cluster"
            check_present_list_is_correct ${NAMES[@]}
          fi
        }
        assert_empty templates && assert_empty imagestreams
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
- as: e2e-aws-operator
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    test:
    - as: test
      cli: latest
      commands: make test-e2e
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
- as: e2e-aws-builds
  run_if_changed: ^(tmp/build)
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-builds
- as: e2e-aws-proxy
  optional: true
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-proxy
- as: e2e-aws-jenkins
  run_if_changed: ^(tmp/build)
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-jenkins
- as: e2e-aws-image-ecosystem
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws-image-ecosystem
- as: e2e-aws-upgrade
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    workflow: openshift-upgrade-aws
zz_generated_metadata:
  branch: release-4.12
  org: openshift
  repo: cluster-samples-operator
