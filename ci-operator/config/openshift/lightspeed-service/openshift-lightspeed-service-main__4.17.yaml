base_images:
  cli:
    name: "4.17"
    namespace: ocp
    tag: cli
  lightspeed-service-api:
    name: lightspeed-service-api
    namespace: ols
    tag: latest
  upi-installer:
    name: "4.17"
    namespace: ocp
    tag: upi-installer
build_root:
  project_image:
    dockerfile_literal: |
      FROM registry.ci.openshift.org/ocp/ubi-python-311:9
      USER 0
      RUN dnf install -y podman make
releases:
  latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.17"
resources:
  '*':
    limits:
      memory: 8Gi
    requests:
      cpu: 100m
      memory: 4Gi
tests:
- as: e2e-ols-cluster-periodics
  cluster_claim:
    architecture: amd64
    cloud: aws
    labels:
      region: us-east-1
      variant: fips
    owner: obs
    product: ocp
    timeout: 1h0m0s
    version: "4.17"
  cron: 10 4 * * *
  steps:
    allow_skip_on_success: true
    post:
    - ref: gather-must-gather
    test:
    - as: e2e
      cli: latest
      commands: |
        export BAM_PROVIDER_KEY_PATH=/var/run/bam/token
        export AZUREOPENAI_PROVIDER_KEY_PATH=/var/run/azure_openai/token
        export AZUREOPENAI_ENTRA_ID_TENANT_ID=$(cat /var/run/azureopenai-entra-id/tenant_id)
        export AZUREOPENAI_ENTRA_ID_CLIENT_ID=$(cat /var/run/azureopenai-entra-id/client_id)
        export AZUREOPENAI_ENTRA_ID_CLIENT_SECRET=$(cat /var/run/azureopenai-entra-id/client_secret)
        export OPENAI_PROVIDER_KEY_PATH=/var/run/openai/token
        export WATSONX_PROVIDER_KEY_PATH=/var/run/watsonx/token
        export AWS_BUCKET_PATH=/var/run/aws-bucket/aws-bucket
        export AWS_ACCESS_KEY_ID_PATH=/var/run/aws-access-key-id/aws-access-key-id
        export AWS_REGION_PATH=/var/run/aws-region/aws-region
        export AWS_SECRET_ACCESS_KEY_PATH=/var/run/aws-secret-access-key/aws-secret-access-key

        export PROVIDER_KEY_PATH=/var/run/openai/token
        export PROVIDER=openai
        export MODEL=gpt-3.5-turbo-1106

        export CP_OFFLINE_TOKEN=$(cat /var/run/insights-stage-upload-offline-token/token)

        tests/scripts/test-e2e-cluster-periodics.sh
      credentials:
      - collection: ""
        mount_path: /var/run/azure_openai
        name: azureopenai-apitoken
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/azureopenai-entra-id
        name: azureopenai-entra-id
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/bam
        name: bam-apitoken
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/openai
        name: openai-apitoken
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/watsonx
        name: watsonx-apitoken
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/insights-stage-upload-offline-token
        name: insights-stage-upload-offline-token
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/aws-bucket
        name: aws-bucket
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/aws-access-key-id
        name: aws-access-key-id
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/aws-region
        name: aws-region
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/aws-secret-access-key
        name: aws-secret-access-key
        namespace: test-credentials
      dependencies:
      - env: OLS_IMAGE
        name: lightspeed-service-api
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: generic-claim
- as: ols-disconnected-periodics
  cron: 10 8 * * *
  steps:
    allow_skip_on_success: true
    cluster_profile: gcp-observability
    env:
      OPERATORS: |
        [
            {"name": "lightspeed-operator", "source": "cs-redhat-operator-index-v4-17", "channel": "stable", "install_namespace": "openshift-lightspeed", "target_namespaces": "openshift-lightspeed", "operator_group": "openshift-lightspeed"}
        ]
      SELF_MANAGED_ADDITIONAL_CA: "true"
      SELF_MANAGED_REGISTRY_CERT: "true"
    post:
    - ref: gather-must-gather
    test:
    - ref: openshift-lightspeed-service-install-disconnected
    - ref: install-operators
    - as: e2e
      cli: latest
      commands: |
        export SUITE_ID=ollama
        export PROVIDER=ollama
        export MODEL=gemma3:1b
        export DISCONNECTED=true

        make install-deps && make install-deps-test
        export ARTIFACT_DIR="/tmp"
        pdm run pytest tests/e2e -s -k 'test_readiness' --durations=0 -o junit_suite_name="${SUITE_ID}" --junit-prefix="${SUITE_ID}" --junit-xml="${ARTIFACT_DIR}/junit_e2e_${SUITE_ID}.xml" \
        --eval_out_dir ${ARTIFACT_DIR}
      credentials:
      - collection: ""
        mount_path: /var/run/azure_openai
        name: azureopenai-apitoken
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/azureopenai-entra-id
        name: azureopenai-entra-id
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/bam
        name: bam-apitoken
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/openai
        name: openai-apitoken
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/watsonx
        name: watsonx-apitoken
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/insights-stage-upload-offline-token
        name: insights-stage-upload-offline-token
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/aws-bucket
        name: aws-bucket
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/aws-access-key-id
        name: aws-access-key-id
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/aws-region
        name: aws-region
        namespace: test-credentials
      - collection: ""
        mount_path: /var/run/aws-secret-access-key
        name: aws-secret-access-key
        namespace: test-credentials
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: cucushift-installer-rehearse-gcp-ipi-disconnected
zz_generated_metadata:
  branch: main
  org: openshift
  repo: lightspeed-service
  variant: "4.17"
