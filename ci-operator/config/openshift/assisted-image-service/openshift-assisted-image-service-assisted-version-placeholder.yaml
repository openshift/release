base_images:
  assisted-installer:
    name: assisted-version-placeholder
    namespace: edge-infrastructure
    tag: assisted-installer
  assisted-installer-agent:
    name: assisted-version-placeholder
    namespace: edge-infrastructure
    tag: assisted-installer-agent
  assisted-installer-controller:
    name: assisted-version-placeholder
    namespace: edge-infrastructure
    tag: assisted-installer-controller
  assisted-service:
    name: assisted-version-placeholder
    namespace: edge-infrastructure
    tag: assisted-service
  assisted-test-infra:
    name: ocm-version-placeholder
    namespace: edge-infrastructure
    tag: assisted-test-infra
  assisted-test-infra-internal:
    name: ocm-version-placeholder
    namespace: edge-infrastructure
    tag: assisted-test-infra-internal
  dev-scripts:
    name: test
    namespace: ocp-kni
    tag: dev-scripts
  tests:
    name: ocp-version-placeholder
    namespace: ocp
    tag: tests
build_root:
  from_repository: true
images:
- dockerfile_path: Dockerfile.image-service
  to: assisted-image-service
- dockerfile_path: Dockerfile.image-service-build
  to: assisted-image-service-build
promotion:
  to:
  - name: assisted-version-placeholder
    namespace: edge-infrastructure
releases:
  latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.18"
  latest-multi:
    candidate:
      architecture: multi
      product: ocp
      stream: nightly
      version: "4.18"
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: lint
  commands: |
    export GOCACHE=/tmp/
    export GOLANGCI_LINT_CACHE=/tmp/.cache
    export GOPROXY=https://proxy.golang.org
    make lint
  container:
    clone: true
    from: assisted-image-service-build
  skip_if_only_changed: \.md$|^(?:.*/)?(?:\.gitignore|.tekton/.*|OWNERS|OWNERS_ALIASES|LICENSE)$
- as: test
  commands: |
    export GOCACHE=/tmp/gocache
    export GOMODCACHE=/tmp/gomodcache
    export CODECOV_TOKEN=$(cat /tmp/secret/codecov-token)
    make test
  container:
    clone: true
    from: assisted-image-service-build
  secret:
    mount_path: /tmp/secret
    name: assisted-image-service-codecov-token
  skip_if_only_changed: \.md$|^(?:.*/)?(?:\.gitignore|.tekton/.*|OWNERS|OWNERS_ALIASES|LICENSE)$
- as: e2e-metal-assisted
  cluster: build05
  skip_if_only_changed: \.md$|^(?:.*/)?(?:\.gitignore|.tekton/.*|OWNERS|OWNERS_ALIASES|LICENSE)$
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        OPENSHIFT_VERSION=ocp-version-placeholder
    workflow: assisted-ofcir-baremetal
- always_run: false
  as: e2e-metal-assisted-deploy-nodes
  cluster: build05
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        MAKEFILE_TARGET="deploy_nodes"
        OPENSHIFT_VERSION=ocp-version-placeholder
    workflow: assisted-ofcir-baremetal
- always_run: false
  as: e2e-metal-assisted-day2-arm-workers
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ANSIBLE_PLAYBOOK_CREATE_INFRA: equinix_heterogeneous_create_infra_playbook.yml
      ASSISTED_CONFIG: |
        TEST_FUNC=test_deploy_day2_nodes_cloud
        AGENT_DOCKER_IMAGE=quay.io/edge-infrastructure/assisted-installer-agent-multi:latest
        CONTROLLER_IMAGE=quay.io/edge-infrastructure/assisted-installer-controller-multi:latest
        INSTALLER_IMAGE=quay.io/edge-infrastructure/assisted-installer-multi:latest
        DAY2_CPU_ARCHITECTURE=arm64
        OPENSHIFT_VERSION=ocp-version-placeholder-multi
    workflow: assisted-equinix
- always_run: false
  as: e2e-oci-assisted
  optional: true
  steps:
    cluster_profile: oci-assisted
    env:
      ASSISTED_CONFIG: |
        OPENSHIFT_VERSION=ocp-version-placeholder
    workflow: assisted-oci
- always_run: false
  as: e2e-metal-assisted-external
  cluster: build05
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        PLATFORM=external
        OPENSHIFT_VERSION=ocp-version-placeholder
    workflow: assisted-ofcir-baremetal
zz_generated_metadata:
  branch: assisted-version-placeholder
  org: openshift
  repo: assisted-image-service
