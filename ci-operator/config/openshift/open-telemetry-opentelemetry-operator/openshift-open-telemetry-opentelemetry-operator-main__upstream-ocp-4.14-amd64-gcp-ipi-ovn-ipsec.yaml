base_images:
  cli:
    name: "4.14"
    namespace: ocp
    tag: cli
  operator-sdk:
    name: "4.14"
    namespace: origin
    tag: operator-sdk
binary_build_commands: unset GOFLAGS && make manager && make targetallocator && make
  operator-opamp-bridge
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: rhel-8-release-golang-1.22-openshift-4.17
canonical_go_repository: github.com/open-telemetry/opentelemetry-operator
images:
- context_dir: .
  dockerfile_path: Dockerfile
  from: src
  inputs:
    bin:
      paths:
      - destination_dir: ./bin
        source_path: /go/src/github.com/open-telemetry/opentelemetry-operator/bin/manager_amd64
  to: opentelemetry-operator
- context_dir: .
  dockerfile_path: ./tests/e2e-openshift/Dockerfile
  to: opentelemetry-tests-runner
- context_dir: ./tests/test-e2e-apps/bridge-server
  dockerfile_path: Dockerfile
  to: opamp-bridge-server
- context_dir: ./cmd/otel-allocator/
  dockerfile_path: Dockerfile
  from: src
  inputs:
    bin:
      paths:
      - destination_dir: ./bin
        source_path: /go/src/github.com/open-telemetry/opentelemetry-operator/cmd/otel-allocator/bin/targetallocator_amd64
  to: opentelemetry-target-allocator
- context_dir: ./cmd/operator-opamp-bridge/
  dockerfile_path: Dockerfile
  from: src
  inputs:
    bin:
      paths:
      - destination_dir: ./bin
        source_path: /go/src/github.com/open-telemetry/opentelemetry-operator/cmd/operator-opamp-bridge/bin/opampbridge_amd64
  to: opentelemetry-opampbridge
operator:
  bundles:
  - as: opentelemetry-bundle
    context_dir: ./bundle/openshift
    dockerfile_path: bundle.Dockerfile
  substitutions:
  - pullspec: ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator:.*
    with: pipeline:opentelemetry-operator
releases:
  latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.14"
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- always_run: false
  as: opentelemetry-e2e-tests
  steps:
    cluster_profile: gcp-qe
    env:
      COMPUTE_NODE_TYPE: e2-standard-8
      OPERATORS: |
        [
            {"name": "jaeger-product", "source": "redhat-operators", "channel": "stable", "install_namespace": "openshift-distributed-tracing","target_namespaces": "", "operator_group": "openshift-distributed-tracing"},
            {"name": "tempo-product", "source": "redhat-operators", "channel": "stable", "install_namespace": "openshift-tempo-operator", "target_namespaces": "", "operator_group": "openshift-tempo-operator"},
            {"name": "amq-streams", "source": "redhat-operators", "channel": "stable", "install_namespace": "openshift-operators", "target_namespaces": ""},
            {"name": "cluster-observability-operator", "source": "redhat-operators", "channel": "development", "install_namespace": "openshift-operators", "target_namespaces": ""},
            {"name": "cluster-logging", "source": "redhat-operators", "channel": "stable-5.9", "install_namespace": "openshift-logging","target_namespaces": "", "operator_group": "openshift-logging"},
            {"name": "loki-operator", "source": "redhat-operators", "channel": "stable-5.9", "install_namespace": "openshift-operators-redhat","target_namespaces": "", "operator_group": "openshift-operators-redhat"}
        ]
    test:
    - ref: install-operators
    - as: install
      cli: latest
      commands: |
        oc create namespace opentelemetry-operator
        oc label namespace opentelemetry-operator openshift.io/cluster-monitoring="true"
        operator-sdk run bundle --timeout=5m --security-context-config restricted -n opentelemetry-operator "$OO_BUNDLE"
        oc wait --for condition=Available -n opentelemetry-operator deployment opentelemetry-operator-controller-manager
      dependencies:
      - env: OO_BUNDLE
        name: opentelemetry-bundle
      from: operator-sdk
      resources:
        requests:
          cpu: 1000m
          memory: 400Mi
    - ref: distributed-tracing-tests-opentelemetry-upstream
    workflow: cucushift-installer-rehearse-gcp-ipi-ovn-ipsec
zz_generated_metadata:
  branch: main
  org: openshift
  repo: open-telemetry-opentelemetry-operator
  variant: upstream-ocp-4.14-amd64-gcp-ipi-ovn-ipsec
