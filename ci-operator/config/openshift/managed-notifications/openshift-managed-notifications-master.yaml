build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.13
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: validate
  commands: make validate
  container:
    from: src
- as: checklinks-pr
  commands: |
    ARTIFACT_DIR="${ARTIFACTS:-/tmp/artifacts}"
    LOG_FILE="$ARTIFACT_DIR/build-log.log"
    mkdir -p "$ARTIFACT_DIR"
    TEMP_FILE=$(mktemp -p "$ARTIFACT_DIR" broken_links_XXXXXX)
    grep -rEo "(http|https)://[a-zA-Z0-9./?=_-]*" . | sort -u | while IFS= read -r URL; do
        if [ "$(curl -o /dev/null -s -w '%{http_code}' "$URL")" != "200" ]; then
            echo "$URL" >> "$TEMP_FILE"
        fi
    done
    if [ -s "$TEMP_FILE" ]; then
        echo "Broken links detected:" | tee -a "$LOG_FILE"
        cat "$TEMP_FILE" | tee -a "$LOG_FILE"
        exit 1
    else
        echo "No broken links detected." | tee -a "$LOG_FILE"
        exit 0
    fi
  container:
    from: src
- as: checklinks-weekly
  commands: |
    ARTIFACT_DIR="${ARTIFACTS:-/tmp/artifacts}"
    LOG_FILE="$ARTIFACT_DIR/build-log.log"
    mkdir -p "$ARTIFACT_DIR"
    TEMP_FILE=$(mktemp -p "$ARTIFACT_DIR" broken_links_XXXXXX)
    grep -rEo "(http|https)://[a-zA-Z0-9./?=_-]*" . | sort -u | while IFS= read -r URL; do
        if [ "$(curl -o /dev/null -s -w '%{http_code}' "$URL")" != "200" ]; then
            echo "$URL" >> "$TEMP_FILE"
        fi
    done
    if [ -s "$TEMP_FILE" ]; then
        echo "Broken links detected:" | tee -a "$LOG_FILE"
        cat "$TEMP_FILE" | tee -a "$LOG_FILE"
        exit 1
    else
        echo "No broken links detected." | tee -a "$LOG_FILE"
        exit 0
    fi
  container:
    from: src
  cron: '*/15 * * * *'
zz_generated_metadata:
  branch: master
  org: openshift
  repo: managed-notifications
