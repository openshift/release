build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.13
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: validate
  commands: make validate
  container:
    from: src
- as: checklinks-pr
  commands: |
    #!/bin/bash
    REPO_URL="https://github.com/openshift/managed-notifications/"
    EMAIL="sd-docs@redhat.com"
    TEMP_FILE=$(mktemp)

    [[ -d "temp_repo" ]] && rm -rf temp_repo
    git clone "$REPO_URL" temp_repo && cd temp_repo || exit

    grep -rEo "(http|https)://[a-zA-Z0-9./?=_-]*" . | sort -u | while read -r URL; do
        if [ "$(curl -o /dev/null -s -w '%{http_code}' "$URL")" != "200" ]; then
            echo "$URL" >> "$TEMP_FILE"
        fi
    done

    if [ -s "$TEMP_FILE" ]; then
      {
          echo "Subject: Broken Links Detected in Repo $REPO_URL"
          echo "To: $EMAIL"
          echo
          echo "The following links are broken:"
          cat "$TEMP_FILE"
      } > email.txt
      sendmail $EMAIL < email.txt
    else
      echo "No broken links detected."
    fi
    rm -f "$TEMP_FILE"
    rm -rf temp_repo
  container:
    from: src
- as: checklinks-weekly
  commands: |
    #!/bin/bash
    REPO_URL="https://github.com/openshift/managed-notifications/"
    EMAIL="sd-docs@redhat.com"
    TEMP_FILE=$(mktemp)
    [[ -d "temp_repo" ]] && rm -rf temp_repo
    git clone "$REPO_URL" temp_repo && cd temp_repo || exit
    grep -rEo "(http|https)://[a-zA-Z0-9./?=_-]*" . | sort -u | while read -r URL; do
        if [ "$(curl -o /dev/null -s -w '%{http_code}' "$URL")" != "200" ]; then
            echo "$URL" >> "$TEMP_FILE"
        fi
    done
    if [ -s "$TEMP_FILE" ]; then
      {
          echo "Subject: Broken Links Detected in Repo $REPO_URL"
          echo "To: $EMAIL"
          echo
          echo "The following links are broken:"
          cat "$TEMP_FILE"
      } > email.txt
      sendmail $EMAIL < email.txt
    else
      echo "No broken links detected."
    fi
    rm -f "$TEMP_FILE"
    rm -rf temp_repo
  container:
    from: src
  cron: 0 0 * * 0
zz_generated_metadata:
  branch: master
  org: openshift
  repo: managed-notifications
