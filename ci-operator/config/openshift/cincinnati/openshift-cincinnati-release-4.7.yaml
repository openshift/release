base_images:
  openshift_release_golang-1.13:
    name: release
    namespace: openshift
    tag: golang-1.13
  openshift_release_golang-1.15:
    name: release
    namespace: openshift
    tag: golang-1.15
  ubi:
    name: ubi
    namespace: ocp
    tag: "8"
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.15
images:
- dockerfile_literal: |
    FROM ubi
    COPY . /opt/app-root/src/
    WORKDIR /opt/app-root/src/cincinnati
    USER 0
    ENV HOME="/root"
    ENV PATH="${HOME}/.cargo/bin:${HOME}/.local/bin:${PATH}"
    RUN chgrp root /opt/app-root/src/cincinnati && \
        chmod g+w /opt/app-root/src/cincinnati && \
        dnf install -y jq python38 && \
        dnf clean all
    # build: Rust stable toolchain
    RUN curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain 1.50.0 -y && \
      rustup install 1.46.0
    # install yamllint
    RUN pip3 install --user yamllint
    RUN \
      mkdir -p $HOME/.cargo/git/ && \
      find $HOME/. -type d -exec chmod 777 {} \; && \
      find $HOME/. -type f -exec chmod ugo+rw {} \;
    USER 1001
  from: ubi
  inputs:
    src:
      paths:
      - destination_dir: .
        source_path: /go/src/github.com/openshift/cincinnati
  to: src-rust
- dockerfile_path: dist/Dockerfile.rust-toolset/Dockerfile
  to: deploy
- dockerfile_path: dist/Dockerfile.e2e-ubi8/Dockerfile
  inputs:
    openshift_release_golang-1.13:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.13
  to: e2e-test
promotion:
  name: cincinnati-build-root-release-4.7
  namespace: cincinnati-ci
resources:
  '*':
    requests:
      cpu: 1000m
      memory: 1Gi
  cargo-test:
    requests:
      cpu: "3"
      memory: 5Gi
tag_specification:
  name: "4.7"
  namespace: ocp
tests:
- as: cargo-test
  steps:
    pre:
    - as: prepare-credentials
      commands: |
        env CINCINNATI_CI_DOCKERJSON_PATH="${SHARED_DIR}/${CINCINNATI_CI_DOCKERJSON_FILE}" CINCINNATI_CI_PUBLIC_DOCKERJSON_PATH="${SHARED_DIR}/${CINCINNATI_CI_PUBLIC_DOCKERJSON_FILE}" dist/prepare_ci_credentials.sh
      credentials:
      - mount_path: /usr/local/ci-secrets/cincy-credentials
        name: cincy-credentials
        namespace: test-credentials
      - mount_path: /usr/local/ci-secrets/cincy-private-dockercfg
        name: cincy-private-dockercfg
        namespace: test-credentials
      - mount_path: /usr/local/ci-secrets/cincy-public-dockercfg
        name: cincy-public-dockercfg
        namespace: test-credentials
      env:
      - default: /usr/local/ci-secrets/cincy-credentials/registry_credentials_docker.json
        name: CINCINNATI_TEST_CREDENTIALS_PATH
      - default: /usr/local/ci-secrets/cincy-private-dockercfg/.dockercfg
        name: CINCINNATI_CI_DOCKERCFG_PATH
      - default: /usr/local/ci-secrets/cincy-public-dockercfg/.dockercfg
        name: CINCINNATI_CI_PUBLIC_DOCKERCFG_PATH
      - default: ci-image-sa-dockerjson
        name: CINCINNATI_CI_DOCKERJSON_FILE
      - default: public-ci-image-sa-dockerjson
        name: CINCINNATI_CI_PUBLIC_DOCKERJSON_FILE
      from: src-rust
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    test:
    - as: cargo-test
      commands: |
        env CINCINNATI_CI_DOCKERJSON_PATH="${SHARED_DIR}/${CINCINNATI_CI_DOCKERJSON_FILE}" CINCINNATI_TEST_CREDENTIALS_PATH="${SHARED_DIR}/${CINCINNATI_TEST_CREDENTIALS_FILE}" dist/cargo_test.sh
      credentials:
      - mount_path: /usr/local/ci-secrets/cincy-credentials
        name: cincy-credentials
        namespace: test-credentials
      env:
      - default: ci-image-sa-dockerjson
        name: CINCINNATI_CI_DOCKERJSON_FILE
      - default: ci-image-sa-dockerjson
        name: CINCINNATI_TEST_CREDENTIALS_FILE
      - default: /usr/local/ci-secrets/cincy-credentials/quay_api_access_token.key
        name: CINCINNATI_TEST_QUAY_API_TOKEN_PATH
      - default: /usr/local/ci-secrets/cincy-credentials/github_token.key
        name: CINCINNATI_GITHUB_SCRAPER_OAUTH_TOKEN_PATH
      from: src-rust
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
- as: yaml-lint
  commands: dist/prow_yaml_lint.sh
  container:
    from: src-rust
- as: rustfmt-1.50.0
  commands: dist/prow_rustfmt.sh 1.50.0
  container:
    from: src-rust
- as: rustfmt-1.46.0
  commands: dist/prow_rustfmt.sh 1.46.0
  container:
    from: src-rust
- as: e2e
  steps:
    cluster_profile: aws
    test:
    - as: openshift-e2e-test
      commands: bash ./hack/e2e.sh
      from: e2e-test
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: openshift-e2e-aws
zz_generated_metadata:
  branch: release-4.7
  org: openshift
  repo: cincinnati
