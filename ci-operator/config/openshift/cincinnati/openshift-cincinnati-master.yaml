base_images:
  e2e:
    name: rust
    namespace: cincinnati-ci-public
    tag: e2e-test-ubi9
  ubi:
    name: ubi
    namespace: ocp
    tag: "9"
binary_build_commands: bin_folder="/go/bin" just build --release
build_root:
  image_stream_tag:
    name: rust
    namespace: cincinnati-ci-public
    tag: boot-root-1.84.1
images:
- dockerfile_literal: |
    FROM registry.access.redhat.com/ubi9/ubi:latest
    WORKDIR /root
    ENV HOME=/root PATH="/root/.cargo/bin:${PATH}"
    RUN dnf update -y \
        && dnf install -y git gcc openssl-devel \
        && dnf clean all \
        && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y \
        && curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /root/.cargo/bin
    COPY . /root/cincinnati/
    WORKDIR /root/cincinnati
    RUN just build --release
  from: ubi
  to: rustup-build
- dockerfile_literal: |
    FROM registry.access.redhat.com/ubi9/ubi:latest
    ENV RUST_LOG=actix_web=error,dkregistry=error
    COPY --from=pipeline:bin /go/bin/graph-builder /go/bin/policy-engine /go/bin/metadata-helper /usr/bin/
    ENTRYPOINT ["/usr/bin/graph-builder"]
  from: ubi
  inputs:
    bin:
      as:
      - pipeline:bin
  to: deploy
- dockerfile_path: dist/Dockerfile.deploy/Dockerfile
  to: downstream-deploy
- dockerfile_literal: |
    FROM registry.ci.openshift.org/cincinnati-ci-public/rust:e2e-test-ubi9
    ENV HOME="/root"
    WORKDIR "${HOME}/cincinnati"
    COPY --from=pipeline:test-bin /opt/cincinnati/bin/e2e /usr/bin/cincinnati-e2e-test
    COPY --from=pipeline:test-bin /opt/cincinnati/bin/prometheus_query /usr/bin/cincinnati-prometheus_query-test
    COPY --from=pipeline:test-bin /opt/cincinnati/bin/slo /usr/bin/cincinnati-e2e-slo
    COPY Justfile Justfile
    COPY hack/e2e.sh hack/vegeta.targets hack/
    COPY dist/openshift/cincinnati-deployment.yaml \
         dist/openshift/cincinnati-e2e.yaml \
         dist/openshift/observability.yaml \
         dist/openshift/load-testing.yaml \
         dist/openshift/
    COPY e2e/tests/testdata e2e/tests/testdata
    COPY dist/prepare_ci_credentials.sh dist/cargo_test.sh dist/
    ENV E2E_TESTDATA_DIR "e2e/tests/testdata"
    ENTRYPOINT ["hack/e2e.sh"]
  from: e2e
  inputs:
    test-bin:
      as:
      - pipeline:test-bin
  to: e2e-test
promotion:
  to:
  - excluded_images:
    - rustup-build
    - downstream-deploy
    name: cincinnati-build-root
    namespace: cincinnati-ci
resources:
  '*':
    requests:
      cpu: 1000m
      memory: 1Gi
  cargo-test:
    requests:
      cpu: "3"
      memory: 5Gi
test_binary_build_commands: just build_e2e
tests:
- as: cargo-test
  steps:
    pre:
    - as: prepare-credentials
      commands: |
        env CINCINNATI_CI_DOCKERJSON_PATH="${SHARED_DIR}/${CINCINNATI_CI_DOCKERJSON_FILE}" CINCINNATI_CI_PUBLIC_DOCKERJSON_PATH="${SHARED_DIR}/${CINCINNATI_CI_PUBLIC_DOCKERJSON_FILE}" just prepare_ci_credentials
      credentials:
      - collection: ""
        mount_path: /usr/local/ci-secrets/cincy-credentials
        name: cincy-credentials
        namespace: test-credentials
      - collection: ""
        mount_path: /usr/local/ci-secrets/cincy-private-dockercfg
        name: cincy-private-dockercfg
        namespace: test-credentials
      - collection: ""
        mount_path: /usr/local/ci-secrets/cincy-public-dockercfg
        name: cincy-public-dockercfg
        namespace: test-credentials
      env:
      - default: /usr/local/ci-secrets/cincy-credentials/registry_credentials_docker.json
        name: CINCINNATI_TEST_CREDENTIALS_PATH
      - default: /usr/local/ci-secrets/cincy-private-dockercfg/.dockercfg
        name: CINCINNATI_CI_DOCKERCFG_PATH
      - default: /usr/local/ci-secrets/cincy-public-dockercfg/.dockercfg
        name: CINCINNATI_CI_PUBLIC_DOCKERCFG_PATH
      - default: ci-image-sa-dockerjson
        name: CINCINNATI_CI_DOCKERJSON_FILE
      - default: public-ci-image-sa-dockerjson
        name: CINCINNATI_CI_PUBLIC_DOCKERJSON_FILE
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    test:
    - as: cargo-test
      commands: |
        env CINCINNATI_CI_DOCKERJSON_PATH="${SHARED_DIR}/${CINCINNATI_CI_DOCKERJSON_FILE}" CINCINNATI_TEST_CREDENTIALS_PATH="${SHARED_DIR}/${CINCINNATI_TEST_CREDENTIALS_FILE}" just cargo_test
      credentials:
      - collection: ""
        mount_path: /usr/local/ci-secrets/cincy-credentials
        name: cincy-credentials
        namespace: test-credentials
      env:
      - default: ci-image-sa-dockerjson
        name: CINCINNATI_CI_DOCKERJSON_FILE
      - default: ci-image-sa-dockerjson
        name: CINCINNATI_TEST_CREDENTIALS_FILE
      - default: /usr/local/ci-secrets/cincy-credentials/quay_api_access_token.key
        name: CINCINNATI_TEST_QUAY_API_TOKEN_PATH
      - default: /usr/local/ci-secrets/cincy-credentials/github_token.key
        name: CINCINNATI_GITHUB_SCRAPER_OAUTH_TOKEN_PATH
      from: src
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
- as: yaml-lint
  commands: just yamllint
  container:
    from: src
- as: rustfmt
  commands: just format
  container:
    from: src
- as: e2e
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.17"
  steps:
    test:
    - as: openshift-e2e-test
      commands: just run_e2e
      dependencies:
      - env: CINCINNATI_IMAGE
        name: deploy
      from: e2e-test
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: generic-claim
zz_generated_metadata:
  branch: master
  org: openshift
  repo: cincinnati
