base_images:
  assisted-installer:
    name: ocm-2.3
    namespace: openshift
    tag: assisted-installer
  assisted-installer-agent:
    name: ocm-2.3
    namespace: openshift
    tag: assisted-installer-agent
  assisted-installer-controller:
    name: ocm-2.3
    namespace: openshift
    tag: assisted-installer-controller
  assisted-service-scripts:
    name: assisted
    namespace: ocp-kni
    tag: assisted-service-scripts
  coreos_centos:
    name: coreos-centos8-buildroot
    namespace: coreos
    tag: latest
  dev-scripts:
    name: test
    namespace: ocp-kni
    tag: dev-scripts
  openshift_release_golang-1.15:
    name: release
    namespace: openshift
    tag: golang-1.15
  postgresql-12-centos7:
    name: postgresql-12-centos7
    namespace: ocp-kni
    tag: latest
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.16
images:
- dockerfile_path: Dockerfile.assisted-service
  from: coreos_centos
  inputs:
    openshift_release_golang-1.15:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.15
  to: assisted-service
operator:
  bundles:
  - dockerfile_path: deploy/olm-catalog/bundle.Dockerfile
  substitutions:
  - pullspec: quay.io/ocpmetal/assisted-service:ocm-2.3
    with: assisted-service
  - pullspec: quay.io/ocpmetal/assisted-installer:ocm-2.3
    with: assisted-installer
  - pullspec: quay.io/ocpmetal/assisted-installer-agent:ocm-2.3
    with: assisted-installer-agent
  - pullspec: quay.io/ocpmetal/assisted-installer-controller:ocm-2.3
    with: assisted-installer-controller
  - pullspec: quay.io/ocpmetal/postgresql-12-centos7:latest
    with: postgresql-12-centos7
promotion:
  name: ocm-2.3
  namespace: openshift
releases:
  candidate:
    release:
      channel: candidate
      version: "4.8"
  initial:
    integration:
      name: "4.8"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.8"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
test_binary_build_commands: |
  make build-openshift-ci-test-bin
  go mod vendor
  mkdir /.cache && chmod 775 -R /.cache && chmod 775 -R $GOPATH
tests:
- as: lint
  commands: export GOLANGCI_LINT_CACHE=/tmp/.cache && export GOPROXY=https://proxy.golang.org
    && make lint
  container:
    from: test-bin
- as: subsystem-aws
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.8"
  run_if_changed: ^(cmd/.*|deploy/.*|hack/.*|internal/.*|pkg/.*|tools/.*|subsystem/.*|Dockerfile\..*|Makefile|go\.mod|go\.sum|swagger.yaml)$
  steps:
    test:
    - as: subsystem-deploy-and-run
      cli: latest
      commands: |
        export BUILD_TYPE=CI
        export REPORTS=${ARTIFACT_DIR}
        export TARGET=oc

        make deploy-on-openshift-ci
        make test
      dependencies:
      - env: SERVICE
        name: assisted-service
      from: test-bin
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: generic-claim
- as: subsystem-kubeapi-aws
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.8"
  run_if_changed: ^(cmd/.*|deploy/.*|hack/.*|internal/.*|pkg/.*|tools/.*|subsystem/.*|Dockerfile\..*|Makefile|go\.mod|go\.sum|swagger.yaml)$
  steps:
    test:
    - as: subsystem-deploy-and-run
      cli: latest
      commands: |
        export BUILD_TYPE=CI
        export REPORTS=${ARTIFACT_DIR}
        export TARGET=oc
        export GENERATE_CRD=false

        make deploy-on-openshift-ci
        make enable-kube-api-for-subsystem
        make test-kube-api
      dependencies:
      - env: SERVICE
        name: assisted-service
      from: test-bin
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: generic-claim
- as: e2e-metal-assisted-operator-disconnected
  optional: true
  run_if_changed: ^(cmd/.*|deploy/.*|hack/.*|internal/.*|pkg/.*|tools/.*|Dockerfile\..*|Makefile|go\.mod|go\.sum|swagger.yaml)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:candidate
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:candidate
    env:
      DEVSCRIPTS_CONFIG: |
        EXTRA_WORKER_VCPU=8
        EXTRA_WORKER_MEMORY=32768
        EXTRA_WORKER_DISK=120
        PROVISIONING_NETWORK_PROFILE=Disabled
        REDFISH_EMULATOR_IGNORE_BOOT_DEVICE=True
      DISCONNECTED: "true"
      NUM_EXTRA_WORKERS: "1"
    workflow: baremetalds-assisted-operator-ztp
- as: e2e-metal-assisted-operator-ztp
  run_if_changed: ^(cmd/.*|deploy/.*|hack/.*|internal/.*|pkg/.*|tools/.*|Dockerfile\..*|Makefile|go\.mod|go\.sum|swagger.yaml)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:candidate
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:candidate
    env:
      DEVSCRIPTS_CONFIG: |
        EXTRA_WORKER_VCPU=8
        EXTRA_WORKER_MEMORY=32768
        EXTRA_WORKER_DISK=120
        PROVISIONING_NETWORK_PROFILE=Disabled
        REDFISH_EMULATOR_IGNORE_BOOT_DEVICE=True
      DISCONNECTED: "false"
      IP_STACK: v4
      NUM_EXTRA_WORKERS: "1"
    workflow: baremetalds-assisted-operator-ztp
- as: e2e-metal-assisted-operator-ztp-periodic
  cron: 0 0 */2 * *
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:candidate
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:candidate
    env:
      DEVSCRIPTS_CONFIG: |
        EXTRA_WORKER_VCPU=8
        EXTRA_WORKER_MEMORY=32768
        EXTRA_WORKER_DISK=120
        PROVISIONING_NETWORK_PROFILE=Disabled
        REDFISH_EMULATOR_IGNORE_BOOT_DEVICE=True
      DISCONNECTED: "false"
      IP_STACK: v4
      NUM_EXTRA_WORKERS: "1"
    workflow: baremetalds-assisted-operator-ztp
zz_generated_metadata:
  branch: ocm-2.3
  org: openshift
  repo: assisted-service
