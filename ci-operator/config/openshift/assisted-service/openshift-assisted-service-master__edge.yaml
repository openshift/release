base_images:
  assisted-image-service:
    name: ocm-2.6
    namespace: edge-infrastructure
    tag: assisted-image-service
  assisted-installer:
    name: ocm-2.6
    namespace: edge-infrastructure
    tag: assisted-installer
  assisted-installer-agent:
    name: ocm-2.6
    namespace: edge-infrastructure
    tag: assisted-installer-agent
  assisted-installer-controller:
    name: ocm-2.6
    namespace: edge-infrastructure
    tag: assisted-installer-controller
  assisted-test-infra:
    name: ocm-2.6
    namespace: edge-infrastructure
    tag: assisted-test-infra
  cli:
    name: "4.11"
    namespace: ocp
    tag: cli
  cluster-api-provider-agent:
    name: ocm-2.6
    namespace: edge-infrastructure
    tag: cluster-api-provider-agent
  coreos_centos_stream8:
    name: stream8
    namespace: coreos
    tag: "8"
  coreos_centos_stream9:
    name: stream9
    namespace: coreos
    tag: "9"
  dev-scripts:
    name: test
    namespace: ocp-kni
    tag: dev-scripts
  edge_infrastructure_swagger_codegen_cli:
    name: edge-infrastructure-swagger-codegen-cli
    namespace: ci
    tag: 2.4.18
  golangci-lint:
    name: golangci-lint
    namespace: ci
    tag: v1.37.1
  goswagger_swagger:
    name: goswagger-swagger
    namespace: ci
    tag: v0.28.0
  hypershift-operator:
    name: "4.11"
    namespace: ocp
    tag: hypershift-operator
  openshift_release_golang-1.17:
    name: release
    namespace: openshift
    tag: golang-1.17
  postgresql-12-centos7:
    name: postgresql-12-centos7
    namespace: edge-infrastructure
    tag: latest
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.17
images:
- dockerfile_literal: |
    FROM quay.io/centos/centos:stream9
    RUN dnf install -y 'dnf-command(config-manager)' && \
        dnf config-manager --set-enabled crb && \
        dnf install -y git unzip make gcc which
    COPY --from=registry.ci.openshift.org/openshift/release:golang-1.17 /usr/local/go /usr/local/go
    ENV GOPATH=/go
    ENV GOROOT=/usr/local/go
    ENV PATH=$PATH:$GOROOT/bin:$GOPATH/bin
    COPY . /assisted-service/
    WORKDIR /assisted-service/
    ENV CGO_CFLAGS="-g -O2 -Wno-return-local-addr"
    RUN go mod vendor
    RUN chmod 775 -R $GOPATH && chmod 775 -R $(go env GOROOT) && chmod 775 -R /assisted-service/ && \
        mkdir /.cache && chmod 775 -R /.cache
  inputs:
    coreos_centos_stream9:
      as:
      - quay.io/centos/centos:stream9
    openshift_release_golang-1.17:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.17
  to: assisted-service-centos9
- dockerfile_literal: |
    FROM base
    RUN dnf install -y postgresql-server
    RUN cd / && /assisted-service/hack/setup_env.sh test_tools
  from: assisted-service-centos9
  to: assisted-service-unit-test
- dockerfile_literal: |
    FROM base
    COPY --from=quay.io/app-sre/golangci-lint:v1.37.1 /usr/bin/golangci-lint /usr/bin/golangci-lint
  from: assisted-service-centos9
  inputs:
    golangci-lint:
      as:
      - quay.io/app-sre/golangci-lint:v1.37.1
  to: assisted-service-lint
- dockerfile_literal: |
    FROM base
    COPY --from=quay.io/openshift/origin-cli:latest /usr/bin/oc /usr/bin
    RUN ln -s /usr/bin/oc /usr/bin/kubectl
    RUN make build-openshift-ci-test-bin
    RUN go mod vendor
  from: assisted-service-centos9
  inputs:
    cli:
      as:
      - quay.io/openshift/origin-cli:latest
  to: assisted-service-subsystem
- dockerfile_literal: |
    FROM base
    ENV VIRTUAL_ENV=/opt/venv
    ENV PATH="$VIRTUAL_ENV/bin:$PATH"
    COPY --from=quay.io/goswagger/swagger:v0.28.0 /usr/bin/swagger /usr/bin/goswagger
    RUN cd / && /assisted-service/hack/setup_env.sh spectral && \
        /assisted-service/hack/setup_env.sh jq && \
        /assisted-service/hack/setup_env.sh kustomize && \
        go install github.com/golang/mock/mockgen@v1.5.0 && \
        go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.6.2 && \
        go install golang.org/x/tools/cmd/goimports@v0.1.5 && \
        chmod 775 -R $GOPATH
    RUN curl --retry 5 -L https://github.com/operator-framework/operator-sdk/releases/download/v1.10.1/operator-sdk_linux_amd64 --output /tmp/operator-sdk_linux_amd64 && \
        chmod +x /tmp/operator-sdk_linux_amd64 && \
        install /tmp/operator-sdk_linux_amd64 /usr/local/bin/operator-sdk
    RUN python3 -m venv ${VIRTUAL_ENV} && \
        python3 -m pip install --upgrade pip && \
        python3 -m pip install -r /assisted-service/dev-requirements.txt
  from: assisted-service-centos9
  inputs:
    goswagger_swagger:
      as:
      - quay.io/goswagger/swagger:v0.28.0
  to: assisted-service-generate
- dockerfile_path: Dockerfile.assisted-service-build
  inputs:
    edge_infrastructure_swagger_codegen_cli:
      as:
      - quay.io/edge-infrastructure/swagger-codegen-cli:2.4.18
    goswagger_swagger:
      as:
      - quay.io/goswagger/swagger:v0.28.0
    openshift_release_golang-1.17:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.17
    postgresql-12-centos7:
      as:
      - quay.io/centos7/postgresql-12-centos7:latest
  to: assisted-service-build
- dockerfile_path: Dockerfile.assisted-service
  inputs:
    coreos_centos_stream8:
      as:
      - quay.io/centos/centos:stream8
    openshift_release_golang-1.17:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.17
  to: assisted-service
- dockerfile_literal: |
    FROM coreos/centos
    COPY . .
  from: src
  to: assisted-service-scripts
- dockerfile_literal: |
    FROM coreos/centos
    RUN yum install -y skopeo
  from: src
  to: assisted-service-publish-index
operator:
  bundles:
  - dockerfile_path: deploy/olm-catalog/bundle.Dockerfile
  substitutions:
  - pullspec: quay.io/edge-infrastructure/assisted-service:latest
    with: assisted-service
  - pullspec: quay.io/edge-infrastructure/assisted-installer:latest
    with: assisted-installer
  - pullspec: quay.io/edge-infrastructure/assisted-installer-agent:latest
    with: assisted-installer-agent
  - pullspec: quay.io/edge-infrastructure/assisted-installer-controller:latest
    with: assisted-installer-controller
  - pullspec: quay.io/edge-infrastructure/assisted-image-service:latest
    with: assisted-image-service
  - pullspec: quay.io/centos7/postgresql-12-centos7:latest
    with: postgresql-12-centos7
promotion:
  additional_images:
    assisted-service-operator-index: ci-index
    assisted-service-scripts: assisted-service-scripts
  name: ocm-2.6
  namespace: edge-infrastructure
releases:
  candidate-4-11:
    candidate:
      product: ocp
      stream: nightly
      version: "4.11"
  candidate-4-11-multi:
    candidate:
      architecture: multi
      product: ocp
      stream: nightly
      version: "4.11"
  latest:
    integration:
      include_built_images: true
      name: "4.10"
      namespace: ocp
  stable-4-9:
    integration:
      name: "4.9"
      namespace: ocp
  stable-4-10:
    integration:
      name: "4.10"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: verify-generated-code
  skip_if_only_changed: ^docs/|^sites/|\.md$|^(LICENSE|OWNERS|OWNER_ALIASES)$
  steps:
    test:
    - ref: assisted-verify-generated-code
- as: verify-generated-code-postsubmit
  postsubmit: true
  steps:
    test:
    - ref: assisted-verify-generated-code
- as: publish-python-client
  postsubmit: true
  steps:
    test:
    - ref: assisted-publish-python-client
- as: mirror-nightly-image
  cron: '@daily'
  steps:
    dependencies:
      SOURCE_IMAGE_REF: assisted-service
    test:
    - ref: assisted-baremetal-images-publish
- as: mirror-vcsref-image
  postsubmit: true
  steps:
    dependencies:
      SOURCE_IMAGE_REF: assisted-service
    test:
    - ref: assisted-baremetal-images-publish
- as: push-pr-image
  optional: true
  steps:
    dependencies:
      SOURCE_IMAGE_REF: assisted-service
    test:
    - ref: assisted-baremetal-images-publish
- as: operator-publish
  postsubmit: true
  steps:
    test:
    - ref: assisted-baremetal-operator-publish
- as: lint
  commands: |
    export GOCACHE=/tmp/
    export GOLANGCI_LINT_CACHE=/tmp/.cache
    export GOPROXY=https://proxy.golang.org
    make lint
  container:
    from: assisted-service-lint
  skip_if_only_changed: ^docs/|^sites/|\.md$|^(LICENSE|OWNERS|OWNER_ALIASES)$
- as: unit-test
  commands: |
    export REPORTS=/tmp/reports
    export CODECOV_TOKEN=$(cat /tmp/secret/codecov-token)
    export GINKGO_REPORTFILE=${ARTIFACT_DIR}/junit_unit_test.xml
    make ci-unit-test
  container:
    from: assisted-service-unit-test
  secret:
    mount_path: /tmp/secret
    name: assisted-service-codecov-token
  skip_if_only_changed: ^docs/|^sites/|\.md$|^(LICENSE|OWNERS|OWNER_ALIASES)$
- as: unit-test-postsubmit
  commands: |
    export REPORTS=/tmp/reports
    export CODECOV_TOKEN=$(cat /tmp/secret/codecov-token)
    export GINKGO_REPORTFILE=${ARTIFACT_DIR}/junit_unit_test.xml
    make ci-unit-test
  container:
    from: assisted-service-unit-test
  postsubmit: true
  secret:
    mount_path: /tmp/secret
    name: assisted-service-codecov-token
- as: subsystem-aws
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.10"
  run_if_changed: ^(cmd/.*|deploy/.*|hack/.*|internal/.*|pkg/.*|tools/.*|subsystem/.*|Dockerfile\..*|Makefile|go\.mod|go\.sum|swagger.yaml)$
  steps:
    allow_best_effort_post_steps: true
    test:
    - as: subsystem-deploy-and-run
      cli: latest
      commands: |
        export BUILD_TYPE=CI
        export REPORTS=${ARTIFACT_DIR}
        export TARGET=oc
        export PERSISTENT_STORAGE="False"
        export GENERATE_CRD='false'
        unset GOFLAGS
        make ci-deploy-for-subsystem
        oc get pods
        make test
      dependencies:
      - env: SERVICE
        name: assisted-service
      from: assisted-service-subsystem
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: generic-claim
- as: subsystem-aws-periodic
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.10"
  cron: 0 */6 * * *
  steps:
    allow_best_effort_post_steps: true
    test:
    - as: subsystem-deploy-and-run
      cli: latest
      commands: |
        export BUILD_TYPE=CI
        export REPORTS=${ARTIFACT_DIR}
        export TARGET=oc
        export PERSISTENT_STORAGE="False"
        export GENERATE_CRD='false'
        unset GOFLAGS
        make ci-deploy-for-subsystem
        oc get pods
        make test
      dependencies:
      - env: SERVICE
        name: assisted-service
      from: assisted-service-subsystem
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: generic-claim
- as: subsystem-kubeapi-aws
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.10"
  run_if_changed: ^(cmd/.*|deploy/.*|hack/.*|internal/.*|pkg/.*|tools/.*|subsystem/.*|Dockerfile\..*|Makefile|go\.mod|go\.sum|swagger.yaml)$
  steps:
    allow_best_effort_post_steps: true
    test:
    - as: subsystem-deploy-and-run
      cli: latest
      commands: |
        export BUILD_TYPE=CI
        export REPORTS=${ARTIFACT_DIR}
        export TARGET=oc
        export PERSISTENT_STORAGE="False"
        export GENERATE_CRD='false'
        unset GOFLAGS
        make ci-deploy-for-subsystem
        oc get pods
        make enable-kube-api-for-subsystem
        make test-kube-api
      dependencies:
      - env: SERVICE
        name: assisted-service
      from: assisted-service-subsystem
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: generic-claim
- as: subsystem-kubeapi-aws-periodic
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.10"
  cron: 0 */6 * * *
  steps:
    allow_best_effort_post_steps: true
    test:
    - as: subsystem-deploy-and-run
      cli: latest
      commands: |
        export BUILD_TYPE=CI
        export REPORTS=${ARTIFACT_DIR}
        export TARGET=oc
        export PERSISTENT_STORAGE="False"
        export GENERATE_CRD='false'
        unset GOFLAGS
        make ci-deploy-for-subsystem
        oc get pods
        make enable-kube-api-for-subsystem
        make test-kube-api
      dependencies:
      - env: SERVICE
        name: assisted-service
      from: assisted-service-subsystem
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
    workflow: generic-claim
- as: e2e-ai-operator-ztp
  run_if_changed: ^(cmd/.*|data/.*|deploy/operator/.*|hack/.*|internal/.*|pkg/.*|tools/.*|Dockerfile\..*|Makefile|go\.mod|go\.sum|swagger.yaml)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-periodic
  cron: '@daily'
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-3masters
  optional: true
  run_if_changed: ^(deploy/operator/.*)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=3
      NUM_EXTRA_WORKERS: "3"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-3masters-periodic
  cron: '@daily'
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=3
      NUM_EXTRA_WORKERS: "3"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-disconnected
  optional: true
  run_if_changed: ^(deploy/operator/.*)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      DISCONNECTED: "true"
      IP_STACK: v6
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-disconnected-periodic
  cron: '@daily'
  steps:
    cluster_profile: packet-assisted
    env:
      DISCONNECTED: "true"
      IP_STACK: v6
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-sno-day2-workers
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=1
        NUMBER_OF_DAY2_HOSTS=1
      NUM_EXTRA_WORKERS: "2"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-sno-day2-workers-periodic
  cron: '@daily'
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=1
        NUMBER_OF_DAY2_HOSTS=1
      NUM_EXTRA_WORKERS: "2"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-sno-day2-workers-late-binding
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=1
        NUMBER_OF_DAY2_HOSTS=1
        DAY2_LATE_BINDING=True
      NUM_EXTRA_WORKERS: "2"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-sno-day2-workers-late-binding-periodic
  cron: '@daily'
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=1
        NUMBER_OF_DAY2_HOSTS=1
        DAY2_LATE_BINDING=True
      NUM_EXTRA_WORKERS: "2"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-capi
  optional: true
  run_if_changed: ^(deploy/operator/.*)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      HYPERSHIFT_IMAGE: hypershift-operator
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      PROVIDER_IMAGE: cluster-api-provider-agent
    workflow: assisted-baremetal-operator-capi
- as: e2e-ai-operator-ztp-ipv4v6-sno-ocp-49
  optional: true
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:stable-4-9
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      IP_STACK: v4v6
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-ipv4v6-sno-ocp-410
  optional: true
  run_if_changed: ^(deploy/operator/.*)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:stable-4-10
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      IP_STACK: v4v6
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-ipv4v6-sno-ocp-410-periodic
  cron: '@daily'
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:stable-4-10
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      IP_STACK: v4v6
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-ipv4v6-3masters-ocp-49
  optional: true
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:stable-4-9
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=3
      IP_STACK: v4v6
      NUM_EXTRA_WORKERS: "3"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-ipv4v6-3masters-ocp-410
  optional: true
  run_if_changed: ^(deploy/operator/.*)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:stable-4-10
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=3
      IP_STACK: v4v6
      NUM_EXTRA_WORKERS: "3"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-ipv4v6-3masters-ocp-410-periodic
  cron: '@daily'
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:stable-4-10
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=3
      IP_STACK: v4v6
      NUM_EXTRA_WORKERS: "3"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-converged
  run_if_changed: ^(deploy/operator/.*)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:candidate-4-11
    env:
      ALLOW_CONVERGED_FLOW: "True"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-converged-periodic
  cron: '@daily'
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:candidate-4-11
    env:
      ALLOW_CONVERGED_FLOW: "True"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-multiarch-3masters-ocp-411
  optional: true
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:candidate-4-11-multi
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=3
      NUM_EXTRA_WORKERS: "3"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-ai-operator-ztp-multiarch-sno-ocp-411
  optional: true
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:candidate-4-11-multi
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      ASSISTED_ZTP_CONFIG: |
        SPOKE_CONTROLPLANE_AGENTS=1
      NUM_EXTRA_WORKERS: "1"
    workflow: assisted-baremetal-operator-ztp
- as: e2e-metal-assisted-tpmv2
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        DISK_ENCRYPTION_ROLES=all
        DISK_ENCRYPTION_MODE=tpmv2
    workflow: assisted-baremetal
- as: e2e-metal-assisted-tang
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        DISK_ENCRYPTION_ROLES=all
        DISK_ENCRYPTION_MODE=tang
    workflow: assisted-baremetal
- as: e2e-metal-assisted-ipv6
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        IPv6=yes
        IPv4=no
    workflow: assisted-baremetal
- as: e2e-metal-assisted-ipv4v6
  optional: true
  run_if_changed: ^(data/.*)$
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        IPv6=yes
        IPv4=yes
    workflow: assisted-baremetal
- as: e2e-metal-assisted-none
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        PLATFORM=none
    workflow: assisted-baremetal
- as: e2e-metal-assisted-single-node
  optional: true
  run_if_changed: ^(data/.*)$
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        NUM_MASTERS=1
    workflow: assisted-baremetal
- as: e2e-metal-assisted-static-ip-suite
  optional: true
  run_if_changed: ^(data/.*)$
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        STATIC_IPS=true
        TEST_FUNC=test_networking
    workflow: assisted-baremetal
- as: e2e-metal-assisted-kube-api-net-suite
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        KUBE_API=true
        ENABLE_KUBE_API=true
        NUM_MASTERS=1
        ISO_IMAGE_TYPE=minimal-iso
        STATIC_IPS=true
        TEST_FUNC=test_kubeapi
        MAKEFILE_TARGET="setup run test_kube_api_parallel"
    workflow: assisted-baremetal
- as: e2e-metal-assisted
  run_if_changed: ^(cmd/.*|data/.*|deploy/.*|hack/.*|internal/.*|pkg/.*|tools/.*|Dockerfile\..*|Makefile|go\.mod|go\.sum|swagger.yaml)$
  steps:
    cluster_profile: packet-assisted
    workflow: assisted-baremetal
- as: e2e-metal-assisted-onprem
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        DEPLOY_TARGET=onprem
    workflow: assisted-baremetal
- as: e2e-metal-assisted-4-8
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        OPENSHIFT_VERSION=4.8
    workflow: assisted-baremetal
- as: e2e-metal-assisted-4-9
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        OPENSHIFT_VERSION=4.9
    workflow: assisted-baremetal
- as: e2e-metal-assisted-4-10
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        OPENSHIFT_VERSION=4.10
    workflow: assisted-baremetal
- as: e2e-metal-assisted-4-11
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        OPENSHIFT_VERSION=4.11
    workflow: assisted-baremetal
- as: e2e-metal-assisted-cnv
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        OLM_OPERATORS=cnv
    workflow: assisted-baremetal
- as: e2e-metal-assisted-odf
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        OLM_OPERATORS=odf
    workflow: assisted-baremetal
- as: e2e-metal-assisted-ocs
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        OLM_OPERATORS=ocs
        OPENSHIFT_VERSION=4.8
    workflow: assisted-baremetal
- as: e2e-metal-assisted-day2
  optional: true
  run_if_changed: ^(data/.*)$
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        TEST_FUNC=test_deploy_day2_nodes_cloud
    workflow: assisted-baremetal
- as: e2e-metal-assisted-day2-single-node
  optional: true
  run_if_changed: ^(data/.*)$
  steps:
    cluster_profile: packet-assisted
    env:
      ASSISTED_CONFIG: |
        OPENSHIFT_VERSION=4.11
        NUM_MASTERS=1
        NUM_WORKERS=0
        TEST_FUNC=test_deploy_day2_nodes_cloud
    workflow: assisted-baremetal
- as: e2e-metal-assisted-kube-api-late-binding-single-node-periodic
  cron: '@daily'
  steps:
    cluster_profile: packet-assisted
    env:
      POST_INSTALL_COMMANDS: |
        export TEST_FUNC=test_late_binding_kube_api_sno
        export KUBECONFIG=$(find ${KUBECONFIG} -type f)
        make deploy_assisted_operator test_kube_api_parallel
      TEST_SUITE: full
    workflow: assisted-baremetal
- as: e2e-metal-assisted-kube-api-late-binding-single-node
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      POST_INSTALL_COMMANDS: |
        export TEST_FUNC=test_late_binding_kube_api_sno
        export KUBECONFIG=$(find ${KUBECONFIG} -type f)
        make deploy_assisted_operator test_kube_api_parallel
    workflow: assisted-baremetal
- as: e2e-metal-assisted-kube-api-late-unbinding-ipv4-single-node
  optional: true
  steps:
    cluster_profile: packet-assisted
    env:
      POST_INSTALL_COMMANDS: |
        export TEST_FUNC=test_late_binding_kube_api_sno
        export HOLD_INSTALLATION=true
        export KUBECONFIG=$(find ${KUBECONFIG} -type f)
        make deploy_assisted_operator test_kube_api_parallel
    workflow: assisted-baremetal
- as: e2e-metal-assisted-capi
  optional: true
  run_if_changed: ^(api/.*|internal/controller/controllers/.*)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      HYPERSHIFT_IMAGE: hypershift-operator
      PROVIDER_IMAGE: cluster-api-provider-agent
    env:
      ASSISTED_CONFIG: |
        KUBE_API=yes
        ENABLE_KUBE_API=true
        MINIKUBE_DISK_SIZE=70g
        MINIKUBE_RAM_MB=12000
        TEST_FUNC=test_capi_provider
        MAKEFILE_TARGET="setup run deploy_capi_env test_kube_api_parallel"
      GATHER_CAPI_LOGS: "true"
    workflow: assisted-baremetal
- as: operator-catalog-publish-to-quay
  postsubmit: true
  steps:
    test:
    - ref: assisted-baremetal-operator-catalog-publish
zz_generated_metadata:
  branch: master
  org: openshift
  repo: assisted-service
  variant: edge
