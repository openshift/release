binary_build_commands: ./build.sh
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: tectonic-console-builder-v23
images:
  - dockerfile_literal: |
      ARG NODE_VERSION='16.19.1'
      ARG CHROME_VERSION='110.0.5481.177-1'

      FROM cypress/factory

      ENV OC_DOWNLOAD_URL="https://downloads-openshift-console.apps.hac-devsandbox.5unc.p1.openshiftapps.com/amd64/linux/oc.tar" \
          CYPRESS_CACHE_FOLDER="/tmp/.cache"

      RUN apt update && \
          apt install jq python3 python3-venv xauth skopeo -y && \
          curl -L -o /tmp/oc.tar ${OC_DOWNLOAD_URL} && \
          tar -xf /tmp/oc.tar -C /usr/bin

      RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
          install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      USER node:0

      COPY --chown=node:root --chmod=775 integration-tests /tmp/e2e
      RUN chmod -R 775 /tmp/e2e
      # RUN chgrp -R 0 /tmp/e2e && \
          # chmod -R g+rwX /tmp/e2e

      RUN cd /tmp/e2e && \
          umask 0002 && \
          npm i && \
          node_modules/.bin/cypress install && \
          mkdir -p /tmp/artifacts && \
          chmod -R a+rwx /tmp/artifacts ${CYPRESS_CACHE_FOLDER}

      WORKDIR /tmp/
      COPY --chown=node:root --chmod=775 integration-tests/entrypoint.sh /tmp/

      # RUN chmod aug+rwx /tmp/entrypoint.sh

      ENTRYPOINT ["/tmp/entrypoint.sh"]
    to: cypress-runner
promotion:
  name: hac-dev
  namespace: ci
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: test
  env:
    HOME: "/home/node"
  commands: |
    set -x
    export HOME=/tmp
    echo "Just trying"
    pwd
    ls -la
    ls -la /home
    cat /etc/passwd
    npm version

    /tmp/entrypoint.sh

    echo "Installing bonfire."
    VENV_DIR=$(mktemp -d)
    python3 -m venv "$VENV_DIR"
    . "$VENV_DIR"/bin/activate
    pip install crc-bonfire
    echo "Reserving namespace."
    NAMESPACE=$(bonfire namespace reserve -f)
  container:
    from: cypress-runner
# - as: test
#   commands: "export CODECOV_TOKEN=$(cat /tmp/secret/CODECOV_TOKEN) \n./test.sh\n"
#   container:
#     from: src
#   secret:
#     mount_path: /tmp/secret
#     name: hac-dev-codecov-token
# - as: test-coverage-upload
#   commands: "export CODECOV_TOKEN=$(cat /tmp/secret/CODECOV_TOKEN) \n./test.sh\n"
#   container:
#     from: src
#   postsubmit: true
#   secret:
#     mount_path: /tmp/secret
#     name: hac-dev-codecov-token
zz_generated_metadata:
  branch: main
  org: openshift
  repo: hac-dev
