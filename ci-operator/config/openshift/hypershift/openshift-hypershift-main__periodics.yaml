base_images:
  base:
    name: "4.10"
    namespace: ocp
    tag: base
  ocp_builder_rhel-8-golang-1.17-openshift-4.10:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-1.17-openshift-4.10
  openshift-tests:
    name: "4.10"
    namespace: ocp
    tag: tests
  openshift_release_golang-1.17:
    name: release
    namespace: openshift
    tag: golang-1.17
binary_build_commands: make build
build_root:
  from_repository: true
images:
- from: base
  inputs:
    openshift_release_golang-1.17:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.17
  to: hypershift
- dockerfile_path: Dockerfile.control-plane
  from: base
  inputs:
    ocp_builder_rhel-8-golang-1.17-openshift-4.10:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.17-openshift-4.10
    openshift_release_golang-1.17:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.17
  to: hypershift-control-plane-operator
releases:
  hosted-ocp-410-ci:
    candidate:
      product: ocp
      stream: ci
      version: "4.10"
  hosted-ocp-latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.9"
  hosted-ocp-previous:
    candidate:
      product: ocp
      relative: 1
      stream: nightly
      version: "4.9"
  latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.9"
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
test_binary_build_commands: make build e2e
tests:
- as: e2e-aws-periodic
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: hypershift
    product: ocp
    timeout: 1h30m0s
    version: "4.8"
  cron: 0 */6 * * *
  steps:
    test:
    - as: setup-monitoring
      commands: |-
        bin/test-setup monitoring \
          --remote-write-url=$(cat /etc/grafana-prom-push/url) \
          --remote-write-username-file=/etc/grafana-prom-push/username \
          --remote-write-password-file=/etc/grafana-prom-push/password
      credentials:
      - mount_path: /etc/grafana-prom-push
        name: hypershift-sjenning-homelab-push
        namespace: test-credentials
      from: test-bin
      grace_period: 1m0s
      resources:
        requests:
          cpu: 100m
      timeout: 2m0s
    - as: install-hypershift
      cli: latest
      commands: make ci-install-hypershift
      credentials:
      - mount_path: /etc/hypershift-pool-aws-credentials
        name: hypershift-pool-aws-credentials
        namespace: test-credentials
      dependencies:
      - env: HYPERSHIFT_RELEASE_LATEST
        name: hypershift
      from: bin
      grace_period: 1m0s
      resources:
        requests:
          cpu: 100m
      timeout: 5m0s
    - as: test-e2e
      cli: latest
      commands: |-
        bin/test-e2e \
          -test.v \
          -test.timeout=0 \
          --e2e.aws-credentials-file=/etc/hypershift-pool-aws-credentials/credentials \
          --e2e.pull-secret-file=/etc/ci-pull-credentials/.dockerconfigjson \
          --e2e.base-domain=ci.hypershift.devcluster.openshift.com \
          --e2e.latest-release-image=${OCP_IMAGE_LATEST} \
          --e2e.previous-release-image=${OCP_IMAGE_PREVIOUS} \
          --e2e.additional-tags="expirationDate=$(date -d '4 hours' --iso=minutes --utc)"
      credentials:
      - mount_path: /etc/hypershift-pool-aws-credentials
        name: hypershift-pool-aws-credentials
        namespace: test-credentials
      - mount_path: /etc/ci-pull-credentials
        name: ci-pull-credentials
        namespace: test-credentials
      dependencies:
      - env: OCP_IMAGE_LATEST
        name: release:hosted-ocp-latest
      - env: OCP_IMAGE_PREVIOUS
        name: release:hosted-ocp-previous
      from: test-bin
      grace_period: 15m0s
      resources:
        requests:
          cpu: 100m
      timeout: 1h0m0s
    workflow: generic-claim
- as: e2e-aws-periodic-conformance-serial
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: hypershift
    product: ocp
    timeout: 1h30m0s
    version: "4.8"
  cron: 0 */6 * * *
  steps:
    post:
    - as: destroy-cluster
      cli: latest
      commands: |-
        bin/hypershift destroy cluster aws \
        --aws-creds=/etc/hypershift-pool-aws-credentials/credentials  \
        --name="$(echo -n $PROW_JOB_ID|cut -d- -f-2)"
      credentials:
      - mount_path: /etc/hypershift-pool-aws-credentials
        name: hypershift-pool-aws-credentials
        namespace: test-credentials
      from: bin
      grace_period: 15m0s
      resources:
        requests:
          cpu: 100m
    test:
    - as: install-hypershift
      cli: latest
      commands: make ci-install-hypershift
      credentials:
      - mount_path: /etc/hypershift-pool-aws-credentials
        name: hypershift-pool-aws-credentials
        namespace: test-credentials
      dependencies:
      - env: HYPERSHIFT_RELEASE_LATEST
        name: hypershift
      from: bin
      grace_period: 1m0s
      resources:
        requests:
          cpu: 100m
      timeout: 5m0s
    - as: create-cluster
      cli: latest
      commands: |-
        bin/hypershift create cluster aws \
          --pull-secret=/etc/ci-pull-credentials/.dockerconfigjson \
          --aws-creds=/etc/hypershift-pool-aws-credentials/credentials \
          --additional-tags="expirationDate=$(date -d '4 hours' --iso=minutes --utc)" \
          --name="$(echo -n $PROW_JOB_ID|cut -d- -f-2)" \
          --region=us-east-1 \
          --base-domain=ci.hypershift.devcluster.openshift.com \
          --release-image=${OPENSHIFT_410_CI_RELEASE_IMAGE} \
          --instance-type=m5.xlarge \
          --node-pool-replicas=3
        echo "Waiting for cluster to become available"
        oc wait --timeout=10m --for=condition=Available --namespace=clusters hostedcluster/$(echo -n $PROW_JOB_ID|cut -d- -f-2)
        echo "Cluster became available, creating kubeconfig"
        bin/hypershift create kubeconfig --namespace=clusters --name=$(echo -n $PROW_JOB_ID|cut -d- -f-2) >${SHARED_DIR}/nested_kubeconfig
        echo "Waiting for clusteroperators to be ready"
        export KUBECONFIG=${SHARED_DIR}/nested_kubeconfig
        until \
          oc wait --all=true clusteroperator --for='condition=Available=True' >/dev/null && \
          oc wait --all=true clusteroperator --for='condition=Progressing=False' >/dev/null && \
          oc wait --all=true clusteroperator --for='condition=Degraded=False' >/dev/null;  do
            echo "$(date --rfc-3339=seconds) Clusteroperators not yet ready"
            sleep 1s
        done
      credentials:
      - mount_path: /etc/hypershift-pool-aws-credentials
        name: hypershift-pool-aws-credentials
        namespace: test-credentials
      - mount_path: /etc/ci-pull-credentials
        name: ci-pull-credentials
        namespace: test-credentials
      dependencies:
      - env: OPENSHIFT_410_CI_RELEASE_IMAGE
        name: release:hosted-ocp-410-ci
      from: bin
      grace_period: 1m0s
      resources:
        requests:
          cpu: 100m
      timeout: 25m0s
    - as: conformance-tests
      commands: |-
        export HYPERSHIFT_MANAGEMENT_CLUSTER_KUBECONFIG="${KUBECONFIG}"
        export HYPERSHIFT_MANAGEMENT_CLUSTER_NAMESPACE="clusters-$(echo -n $PROW_JOB_ID|cut -d- -f-2)"
        export AWS_SHARED_CREDENTIALS_FILE=/etc/hypershift-pool-aws-credentials/credentials
        export KUBECONFIG=${SHARED_DIR}/nested_kubeconfig
        openshift-tests run openshift/conformance/serial \
          -o "${ARTIFACT_DIR}/e2e.log" \
          --junit-dir "${ARTIFACT_DIR}/junit"
      credentials:
      - mount_path: /etc/hypershift-pool-aws-credentials
        name: hypershift-pool-aws-credentials
        namespace: test-credentials
      from: openshift-tests
      resources:
        requests:
          cpu: "3"
          memory: 600Mi
    workflow: generic-claim
- as: e2e-aws-pooled-periodic-conformance
  cluster_claim:
    architecture: amd64
    cloud: aws
    owner: hypershift
    product: ocp
    timeout: 1h30m0s
    version: "4.8"
  cron: 0 */6 * * *
  steps:
    post:
    - as: destroy-cluster
      cli: latest
      commands: |-
        bin/hypershift destroy cluster aws \
        --aws-creds=/etc/hypershift-pool-aws-credentials/credentials  \
        --name="$(echo -n $PROW_JOB_ID|cut -d- -f-2)"
      credentials:
      - mount_path: /etc/hypershift-pool-aws-credentials
        name: hypershift-pool-aws-credentials
        namespace: test-credentials
      from: bin
      grace_period: 15m0s
      resources:
        requests:
          cpu: 100m
    test:
    - as: install-hypershift
      cli: latest
      commands: make ci-install-hypershift
      credentials:
      - mount_path: /etc/hypershift-pool-aws-credentials
        name: hypershift-pool-aws-credentials
        namespace: test-credentials
      dependencies:
      - env: HYPERSHIFT_RELEASE_LATEST
        name: hypershift
      from: bin
      grace_period: 1m0s
      resources:
        requests:
          cpu: 100m
      timeout: 5m0s
    - as: create-cluster
      cli: latest
      commands: |-
        # The release controller overrides the version to test through the RELEASE_IMAGE_LATEST
        # variable, so use that if present.
        RELEASE_IMAGE="${RELEASE_IMAGE_LATEST:-${OPENSHIFT_410_CI_RELEASE_IMAGE}}"
        bin/hypershift create cluster aws \
          --pull-secret=/etc/ci-pull-credentials/.dockerconfigjson \
          --aws-creds=/etc/hypershift-pool-aws-credentials/credentials \
          --additional-tags="expirationDate=$(date -d '4 hours' --iso=minutes --utc)" \
          --name="$(echo -n $PROW_JOB_ID|cut -d- -f-2)" \
          --region=us-east-1 \
          --base-domain=ci.hypershift.devcluster.openshift.com \
          --release-image=${RELEASE_IMAGE} \
          --instance-type=m5.xlarge \
          --node-pool-replicas=3
        echo "Waiting for cluster to become available"
        oc wait --timeout=10m --for=condition=Available --namespace=clusters hostedcluster/$(echo -n $PROW_JOB_ID|cut -d- -f-2)
        echo "Cluster became available, creating kubeconfig"
        bin/hypershift create kubeconfig --namespace=clusters --name=$(echo -n $PROW_JOB_ID|cut -d- -f-2) >${SHARED_DIR}/nested_kubeconfig
        echo "Waiting for clusteroperators to be ready"
        export KUBECONFIG=${SHARED_DIR}/nested_kubeconfig
        until \
          oc wait --all=true clusteroperator --for='condition=Available=True' >/dev/null && \
          oc wait --all=true clusteroperator --for='condition=Progressing=False' >/dev/null && \
          oc wait --all=true clusteroperator --for='condition=Degraded=False' >/dev/null;  do
            echo "$(date --rfc-3339=seconds) Clusteroperators not yet ready"
            sleep 1s
        done
      credentials:
      - mount_path: /etc/hypershift-pool-aws-credentials
        name: hypershift-pool-aws-credentials
        namespace: test-credentials
      - mount_path: /etc/ci-pull-credentials
        name: ci-pull-credentials
        namespace: test-credentials
      dependencies:
      - env: OPENSHIFT_410_CI_RELEASE_IMAGE
        name: release:hosted-ocp-410-ci
      from: bin
      grace_period: 1m0s
      resources:
        requests:
          cpu: 100m
      timeout: 25m0s
    - as: conformance-tests
      commands: |-
        export HYPERSHIFT_MANAGEMENT_CLUSTER_KUBECONFIG="${KUBECONFIG}"
        export HYPERSHIFT_MANAGEMENT_CLUSTER_NAMESPACE="clusters-$(echo -n $PROW_JOB_ID|cut -d- -f-2)"
        export AWS_SHARED_CREDENTIALS_FILE=/etc/hypershift-pool-aws-credentials/credentials
        export KUBECONFIG=${SHARED_DIR}/nested_kubeconfig
        openshift-tests run openshift/conformance/parallel \
          -o "${ARTIFACT_DIR}/e2e.log" \
          --junit-dir "${ARTIFACT_DIR}/junit"
      credentials:
      - mount_path: /etc/hypershift-pool-aws-credentials
        name: hypershift-pool-aws-credentials
        namespace: test-credentials
      from: openshift-tests
      resources:
        requests:
          cpu: "3"
          memory: 600Mi
    workflow: generic-claim
zz_generated_metadata:
  branch: main
  org: openshift
  repo: hypershift
  variant: periodics
