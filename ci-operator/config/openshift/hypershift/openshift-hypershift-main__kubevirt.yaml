base_images:
  base:
    name: "4.13"
    namespace: ocp
    tag: base
  cli:
    name: "4.13"
    namespace: ocp
    tag: cli
  ocp_builder_rhel-8-golang-1.19-openshift-4.14:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-1.19-openshift-4.14
  openshift_release_golang-1.19:
    name: release
    namespace: openshift
    tag: golang-1.19
binary_build_commands: make build
build_root:
  from_repository: true
images:
- from: base
  inputs:
    openshift_release_golang-1.19:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.19
  to: hypershift-operator
- dockerfile_path: Dockerfile.control-plane
  from: base
  inputs:
    ocp_builder_rhel-8-golang-1.19-openshift-4.14:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.19-openshift-4.14
  to: hypershift
releases:
  hosted-ocp-previous:
    candidate:
      product: ocp
      relative: 1
      stream: nightly
      version: "4.13"
  latest:
    integration:
      include_built_images: true
      name: "4.13"
      namespace: ocp
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
test_binary_build_commands: make build e2e
tests:
- as: e2e-kubevirt-aws-ovn
  optional: true
  steps:
    cluster_profile: aws
    env:
      COMPUTE_NODE_REPLICAS: "1"
      COMPUTE_NODE_TYPE: c5n.metal
      CONTROL_PLANE_INSTANCE_TYPE: m4.xlarge
    test:
    - as: deploy-cnv
      cli: latest
      commands: CNV_PRERELEASE_VERSION=4.13 ./hack/ci/install-cnv.sh
      credentials:
      - mount_path: /etc/cnv-nightly-pull-credentials
        name: openshift-cnv-quay-credentials
        namespace: test-credentials
      from: bin
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
    - as: kv-e2e
      cli: latest
      commands: |-
        # install hypershift
        bin/hypershift install --hypershift-image ${HYPERSHIFT_RELEASE_LATEST}

        # compile the e2e tests
        make e2e

        # TODO Start
        # remove this once the bz is resolved
        # WORKAROUND FOR https://bugzilla.redhat.com/show_bug.cgi?id=2182453
        export OVS_FIX_SCRIPT=/tmp/ovs-fix-script.sh

        cat << EOF > $OVS_FIX_SCRIPT
        #!/bin/bash
        # we want this to occur after 15 minutes
        echo "ovs fix script sleeping 20 minutes"
        sleep 1200
        echo "ovs fix script awakes"

        export GUEST_KUBECONFIG=/tmp/guest-kubeconfig
        bin/hypershift create kubeconfig > \$GUEST_KUBECONFIG

        for node in \$(oc --kubeconfig \$GUEST_KUBECONFIG get nodes --no-headers | awk '{print \$1}'); do
            echo "restarting ovs-configuration service for node \$node"
            oc --kubeconfig \$GUEST_KUBECONFIG debug node/\$node -- chroot /host /bin/bash -c "/usr/bin/systemctl start ovs-configuration.service"
            echo "Result \$?"
            sleep 10
            oc --kubeconfig \$GUEST_KUBECONFIG debug node/\$node -- chroot /host /bin/bash -c "/usr/bin/systemctl status ovs-configuration.service"
        done
        EOF

        chmod 755 $OVS_FIX_SCRIPT
        # start this in the background as a workaround for the ovs issue
        $OVS_FIX_SCRIPT &
        # TODO END

        # run the test
        bin/test-e2e \
                  --test.v \
                  --test.timeout=0 \
                  --test.run='^TestCreateCluster$' \
                  --e2e.node-pool-replicas=2 \
                  --e2e.kubevirt-node-memory="6Gi" \
                  --e2e.platform="KubeVirt" \
                  --e2e.latest-release-image=${OCP_IMAGE_LATEST} \
                  --e2e.previous-release-image=${OCP_IMAGE_PREVIOUS} \
                  --e2e.pull-secret-file=/etc/ci-pull-credentials/.dockerconfigjson
      credentials:
      - mount_path: /etc/ci-pull-credentials
        name: ci-pull-credentials
        namespace: test-credentials
      dependencies:
      - env: HYPERSHIFT_RELEASE_LATEST
        name: hypershift-operator
      - env: OCP_IMAGE_LATEST
        name: release:latest
      - env: OCP_IMAGE_PREVIOUS
        name: release:hosted-ocp-previous
      from: bin
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws-ovn
zz_generated_metadata:
  branch: main
  org: openshift
  repo: hypershift
  variant: kubevirt
