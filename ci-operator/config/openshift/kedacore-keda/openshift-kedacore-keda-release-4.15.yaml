base_images:
  base:
    name: "4.15"
    namespace: ocp
    tag: base
build_root:
  from_repository: true
images:
- build_args:
  - name: GIT_COMMIT
    value: dummy-ci-commit-value
  from: base
  to: custom-metrics-autoscaler
- build_args:
  - name: GIT_COMMIT
    value: dummy-ci-commit-value
  dockerfile_path: Dockerfile.webhooks
  to: custom-metrics-autoscaler-webhooks
- build_args:
  - name: GIT_COMMIT
    value: dummy-ci-commit-value
  dockerfile_path: Dockerfile.adapter
  to: custom-metrics-autoscaler-adapter
- dockerfile_literal: |
    FROM ghcr.io/kedacore/keda-tools:1.20.5
    COPY . /src
    RUN chmod 777 -R /src
    WORKDIR /src
    RUN mkdir -p /go && chmod 777 -R /go
    RUN mkdir -p /bin && chmod 777 -R /bin
    ENV GOCACHE=/src/.cache
    ENV USE_SUDO=false
    ENV PATH=/src/helm:/src/:$PATH
    ENV HELM_INSTALL_DIR=/src
    RUN curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh
  to: custom-metrics-autoscaler-tests
promotion:
  to:
  - name: "4.15"
    namespace: ocp
releases:
  initial:
    integration:
      name: "4.15"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.15"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: gofmt
  commands: env && GOFLAGS="" make fmt
  container:
    from: src
  skip_if_only_changed: ^docs/|^\.github|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|PROJECT|LICENSE)$
- as: govet
  commands: env && GOFLAGS="" make vet
  container:
    from: src
  skip_if_only_changed: ^docs/|^\.github|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|PROJECT|LICENSE)$
- as: cma-verify-history
  commands: env && GOFLAGS="" hack/cma-verify-history.sh
  container:
    from: src
- as: clientset-verify
  commands: mkdir /tmp/codecopy && cp -a * /tmp/codecopy && cd /tmp/codecopy && make
    clientset-generate
  container:
    from: src
  skip_if_only_changed: ^docs/|^\.github|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|PROJECT|LICENSE)$
- as: security
  optional: true
  skip_if_only_changed: ^docs/|^\.github|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|PROJECT|LICENSE)$
  steps:
    env:
      PROJECT_NAME: kedacore-keda
    workflow: openshift-ci-security
- as: keda-e2e-aws-ovn
  skip_if_only_changed: ^docs/|^\.github|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    pre:
    - chain: ipi-aws-pre
    test:
    - as: test-setup
      cli: latest
      commands: cd tests; go test -v -timeout 15m -tags e2e ./utils/setup_test.go
      dependencies:
      - env: IMAGE_CONTROLLER
        name: custom-metrics-autoscaler
      - env: IMAGE_ADAPTER
        name: custom-metrics-autoscaler-adapter
      - env: IMAGE_WEBHOOKS
        name: custom-metrics-autoscaler-webhooks
      from: custom-metrics-autoscaler-tests
      resources:
        requests:
          cpu: 100m
    - as: test-internals
      cli: latest
      commands: cd tests; go test -p 1 -v -timeout 60m -tags e2e $(go list -tags e2e
        ./internals/... | grep -v internals/global_custom_ca)
      from: custom-metrics-autoscaler-tests
      resources:
        requests:
          cpu: 100m
    - as: test-scalers
      cli: latest
      commands: cd tests; go test -p 1 -v -timeout 60m -tags e2e ./scalers/prometheus/...
        ./scalers/kafka/...  ./scalers/memory/...
      from: custom-metrics-autoscaler-tests
      resources:
        requests:
          cpu: 100m
    - as: test-sequential
      cli: latest
      commands: cd tests;  go test -p 1 -v -timeout 60m -tags e2e ./sequential/...
      from: custom-metrics-autoscaler-tests
      resources:
        requests:
          cpu: 100m
    - as: test-teardown
      cli: latest
      commands: cd tests; go test -v -timeout 60m -tags e2e ./utils/cleanup_test.go
      from: custom-metrics-autoscaler-tests
      resources:
        requests:
          cpu: 100m
    workflow: ipi-aws
zz_generated_metadata:
  branch: release-4.15
  org: openshift
  repo: kedacore-keda
