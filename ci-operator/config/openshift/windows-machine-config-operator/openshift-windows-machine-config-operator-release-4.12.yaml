base_images:
  openshift_release_rhel-8-release-golang-1.19-openshift-4.12:
    name: release
    namespace: openshift
    tag: rhel-8-release-golang-1.19-openshift-4.12
  operator-sdk:
    name: "4.14"
    namespace: origin
    tag: operator-sdk
  vsphere-ci-python:
    name: vsphere-python
    namespace: ci
    tag: latest
binary_build_commands: make build
build_root:
  from_repository: true
  use_build_cache: true
images:
- dockerfile_path: build/Dockerfile.ci
  inputs:
    openshift_release_rhel-8-release-golang-1.19-openshift-4.12:
      as:
      - registry.ci.openshift.org/openshift/release:rhel-8-release-golang-1.19-openshift-4.12
  to: windows-machine-config-operator-test
operator:
  bundles:
  - as: wmco-bundle
    context_dir: .
    dockerfile_path: bundle.Dockerfile
    skip_building_index: true
  substitutions:
  - pullspec: REPLACE_IMAGE
    with: pipeline:windows-machine-config-operator-test
promotion:
  to:
  - additional_images:
      windows-machine-config-operator-bundle: wmco-bundle
    name: "4.12"
    namespace: ocp
releases:
  latest:
    integration:
      include_built_images: true
      name: "4.12"
      namespace: ocp
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 400Mi
  src:
    limits:
      memory: 10Gi
    requests:
      cpu: 100m
      memory: 10Gi
  windows-machine-config-operator-test:
    limits:
      memory: 10Gi
    requests:
      cpu: 100m
      memory: 10Gi
tests:
- as: lint
  commands: make lint
  container:
    from: src
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: build
  commands: make build
  container:
    from: src
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: unit
  commands: make unit
  container:
    from: src
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: security
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    env:
      PROJECT_NAME: windows-machine-config-operator
    workflow: openshift-ci-security
- always_run: false
  as: aws-e2e-operator
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: aws
    test:
    - ref: windows-e2e-operator-test
    workflow: ipi-aws-ovn-hybrid
- always_run: false
  as: azure-e2e-operator
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: azure4
    env:
      WINDOWS_SERVER_VERSION: "2019"
    test:
    - ref: windows-e2e-operator-test
    workflow: ipi-azure-ovn-hybrid
- always_run: false
  as: gcp-e2e-operator
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: gcp
    env:
      WMCO_DEPLOY_NAMESPACE: alternate-wmco-namespace
    test:
    - ref: windows-e2e-operator-test
    workflow: ipi-gcp-ovn-hybrid
- always_run: false
  as: vsphere-e2e-operator
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: vsphere-elastic
    test:
    - ref: windows-e2e-operator-test
    workflow: ipi-vsphere-ovn-hybrid-custom-vxlan-port
- always_run: false
  as: azure-e2e-upgrade
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: azure4
    test:
    - as: install
      cli: latest
      commands: |-
        export WMCO_NS=openshift-windows-machine-config-operator
        oc create namespace $WMCO_NS
        oc label --overwrite=true ns $WMCO_NS openshift.io/cluster-monitoring=true \
        pod-security.kubernetes.io/enforce=privileged
        # deploy og
        oc create -f - <<EOF
        apiVersion: operators.coreos.com/v1
        kind: OperatorGroup
        metadata:
          name: windows-machine-config-operator
          namespace: ${WMCO_NS}
        spec:
          targetNamespaces:
            - ${WMCO_NS}
        EOF

        # install operator via subscription
        oc create -f - <<EOF
        apiVersion: operators.coreos.com/v1alpha1
        kind: Subscription
        metadata:
          name: windows-machine-config-operator
          namespace: ${WMCO_NS}
        spec:
          channel: stable
          installPlanApproval: Automatic
          name: windows-machine-config-operator
          source: redhat-operators
          sourceNamespace: openshift-marketplace
        EOF

        # oc wait will immediately fail if the deployment does not exist yet, first retry until the deployment is
        # created by the subscription controller
        retries=0
        while ! oc get -n $WMCO_NS deployment windows-machine-config-operator; do
          if [[ $retries -eq 10 ]]; then
            echo "max retries hit"
            exit 1
          fi
          sleep 1m
          retries=$((retries+1))
        done
        oc wait --timeout=10m --for condition=Available -n $WMCO_NS deployment windows-machine-config-operator
      from: cli
      resources:
        requests:
          cpu: 1000m
          memory: 400Mi
    - as: test-setup
      cli: latest
      commands: |-
        #!/bin/bash
        set -euo pipefail
        export KUBE_SSH_KEY_PATH=${CLUSTER_PROFILE_DIR}/ssh-privatekey
        oc create secret generic cloud-private-key --from-file=private-key.pem="${KUBE_SSH_KEY_PATH}" -n openshift-windows-machine-config-operator
        make upgrade-test-setup
      from: windows-machine-config-operator-test
      resources:
        requests:
          cpu: 1000m
          memory: 400Mi
    - as: upgrade
      cli: latest
      commands: |
        export WMCO_NS=openshift-windows-machine-config-operator
        operator-sdk cleanup --timeout 1m windows-machine-config-operator -n $WMCO_NS || {
          echo "operator-sdk cleanup timed out"
        }
        operator-sdk run bundle --timeout=10m --security-context-config restricted -n $WMCO_NS "$OO_BUNDLE"
        sleep 5m
        oc wait --timeout=5m --for condition=Available -n $WMCO_NS deployment windows-machine-config-operator
      dependencies:
      - env: OO_BUNDLE
        name: wmco-bundle
      from: operator-sdk
      resources:
        requests:
          cpu: 1000m
          memory: 400Mi
    - as: test
      cli: latest
      commands: |-
        #!/bin/bash
        set -euo pipefail
        export KUBE_SSH_KEY_PATH=${CLUSTER_PROFILE_DIR}/ssh-privatekey
        make upgrade-test
      from: windows-machine-config-operator-test
      resources:
        requests:
          cpu: 1000m
          memory: 400Mi
    workflow: ipi-azure-ovn-hybrid
  timeout: 5h0m0s
- always_run: false
  as: platform-none-vsphere-e2e-operator
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: vsphere-elastic
    test:
    - ref: windows-e2e-operator-test-byoh
    workflow: windows-e2e-operator-test-platform-none-vsphere
- always_run: false
  as: wicd-unit-vsphere
  skip_if_only_changed: ^(?:docs|\.github|renovate\.json|\.tekton)/|\.md$|^(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    cluster_profile: vsphere-elastic
    post:
    - chain: upi-vsphere-windows-post
    pre:
    - ref: ipi-install-rbac
    - ref: ipi-conf
    - ref: ipi-conf-vsphere-check
    - ref: ipi-conf-vsphere-check-vcm
    - ref: upi-conf-vsphere-vcm
    - ref: upi-conf-vsphere-dns
    - chain: upi-vsphere-windows-pre
    test:
    - ref: windows-unit-wicd
- as: community-fast-forward
  postsubmit: true
  steps:
    env:
      DESTINATION_BRANCH: community-4.12
      SOURCE_BRANCH: release-4.12
    workflow: windows-ci-fastforward
zz_generated_metadata:
  branch: release-4.12
  org: openshift
  repo: windows-machine-config-operator
