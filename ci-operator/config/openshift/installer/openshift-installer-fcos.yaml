base_images:
  base:
    name: "4.6"
    namespace: origin
    tag: base
  ocp_4.6_cli:
    name: "4.6"
    namespace: ocp
    tag: cli
  ocp_builder_golang-1.14:
    name: builder
    namespace: ocp
    tag: golang-1.14
  ocp_builder_rhel-8-golang-1.15-openshift-4.6:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-1.15-openshift-4.6
  openshift_release_golang-1.14:
    name: release
    namespace: openshift
    tag: golang-1.14
  origin_4.6_cli:
    name: "4.6"
    namespace: origin
    tag: cli
  rhel-7:
    name: "4.6"
    namespace: ocp
    tag: base-7
  vsphere-ci-python:
    name: vsphere-python
    namespace: ci
    tag: latest
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.14
images:
- dockerfile_path: images/installer/Dockerfile.ci
  from: base
  inputs:
    ocp_builder_rhel-8-golang-1.15-openshift-4.6:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:rhel-8-golang-1.15-openshift-4.6
    openshift_release_golang-1.14:
      as:
      - registry.svc.ci.openshift.org/openshift/release:golang-1.14
  to: installer
- dockerfile_path: images/installer-artifacts/Dockerfile.rhel
  from: installer
  inputs:
    ocp_builder_golang-1.14:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:golang-1.14
    ocp_builder_rhel-8-golang-1.15-openshift-4.6:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:rhel-8-golang-1.15-openshift-4.6
  to: installer-artifacts
- dockerfile_path: images/libvirt/Dockerfile.ci
  from: base
  inputs:
    openshift_release_golang-1.14:
      as:
      - registry.svc.ci.openshift.org/openshift/release:golang-1.14
  to: libvirt-installer
- dockerfile_path: images/installer/Dockerfile.upi.ci
  from: rhel-7
  inputs:
    ocp_4.6_cli:
      as:
      - registry.svc.ci.openshift.org/ocp/4.6:cli
    ocp_builder_golang-1.14:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:golang-1.14
  to: upi-installer
- dockerfile_path: images/openstack/Dockerfile.ci
  from: base
  inputs:
    openshift_release_golang-1.14:
      as:
      - registry.svc.ci.openshift.org/openshift/release:golang-1.14
    origin_4.6_cli:
      as:
      - registry.svc.ci.openshift.org/origin/4.6:cli
  to: openstack-installer
- dockerfile_path: images/baremetal/Dockerfile.ci
  from: base
  inputs:
    ocp_builder_rhel-8-golang-1.15-openshift-4.6:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:rhel-8-golang-1.15-openshift-4.6
    openshift_release_golang-1.14:
      as:
      - registry.svc.ci.openshift.org/openshift/release:golang-1.14
  to: baremetal-installer
promotion:
  to:
  - name: "4.6"
    namespace: origin
releases:
  initial:
    integration:
      name: "4.6"
      namespace: origin
  latest:
    integration:
      include_built_images: true
      name: "4.6"
      namespace: origin
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
  baremetal-installer:
    requests:
      cpu: "3"
      memory: 5Gi
  govet:
    requests:
      cpu: "3"
      memory: 5Gi
  installer:
    requests:
      cpu: "3"
      memory: 5Gi
  installer-artifacts:
    requests:
      cpu: "3"
      memory: 5Gi
  libvirt-installer:
    requests:
      cpu: "3"
      memory: 5Gi
  openstack-installer:
    requests:
      cpu: "3"
      memory: 5Gi
  unit:
    requests:
      cpu: "3"
      memory: 5Gi
  upi-installer:
    requests:
      cpu: "3"
      memory: 5Gi
tests:
- as: unit
  commands: go test ./pkg/...
  container:
    from: src
- as: gofmt
  commands: IS_CONTAINER=TRUE ./hack/go-fmt.sh .
  container:
    from: src
- as: govet
  commands: IS_CONTAINER=TRUE ./hack/go-vet.sh ./...
  container:
    from: src
- as: golint
  commands: IS_CONTAINER=TRUE ./hack/go-lint.sh -min_confidence 0.3 $(go list -f '{{
    .ImportPath }}' ./...)
  container:
    from: src
- as: verify-vendor
  commands: IS_CONTAINER=TRUE ./hack/verify-vendor.sh
  container:
    from: src
- as: verify-codegen
  commands: IS_CONTAINER=TRUE ./hack/verify-codegen.sh
  container:
    from: src
- as: e2e-gcp
  optional: true
  steps:
    cluster_profile: gcp
    workflow: openshift-e2e-gcp
- as: e2e-aws
  steps:
    cluster_profile: aws
    workflow: openshift-e2e-aws
- as: e2e-vsphere-upi
  optional: true
  steps:
    cluster_profile: vsphere-elastic
    env:
      TEST_SUITE: openshift/conformance/parallel
    workflow: openshift-e2e-vsphere-upi
- as: e2e-vsphere
  optional: true
  steps:
    cluster_profile: vsphere-elastic
    workflow: openshift-e2e-vsphere
zz_generated_metadata:
  branch: fcos
  org: openshift
  repo: installer
