base_images:
  assisted-image-service:
    name: ocm-2.10
    namespace: edge-infrastructure
    tag: assisted-image-service
  assisted-installer-agent:
    name: ocm-2.10
    namespace: edge-infrastructure
    tag: assisted-installer-agent
  assisted-service:
    name: ocm-2.10
    namespace: edge-infrastructure
    tag: assisted-service
  assisted-service-index:
    name: assisted-service-index
    namespace: edge-infrastructure
    tag: ocm-2.10
  assisted-service-scripts:
    name: ocm-2.10
    namespace: edge-infrastructure
    tag: assisted-service-scripts
  assisted-test-infra:
    name: ocm-2.10
    namespace: edge-infrastructure
    tag: assisted-test-infra
  assisted-test-infra-internal:
    name: ocm-2.10
    namespace: edge-infrastructure
    tag: assisted-test-infra-internal
  coreos-centos-stream9:
    name: stream9
    namespace: coreos
    tag: "9"
  dev-scripts:
    name: test
    namespace: ocp-kni
    tag: dev-scripts
  openshift_release_golang-1.20:
    name: release
    namespace: openshift
    tag: golang-1.20
  upi-installer:
    name: "4.15"
    namespace: ocp
    tag: upi-installer
build_root:
  from_repository: true
images:
- dockerfile_path: Dockerfile.assisted-installer
  inputs:
    coreos-centos-stream9:
      as:
      - quay.io/centos/centos:stream9
    openshift_release_golang-1.20:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.20
  to: assisted-installer
- dockerfile_path: Dockerfile.assisted-installer-controller
  inputs:
    coreos-centos-stream9:
      as:
      - quay.io/centos/centos:stream9
    openshift_release_golang-1.20:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.20
  to: assisted-installer-controller
- dockerfile_path: Dockerfile.assisted-installer-build
  inputs:
    openshift_release_golang-1.20:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.20
  to: assisted-installer-build
promotion:
  to:
  - name: ocm-2.10
    namespace: edge-infrastructure
releases:
  latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.15"
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tests:
- as: mirror-nightly-image
  cron: '@daily'
  steps:
    dependencies:
      SOURCE_IMAGE_REF: assisted-installer
    env:
      IMAGE_REPO: assisted-installer
      RELEASE_TAG_PREFIX: ocm-2.10
    test:
    - ref: assisted-baremetal-images-publish
- as: mirror-nightly-image-controller
  cron: '@daily'
  steps:
    dependencies:
      SOURCE_IMAGE_REF: assisted-installer-controller
    env:
      IMAGE_REPO: assisted-installer-controller
      RELEASE_TAG_PREFIX: ocm-2.10
    test:
    - ref: assisted-baremetal-images-publish
- as: mirror-vcsref-image
  postsubmit: true
  steps:
    dependencies:
      SOURCE_IMAGE_REF: assisted-installer
    env:
      IMAGE_REPO: assisted-installer
      RELEASE_TAG_PREFIX: ocm-2.10
    test:
    - ref: assisted-baremetal-images-publish
- as: mirror-vcsref-image-controller
  postsubmit: true
  steps:
    dependencies:
      SOURCE_IMAGE_REF: assisted-installer-controller
    env:
      IMAGE_REPO: assisted-installer-controller
      RELEASE_TAG_PREFIX: ocm-2.10
    test:
    - ref: assisted-baremetal-images-publish
- as: lint
  commands: |
    export GOCACHE=/tmp/gocache
    export GOMODCACHE=/tmp/gomodcache
    export GOLANGCI_LINT_CACHE=/tmp/.cache
    export GOPROXY=https://proxy.golang.org
    make lint
  container:
    clone: true
    from: assisted-installer-build
  skip_if_only_changed: ^docs/|^\.github/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|PROJECT|LICENSE)$
- as: format-check
  commands: make format-check
  container:
    clone: true
    from: assisted-installer-build
  skip_if_only_changed: ^docs/|^\.github/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|PROJECT|LICENSE)$
- as: unit-test
  commands: |
    export GOCACHE=/tmp/gocache
    export CODECOV_TOKEN=$(cat /tmp/secret/codecov-token)
    make REPORTS=${ARTIFACT_DIR} unit-test
  container:
    clone: true
    from: assisted-installer-build
  secret:
    mount_path: /tmp/secret
    name: assisted-installer-codecov-token
  skip_if_only_changed: ^docs/|^\.github/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|PROJECT|LICENSE)$
- as: unit-test-postsubmit
  commands: |
    export GOCACHE=/tmp/gocache
    export CODECOV_TOKEN=$(cat /tmp/secret/codecov-token)
    make REPORTS=${ARTIFACT_DIR} unit-test
  container:
    clone: true
    from: assisted-installer-build
  postsubmit: true
  secret:
    mount_path: /tmp/secret
    name: assisted-installer-codecov-token
- as: e2e-ai-operator-ztp
  skip_if_only_changed: ^docs/|^\.github/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|PROJECT|LICENSE)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      INDEX_IMAGE: assisted-service-index
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    env:
      PACKET_PLAN: c3.medium.x86
    workflow: assisted-baremetal-operator-ztp
zz_generated_metadata:
  branch: release-ocm-2.10
  org: openshift
  repo: assisted-installer
