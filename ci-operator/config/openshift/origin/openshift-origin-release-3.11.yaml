base_images:
  os:
    name: centos
    namespace: openshift
    tag: "7"
binary_build_commands: make build
build_root:
  from_repository: true
images:
- context_dir: images/base/
  from: os
  to: base
- context_dir: images/pod/
  from: base-with-rpms
  to: pod
- context_dir: images/template-service-broker/
  from: base-with-rpms
  to: template-service-broker
- context_dir: images/cli/
  from: base-with-rpms
  to: cli
- context_dir: images/hypershift/
  from: base-with-rpms
  to: hypershift
- context_dir: images/hyperkube/
  from: base-with-rpms
  to: hyperkube
- context_dir: images/egress/router/
  from: base-with-rpms
  to: egress-router
- context_dir: images/egress/http-proxy/
  from: base-with-rpms
  to: egress-http-proxy
- context_dir: images/egress/dns-proxy/
  from: base-with-rpms
  to: egress-dns-proxy
- context_dir: images/ipfailover/keepalived/
  from: base-with-rpms
  to: keepalived-ipfailover
- context_dir: images/origin/
  from: cli
  to: control-plane
- context_dir: images/tests/
  from: cli
  to: tests
- context_dir: images/deployer/
  from: cli
  to: deployer
- context_dir: images/recycler/
  from: cli
  to: recycler
- context_dir: images/builder/docker/docker-builder
  from: cli
  to: docker-builder
- context_dir: images/router/haproxy/
  from: cli
  to: haproxy-router
- context_dir: images/router/f5/
  from: cli
  to: f5-router
- context_dir: images/node/
  from: control-plane
  to: node
promotion:
  additional_images:
    artifacts: artifacts
    base: base
  name: origin-v3.11
  namespace: openshift
raw_steps:
- pipeline_image_cache_step:
    commands: mkdir -p _output/local/releases; touch _output/local/releases/CHECKSUM;
      echo $'FROM bin AS bin\nFROM rpms AS rpms\nFROM centos:7\nCOPY --from=bin /go/src/github.com/openshift/origin/_output/local/releases
      /srv/zips/\nCOPY --from=rpms /go/src/github.com/openshift/origin/_output/local/releases/rpms/
      /srv/repo/' > _output/local/releases/Dockerfile; make build-cross
    from: bin
    to: bin-cross
- project_directory_image_build_step:
    from: os
    inputs:
      bin-cross:
        as:
        - bin
        paths:
        - destination_dir: .
          source_path: /go/src/github.com/openshift/origin/_output/local/releases/Dockerfile
      rpms:
        as:
        - rpms
      src: {}
    optional: true
    to: artifacts
- output_image_tag_step:
    from: artifacts
    optional: true
    to:
      name: stable
      namespace: ""
      tag: artifacts
- rpm_image_injection_step:
    from: base
    to: base-with-rpms
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
  bin:
    requests:
      cpu: "3"
      memory: 7Gi
  bin-cross:
    requests:
      cpu: "3"
      memory: 8Gi
  integration:
    requests:
      cpu: "3"
      memory: 10Gi
  rpms:
    requests:
      cpu: "2"
      memory: 6Gi
  unit:
    requests:
      cpu: "8"
      memory: 16Gi
  verify:
    requests:
      cpu: "2"
      memory: 6Gi
rpm_build_commands: make build-rpms
tag_specification:
  name: origin-v3.11
  namespace: openshift
tests:
- as: unit
  commands: JUNIT_REPORT=1 TEST_KUBE=true KUBERNETES_SERVICE_HOST= hack/test-go.sh
  container:
    from: src
- as: integration
  commands: TMPDIR=/tmp/volume JUNIT_REPORT=1 KUBERNETES_SERVICE_HOST= make test-integration
  container:
    from: bin
    memory_backed_volume:
      size: 4Gi
- as: verify
  commands: JUNIT_REPORT=1 KUBERNETES_SERVICE_HOST= make verify -k
  container:
    from: bin
- as: e2e-conformance-k8s
  commands: test/extended/conformance-k8s.sh
  openshift_ansible_src:
    cluster_profile: gcp
- as: e2e-gcp
  commands: TEST_FOCUS=Suite:openshift/conformance/parallel TEST_FOCUS_SERIAL=Suite:openshift/conformance/serial/minimal
    run-tests
  openshift_ansible:
    cluster_profile: gcp
- as: e2e-gcp-crio
  commands: TEST_FOCUS=Suite:openshift/conformance/parallel TEST_FOCUS_SERIAL=Suite:openshift/conformance/serial/minimal
    run-tests
  openshift_ansible:
    cluster_profile: gcp-crio
zz_generated_metadata:
  branch: release-3.11
  org: openshift
  repo: origin
