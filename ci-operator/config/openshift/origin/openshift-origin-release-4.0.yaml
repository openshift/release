base_images:
  base:
    name: "4.0"
    namespace: ocp
    tag: base
  base-machine:
    cluster: https://api.ci.openshift.org
    name: fedora
    namespace: openshift
    tag: "29"
  machine-os-content-base:
    name: "4.0"
    namespace: ocp
    tag: machine-os-content
binary_build_commands: make build WHAT='cmd/hypershift vendor/k8s.io/kubernetes/cmd/hyperkube'
build_root:
  image_stream_tag:
    cluster: https://api.ci.openshift.org
    name: src-cache-origin
    namespace: ci
    tag: master
canonical_go_repository: github.com/openshift/origin
images:
- dockerfile_path: images/template-service-broker/Dockerfile.rhel
  from: base
  inputs:
    bin:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:golang-1.11
      paths: null
  to: template-service-broker
- dockerfile_path: images/cli/Dockerfile.rhel
  from: base
  inputs:
    bin:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:golang-1.11
      paths: null
  to: cli
- dockerfile_path: images/cli-artifacts/Dockerfile.rhel
  from: cli
  inputs:
    bin:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:golang-1.11
      paths: null
  to: cli-artifacts
- dockerfile_path: images/hypershift/Dockerfile.rhel
  from: base
  inputs:
    bin:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:golang-1.11
      paths: null
  to: hypershift
- dockerfile_path: images/hyperkube/Dockerfile.rhel
  from: base
  inputs:
    bin:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:golang-1.11
      paths: null
  to: hyperkube
- dockerfile_path: images/tests/Dockerfile.rhel
  from: cli
  inputs:
    bin:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:golang-1.11
      paths: null
  to: tests
- context_dir: images/deployer/
  dockerfile_path: Dockerfile.rhel
  from: cli
  to: deployer
- context_dir: images/recycler/
  dockerfile_path: Dockerfile.rhel
  from: cli
  to: recycler
- dockerfile_path: images/sdn/Dockerfile.rhel
  from: base
  inputs:
    bin:
      as:
      - registry.svc.ci.openshift.org/ocp/builder:golang-1.11
      paths: null
  to: node
- context_dir: images/os/
  from: base
  inputs:
    base-machine-with-rpms:
      as:
      - fedora:29
      paths: null
    machine-os-content-base:
      as:
      - registry.svc.ci.openshift.org/openshift/origin-v4.0:machine-os-content
      paths: null
  to: machine-os-content
promotion:
  additional_images:
    artifacts: artifacts
  disabled: true
  excluded_images:
  - machine-os-content
  name: "4.0"
  namespace: ocp
raw_steps:
- pipeline_image_cache_step:
    commands: mkdir -p _output/local/releases; touch _output/local/releases/CHECKSUM;
      echo $'FROM bin AS bin\nFROM rpms AS rpms\nFROM centos:7\nCOPY --from=bin /go/src/github.com/openshift/origin/_output/local/releases
      /srv/zips/\nCOPY --from=rpms /go/src/github.com/openshift/origin/_output/local/releases/rpms/*
      /srv/repo/' > _output/local/releases/Dockerfile; make build-cross
    from: bin
    to: bin-cross
- project_directory_image_build_step:
    from: base
    inputs:
      bin-cross:
        as:
        - bin
        paths:
        - destination_dir: .
          source_path: /go/src/github.com/openshift/origin/_output/local/releases/Dockerfile
      rpms:
        as:
        - rpms
        paths: null
      src:
        paths: null
    optional: true
    to: artifacts
- output_image_tag_step:
    from: artifacts
    optional: true
    to:
      name: stable
      namespace: ""
      tag: artifacts
- rpm_image_injection_step:
    from: base
    to: base-with-rpms
- rpm_image_injection_step:
    from: base-machine
    to: base-machine-with-rpms
resources:
  '*':
    limits:
      memory: 8Gi
    requests:
      cpu: 100m
      memory: 4Gi
  bin:
    limits:
      memory: 12Gi
    requests:
      cpu: "3"
      memory: 7Gi
  bin-cross:
    limits:
      memory: 12Gi
    requests:
      cpu: "3"
      memory: 8Gi
  cmd:
    limits:
      memory: 11Gi
    requests:
      cpu: "4"
      memory: 8Gi
  hyperkube:
    limits:
      memory: 12Gi
    requests:
      cpu: "3"
      memory: 7Gi
  hypershift:
    limits:
      memory: 12Gi
    requests:
      cpu: "3"
      memory: 7Gi
  integration:
    limits:
      memory: 18Gi
    requests:
      cpu: "6"
      memory: 14Gi
  rpms:
    limits:
      memory: 10Gi
    requests:
      cpu: "4"
      memory: 8Gi
  tests:
    limits:
      memory: 12Gi
    requests:
      cpu: "3"
      memory: 7Gi
  unit:
    limits:
      memory: 11Gi
    requests:
      cpu: "6"
      memory: 8Gi
  verify:
    limits:
      memory: 12Gi
    requests:
      cpu: "3"
      memory: 8Gi
rpm_build_commands: make build-rpms
tag_specification:
  name: "4.0"
  namespace: ocp
tests:
- artifact_dir: /tmp/artifacts
  as: cmd
  commands: TMPDIR=/tmp/volume ARTIFACT_DIR=/tmp/artifacts JUNIT_REPORT=1 KUBERNETES_SERVICE_HOST=
    make test-cmd -k
  container:
    from: bin
    memory_backed_volume:
      size: 4Gi
- artifact_dir: /tmp/artifacts
  as: unit
  commands: TMPDIR=/tmp/volume GOTEST_FLAGS='-p 8' ARTIFACT_DIR=/tmp/artifacts TIMEOUT=180s
    JUNIT_REPORT=1 TEST_KUBE=true KUBERNETES_SERVICE_HOST= hack/test-go.sh
  container:
    from: src
    memory_backed_volume:
      size: 4Gi
- artifact_dir: /tmp/artifacts
  as: integration
  commands: GOMAXPROCS=8 TMPDIR=/tmp/volume ARTIFACT_DIR=/tmp/artifacts JUNIT_REPORT=1
    KUBERNETES_SERVICE_HOST= make test-integration
  container:
    from: bin
    memory_backed_volume:
      size: 4Gi
- artifact_dir: /tmp/artifacts
  as: verify
  commands: ARTIFACT_DIR=/tmp/artifacts JUNIT_REPORT=1 KUBERNETES_SERVICE_HOST= make
    verify -k
  container:
    from: bin
- as: e2e-aws
  commands: TEST_SUITE=openshift/conformance/parallel run-tests
  openshift_installer:
    cluster_profile: aws
    upgrade: false
- as: e2e-aws-all
  commands: TEST_SUITE=openshift/conformance run-tests
  openshift_installer:
    cluster_profile: aws
    upgrade: false
- as: e2e-aws-builds
  commands: TEST_SUITE=openshift/build run-tests
  openshift_installer:
    cluster_profile: aws
    upgrade: false
- as: e2e-aws-image-ecosystem
  commands: TEST_SUITE=openshift/image-ecosystem run-tests
  openshift_installer:
    cluster_profile: aws
    upgrade: false
- as: e2e-aws-image-registry
  commands: TEST_SUITE=openshift/image-registry run-tests
  openshift_installer:
    cluster_profile: aws
    upgrade: false
- as: e2e-aws-upgrade
  commands: TEST_SUITE=all run-upgrade-tests
  openshift_installer:
    cluster_profile: aws
    upgrade: true
- as: e2e-aws-serial
  commands: TEST_SUITE=openshift/conformance/serial run-tests
  openshift_installer:
    cluster_profile: aws
    upgrade: false
- as: launch-aws
  commands: sleep 7200 & wait
  openshift_installer:
    cluster_profile: aws
    upgrade: false
