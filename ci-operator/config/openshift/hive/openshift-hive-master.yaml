base_images:
  base:
    name: "4.14"
    namespace: ocp
    tag: base
  openshift_release_rhel-8-release-golang-1.20-openshift-4.14:
    name: release
    namespace: openshift
    tag: rhel-8-release-golang-1.20-openshift-4.14
binary_build_commands: GO_COMPLIANCE_INFO=0 make build
build_root:
  project_image:
    dockerfile_path: build/build-image/Dockerfile
images:
- dockerfile_path: Dockerfile
  from: base
  inputs:
    openshift_release_rhel-8-release-golang-1.20-openshift-4.14:
      as:
      - registry.ci.openshift.org/openshift/release:rhel-8-release-golang-1.20-openshift-4.14
  to: hive
promotion:
  name: hive-v4.0
  namespace: openshift
releases:
  initial:
    candidate:
      product: ocp
      stream: nightly
      version: "4.14"
  latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.14"
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
  unit:
    requests:
      cpu: 1000m
      memory: 4Gi
tests:
- as: unit
  commands: GO_COMPLIANCE_INFO=0 make test
  container:
    from: src
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: verify
  commands: GO_COMPLIANCE_INFO=0 make verify
  container:
    from: src
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
- as: coverage
  commands: |
    export CODECOV_TOKEN=$(cat /tmp/secret/CODECOV_TOKEN)
    GO_COMPLIANCE_INFO=0 make coverage
  container:
    from: src
  run_if_changed: \.go$
  secret:
    mount_path: /tmp/secret
    name: hive-codecov-token
- as: publish-coverage
  commands: |
    export CODECOV_TOKEN=$(cat /tmp/secret/CODECOV_TOKEN)
    GO_COMPLIANCE_INFO=0 make coverage
  container:
    from: src
  postsubmit: true
  secret:
    mount_path: /tmp/secret
    name: hive-codecov-token
- as: security
  steps:
    env:
      SNYK_CODE_ADDITIONAL_ARGS: --severity-threshold=high
    workflow: openshift-ci-security
- as: e2e
  cluster_claim:
    architecture: amd64
    as: unused
    cloud: aws
    labels:
      region: us-east-1
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.12"
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    test:
    - as: test
      cli: latest
      commands: |
        # Creds for the `ci` user in the cluster-control-plane cluster
        export AWS_ACCESS_KEY_ID=$(cat /tmp/secret/hiveci-aws-creds/AWS_ACCESS_KEY_ID)
        export AWS_SECRET_ACCESS_KEY=$(cat /tmp/secret/hiveci-aws-creds/AWS_SECRET_ACCESS_KEY)
        # Override default location for pull secret
        export PULL_SECRET_FILE=/tmp/secret/pull-secret/.dockerconfigjson
        # Configure a unique cluster name based on timestamp and the PR number.
        # We'll exceed the 21c cluster name cutoff at PR 1Mi or some
        # time in July of 4147, whichever comes first.
        export CLUSTER_NAME=$(printf "hiveci-%x-%x" $(date +%s) $PULL_NUMBER)
        GO_COMPLIANCE_INFO=0 CLOUD=aws make test-e2e
      credentials:
      - mount_path: /tmp/secret/hiveci-aws-creds
        name: hiveci-aws-creds
        namespace: test-credentials
      - mount_path: /tmp/secret/pull-secret
        name: ci-pull-credentials
        namespace: test-credentials
      dependencies:
      - env: HIVE_IMAGE
        name: hive
      - env: RELEASE_IMAGE
        name: release:latest
      from: src
      grace_period: 15m0s
      resources:
        requests:
          cpu: 100m
    workflow: generic-claim
- as: e2e-pool
  cluster_claim:
    architecture: amd64
    as: unused
    cloud: aws
    labels:
      region: us-east-1
    owner: openshift-ci
    product: ocp
    timeout: 1h0m0s
    version: "4.12"
  skip_if_only_changed: ^docs/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|PROJECT|LICENSE)$
  steps:
    test:
    - as: test
      cli: latest
      commands: |
        # Creds for the `ci` user in the cluster-control-plane cluster
        export AWS_ACCESS_KEY_ID=$(cat /tmp/secret/hiveci-aws-creds/AWS_ACCESS_KEY_ID)
        export AWS_SECRET_ACCESS_KEY=$(cat /tmp/secret/hiveci-aws-creds/AWS_SECRET_ACCESS_KEY)
        # Override default location for pull secret
        export PULL_SECRET_FILE=/tmp/secret/pull-secret/.dockerconfigjson
        # Configure a unique cluster name based on timestamp and the PR number.
        # We'll exceed the 21c cluster name cutoff at PR 1Mi or some
        # time in July of 4147, whichever comes first.
        export CLUSTER_NAME=$(printf "hiveci-%x-%x" $(date +%s) $PULL_NUMBER)
        # Disable managed DNS (on by default, and left on for the e2e test)
        export USE_MANAGED_DNS=false
        GO_COMPLIANCE_INFO=0 CLOUD=aws make test-e2e-pool
      credentials:
      - mount_path: /tmp/secret/hiveci-aws-creds
        name: hiveci-aws-creds
        namespace: test-credentials
      - mount_path: /tmp/secret/pull-secret
        name: ci-pull-credentials
        namespace: test-credentials
      dependencies:
      - env: HIVE_IMAGE
        name: hive
      - env: RELEASE_IMAGE
        name: release:latest
      from: src
      grace_period: 15m0s
      resources:
        requests:
          cpu: 100m
    workflow: generic-claim
- as: e2e-gcp
  run_if_changed: gcp
  steps:
    cluster_profile: gcp
    test:
    - as: test
      cli: latest
      commands: GO_COMPLIANCE_INFO=0 CLOUD=gcp make test-e2e
      dependencies:
      - env: HIVE_IMAGE
        name: hive
      - env: RELEASE_IMAGE
        name: release:latest
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-gcp
- as: e2e-azure
  run_if_changed: azure
  steps:
    cluster_profile: azure4
    test:
    - as: test
      cli: latest
      commands: GO_COMPLIANCE_INFO=0 CLOUD=azure make test-e2e
      dependencies:
      - env: HIVE_IMAGE
        name: hive
      - env: RELEASE_IMAGE
        name: release:latest
      from: src
      resources:
        requests:
          cpu: 100m
    workflow: ipi-azure
zz_generated_metadata:
  branch: master
  org: openshift
  repo: hive
