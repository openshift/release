base_images:
  assisted-image-service:
    name: ocm-2.8
    namespace: edge-infrastructure
    tag: assisted-image-service
  assisted-installer:
    name: ocm-2.8
    namespace: edge-infrastructure
    tag: assisted-installer
  assisted-installer-controller:
    name: ocm-2.8
    namespace: edge-infrastructure
    tag: assisted-installer-controller
  assisted-service:
    name: ocm-2.8
    namespace: edge-infrastructure
    tag: assisted-service
  assisted-service-index:
    name: assisted-service-index
    namespace: edge-infrastructure
    tag: ocm-2.8
  assisted-service-scripts:
    name: ocm-2.8
    namespace: edge-infrastructure
    tag: assisted-service-scripts
  coreos-centos-stream8:
    name: stream8
    namespace: coreos
    tag: "8"
  dev-scripts:
    name: test
    namespace: ocp-kni
    tag: dev-scripts
  ocp_rhel-8-golang-1.19-openshift-4.13:
    name: builder
    namespace: ocp
    tag: rhel-8-golang-1.19-openshift-4.13
  openshift_release_golang-1.18:
    name: release
    namespace: openshift
    tag: golang-1.18
build_root:
  project_image:
    dockerfile_path: Dockerfile.assisted_installer_agent-build
images:
- dockerfile_path: Dockerfile.assisted_installer_agent
  from: coreos-centos-stream8
  inputs:
    openshift_release_golang-1.18:
      as:
      - registry.ci.openshift.org/openshift/release:golang-1.18
  to: assisted-installer-agent
- dockerfile_literal: |
    FROM base
    COPY . .
  from: src
  to: assisted-installer-agent-src
- dockerfile_literal: |
    FROM test-bin AS builder
    FROM registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.19-openshift-4.13
    COPY --from=builder /usr/bin/golangci-lint /usr/bin/golangci-lint
    COPY --from=builder /go/src/github.com/openshift/assisted-installer-agent /go/src/github.com/openshift/assisted-installer-agent
    WORKDIR /go/src/github.com/openshift/assisted-installer-agent
    ENV GO111MODULE=on
    ENV GOFLAGS=""
    RUN go install golang.org/x/tools/cmd/goimports@v0.1.0 && \
      go install github.com/onsi/ginkgo/ginkgo@v1.16.1 && \
      go install github.com/golang/mock/mockgen@v1.6.0 && \
      go install github.com/vektra/mockery/v2@v2.9.6 && \
      go install gotest.tools/gotestsum@v1.6.3 && \
      go install github.com/axw/gocov/gocov@latest && \
      go install github.com/AlekSi/gocov-xml@latest
    RUN go mod vendor
    RUN mkdir /.cache && chmod 775 -R /.cache ${GOPATH}
    RUN dnf install -y gcc nmstate-devel nmstate-libs && dnf clean all
  inputs:
    ocp_rhel-8-golang-1.19-openshift-4.13:
      as:
      - registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.19-openshift-4.13
    test-bin:
      as:
      - test-bin
  to: assisted-test-bin
promotion:
  name: ocm-2.8
  namespace: edge-infrastructure
releases:
  latest:
    candidate:
      product: ocp
      stream: nightly
      version: "4.13"
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
test_binary_build_commands: |
  go mod vendor
  mkdir /.cache && chmod 775 -R /.cache ${GOPATH}
tests:
- as: publish-multi-arch-images
  postsubmit: true
  steps:
    cluster_profile: packet-assisted
    env:
      DOCKERFILE_IMAGE_PAIRS: |
        Dockerfile.assisted_installer_agent , quay.io/edge-infrastructure/assisted-installer-agent-multi:ocm-2.8
    workflow: assisted-tools-multi-arch
- as: mirror-nightly-image
  cron: '@daily'
  steps:
    dependencies:
      SOURCE_IMAGE_REF: assisted-installer-agent
    env:
      RELEASE_TAG_PREFIX: ocm-2.8
    test:
    - ref: assisted-baremetal-images-publish
- as: mirror-vcsref-image
  postsubmit: true
  steps:
    dependencies:
      SOURCE_IMAGE_REF: assisted-installer-agent
    env:
      RELEASE_TAG_PREFIX: ocm-2.8
    test:
    - ref: assisted-baremetal-images-publish
- as: lint
  commands: |
    export GOLANGCI_LINT_CACHE=/tmp/.cache
    export GOPROXY=https://proxy.golang.org
    export "GOROOT=$(go env GOROOT)"
    make lint
  container:
    from: assisted-test-bin
  skip_if_only_changed: ^\.github/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|LICENSE)$
- as: unit-test
  commands: |
    export CODECOV_TOKEN=$(cat /tmp/secret/codecov-token)
    make REPORTS=${ARTIFACT_DIR} unit-test
  container:
    from: assisted-test-bin
  secret:
    mount_path: /tmp/secret
    name: assisted-installer-agent-codecov-token
  skip_if_only_changed: ^\.github/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|LICENSE)$
- as: unit-test-postsubmit
  commands: |
    export CODECOV_TOKEN=$(cat /tmp/secret/codecov-token)
    make REPORTS=${ARTIFACT_DIR} unit-test
  container:
    from: assisted-test-bin
  postsubmit: true
  secret:
    mount_path: /tmp/secret
    name: assisted-installer-agent-codecov-token
- as: subsystem-test
  skip_if_only_changed: ^\.github/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|LICENSE)$
  steps:
    cluster_profile: packet-assisted
    workflow: assisted-agent
- as: subsystem-test-periodic
  cron: 00 00 */1 * 0-5
  steps:
    cluster_profile: packet-assisted
    workflow: assisted-agent
- as: e2e-ai-operator-ztp
  skip_if_only_changed: ^\.github/|\.md$|^(?:.*/)?(?:\.gitignore|OWNERS|OWNERS_ALIASES|LICENSE)$
  steps:
    cluster_profile: packet-assisted
    dependencies:
      ASSISTED_OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
      INDEX_IMAGE: assisted-service-index
      OPENSHIFT_INSTALL_RELEASE_IMAGE: release:latest
    workflow: assisted-baremetal-operator-ztp
zz_generated_metadata:
  branch: release-ocm-2.8
  org: openshift
  repo: assisted-installer-agent
