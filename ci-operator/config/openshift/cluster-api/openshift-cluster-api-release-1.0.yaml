base_images:
  base:
    name: "4.9"
    namespace: ocp
    tag: base
build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.16
images:
- build_args:
  - name: builder_image
    value: registry.ci.openshift.org/ocp/builder:rhel-8-golang-1.16-openshift-4.10
  - name: ARCH
    value: amd64
  - name: ldflags
  dockerfile_literal: |-
    ARG builder_image
    FROM ${builder_image} as builder
    WORKDIR /workspace

    # Run this with docker build --build-arg goproxy=$(go env GOPROXY) to override the goproxy
    ARG goproxy=https://proxy.golang.org
    # Run this with docker build --build-arg package=./controlplane/kubeadm or --build-arg package=./bootstrap/kubeadm
    ENV GOPROXY=$goproxy
    ENV GOFLAGS="-mod=readonly"

    # Copy the Go Modules manifests
    COPY go.mod go.mod
    COPY go.sum go.sum

    # Cache deps before building and copying source so that we don't need to re-download as much
    # and so that source changes don't invalidate our downloaded layer
    RUN --mount=type=cache,target=/go/pkg/mod \
        go mod download

    # Copy the sources
    COPY ./ ./

    # Cache the go build into the the Goâ€™s compiler cache folder so we take benefits of compiler caching across docker build calls
    RUN --mount=type=cache,target=/root/.cache/go-build \
        --mount=type=cache,target=/go/pkg/mod \
        go build .

    # Build
    ARG package=.
    ARG ARCH
    ARG ldflags

    # Do not force rebuild of up-to-date packages (do not use -a) and use the compiler cache folder
    RUN --mount=type=cache,target=/root/.cache/go-build \
        --mount=type=cache,target=/go/pkg/mod \
        CGO_ENABLED=0 GOOS=linux GOARCH=${ARCH} \
        go build -mod=readonly -ldflags "${ldflags} -extldflags '-static'" \
        -o manager ${package}

    # Production image
    FROM quay.io/openshift/origin-base:4.9
    WORKDIR /
    COPY --from=builder /workspace/manager .
    # Use uid of nonroot user (65532) because kubernetes expects numeric user when applying pod security policies
    USER 65532
    ENTRYPOINT ["/manager"]
  from: base
  to: cluster-api
promotion:
  to:
  - namespace: hypershift
    tag: v1.0.0
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
zz_generated_metadata:
  branch: release-1.0
  org: openshift
  repo: cluster-api
