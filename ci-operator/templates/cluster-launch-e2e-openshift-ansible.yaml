# TODO: This file has the wrong name and needs to be refactored
kind: Template
apiVersion: template.openshift.io/v1

parameters:
- name: JOB_NAME_SAFE
  required: true
- name: JOB_NAME_HASH
  required: true
- name: NAMESPACE
  required: true
- name: IMAGE_FORMAT
  required: true
- name: IMAGE_ANSIBLE
  required: true
- name: IMAGE_TESTS
  required: true
- name: RPM_REPO
  required: true
- name: RPM_REPO_OPENSHIFT_ORIGIN
- name: CLUSTER_TYPE
  required: true
- name: TEST_SUITE
- name: TEST_FOCUS
- name: TEST_SKIP
  value: "\\[local\\]"
- name: TEST_SUITE_SERIAL
- name: TEST_FOCUS_SERIAL
- name: TEST_SKIP_SERIAL
  value: "\\[local\\]"
- name: TEST_COMMAND

objects:

# We want the cluster to be able to access these images
- kind: RoleBinding
  apiVersion: authorization.openshift.io/v1
  metadata:
    name: ${JOB_NAME_SAFE}-image-puller
    namespace: ${NAMESPACE}
  roleRef:
    name: system:image-puller
  subjects:
  - kind: SystemGroup
    name: system:unauthenticated

# The e2e pod spins up a cluster, runs e2e tests, and then cleans up the cluster.
- kind: Pod
  apiVersion: v1
  metadata:
    name: ${JOB_NAME_SAFE}
    namespace: ${NAMESPACE}
    annotations:
      # we want to gather the teardown logs no matter what
      ci-operator.openshift.io/wait-for-container-artifacts: teardown
  spec:
    restartPolicy: Never
    activeDeadlineSeconds: 10800
    terminationGracePeriodSeconds: 600
    volumes:
    - name: artifacts
      emptyDir: {}
    - name: shared-tmp
      emptyDir: {}
    - name: shared-inventory
      emptyDir: {}
    - name: cluster-profile
      secret:
        secretName: ${JOB_NAME_SAFE}-cluster-profile

    containers:

    # Runs an install
    - name: setup
      image: ${IMAGE_ANSIBLE}
      volumeMounts:
      - name: shared-tmp
        mountPath: /tmp/shared
      - name: shared-inventory
        mountPath: /usr/share/ansible/openshift-ansible/test/ci/inventory
      - name: artifacts
        mountPath: /tmp/artifacts
      - name: cluster-profile
        mountPath: /usr/local/e2e-aws-cluster-profile
      env:
      - name: INSTANCE_PREFIX
        value: ${NAMESPACE}-${JOB_NAME_HASH}
      - name: TYPE
        value: ${CLUSTER_TYPE}
      - name: ANSIBLE_STDOUT_CALLBACK
        value: yaml
      - name: HOME
        value: /tmp
      - name: RPM_REPO
        value: ${RPM_REPO}
      command:
      - /usr/local/bin/entrypoint-provider
      args:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        trap 'rc=$?; gzip /tmp/artifacts/*.log; if [[ $rc -ne 0 ]]; then touch /tmp/shared/exit; fi; exit $rc' EXIT
        trap 'kill $(jobs -p); exit 0' TERM

        if [[ -n "${RPM_REPO_OPENSHIFT_ORIGIN-}" ]]; then
          RPM_REPO="${RPM_REPO_OPENSHIFT_ORIGIN}"
        fi

        cd /usr/share/ansible/openshift-ansible/
        mkdir -p test/ci/inventory/group_vars/OSEv3
        echo "localhost ansible_connection=local" > test/ci/inventory/hosts
        cp -f /usr/local/e2e-aws-cluster-profile/vars.yaml test/ci/
        cp -f /usr/local/e2e-aws-cluster-profile/vars-origin.yaml test/ci/inventory/group_vars/OSEv3

        mkdir ~/.ssh
        cp -f /usr/local/e2e-aws-cluster-profile/ssh-privatekey ~/.ssh/id_rsa
        chmod 0600 ~/.ssh/id_rsa
        cp -f /usr/local/e2e-aws-cluster-profile/.awscred /etc/boto.cfg

        cd /usr/share/ansible/openshift-ansible
        ansible-playbook -vvv \
          -i test/ci/inventory \
          test/ci/launch.yml | tee -a /tmp/artifacts/ansible.log

        ansible -vvv \
          -i test/ci/inventory masters \
          -m fetch -a 'src=/etc/origin/master/admin.kubeconfig dest=/tmp/shared/ flat=true'

    # Performs cleanup of all created resources
    - name: teardown
      image: ${IMAGE_ANSIBLE}
      volumeMounts:
      - name: shared-tmp
        mountPath: /tmp/shared
      - name: shared-inventory
        mountPath: /usr/share/ansible/openshift-ansible/test/ci/inventory
      - name: artifacts
        mountPath: /tmp/artifacts
      - name: cluster-profile
        mountPath: /usr/local/e2e-aws-cluster-profile
      env:
      - name: INSTANCE_PREFIX
        value: ${NAMESPACE}-${JOB_NAME_HASH}
      - name: TYPE
        value: ${CLUSTER_TYPE}
      command:
      - /usr/local/bin/entrypoint-provider
      args:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        function teardown() {
          set +e
          touch /tmp/shared/exit

          echo "Deprovisioning cluster ..."
          mkdir ~/.ssh
          cp -f /usr/local/e2e-aws-cluster-profile/ssh-privatekey ~/.ssh/id_rsa
          chmod 0600 ~/.ssh/id_rsa
          cp -f /usr/local/e2e-aws-cluster-profile/.awscred /etc/boto.cfg

          cd /usr/share/ansible/openshift-ansible/
          echo "localhost ansible_connection=local" > test/ci/inventory/hosts
          cp -f /usr/local/e2e-aws-cluster-profile/vars.yaml test/ci/vars.yml
          ansible-playbook -vvv -i test/ci/inventory test/ci/deprovision.yml
        }

        trap 'teardown' EXIT
        trap 'kill $(jobs -p); exit 0' TERM

        for i in `seq 1 120`; do
          if [[ -f /tmp/shared/exit ]]; then
            exit 0
          fi
          sleep 60 & wait
        done
