kind: Template
apiVersion: template.openshift.io/v1

parameters:
- name: JOB_NAME_SAFE
  required: true
- name: JOB_NAME_HASH
  required: true
- name: LOCAL_IMAGE_BIN
  required: true
- name: IMAGE_SYNC
  required: true
- name: IMAGE_ETCDBACKUP
  required: true
- name: IMAGE_AZURE_CONTROLLERS
  required: true
- name: NAMESPACE
  required: true
- name: CLUSTER_TYPE
  value: "azure"
  required: true
- name: TEST_IN_PRODUCTION
- name: MANIFEST
- name: EXEC
- name: UPDATE_MANIFEST
- name: UPDATE_EXEC
- name: ARTIFACT_DIR

objects:

# We want the cluster to be able to access these images
- kind: RoleBinding
  apiVersion: authorization.openshift.io/v1
  metadata:
    name: ${JOB_NAME_SAFE}-image-puller
    namespace: ${NAMESPACE}
  roleRef:
    name: system:image-puller
  subjects:
  - kind: SystemGroup
    name: system:unauthenticated

- kind: Pod
  apiVersion: v1
  metadata:
    name: ${JOB_NAME_SAFE}
    namespace: ${NAMESPACE}
    annotations:
      ci-operator.openshift.io/wait-for-container-artifacts: allinone
      ci-operator.openshift.io/save-container-logs: "true"
  spec:
    restartPolicy: Never
    activeDeadlineSeconds: 10800
    terminationGracePeriodSeconds: 600
    volumes:
    - name: artifacts
      emptyDir: {}
    - name: cluster-secrets-azure
      secret:
        secretName: azure

    containers:
    - name: allinone
      image: ${LOCAL_IMAGE_BIN}
      imagePullPolicy: Always
      volumeMounts:
      - name: cluster-secrets-azure
        mountPath: /etc/azure/credentials
      - name: artifacts
        mountPath: ${ARTIFACT_DIR}
      env:
      - name: ARTIFACT_DIR
        value: ${ARTIFACT_DIR}
      - name: INSTANCE_PREFIX
        value: ${NAMESPACE}-${JOB_NAME_HASH}
      - name: TYPE
        value: ${CLUSTER_TYPE}
      - name: SYNC_IMAGE
        value: ${IMAGE_SYNC}
      - name: ETCDBACKUP_IMAGE
        value: ${IMAGE_ETCDBACKUP}
      - name: AZURE_CONTROLLERS_IMAGE
        value: ${IMAGE_AZURE_CONTROLLERS}
      - name: RUNNING_UNDER_TEST
        value: "true"
      - name: RESOURCEGROUP_TTL
        value: 4h
      - name: TEST_IN_PRODUCTION
        value: ${TEST_IN_PRODUCTION}
      - name: MANIFEST
        value: ${MANIFEST}
      - name: EXEC
        value: ${EXEC}
      - name: UPDATE_MANIFEST
        value: ${UPDATE_MANIFEST}
      - name: UPDATE_EXEC
        value: ${UPDATE_EXEC}
      command:
      - /bin/bash
      - -c
      - |
       #!/bin/bash
        set -euo pipefail

        # azure credentials
        source /etc/azure/credentials/secret

        # aad integration configuration - we dont test aad so populate as dummy
        export AZURE_AAD_CLIENT_ID=$AZURE_CLIENT_ID
        export AZURE_AAD_CLIENT_SECRET=$AZURE_CLIENT_SECRET

        echo "Using sync image ${SYNC_IMAGE}"
        echo "Using etcdbackup image ${ETCDBACKUP_IMAGE}"
        echo "Using azure-controllers image ${AZURE_CONTROLLERS_IMAGE}"
        export DNS_DOMAIN=osadev.cloud
        export DNS_RESOURCEGROUP=dns
        export DEPLOY_VERSION=v3.11

        # create cluster for test
        cd /go/src/github.com/openshift/openshift-azure/
        ./test/e2e.sh ${INSTANCE_PREFIX}
