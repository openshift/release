chain:
  as: hypershift-conformance
  steps:
  - as: conformance-tests
    from: tests
    commands: |-
      CLUSTER_NAME="$(echo -n $PROW_JOB_ID|sha256sum|cut -c-20)"
      export HYPERSHIFT_MANAGEMENT_CLUSTER_KUBECONFIG="${KUBECONFIG}"
      export HYPERSHIFT_MANAGEMENT_CLUSTER_NAMESPACE="$(echo -n clusters-${CLUSTER_NAME}|sed 's#\.#-#g')"
      export AWS_SHARED_CREDENTIALS_FILE=/etc/hypershift-pool-aws-credentials/credentials
      [[ -n ${CLUSTER_PROFILE_DIR:-} ]] && export AZURE_AUTH_LOCATION=${CLUSTER_PROFILE_DIR}/osServicePrincipal.json
      export KUBECONFIG=${SHARED_DIR}/nested_kubeconfig
      if [ -f "${SHARED_DIR}/proxy-conf.sh" ] ; then
        source "${SHARED_DIR}/proxy-conf.sh"
      fi

      CLUSTER_TYPE="$(oc get infrastructure cluster -ojsonpath='{.status.platform}'|tr '[:upper:]' '[:lower:]')"
      case "${CLUSTER_TYPE}" in
      gcp)
          PROJECT="$(oc get -o jsonpath='{.status.platformStatus.gcp.projectID}' infrastructure cluster)"
          REGION="$(oc get -o jsonpath='{.status.platformStatus.gcp.region}' infrastructure cluster)"
          export TEST_PROVIDER="{\"type\":\"gce\",\"region\":\"${REGION}\",\"multizone\": true,\"multimaster\":true,\"projectid\":\"${PROJECT}\"}"
          ;;
      aws|aws-arm64)
          REGION="$(oc get -o jsonpath='{.status.platformStatus.aws.region}' infrastructure cluster)"
          ZONE="$(oc get -o jsonpath='{.items[0].metadata.labels.failure-domain\.beta\.kubernetes\.io/zone}' nodes)"
          export TEST_PROVIDER="{\"type\":\"aws\",\"region\":\"${REGION}\",\"zone\":\"${ZONE}\",\"multizone\":true,\"multimaster\":true}"
          ;;
      azure4|azure) export TEST_PROVIDER=azure;;
      azurestack)
          export TEST_PROVIDER="none"
          ;;
      vsphere)
          export TEST_PROVIDER=vsphere;;
      alibabacloud)
          REGION="$(oc get -o jsonpath='{.status.platformStatus.alibabacloud.region}' infrastructure cluster)"
          export TEST_PROVIDER="{\"type\":\"alibabacloud\",\"region\":\"${REGION}\",\"multizone\":true,\"multimaster\":true}"
          export KUBE_SSH_USER=core
      ;;
      openstack*)
          # shellcheck disable=SC1090
          source "${SHARED_DIR}/cinder_credentials.sh"
          if test -n "${HTTP_PROXY:-}" -o -n "${HTTPS_PROXY:-}"; then
              export TEST_PROVIDER='{"type":"openstack","disconnected":true}'
          else
              export TEST_PROVIDER='{"type":"openstack"}'
          fi
          ;;
      ovirt) export TEST_PROVIDER='{"type":"ovirt"}';;
      none)
          export TEST_PROVIDER='{"type":"baremetal","disconnected":true}'
          ;;
      ibmcloud)
          export TEST_PROVIDER='{"type":"ibmcloud"}'
          IC_API_KEY="$(< "${CLUSTER_PROFILE_DIR}/ibmcloud-api-key")"
          export IC_API_KEY
          ;;
      kubevirt)
          export TEST_PROVIDER='{"type":"kubevirt"}'

          # These are known tests that will not pass with the KubeVirt Platform right now
          # Resolving these test skips are all being tracked in this epic, https://issues.redhat.com/browse/CNV-30259
          #
          # https://issues.redhat.com/browse/CNV-30268
          if [[ -z "$TEST_SKIPS" ]]; then
              TEST_SKIPS='should serve endpoints on same port and different protocol for internal traffic on Type LoadBalancer'
          else
              TEST_SKIPS=$TEST_SKIPS'\|should serve endpoints on same port and different protocol for internal traffic on Type LoadBalancer'
          fi

          # This looks counterintuitive. Here's an explanation.
          #
          # There technically isn't a parallel minimal test suite. Some of the older KubeVirt
          # platform versions need to be limited to just to tests marked as minimal.
          #
          # By using the "openshift/conformance/parallel" test suite, but filtering out
          # everything that matches exactly to the "openshift/conformance/parallel" test suite,
          # we are left with just the "openshift/conformance/parallel/minmal" test entries.
          #
          # This might not be the best long term solution, but these older KubeVirt platform
          # tests won't be maintained for long and are not a part of any GA.
          if [[ "${TEST_SUITE}" == "openshift/conformance/parallel/minimal" ]]; then
              TEST_SKIPS=$TEST_SKIPS"\|\[Suite:openshift/conformance/parallel\]"
              TEST_SUITE="openshift/conformance/parallel"
          fi

          ;;
      *) echo >&2 "Unsupported cluster type '${CLUSTER_TYPE}'"; exit 1;;
      esac

      if [[ -n "${TEST_SKIPS}" ]]; then
          TESTS="$(openshift-tests run --dry-run --provider "${TEST_PROVIDER}" "${TEST_SUITE}")"
          echo "${TESTS}" | grep -v "${TEST_SKIPS}" >/tmp/tests
          echo "Skipping tests:"
          echo "${TESTS}" | grep "${TEST_SKIPS}" || { exit_code=$?; echo 'Error: no tests were found matching the TEST_SKIPS regex:'; echo "$TEST_SKIPS"; return $exit_code; }
          TEST_ARGS="${TEST_ARGS:-} --file /tmp/tests"
      fi

      openshift-tests run ${TEST_SUITE} ${TEST_ARGS:-} \
        --provider "${TEST_PROVIDER}" \
        -o "${ARTIFACT_DIR}/e2e.log" \
        --junit-dir "${ARTIFACT_DIR}/junit"
    credentials:
    - mount_path: /etc/hypershift-pool-aws-credentials
      name: hypershift-pool-aws-credentials
      namespace: test-credentials
    timeout: 14400s
    env:
    - name: TEST_ARGS
      default: ""
      documentation: |-
        Additional arguments to be passed to 'openshift-test'
    - name: TEST_SUITE
      default: openshift/conformance/parallel
      documentation: |-
        The test suite to run. Defaults to openshift/conformance/parallel
    - name: TEST_SKIPS
      default: ""
      documentation: |
        Regular expression (POSIX basic regular expression) of tests to skip.
        It is suggested to test the regex to make sure that it matches with the available tests.
        Tests can be listed by using 'openshift-tests run --dry-run (...)'. Sometimes, the tests
        that are printed in Prow won't exactly match the list returned by openshift-tests.
    resources:
      requests:
        cpu: "3"
        memory: 600Mi
