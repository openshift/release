chain:
  as: hypershift-kubevirt-run-e2e-external
  steps:
  - ref: hypershift-kubevirt-create
    credentials:
      - mount_path: /etc/ci-pull-credentials
        name: ci-pull-credentials
        namespace: test-credentials
    dependencies:
      - env: OCP_IMAGE_LATEST
        name: release:latest
      - env: OCP_IMAGE_PREVIOUS
        name: release:initial
      - env: CI_HYPERSHIFT_OPERATOR
        name: pipeline:hypershift-operator
  - ref: hypershift-kubevirt-health-check
  - ref: hypershift-kubevirt-install-hypershift
    env:
      - default: "${SHARED_DIR}/nested_kubeconfig"
        name: KUBECONFIG
  - ref: hypershift-kubevirt-install-create-external-infra-kubeconfig
    env:
      - default: "/tmp/secret/kubeconfig"
        name: KUBECONFIG
      - default: "/tmp/secret/restricted_infra_kubeconfig"
        name: RESTRICTED_INFRA_KUBECONFIG
      - default: "guest-external-infra-ns"
        name: EXTERNAL_INFRA_NS
  - as: run-e2e-external
    cli: latest
    commands: |-
        function cleanup() {
          for child in $( jobs -p ); do
            kill "${child}"
          done
          wait
        }
        trap cleanup EXIT

        if [ "${RUN_EXTERNAL_INFRA_TEST}" == "false" ]
        then
          echo "External infra test suite is not supported in this version and skipped."
          exit 0
        fi
      
        STORAGE_CLASS_FLAG=""
        if [[ -n ${ETCD_STORAGE_CLASS} ]]; then
          STORAGE_CLASS_FLAG="--e2e.etcd-storage-class=${ETCD_STORAGE_CLASS}"
        fi
      
        export KUBECONFIG="${SHARED_DIR}/nested_kubeconfig"
        export RESTRICTED_INFRA_KUBECONFIG="/tmp/secret/restricted_infra_kubeconfig"
      
        INFRA_PLATFORM_TYPE=$(oc --kubeconfig /tmp/secret/kubeconfig get infrastructure cluster -o jsonpath='{.status.platformStatus.type}')

        while [ ! -e "${RESTRICTED_INFRA_KUBECONFIG}" ]; do
          sleep 10
          echo "Waiting for "${RESTRICTED_INFRA_KUBECONFIG}" file to appear"
        done
        echo "The user used against the external infra cluster: $(oc --kubeconfig ${RESTRICTED_INFRA_KUBECONFIG} whoami)
        echo "Permissions of this user on ${EXTERNAL_INFRA_NS} namespace on the external infra cluster:
        oc --kubeconfig "${RESTRICTED_INFRA_KUBECONFIG}" auth can-i --list --namespace ${EXTERNAL_INFRA_NS}
      
        # run external infra e2e test
        hack/ci-test-e2e.sh \
                  --test.v \
                  --test.timeout=0 \
                  --test.run='^TestCreateCluster$|TestAutoscaling' \
                  --e2e.node-pool-replicas=2 \
                  --e2e.kubevirt-node-memory="12Gi" \
                  --e2e.kubevirt-node-cores="4" \
                  --e2e.platform="KubeVirt" \
                  --e2e.latest-release-image=${OCP_IMAGE_LATEST} \
                  --e2e.previous-release-image=${OCP_IMAGE_PREVIOUS} \
                  --e2e.pull-secret-file=/etc/ci-pull-credentials/.dockerconfigjson \
                  --e2e.kubevirt-infra-kubeconfig=${RESTRICTED_INFRA_KUBECONFIG} \
                  ${STORAGE_CLASS_FLAG} \
                  --e2e.kubevirt-infra-namespace=${EXTERNAL_INFRA_NS} \
                  --e2e.annotations=hypershift.openshift.io/management-platform=${INFRA_PLATFORM_TYPE}

    credentials:
      - mount_path: /etc/ci-pull-credentials
        name: ci-pull-credentials
        namespace: test-credentials
    dependencies:
      - env: OCP_IMAGE_LATEST
        name: release:latest
      - env: OCP_IMAGE_PREVIOUS
        name: release:initial
      - env: CI_HYPERSHIFT_OPERATOR
        name: pipeline:hypershift-operator
    env:
      - default: "${SHARED_DIR}/nested_kubeconfig"
        name: KUBECONFIG
      - default: "true"
        name: RUN_EXTERNAL_INFRA_TEST
      - default: "guest-external-infra-ns"
        name: EXTERNAL_INFRA_NS
      - default: ""
        name: ETCD_STORAGE_CLASS
    from: test-bin
    grace_period: 30m0s
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    timeout: 1h0m0s
  - chain: hypershift-kubevirt-destroy
    env:
      - default: "/tmp/secret/kubeconfig"
        name: KUBECONFIG
