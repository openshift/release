chain:
  as: hypershift-mce-aws-create
  steps:
    - as: create-hostedcluster
      cli: latest
      env:
        - name: HYPERSHIFT_NODE_COUNT
          default: "3"
          documentation: "The number nodes to automatically create and join to the cluster."
        - name: HYPERSHIFT_BASE_DOMAIN
          default: "origin-ci-int-aws.dev.rhcloud.com"
          documentation: "The cluster's FQDN will be a subdomain of the base domain."
        - name: HYPERSHIFT_AWS_REGION
          default: "us-east-1"
          documentation: "The AWS region of the cluster."
      commands: |-
        set -exuo pipefail

        arch=$(arch)
        if [ "$arch" == "x86_64" ]; then
          downURL=$(oc get ConsoleCLIDownload hypershift-cli-download -o json | jq -r '.spec.links[] | select(.text | test("Linux for x86_64")).href') && curl -k --output /tmp/hypershift.tar.gz ${downURL}
          cd /tmp && tar -xvf /tmp/hypershift.tar.gz
          chmod +x /tmp/hypershift
          cd -
        fi

        CLUSTER_NAME="$(echo -n $PROW_JOB_ID|sha256sum|cut -c-20)"
        echo "$(date) Creating HyperShift cluster ${CLUSTER_NAME}"
      
        /tmp/hypershift create cluster aws \
        --name ${CLUSTER_NAME} \
        --infra-id ${CLUSTER_NAME} \
        --node-pool-replicas ${HYPERSHIFT_NODE_COUNT} \
        --base-domain ${HYPERSHIFT_BASE_DOMAIN} \
        --region ${HYPERSHIFT_AWS_REGION} \
        --pull-secret=/etc/ci-pull-credentials/.dockerconfigjson \
        --aws-creds ${CLUSTER_PROFILE_DIR}/.awscred \
        --namespace local-cluster \
        --additional-tags="expirationDate=$(date -d '4 hours' --iso=minutes --utc)"
        
        oc annotate hostedclusters -n local-cluster ${CLUSTER_NAME} "cluster.open-cluster-management.io/managedcluster-name=${CLUSTER_NAME}" --overwrite
        oc apply -f - <<EOF
        apiVersion: cluster.open-cluster-management.io/v1
        kind: ManagedCluster
        metadata:
          annotations:
            import.open-cluster-management.io/hosting-cluster-name: local-cluster
            import.open-cluster-management.io/klusterlet-deploy-mode: Hosted
            open-cluster-management/created-via: other
          labels:
            cloud: auto-detect
            cluster.open-cluster-management.io/clusterset: default
            name: ${CLUSTER_NAME}
            vendor: OpenShift
          name: ${CLUSTER_NAME}
        spec:
          hubAcceptsClient: true
          leaseDurationSeconds: 60
        EOF
        
        echo "Waiting for cluster to become available"
        oc wait --timeout=30m --for=condition=Available --namespace=local-cluster hostedcluster/${CLUSTER_NAME}
        echo "Cluster became available, creating kubeconfig"
        /tmp/hypershift create kubeconfig --namespace=local-cluster --name=${CLUSTER_NAME} >${SHARED_DIR}/nested_kubeconfig
        echo "Waiting for clusteroperators to be ready"
        export KUBECONFIG=${SHARED_DIR}/nested_kubeconfig
        until \
        oc wait clusterversion/version --for='condition=Available=True' > /dev/null;  do
        echo "$(date --rfc-3339=seconds) Clusteroperators not yet ready"
        oc get clusterversion 2>/dev/null || true
        sleep 10s
        done
        echo "Waiting for ManagedCluster to be ready"
        export KUBECONFIG=${SHARED_DIR}/kubeconfig
        oc get secret -n "local-cluster-$CLUSTER_NAME" kubeadmin-password --template='{{.data.password | base64decode}}' > "$SHARED_DIR/hostedcluster_kubeadmin_password"
        until \
        oc wait managedcluster ${CLUSTER_NAME} --for='condition=ManagedClusterJoined' >/dev/null && \
        oc wait managedcluster ${CLUSTER_NAME} --for='condition=ManagedClusterConditionAvailable' >/dev/null && \
        oc wait managedcluster ${CLUSTER_NAME} --for='condition=HubAcceptedManagedCluster' >/dev/null;  do
        echo "$(date --rfc-3339=seconds) ManagedCluster not yet ready"
        sleep 10s
        done
      from_image:
        namespace: ocp
        name: "4.12"
        tag: upi-installer
      grace_period: 5m0s
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      timeout: 30m0s
      credentials:
        - mount_path: /etc/ci-pull-credentials
          name: ci-pull-credentials
          namespace: test-credentials
      dependencies:
        - name: "release:latest"
          env: RELEASE_IMAGE_LATEST
        - name: hypershift-operator
          env: HYPERSHIFT_RELEASE_LATEST
