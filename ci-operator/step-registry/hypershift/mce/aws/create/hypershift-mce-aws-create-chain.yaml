chain:
  as: hypershift-mce-aws-create
  steps:
    - as: create-hostedcluster
      cli: latest
      env:
        - name: MCE_VERSION
          default: "2.2"
          documentation: "version of the mce.(2.2, 2.3, 2.4)"
        - name: HYPERSHIFT_NODE_COUNT
          default: "3"
          documentation: "The number nodes to automatically create and join to the cluster."
        - name: HYPERSHIFT_BASE_DOMAIN
          default: "origin-ci-int-aws.dev.rhcloud.com"
          documentation: "The cluster's FQDN will be a subdomain of the base domain."
        - name: HYPERSHIFT_AWS_REGION
          default: "us-east-1"
          documentation: "The AWS region of the cluster."
        - name: ENABLE_ICSP
          default: "false"
          documentation: "if true, add image content sources config(path=${SHARED_DIR}/mgmt_icsp.yaml)"
        - default: '|7820aea2-0d75-11e7-9259-28d244ea5a6d.hhav.f63e13'
          name: BREW_IMAGE_REGISTRY_USERNAME
        - default: /var/run/brew-pull-secret/token
          name: BREW_IMAGE_REGISTRY_TOKEN_PATH
      commands: |-
        set -exuo pipefail

        MCE_VERSION=$(oc get "$(oc get multiclusterengines -oname)" -ojsonpath="{.status.currentVersion}" | cut -c 1-3)
        HYPERSHIFT_NAME=hcp
        if (( $(awk 'BEGIN {print ("'"$MCE_VERSION"'" < 2.4)}') )); then
          echo "MCE version is less than 2.4, use hypershift command"
          HYPERSHIFT_NAME=hypershift
        else
          set +x
          echo "MCE version is greater than or equal to 2.4, need to extract HyperShift cli"
          oc extract secret/pull-secret -n openshift-config --to=/tmp --confirm
          HO_IMAGE=$(oc get deployment -n hypershift operator -ojsonpath='{.spec.template.spec.containers[*].image}')
          mkdir /tmp/hs-cli
          brew_registry_auth=$(echo -n "${BREW_IMAGE_REGISTRY_USERNAME}:$(<$BREW_IMAGE_REGISTRY_TOKEN_PATH)" | base64 -w 0)
          echo '{}' | jq --arg auth "$brew_registry_auth" '.auths += {"brew.registry.redhat.io": {"auth": $auth}}' > /tmp/brew_configjson
          oc image extract "brew.${HO_IMAGE}" --path /usr/bin/hypershift-no-cgo:/tmp/hs-cli --registry-config=/tmp/brew_configjson
          chmod +x /tmp/hs-cli/hypershift-no-cgo
          set -x
        fi

        arch=$(arch)
        if [ "$arch" == "x86_64" ]; then
          downURL=$(oc get ConsoleCLIDownload ${HYPERSHIFT_NAME}-cli-download -o json | jq -r '.spec.links[] | select(.text | test("Linux for x86_64")).href') && curl -k --output /tmp/${HYPERSHIFT_NAME}.tar.gz ${downURL}
          cd /tmp && tar -xvf /tmp/${HYPERSHIFT_NAME}.tar.gz
          chmod +x /tmp/${HYPERSHIFT_NAME}
          cd -
        fi

        CLUSTER_NAME="$(echo -n $PROW_JOB_ID|sha256sum|cut -c-20)"
        echo "$(date) Creating HyperShift cluster ${CLUSTER_NAME}"

        PULL_SECRET_PATH="/etc/ci-pull-credentials/.dockerconfigjson"
        ICSP_COMMAND=""
        if [[ $ENABLE_ICSP == "true" ]]; then
          ICSP_COMMAND=$(echo "--image-content-sources ${SHARED_DIR}/mgmt_icsp.yaml")
          echo "extract secret/pull-secret"
          oc extract secret/pull-secret -n openshift-config --to=/tmp --confirm
          PULL_SECRET_PATH="/tmp/.dockerconfigjson"
        fi
        
        CRED_COMMAND=""
        if (( $(awk 'BEGIN {print ("'"$MCE_VERSION"'" < 2.6)}') )); then
          echo "MCE version is less than 2.6, use --aws-creds command"
          CRED_COMMAND=$(echo "--aws-creds ${CLUSTER_PROFILE_DIR}/.awscred")
        else
          set +x
          export AWS_SHARED_CREDENTIALS_FILE="${CLUSTER_PROFILE_DIR}/.awscred"
          export AWS_REGION=${HYPERSHIFT_AWS_REGION}
          /tmp/hs-cli/hypershift-no-cgo create iam cli-role --name ${CLUSTER_NAME} --aws-creds ${AWS_SHARED_CREDENTIALS_FILE}
          aws sts get-session-token --output json > ${SHARED_DIR}/sts-creds.json
          ACCOUNT=$(aws sts get-caller-identity | jq -r '.Account')
          echo "arn:aws:iam::$ACCOUNT:role/$CLUSTER_NAME" > ${SHARED_DIR}/hcp-role-arn
          set -x
          CRED_COMMAND=$(echo "--role-arn $(cat ${SHARED_DIR}/hcp-role-arn) --sts-creds ${SHARED_DIR}/sts-creds.json")  
          sleep 60
        fi
      
        /tmp/${HYPERSHIFT_NAME} create cluster aws ${ICSP_COMMAND} ${CRED_COMMAND} \
        --name ${CLUSTER_NAME} \
        --infra-id ${CLUSTER_NAME} \
        --node-pool-replicas ${HYPERSHIFT_NODE_COUNT} \
        --base-domain ${HYPERSHIFT_BASE_DOMAIN} \
        --region ${HYPERSHIFT_AWS_REGION} \
        --pull-secret ${PULL_SECRET_PATH} \
        --namespace local-cluster \
        --release-image ${RELEASE_IMAGE_LATEST}
        
        if (( $(awk 'BEGIN {print ("'"$MCE_VERSION"'" < 2.4)}') )); then
          echo "MCE version is less than 2.4"
          oc annotate hostedclusters -n local-cluster ${CLUSTER_NAME} "cluster.open-cluster-management.io/managedcluster-name=${CLUSTER_NAME}" --overwrite
          oc apply -f - <<EOF
        apiVersion: cluster.open-cluster-management.io/v1
        kind: ManagedCluster
        metadata:
          annotations:
            import.open-cluster-management.io/hosting-cluster-name: local-cluster
            import.open-cluster-management.io/klusterlet-deploy-mode: Hosted
            open-cluster-management/created-via: other
          labels:
            cloud: auto-detect
            cluster.open-cluster-management.io/clusterset: default
            name: ${CLUSTER_NAME}
            vendor: OpenShift
          name: ${CLUSTER_NAME}
        spec:
          hubAcceptsClient: true
          leaseDurationSeconds: 60
        EOF
        fi
        
        echo "Waiting for cluster to become available"
        oc wait --timeout=30m --for=condition=Available --namespace=local-cluster hostedcluster/${CLUSTER_NAME}
        echo "Cluster became available, creating kubeconfig"
        /tmp/${HYPERSHIFT_NAME} create kubeconfig --namespace=local-cluster --name=${CLUSTER_NAME} >${SHARED_DIR}/nested_kubeconfig
        echo "Waiting for clusteroperators to be ready"
        export KUBECONFIG=${SHARED_DIR}/nested_kubeconfig
        until \
        oc wait clusterversion/version --for='condition=Available=True' > /dev/null;  do
        echo "$(date --rfc-3339=seconds) Clusteroperators not yet ready"
        oc get clusterversion 2>/dev/null || true
        sleep 10s
        done
        echo "Waiting for ManagedCluster to be ready"
        export KUBECONFIG=${SHARED_DIR}/kubeconfig
        until \
        oc wait managedcluster ${CLUSTER_NAME} --for='condition=ManagedClusterJoined' >/dev/null && \
        oc wait managedcluster ${CLUSTER_NAME} --for='condition=ManagedClusterConditionAvailable' >/dev/null && \
        oc wait managedcluster ${CLUSTER_NAME} --for='condition=HubAcceptedManagedCluster' >/dev/null;  do
        echo "$(date --rfc-3339=seconds) ManagedCluster not yet ready"
        sleep 10s
        done
      from_image:
        namespace: ocp
        name: "4.12"
        tag: upi-installer
      grace_period: 5m0s
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      timeout: 30m0s
      credentials:
        - mount_path: /etc/ci-pull-credentials
          name: ci-pull-credentials
          namespace: test-credentials
        - mount_path: /var/run/brew-pull-secret
          name: cnv-ci-brew-pull-secret
          namespace: test-credentials
      dependencies:
        - name: "release:latest"
          env: RELEASE_IMAGE_LATEST
        - name: hypershift-operator
          env: HYPERSHIFT_RELEASE_LATEST
