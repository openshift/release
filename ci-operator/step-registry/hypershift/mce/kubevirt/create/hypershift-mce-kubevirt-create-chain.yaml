chain:
  as: hypershift-mce-kubevirt-create
  steps:
    - as: create-hostedcluster
      cli: latest
      env:
        - name: HYPERSHIFT_NODE_COUNT
          default: "3"
          documentation: "The number nodes to automatically create and join to the cluster."
        - name: ENABLE_ICSP
          default: "false"
          documentation: "if true, add image content sources config(path=${SHARED_DIR}/mgmt_icsp.yaml)"
        - name: ETCD_STORAGE_CLASS
          default: ""
          documentation: |-
            The storage class that will be used for etcd on the hosted control plane.
      commands: |-
        set -exuo pipefail
        
        if [ -f "${SHARED_DIR}/proxy-conf.sh" ] ; then
          source "${SHARED_DIR}/proxy-conf.sh"
        fi

        MCE_VERSION=$(oc get "$(oc get multiclusterengines -oname)" -ojsonpath="{.status.currentVersion}" | cut -c 1-3)
        HYPERSHIFT_NAME=hcp
        if (( $(awk 'BEGIN {print ("'"$MCE_VERSION"'" < 2.4)}') )); then
          echo "MCE version is less than 2.4, use hypershift command"
          HYPERSHIFT_NAME=hypershift
        fi

        arch=$(arch)
        if [ "$arch" == "x86_64" ]; then
          downURL=$(oc get ConsoleCLIDownload ${HYPERSHIFT_NAME}-cli-download -o json | jq -r '.spec.links[] | select(.text | test("Linux for x86_64")).href') && curl -k --output /tmp/${HYPERSHIFT_NAME}.tar.gz ${downURL}
          cd /tmp && tar -xvf /tmp/${HYPERSHIFT_NAME}.tar.gz
          chmod +x /tmp/${HYPERSHIFT_NAME}
          cd -
        fi

        CLUSTER_NAME="$(echo -n $PROW_JOB_ID|sha256sum|cut -c-20)"

        CLUSTER_NAMESPACE=local-cluster-${CLUSTER_NAME}
        echo "$(date) Creating HyperShift cluster ${CLUSTER_NAME}"
        
        PULL_SECRET_PATH="/etc/ci-pull-credentials/.dockerconfigjson"
        ICSP_COMMAND=""
        if [[ $ENABLE_ICSP == "true" ]]; then
          ICSP_COMMAND=$(echo "--image-content-sources ${SHARED_DIR}/mgmt_icsp.yaml")
          echo "extract secret/pull-secret"
          oc extract secret/pull-secret -n openshift-config --to=/tmp --confirm
          PULL_SECRET_PATH="/tmp/.dockerconfigjson"
        fi
      
        # Enable wildcard routes on the management cluster
        oc patch ingresscontroller -n openshift-ingress-operator default --type=json -p \
          '[{ "op": "add", "path": "/spec/routeAdmission", "value": {wildcardPolicy: "WildcardsAllowed"}}]'

        if [ "$(oc get infrastructure cluster -o=jsonpath='{.status.platformStatus.type}')" == "AWS" ]; then
          if [ -z "$ETCD_STORAGE_CLASS" ]; then
            echo "AWS infra detected. Setting --etcd-storage-class"
            ETCD_STORAGE_CLASS="gp3-csi"
          fi
        fi

        EXTRA_ARGS=""
        if [ -n "${ETCD_STORAGE_CLASS}" ]
        then
          EXTRA_ARGS="${EXTRA_ARGS} --etcd-storage-class=${ETCD_STORAGE_CLASS}"
        fi

        echo "$(date) Creating HyperShift cluster ${CLUSTER_NAME}"
        /tmp/${HYPERSHIFT_NAME} create cluster kubevirt ${EXTRA_ARGS} ${ICSP_COMMAND} \
          --name ${CLUSTER_NAME} \
          --node-pool-replicas ${HYPERSHIFT_NODE_COUNT} \
          --memory 16Gi \
          --cores 4 \
          --root-volume-size 64 \
          --namespace local-cluster \
          --release-image ${RELEASE_IMAGE_LATEST} \
          --pull-secret ${PULL_SECRET_PATH} \
          --generate-ssh

        oc annotate hostedclusters -n local-cluster ${CLUSTER_NAME} "cluster.open-cluster-management.io/managedcluster-name=${CLUSTER_NAME}" --overwrite
        oc apply -f - <<EOF
        apiVersion: cluster.open-cluster-management.io/v1
        kind: ManagedCluster
        metadata:
          annotations:
            import.open-cluster-management.io/hosting-cluster-name: local-cluster
            import.open-cluster-management.io/klusterlet-deploy-mode: Hosted
            open-cluster-management/created-via: other
          labels:
            cloud: auto-detect
            cluster.open-cluster-management.io/clusterset: default
            name: ${CLUSTER_NAME}
            vendor: OpenShift
          name: ${CLUSTER_NAME}
        spec:
          hubAcceptsClient: true
          leaseDurationSeconds: 60
        EOF

        echo "Waiting for cluster to become available"
        oc wait --timeout=30m --for=condition=Available --namespace=local-cluster hostedcluster/${CLUSTER_NAME}
        echo "Cluster became available, creating kubeconfig"
        /tmp/${HYPERSHIFT_NAME} create kubeconfig --namespace=local-cluster --name=${CLUSTER_NAME} >${SHARED_DIR}/nested_kubeconfig

      from_image:
        namespace: ocp
        name: "4.13"
        tag: upi-installer
      grace_period: 5m0s
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      timeout: 50m0s
      credentials:
        - mount_path: /etc/ci-pull-credentials
          name: ci-pull-credentials
          namespace: test-credentials
      dependencies:
        - name: "release:latest"
          env: RELEASE_IMAGE_LATEST
        - name: hypershift-operator
          env: HYPERSHIFT_RELEASE_LATEST
