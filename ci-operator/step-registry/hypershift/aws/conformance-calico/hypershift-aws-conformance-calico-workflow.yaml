workflow:
  as: hypershift-aws-conformance-calico
  documentation: |-
    The HyperShift aws conformance Calico workflow executes tests against a new ephemeral
    HyperShift cluster with Calico CNI installed. Administrative access to the control plane
    is provided via the `KUBECONFIG` environment variable.
  steps:
    env:
      HYPERSHIFT_NETWORK_TYPE: "Other"
      TEST_ARGS: --disable-monitor=service-type-load-balancer-availability
      TEST_SKIPS: The default cluster RBAC policy should have correct RBAC rules\|
        Cluster scoped load balancer healthcheck port and path should be 10256/healthz\|
        Prometheus \[apigroup:image.openshift.io\] when installed on the cluster should
        provide named network metrics\| Unidling \[apigroup:apps.openshift.io\]\[apigroup:route.openshift.io\]
        should work with UDP\| Unidling with Deployments \[apigroup:route.openshift.io\]
        should work with TCP (when fully idled)\| Unidling \[apigroup:apps.openshift.io\]\[apigroup:route.openshift.io\]
        should work with TCP (when fully idled)\| Unidling with Deployments \[apigroup:route.openshift.io\]
        should work with UDP\| pod should not start for sysctls not on whitelist \[apigroup:k8s.cni.cncf.io\]
        net.ipv4.conf.IFNAME.arp_filter\| pod should not start for sysctls not on
        whitelist \[apigroup:k8s.cni.cncf.io\] net.ipv4.conf.all.send_redirects\|
        sysctl allowlist update should start a pod with custom sysctl only when the
        sysctl is added to whitelist\|Ensure HTTPRoute object is created
    post:
    - chain: hypershift-dump
    - chain: hypershift-aws-destroy
    - chain: hypershift-destroy-nested-management-cluster
    test:
    - chain: hypershift-conformance
    pre:
    - ref: ipi-install-rbac
    - chain: hypershift-setup-nested-management-cluster
    - ref: hypershift-install
    - chain: hypershift-aws-create
    - ref: cucushift-hypershift-extended-calico
    - ref: cucushift-hypershift-extended-calico-health-check
