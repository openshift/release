ref:
  as: redhat-chaos-hog-scenarios-memory
  from_image:
    namespace: chaos
    name: krkn
    tag: latest
  commands: redhat-chaos-hog-scenarios-memory-commands.sh
  credentials:
  - namespace: test-credentials
    name: cluster-secrets-aws-chaos
    mount_path: /secret/telemetry
  env:
    - name: TOTAL_CHAOS_DURATION
      default: "600"
    - name: MEMORY_CONSUMPTION_PERCENTAGE
      default: "90%"
    - name: NUMBER_OF_WORKERS
      default: "3"
    - name: TARGET_NAMESPACE
      default: "default"
    - name: NODE_SELECTORS
      default: "node-role.kubernetes.io/worker=" 
    - name: ENABLE_ALERTS
      default: "True"
    - name: ALERTS_PATH
      default: "/root/kraken/config/alerts" 
    - name: CHECK_CRITICAL_ALERTS
      default: "True"
    - name: WAIT_DURATION
      default: "100"
    - name: TELEMETRY_ENABLED
      default: "True"
    - name: TELEMETRY_API_URL
      default: "https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production"
    - name: TELEMETRY_USERNAME
      default: "redhat-chaos"
    - name: TELEMETRY_RUN_TAG
      default: "prow-memory-hog"
    - name: TELEMETRY_PROMETHEUS_BACKUP
      default: "True"
    - name: TELEMETRY_FULL_PROMETHEUS_BACKUP
      default: "True"
    - name: TELEMTRY_BACKUP_THREADS
      default: "5"
    - name: TELEMETRY_ARCHIVE_PATH
      default: "/tmp"
    - name: TELEMETRY_MAX_RETRIES
      default: "0"
    - name: TELEMETRY_ARCHIVE_SIZE
      default: "1000000"
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
  documentation: >-
    This step runs the krkn-hub config workload in the deployed cluster to hog memory and validate SLOs to identify components that do not have proper memory limits set to avoid performance throttling or having an impact on stability/availability.
