workflow:
  as: redhat-chaos-node-disruptions-master-outage
  steps:
    test:
      - ref: redhat-chaos-node-disruptions-master-outage
    env:
      ACTION: "node_stop_start_scenario"
      LABEL_SELECTOR: "node-role.kubernetes.io/master="
      TIMEOUT: "360"
      INSTANCE_COUNT: "1"
      ENABLE_ALERTS: "True"
      ALERTS_PATH: "/tmp/krkn-hub/prow/node-disruptions/slos"       
      CHECK_CRITICAL_ALERTS: "True"
      WAIT_DURATION: "600"     
      TELEMETRY_ENABLED: "True"
      TELEMETRY_API_URL: "https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production"
      TELEMETRY_USERNAME: "redhat-chaos"
      TELEMETRY_RUN_TAG: "prow-hog-cpu"
      TELEMETRY_PROMETHEUS_BACKUP: "True"
      TELEMETRY_FULL_PROMETHEUS_BACKUP: "True"
      TELEMTRY_BACKUP_THREADS: "5"
      TELEMETRY_ARCHIVE_PATH: "/tmp"
      TELEMETRY_MAX_RETRIES: "0"
      TELEMETRY_ARCHIVE_SIZE: "1000000"
      TELEMETRY_LOGS_BACKUP: "True"
      TELEMTRY_CLI_PATH: "/usr/local/bin/oc"
      TELEMETRY_EVENTS_BACKUP: "True"
  documentation: >-
    This step runs the krkn-hub config workload in the deployed cluster to cause master node outage to understand the impact on stability and performance.
