workflow:
  as: redhat-chaos-network-chaos
  steps:
    test:
      - ref: redhat-chaos-network-chaos
    env:
      DURATION: "300"
      NODE_NAME: ""
      LABEL_SELECTOR: "node-role.kubernetes.io/master"
      INSTANCE_COUNT: "1"
      INTERFACES: ""
      EXECUTION: "parallel"
      EGRESS: "{bandwidth: 100mbit}"
      TARGET_NODE_AND_INTERFACE: ""
      NETWORK_PARAMS: ""
      WAIT_DURATION: "300"
      RETRY_WAIT: "60"
      ENABLE_ALERTS: "True"
      ALERTS_PATH: "/root/kraken/config/alerts"       
      CHECK_CRITICAL_ALERTS: "True"
      TELEMETRY_ENABLED: "True"
      TELEMETRY_API_URL: "https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production"
      TELEMETRY_USERNAME: "redhat-chaos"
      TELEMETRY_RUN_TAG: "prow-pvc-fill"
      TELEMETRY_PROMETHEUS_BACKUP: "True"
      TELEMETRY_FULL_PROMETHEUS_BACKUP: "True"
      TELEMTRY_BACKUP_THREADS: "5"
      TELEMETRY_ARCHIVE_PATH: "/tmp"
      TELEMETRY_MAX_RETRIES: "0"
      TELEMETRY_ARCHIVE_SIZE: "1000000"
  documentation: |-
    This workflow runs the krkn-hub config workload in the deployed cluster and introduces network latency, packet loss, bandwidth restriction in the egress traffic of a Node's interface using the tc and Netem.