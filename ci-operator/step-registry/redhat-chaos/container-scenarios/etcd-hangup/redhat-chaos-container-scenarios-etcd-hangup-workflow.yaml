workflow:
  as: redhat-chaos-container-scenarios-etcd-hangup
  steps:
    test:
      - ref: redhat-chaos-container-scenarios-etcd-hangup
    env:
      TARGET_NAMESPACE: "openshift-etcd"
      LABEL_SELECTOR: "k8s-app=etcd"
      DISRUPTION_COUNT: "1"
      CONTAINER_NAME: "etcd"
      ACTION: "kill 1"
      RETRY_WAIT: "60"
      ENABLE_ALERTS: "True"
      ALERTS_PATH: "/root/kraken/config/alerts"       
      CHECK_CRITICAL_ALERTS: "True"
      WAIT_DURATION: "300"      
      TELEMETRY_ENABLED: "True"
      TELEMETRY_API_URL: "https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production"
      TELEMETRY_USERNAME: "redhat-chaos"
      TELEMETRY_RUN_TAG: "prow-etcd-container-hangup"
      TELEMETRY_PROMETHEUS_BACKUP: "True"
      TELEMETRY_FULL_PROMETHEUS_BACKUP: "True"
      TELEMTRY_BACKUP_THREADS: "5"
      TELEMETRY_ARCHIVE_PATH: "/tmp"
      TELEMETRY_MAX_RETRIES: "0"
      TELEMETRY_ARCHIVE_SIZE: "1000000"      
  documentation: |-
    This workflow runs the krkn-hub config workload in the deployed cluster to target etcd container to run kill 1 ( hangup ) and check the recovery timing to identify regressions.
