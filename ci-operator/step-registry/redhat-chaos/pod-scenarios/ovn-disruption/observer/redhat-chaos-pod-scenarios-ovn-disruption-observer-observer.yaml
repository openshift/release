observer:
  name: redhat-chaos-pod-scenarios-ovn-disruption-observer
  # Only one of the following two should be specified
  from: prow-scripts.prow
  # Literal image stream tag that will be used to run the observer
  commands: redhat-chaos-pod-scenarios-ovn-disruption-observer-commands.sh
  resources:
    requests:
      cpu: 10m
      memory: 10Mi
  env:
  - name: TARGET_NAMESPACE
    default: "openshift-ovn-kubernetes"
  - name: POD_LABEL
    default: "app=ovnkube-node"
  - name: DISRUPTION_COUNT
    default: "1"
  - name: EXPECTED_POD_COUNT
    default: "3"
  - name: KILL_TIMEOUT
    default: "180"
  - name: EXPECTED_RECOVERY_TIME
    default: "43"
  - name: ENABLE_ALERTS
    default: "False"
  - name: ALERTS_PATH
    default: "./pod-scenarios/slos"
  - name: CHECK_CRITICAL_ALERTS
    default: "False"
  - name: WAIT_DURATION
    default: "500"
  - name: TELEMETRY_ENABLED
    default: "False"
  - name: TELEMETRY_API_URL
    default: "https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production"
  - name: TELEMETRY_USERNAME
    default: "redhat-chaos"
  - name: TELEMETRY_GROUP
    default: "prow"
  - name: TELEMETRY_RUN_TAG
    default: "ovn-pod-disruption"
  - name: TELEMETRY_PROMETHEUS_BACKUP
    default: "True"
  - name: TELEMETRY_FULL_PROMETHEUS_BACKUP
    default: "True"
  - name: TELEMTRY_BACKUP_THREADS
    default: "5"
  - name: TELEMETRY_ARCHIVE_PATH
    default: "/tmp"
  - name: TELEMETRY_MAX_RETRIES
    default: "0"
  - name: TELEMETRY_ARCHIVE_SIZE
    default: "1000000"
  - name: TELEMETRY_LOGS_BACKUP
    default: "True"
  - name: TELEMTRY_CLI_PATH
    default: "/usr/local/bin/oc"
  - name: TELEMETRY_EVENTS_BACKUP
    default: "True"
  - name: ENABLE_ES
    default: "False"
  - name: ES_COLLECT_METRICS
    default: "False"
  - name: ES_COLLECT_ALERTS
    default: "False"
  timeout: 9h
  grace_period: 200s
  documentation: |-
        An OVN pod disruption scenario krkn observer, this will run OVN pod disruption scenarios continuously during other tests 