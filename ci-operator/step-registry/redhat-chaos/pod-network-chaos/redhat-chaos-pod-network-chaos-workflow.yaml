workflow:
  as: redhat-chaos-pod-network-chaos
  steps:
    test:
      - ref: redhat-chaos-pod-network-chaos
    env:
      TEST_NAMESPACE: "openshift-etcd"
      TRAFFIC_TYPE: "[ingress, egress]"
      LABEL_SELECTOR: "k8s-app=etcd"
      INGRESS_PORTS: ""
      EGRESS_PORTS: ""
      WAIT_DURATION: "300"
      POD_NAME: ""
      INSTANCE_COUNT: "1"
      TEST_DURATION: "120"
      RETRY_WAIT: "60"
      ENABLE_ALERTS: "True"
      ALERTS_PATH: "/home/krkn/kraken/config/alerts_openshift.yaml"
      CHECK_CRITICAL_ALERTS: "True"
      TELEMETRY_ENABLED: "True"
      TELEMETRY_API_URL: "https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production"
      TELEMETRY_USERNAME: "redhat-chaos"
      TELEMETRY_GROUP: "prow"
      TELEMETRY_RUN_TAG: "pod-network-chaos"
      TELEMETRY_PROMETHEUS_BACKUP: "True"
      TELEMETRY_FULL_PROMETHEUS_BACKUP: "True"
      TELEMTRY_BACKUP_THREADS: "5"
      TELEMETRY_ARCHIVE_PATH: "/tmp"
      TELEMETRY_MAX_RETRIES: "0"
      TELEMETRY_ARCHIVE_SIZE: "1000000"
      TELEMETRY_LOGS_BACKUP: "True"
      TELEMTRY_CLI_PATH: "/usr/local/bin/oc"
      TELEMETRY_EVENTS_BACKUP: "True"
  documentation: |-
    This workflow runs the krkn-hub config workload in the deployed cluster and runs network chaos at the pod level on a Kubernetes/OpenShift cluster.
