observer:
  name: redhat-chaos-application-outages-console-observer
  # Only one of the following two should be specified
  from: prow-scripts.prow
  # Literal image stream tag that will be used to run the observer
  commands: redhat-chaos-application-outages-console-observer-commands.sh
  resources:
    requests:
      cpu: 10m
      memory: 10Mi
  env:
    - name: TARGET_NAMESPACE
      default: "openshift-console"
    - name: POD_SELECTOR
      default: "{app: console}"
    - name: BLOCK_TRAFFIC_TYPE
      default: "- Ingress"
    - name: RETRY_WAIT
      default: "60"
    - name: ENABLE_ALERTS
      default: "True"
    - name: ITERATIONS
      default: "6"        
    - name: ALERTS_PATH
      default: "/home/krkn/kraken/config/alerts_openshift.yaml"
    - name: CHECK_CRITICAL_ALERTS
      default: "False"
    - name: WAIT_DURATION
      default: "300"
    - name: TELEMETRY_ENABLED
      default: "False"
    - name: IF_CHECK_NETWORK_TYPE
      default: "False"
    - name: TELEMETRY_API_URL
      default: "https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production"
    - name: TELEMETRY_USERNAME
      default: "redhat-chaos"
    - name: TELEMETRY_GROUP
      default: "prow"
    - name: TELEMETRY_RUN_TAG
      default: "console-app-outage"
    - name: TELEMETRY_PROMETHEUS_BACKUP
      default: "True"
    - name: TELEMETRY_FULL_PROMETHEUS_BACKUP
      default: "True"
    - name: TELEMTRY_BACKUP_THREADS
      default: "5"
    - name: TELEMETRY_ARCHIVE_PATH
      default: "/tmp"
    - name: TELEMETRY_MAX_RETRIES
      default: "0"
    - name: TELEMETRY_ARCHIVE_SIZE
      default: "1000000"
    - name: TELEMETRY_LOGS_BACKUP
      default: "True"
    - name: TELEMTRY_CLI_PATH
      default: "/usr/local/bin/oc"
    - name: TELEMETRY_EVENTS_BACKUP
      default: "True"
    - name: ENABLE_ES
      default: "False"
    - name: CAPTURE_METRICS
      default: "False"
    - name: METRICS_PATH
      default: "/home/krkn/kraken/config/metrics-report.yaml"
  timeout: 9h
  grace_period: 200s
  documentation: |-
        A simple pod scenario krkn observer, this will run each of the pod scenarios
