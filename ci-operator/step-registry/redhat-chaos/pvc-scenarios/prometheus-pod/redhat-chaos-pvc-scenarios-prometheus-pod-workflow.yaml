workflow:
  as: redhat-chaos-pvc-scenarios-prometheus-pod
  steps:
    test:
      - ref: redhat-chaos-pvc-scenarios-prometheus-pod
    env:
      TARGET_NAMESPACE: "openshift-monitoring"
      PVC_NAME: "prometheus-k8s-db-prometheus-k8s-0"
      POD_NAME: "prometheus-k8s-0"
      FILL_PERCENTAGE: "75"
      DURATION: "60"
      RETRY_WAIT: "60"
      ENABLE_ALERTS: "True"
      ALERTS_PATH: "/root/kraken/config/alerts_openshift.yaml"       
      CHECK_CRITICAL_ALERTS: "True"
      WAIT_DURATION: "100"      
      TELEMETRY_ENABLED: "True"
      TELEMETRY_API_URL: "https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production"
      TELEMETRY_USERNAME: "redhat-chaos"
      TELEMETRY_RUN_TAG: "prow-hog-memory"
      TELEMETRY_PROMETHEUS_BACKUP: "True"
      TELEMETRY_FULL_PROMETHEUS_BACKUP: "True"
      TELEMTRY_BACKUP_THREADS: "5"
      TELEMETRY_ARCHIVE_PATH: "/tmp"
      TELEMETRY_MAX_RETRIES: "0"
      TELEMETRY_ARCHIVE_SIZE: "1000000"
      TELEMETRY_LOGS_BACKUP: "True"
      TELEMTRY_CLI_PATH: "/usr/local/bin/oc"
      TELEMETRY_EVENTS_BACKUP: "True"
  documentation: |-
    This workflow runs the krkn-hub config workload in the deployed cluster and fills up a given PersistenVolumeClaim by creating a temp file on the PVC from a pod associated to fill up a volume to understand faults cause by the application using this volume.
