ref:
  as: redhat-chaos-pvc-scenarios-new-pod
  from_image:
    namespace: chaos
    name: krkn
    tag: latest
  commands: redhat-chaos-pvc-scenarios-new-pod-commands.sh
  credentials:
  - namespace: test-credentials
    name: cluster-secrets-aws-chaos
    mount_path: /secret/telemetry
  env:
    - name: TARGET_NAMESPACE
      default: "kraken"
    - name: PVC_NAME
      default: "kraken-test-pvc"
    - name: POD_NAME
      default: "kraken-test-pod"
    - name: FILL_PERCENTAGE
      default: "75"
    - name: DURATION
      default: "60"
    - name: RETRY_WAIT
      default: "60"
    - name: ENABLE_ALERTS
      default: "True"
    - name: ALERTS_PATH
      default: "/root/kraken/config/alerts" 
    - name: CHECK_CRITICAL_ALERTS
      default: "True"
    - name: WAIT_DURATION
      default: "100"
    - name: TELEMETRY_ENABLED
      default: "True"
    - name: TELEMETRY_API_URL
      default: "https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production"
    - name: TELEMETRY_USERNAME
      default: "redhat-chaos"
    - name: TELEMETRY_RUN_TAG
      default: "prow-pvc-fill"
    - name: TELEMETRY_PROMETHEUS_BACKUP
      default: "True"
    - name: TELEMETRY_FULL_PROMETHEUS_BACKUP
      default: "True"
    - name: TELEMTRY_BACKUP_THREADS
      default: "5"
    - name: TELEMETRY_ARCHIVE_PATH
      default: "/tmp"
    - name: TELEMETRY_MAX_RETRIES
      default: "0"
    - name: TELEMETRY_ARCHIVE_SIZE
      default: "1000000"
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
  documentation: >-
    This workflow runs the krkn-hub config workload in the deployed cluster and fills up a given PersistenVolumeClaim by creating a temp file on the PVC from a pod associated to fill up a volume to understand faults cause by the application using this volume.
