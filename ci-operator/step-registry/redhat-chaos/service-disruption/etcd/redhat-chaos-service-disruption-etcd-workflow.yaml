workflow:
  as: redhat-chaos-service-disruption-etcd
  steps:
    test:
      - ref: redhat-chaos-service-disruption-etcd
    env:
      TARGET_NAMESPACE: "openshift-etcd"
      ACTION: "delete"
      SLEEP: "25"
      DELETE_COUNT: "1"
      RUNS: "1"
      ENABLE_ALERTS: "True"
      ALERTS_PATH: "/root/kraken/config/alerts"
      CHECK_CRITICAL_ALERTS: "True"
      WAIT_DURATION: "300"
      TELEMETRY_ENABLED: "True"
      TELEMETRY_API_URL: "https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production"
      TELEMETRY_USERNAME: "redhat-chaos"
      TELEMETRY_RUN_TAG: "prow-etcd-pod-disruption"
      TELEMETRY_PROMETHEUS_BACKUP: "True"
      TELEMETRY_FULL_PROMETHEUS_BACKUP: "True"
      TELEMTRY_BACKUP_THREADS: "5"
      TELEMETRY_ARCHIVE_PATH: "/tmp"
      TELEMETRY_MAX_RETRIES: "0"
      TELEMETRY_ARCHIVE_SIZE: "1000000"
  documentation: |-
    This step runs the krkn-hub config workload to disrupt entire etcd fleet by deleting all the pods and checks its recovery/health.
