workflow:
  as: agent-e2e-generic-conformance
  steps:
    allow_best_effort_post_steps: true
    allow_skip_on_success: true
    env:
      DEVSCRIPTS_TARGET: agent
      TEST_SKIPS: \[sig-auth\]\[Feature:HTPasswdAuth\] HTPasswd IDP should successfully
        configure htpasswd and be responsive \[apigroup:user.openshift.io\]\[apigroup:route.openshift.io\]\|\[sig-auth\]\[Feature:LDAP\]
        LDAP IDP should authenticate against an ldap server \[apigroup:user.openshift.io\]\[apigroup:route.openshift.io\]\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Headers\]\[apigroup:route.openshift.io\]\[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]
        expected headers returned from the authorize URL\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Headers\]\[apigroup:route.openshift.io\]\[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]
        expected headers returned from the grant URL\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Headers\]\[apigroup:route.openshift.io\]\[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]
        expected headers returned from the login URL for the allow all IDP\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Headers\]\[apigroup:route.openshift.io\]\[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]
        expected headers returned from the login URL for the bootstrap IDP\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Headers\]\[apigroup:route.openshift.io\]\[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]
        expected headers returned from the login URL for when there is only one IDP\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Headers\]\[apigroup:route.openshift.io\]\[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]
        expected headers returned from the logout URL\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Headers\]\[apigroup:route.openshift.io\]\[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]
        expected headers returned from the root URL\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Headers\]\[apigroup:route.openshift.io\]\[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]
        expected headers returned from the token URL\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Headers\]\[apigroup:route.openshift.io\]\[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]
        expected headers returned from the token request URL\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Token Expiration\] Using a OAuth client with a non-default token max age
        \[apigroup:oauth.openshift.io\] to generate tokens that do not expire works
        as expected when using a code authorization flow \[apigroup:user.openshift.io\]\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Token Expiration\] Using a OAuth client with a non-default token max age
        \[apigroup:oauth.openshift.io\] to generate tokens that do not expire works
        as expected when using a token authorization flow \[apigroup:user.openshift.io\]\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Token Expiration\] Using a OAuth client with a non-default token max age
        \[apigroup:oauth.openshift.io\] to generate tokens that expire shortly works
        as expected when using a code authorization flow \[apigroup:user.openshift.io\]\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Token Expiration\] Using a OAuth client with a non-default token max age
        \[apigroup:oauth.openshift.io\] to generate tokens that expire shortly works
        as expected when using a token authorization flow \[apigroup:user.openshift.io\]\|\[sig-auth\]\[Feature:OAuthServer\]
        well-known endpoint should be reachable \[apigroup:route.openshift.io\] \[apigroup:oauth.openshift.io\]\|\[sig-installer\]\[Feature:baremetal\]
        Baremetal platform should have baremetalhost resources\|\[sig-installer\]\[Feature:baremetal\]
        Baremetal platform should have hostfirmwaresetting resources\|\[sig-installer\]\[Feature:baremetal\]
        Baremetal platform should have preprovisioning images for workers\|\[sig-network-edge\]\[Conformance\]\[Area:Networking\]\[Feature:Router\]
        The HAProxy router should be able to connect to a service that is idled because
        a GET on the route will unidle it \[Skipped:Disconnected\]\|\[sig-network\]
        Services should be rejected for evicted pods (no endpoints exist)\|\[sig-node\]
        Pods Extended Pod Container lifecycle evicted pods should be terminal\|\[sig-apps\]
        TTLAfterFinished job should be deleted once it finishes after TTL seconds\|\[sig-auth\]\[Feature:OAuthServer\]
        \[Headers\]\[apigroup:route.openshift.io\]\[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]
        expected headers returned from the token request URL\|\[sig-instrumentation\]
        Prometheus \[apigroup:image.openshift.io\] when installed on the cluster shouldn't
        report any alerts in firing state apart from Watchdog and AlertmanagerReceiversNotConfigured
        \[Early\]\[apigroup:config.openshift.io\] \[Skipped:Disconnected\]\|\[sig-apps\]\[Feature:DeploymentConfig\] deploymentconfigs when
        tagging images should successfully tag the deployed image \[apigroup:apps.openshift.io\]\[apigroup:authorization.openshift.io\]\[apigroup:image.openshift.io\]
        \[Skipped:Disconnected\]\|\[sig-arch\] Managed cluster should ensure control
        plane pods do not run in best-effort QoS\|\[sig-arch\] Managed cluster should
        only include cluster daemonsets that have maxUnavailable or maxSurge update
        of 10 percent or maxUnavailable of 33 percent\|\[sig-arch\] Managed cluster
        should set requests but not limits\|\[sig-instrumentation\]\[Late\]
        OpenShift alerting rules \[apigroup:image.openshift.io\] should link to a
        valid URL if the runbook_url annotation is defined\|\[sig-instrumentation\]\[Late\]
        OpenShift alerting rules \[apigroup:image.openshift.io\] should link to an
        HTTP(S) location if the runbook_url annotation is defined\|\[sig-auth\]\[Feature:OAuthServer\]
        ClientSecretWithPlus should create oauthclient \[apigroup:oauth.openshift.io\]\[apigroup:user.openshift.io\]\|\[sig-auth\]\[Feature:OAuthServer\]
        \[apigroup:oauth.openshift.io\] OAuthClientWithRedirectURIs must validate
        request URIs according to oauth-client definition\|\[sig-cli\] oc adm must-gather
        runs successfully for audit logs \[apigroup:config.openshift.io\]\[apigroup:oauth.openshift.io\]\|\[sig-etcd\]
        etcd leader changes are not excessive \[Late\]\|\[sig-instrumentation\]\[Late\]
        Alerts shouldn't exceed the series limit of total series sent via telemetry
        from each cluster\|\[sig-instrumentation\]\[Late\] OpenShift alerting rules
        \[apigroup:image.openshift.io\] should link to a valid URL if the runbook_url
        annotation is defined\[sig-instrumentation\]\[Late\] OpenShift alerting rules
        \[apigroup:image.openshift.io\] should link to an HTTP(S) location if the
        runbook_url annotation is defined\|\[sig-arch\]\[Late\] all tls artifacts must be registered\|\[sig-arch\]\[Late\] all registered tls artifacts must have no metadata violation regressions\|\[sig-cli\] oc idle \[apigroup:apps.openshift.io\]\[apigroup:route.openshift.io\]\[apigroup:project.openshift.io\]\[apigroup:image.openshift.io\] by all\|\[sig-node\] should override timeoutGracePeriodSeconds when annotation is set\|\[sig-network\] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol \[LinuxOnly\] \[Conformance\]\|\[sig-ci\] \[Early\] prow job name should match platform type\|\[sig-ci\] \[Early\] prow job name should match platform type\|\[sig-ci\] \[Early\] prow job name should match network type
    pre:
      - chain: agent-pre
    test:
      - chain: agent-test-conformance
    post:
      - chain: agent-post
  documentation: |-
    This workflow is a generic one to deploy a cluster provisioned by running agent installer, and then run openshift conformance test suite. It will require to set the env variable DEVSCRIPTS_CONFIG to work properly.
