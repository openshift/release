ref:
  as: interop-tests-fusion-access-configure-kmm-registry
  from: cli
  commands: interop-tests-fusion-access-configure-kmm-registry-commands.sh
  timeout: 10m0s
  grace_period: 15s
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
  env:
  - name: FUSION_ACCESS_NAMESPACE
    documentation: The namespace for Fusion Access Operator
    default: "ibm-fusion-access"
  - name: KMM_REGISTRY_URL
    documentation: Container registry URL for KMM to push/pull kernel module images (default uses internal registry)
    default: ""
  - name: KMM_REGISTRY_ORG
    documentation: Registry organization/namespace (empty = use internal OpenShift registry)
    default: ""
  - name: KMM_REGISTRY_REPO
    documentation: Repository name for GPFS kernel module images
    default: "gpfs-compat-kmod"
  documentation: |-
    Configure KMM (Kernel Module Management) registry for IBM Storage Scale kernel modules.
    
    CRITICAL: This step creates kmm-image-config ConfigMap in TWO namespaces:
    1. ibm-fusion-access - For Fusion Access operator
    2. ibm-spectrum-scale-operator - For IBM Storage Scale operator (prevents broken buildgpl)
    
    Fusion Access Operator v0.0.19+ uses KMM to build GPFS kernel modules (supports
    secure boot, removes machineconfig requirement). KMM requires a container registry
    to build, push, and distribute kernel module containers.
    
    By default, this step configures the OpenShift internal registry. For external
    registries (e.g., quay.io), set KMM_REGISTRY_URL and KMM_REGISTRY_ORG.
    
    WARNING: Do not use in-cluster registry backed by emptyDir - this breaks KMM
    when registry pod restarts.
    
    NOTE: IBM Storage Scale v5.2.3.1 manifests have limited KMM support and may
    fall back to kernel header compilation if headers are unavailable.
    
    Reference: IBM Storage Scale Container Native documentation
    
    Tests performed (JUnit XML):
    1. Check for existing KMM configuration (idempotency)
    2. Create kmm-image-config ConfigMap in ibm-fusion-access
    3. Verify ConfigMap creation and content
    4. Create kmm-image-config ConfigMap in ibm-spectrum-scale-operator

