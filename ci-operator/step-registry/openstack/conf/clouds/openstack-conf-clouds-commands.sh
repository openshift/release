#!/bin/bash

set -o nounset
set -o errexit
set -o pipefail

CLUSTER_TYPE="${CLUSTER_TYPE_OVERRIDE:-$CLUSTER_TYPE}"
export OS_CLIENT_CONFIG_FILE="${SHARED_DIR}/clouds.yaml"

cp "/var/run/cluster-secrets/${CLUSTER_TYPE}/clouds.yaml" "$OS_CLIENT_CONFIG_FILE"

if [[ ! -z $APPLICATION_CREDENTIALS ]]; then
	declare appcred_json clouds_yaml

	appcred_json="$(
		openstack application credential create \
			--expiration "$(date -d "$APPLICATION_CREDENTIALS_EXPIRATION" +%Y-%m-%dT%H:%M:%S)" \
			--description 'Generated by Prow.' \
			--format json --column id --column secret \
			"prow-$(date +'%s%N')"
	)"

	clouds_yaml="$(
		yq --yml-output ".
			| del(.clouds.\"${OS_CLOUD}\".auth.username)
			| del(.clouds.\"${OS_CLOUD}\".auth.password)
			| del(.clouds.\"${OS_CLOUD}\".auth.user_domain_name)
			| del(.clouds.\"${OS_CLOUD}\".auth.project_id)
			| del(.clouds.\"${OS_CLOUD}\".auth.project_name)
			| del(.clouds.\"${OS_CLOUD}\".auth.project_domain_name)
			| .clouds.\"${OS_CLOUD}\".auth_type=\"v3applicationcredential\"
			| .clouds.\"${OS_CLOUD}\".auth.application_credential_id=\"$(jq -r '.id' <<< $appcred_json)\"
			| .clouds.\"${OS_CLOUD}\".auth.application_credential_secret=\"$(jq -r '.secret' <<< $appcred_json)\"
			" "$OS_CLIENT_CONFIG_FILE"
	)"

	cat > "$OS_CLIENT_CONFIG_FILE" <<< $clouds_yaml
fi


if [ -f "/var/run/cluster-secrets/${CLUSTER_TYPE}/osp-ca.crt" ]; then
	cp "/var/run/cluster-secrets/${CLUSTER_TYPE}/osp-ca.crt" "${SHARED_DIR}/osp-ca.crt"
	sed -i "s+cacert: .*+cacert: ${SHARED_DIR}/osp-ca.crt+" "${SHARED_DIR}/clouds.yaml"
fi

if [ -f "/var/run/cluster-secrets/${CLUSTER_TYPE}/squid-credentials.txt" ]; then
	cp "/var/run/cluster-secrets/${CLUSTER_TYPE}/squid-credentials.txt" "${SHARED_DIR}/squid-credentials.txt"
fi
