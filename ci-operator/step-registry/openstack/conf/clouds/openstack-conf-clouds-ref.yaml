ref:
  as: openstack-conf-clouds
  from: openstack-installer
  commands: openstack-conf-clouds-commands.sh
  resources:
    requests:
      cpu: 10m
      memory: 100Mi
  credentials:
  - namespace: test-credentials
    name: cluster-secrets-openstack-hwoffload
    mount_path: /var/run/cluster-secrets/openstack-hwoffload
  - namespace: test-credentials
    name: cluster-secrets-openstack-kuryr
    mount_path: /var/run/cluster-secrets/openstack-kuryr
  - namespace: test-credentials
    name: cluster-secrets-openstack-nerc-dev
    mount_path: /var/run/cluster-secrets/openstack-nerc-dev
  - namespace: test-credentials
    name: cluster-secrets-openstack-nfv
    mount_path: /var/run/cluster-secrets/openstack-nfv
  - namespace: test-credentials
    name: cluster-secrets-openstack-operators-vexxhost
    mount_path: /var/run/cluster-secrets/openstack-operators-vexxhost
  - namespace: test-credentials
    name: cluster-secrets-openstack-vexxhost
    mount_path: /var/run/cluster-secrets/openstack-vexxhost
  - namespace: test-credentials
    name: cluster-secrets-openstack-vh-mecha-az0
    mount_path: /var/run/cluster-secrets/openstack-vh-mecha-az0
  - namespace: test-credentials
    name: cluster-secrets-openstack-vh-mecha-central
    mount_path: /var/run/cluster-secrets/openstack-vh-mecha-central
  env:
  - name: APPLICATION_CREDENTIALS
    default: ""
    documentation: |-
      If this variable is not empty, the provided clouds.yaml will contain
      ephemeral application credentials.
  - name: APPLICATION_CREDENTIALS_EXPIRATION
    default: "5 hours"
    documentation: |-
      When to set the expiration of the application credentials.
      Use a format that `date -d` would understand.
      This variable has no effect if APPLICATION_CREDENTIALS is empty.
  - name: OS_CLOUD
    default: "openstack"
    documentation: Name of cloud to use from the clouds.yaml file
  - name: CLUSTER_TYPE_OVERRIDE
    default: ''
    documentation: |-
      If set, overrides CLUSTER_TYPE in this step.
  documentation: |-
    openstack-conf-clouds exposes a clouds.yaml for the requested CLUSTER_TYPE
    in SHARED_DIR. If they are available, this step also copies to SHARED_DIR
    the `cacert` file and the proxy credentials.
