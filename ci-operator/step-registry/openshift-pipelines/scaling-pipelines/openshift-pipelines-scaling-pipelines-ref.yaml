ref:
  as: openshift-pipelines-scaling-pipelines
  best_effort: true
  grace_period: 300s
  cli: latest
  timeout: 8h0m0s
  commands: openshift-pipelines-scaling-pipelines-commands.sh
  env:
    - name: DEPLOYMENT_TYPE
      default: "downstream"
      documentation: Is this supposed to install downstream or upstream?
    - name: DEPLOYMENT_VERSION
      default: "1.12"
      documentation: For downstream this is "1.12" or so, for upstream either "stable" or "nightly"
    - name: TEST_NAMESPACE
      default: "1"
      documentation: Total number of namespaces for testing.
    - name: TEST_TOTAL
      default: "100"
      documentation: Total number of PipelineRuns test should do.
    - name: TEST_CONCURRENT
      default: "10"
      documentation: Max PipelineRuns concurrency test should allow.
    - name: TEST_SCENARIO
      default: "math"
      documentation: Scenario determines which Pipeline will be used for test and also steps around executing it.
    - name: TEST_DO_CLEANUP
      default: "false"
      documentation: Should we delete all the PipelineRuns after the test?
    - name: WAIT_TIME
      default: ""
      documentation: A timeout value indicating time to wait (in seconds) before creating PRs. It is used in baseline test scenario to analyse baseline performance before creation of PRs/TRs and enabling chains.
    - name: EVENT_TIMEOUT
      default: "1200"
      documentation: A timeout value used in "signing-tr-tekton-with-pruner" scenario to wait between pruner_start and chains_start events.
    - name: DEPLOYMENT_PIPELINES_CONTROLLER_HA_REPLICAS
      default: ""
      documentation: Set to number 2-10 to setup pipelines controller into HA mode. Only supported for downstream now.
    - name: CHAINS_ENABLE_TIME
      default: "false"
      documentation: Sets the time at which chains is enabled. Default false will disable chains. (Currently supported only for signing-tr-varying-concurrency)
    - name: DEPLOYMENT_CHAINS_CONTROLLER_HA_REPLICAS
      default: ""
      documentation: Set to number 2-10 to setup chains controller into HA mode. Only supported for downstream now.
    - name: DEPLOYMENT_CHAINS_KUBE_API_QPS
      default: ""
      documentation: Set the QPS value to configure the performance tuning option for chains setup.
    - name: DEPLOYMENT_CHAINS_KUBE_API_BURST
      default: ""
      documentation: Set the burst value to configure the chains controller with Performance Configuration options
    - name: DEPLOYMENT_CHAINS_THREADS_PER_CONTROLLER
      default: ""
      documentation: Configure the threads per controller to aid performance impact.
    - name: DEPLOYMENT_PIPELINES_KUBE_API_QPS
      default: ""
      documentation: Set the QPS value to configure the pipeline controller with Performance Configuration options
    - name: DEPLOYMENT_PIPELINES_KUBE_API_BURST
      default: ""
      documentation: Set the burst value to configure the pipeline controller with Performance Configuration options
    - name: DEPLOYMENT_PIPELINES_THREADS_PER_CONTROLLER
      default: ""
      documentation: Configure the threads per pipeline controller with Performance Cofiguration options
    - name: TEST_BIGBANG_MULTI_STEP__TASK_COUNT
      default: "5"
      documentation: Multi-step test scenario specific parameter to control total number of task runs in pipeline.yaml file.
    - name: TEST_BIGBANG_MULTI_STEP__STEP_COUNT
      default: "5"
      documentation: Multi-step test scenario specific parameter to control total number of steps per task in pipeline.yaml file.
    - name: TEST_BIGBANG_MULTI_STEP__LINE_COUNT
      default: "5"
      documentation: Multi-step test scenario specific parameter to control total number of command lines per step in pipeline.yaml file.
    - name: PRUNER_KEEP
      default: "3"
      documentation: Number of resources to retain without pruning.
    - name: PRUNER_SCHEDULE
      default: "* * * * *"
      documentation: Time schedule to execute pruner cronjob.
    - name: PRUNE_PER_RESOURCE
      default: "true"
      documentation: Whether to retain the resources at each pipelinerun and taskrun separately?
  from: openshift-pipelines-performance-runner
  resources:
    requests:
      cpu: 3000m
      memory: 6Gi
