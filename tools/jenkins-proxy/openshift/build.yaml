apiVersion: v1
kind: Template
metadata:
  name: jenkins-proxy
  labels:
    app: prow
parameters:
- name: NAME
  displayName: Application Name
  description: The name to use for the objects created by this template
  value: jenkins-proxy
  required: true
- name: SOURCE_URL
  displayName: Source URL
  description: Git source URL to use for building the image
  value: https://github.com/openshift/release.git
  required: true
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: prow
      component: "${NAME}"
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-binary"
    labels:
      app: prow
      component: "${NAME}-binary"
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:binaries"
    source:
      git:
        uri: "${SOURCE_URL}"
      type: Git
      dockerfile: |
        FROM golang:1.9.0

        COPY . /go/src/github.com/openshift/release
        RUN cd /go/src/github.com/openshift/release/tools/jenkins-proxy && \
            CGO_ENABLED=0 go install
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: golang:1.9.0
        imageOptimizationPolicy: SkipLayers
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: "${NAME}"
    labels:
      app: prow
      component: "${NAME}"
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    source:
      git:
        uri: "${SOURCE_URL}"
      images:
      - from:
          kind: ImageStreamTag
          name: "${NAME}:binaries"
        paths:
        - destinationDir: .
          sourcePath: /go/bin/jenkins-proxy
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
        imageOptimizationPolicy: SkipLayers
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: "${NAME}:binaries"
      type: ImageChange
