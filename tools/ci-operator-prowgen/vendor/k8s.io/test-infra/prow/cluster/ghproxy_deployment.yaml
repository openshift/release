# Copyright 2018 The Kubernetes Authors All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app: ghproxy
  name: ghproxy
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  # gce-ssd-retain is specified in prow/cluster/gce-ssd-retain_storageclass.yaml
  #
  # If you are setting up your own Prow instance you can do any of the following:
  # 1) Delete this to use the default storage class for your cluster.
  # 2) Specify your own storage class.
  # 3) If you are using GKE you can use the gce-ssd-retain storage class. It can be
  #    created with: `kubectl create -f prow/cluster/gce-ssd-retain_storageclass.yaml
  storageClassName: gce-ssd-retain
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ghproxy
  labels:
    app: ghproxy
spec:
  replicas: 1 
  template:
    metadata:
      labels:
        app: ghproxy
    spec:
      containers:
      - name: ghproxy
        image: gcr.io/k8s-testimages/ghproxy:latest
        imagePullPolicy: Always
        args:
        - --cache-dir=/cache
        - --cache-sizeGB=99
        - --push-gateway=pushgateway
        ports:
        - containerPort: 8888
        volumeMounts:
        - name: cache
          mountPath: /cache
      volumes:
      - name: cache
        persistentVolumeClaim:
          claimName: ghproxy
      # run on our dedicated node
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "ghproxy"
        effect: "NoSchedule"
      nodeSelector:
        dedicated: "ghproxy"
