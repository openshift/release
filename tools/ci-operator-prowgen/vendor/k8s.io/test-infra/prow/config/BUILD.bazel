package(default_visibility = ["//visibility:public"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
    "go_test",
)

go_test(
    name = "go_default_test",
    srcs = [
        "branch_protection_test.go",
        "config_test.go",
        "jobs_test.go",
        "tide_test.go",
    ],
    data = [
        "//jobs",
        "//mungegithub:configmaps",
        "//prow:configs",
        "//scenarios",
    ],
    embed = [":go_default_library"],
    deps = [
        "//prow/github:go_default_library",
        "//prow/kube:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/diff:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
    ],
)

go_library(
    name = "go_default_library",
    srcs = [
        "agent.go",
        "branch_protection.go",
        "config.go",
        "githuboauth.go",
        "jobs.go",
        "secrets_agent.go",
        "tide.go",
    ],
    importpath = "k8s.io/test-infra/prow/config",
    deps = [
        "//prow/config/org:go_default_library",
        "//prow/github:go_default_library",
        "//prow/kube:go_default_library",
        "//prow/pod-utils/decorate:go_default_library",
        "//prow/pod-utils/downwardapi:go_default_library",
        "//vendor/github.com/ghodss/yaml:go_default_library",
        "//vendor/github.com/gorilla/sessions:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/golang.org/x/oauth2:go_default_library",
        "//vendor/gopkg.in/robfig/cron.v2:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/labels:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//prow/config/jobtests:all-srcs",
        "//prow/config/org:all-srcs",
    ],
    tags = ["automanaged"],
)
