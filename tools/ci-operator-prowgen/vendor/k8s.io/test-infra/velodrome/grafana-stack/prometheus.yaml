apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-${PROJECT}
  labels:
    app: prometheus
    project: ${PROJECT}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
        project: ${PROJECT}
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v1.1.3
        args:
        - -config.file=/etc/prometheus/prometheus.yml
        - -storage.local.path=/prometheus
        - -web.console.libraries=/usr/share/prometheus/console_libraries
        - -web.console.templates=/usr/share/prometheus/consoles
        - -storage.local.retention=35064h
        resources:
          requests:
            cpu: 0m
        ports:
        - name: prometheus-port
          containerPort: 9090
        volumeMounts:
        - mountPath: /prometheus
          name: database-volume
        - mountPath: /etc/prometheus
          name: prometheus-config
      volumes:
      - name: database-volume
        persistentVolumeClaim:
          claimName: prometheus-${PROJECT}-database-claim
      - name: prometheus-config
        configMap:
          name: prometheus-${PROJECT}
          items:
          - key: prometheus-config.yml
            path: prometheus.yml
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-${PROJECT}
  labels:
    app: prometheus
    project: ${PROJECT}
spec:
  ports:
  - name: prometheus
    port: 9090
    targetPort: prometheus-port
  selector:
    app: prometheus
    project: ${PROJECT}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: prometheus-${PROJECT}-database-claim
  labels:
    app: prometheus
    project: ${PROJECT}
  annotations:
    volume.alpha.kubernetes.io/storage-class: value
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
