---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      operator.openshift.io/generation: "2"
      operator.openshift.io/spec-hash: 0e36ac5d6b55fa46a00af9b89b01874701c8053e0db42a03569bccef7dc2bd62
    creationTimestamp: "2024-06-11T10:44:32Z"
    generation: 2
    labels:
      infrastructure.openshift.io/cloud-controller-manager: Azure
      k8s-app: azure-cloud-controller-manager
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:operator.openshift.io/generation: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:infrastructure.openshift.io/cloud-controller-manager: {}
            f:k8s-app: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:operator.openshift.io/config-hash: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:infrastructure.openshift.io/cloud-controller-manager: {}
                f:k8s-app: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"cloud-controller-manager"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"CLOUD_CONFIG"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OCP_INFRASTRUCTURE_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":10258,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kubernetes"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/kubernetes-cloud-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:initContainers:
                .: {}
                k:{"name":"azure-inject-credentials"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"AZURE_CLIENT_ID"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AZURE_CLIENT_SECRET"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"AZURE_TENANT_ID"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/cloud-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/merged-cloud-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"bound-sa-token"}:
                  .: {}
                  f:name: {}
                  f:projected:
                    .: {}
                    f:defaultMode: {}
                    f:sources: {}
                k:{"name":"config-accm"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"host-etc-kube"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"merged-cloud-config"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"trusted-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
      manager: cluster-controller-manager-operator
      operation: Update
      time: "2024-06-11T10:44:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T10:56:25Z"
    name: azure-cloud-controller-manager
    namespace: openshift-cloud-controller-manager
    resourceVersion: "18598"
    uid: 0d00db50-0244-4951-a02c-43737f551eae
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        infrastructure.openshift.io/cloud-controller-manager: Azure
        k8s-app: azure-cloud-controller-manager
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          operator.openshift.io/config-hash: 5f2b7e5868e4b3d21281245dcbe1b1ace01b8239175be47b491b5fc90c7bddaf
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          infrastructure.openshift.io/cloud-controller-manager: Azure
          k8s-app: azure-cloud-controller-manager
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  infrastructure.openshift.io/cloud-controller-manager: Azure
                  k8s-app: azure-cloud-controller-manager
              topologyKey: kubernetes.io/hostname
        containers:
        - command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            set -o allexport
            if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
              source /etc/kubernetes/apiserver-url.env
            fi
            exec /bin/azure-cloud-controller-manager \
              --v=3 \
              --cloud-config=$(CLOUD_CONFIG) \
              --cloud-provider=azure \
              --concurrent-service-syncs=10 \
              --controllers=*,-cloud-node \
              --configure-cloud-routes=false \
              --use-service-account-credentials=true \
              --bind-address=127.0.0.1 \
              --cluster-name=$(OCP_INFRASTRUCTURE_NAME) \
              --leader-elect=true \
              --leader-elect-lease-duration=137s \
              --leader-elect-renew-deadline=107s \
              --leader-elect-retry-period=26s \
              --leader-elect-resource-namespace=openshift-cloud-controller-manager
          env:
          - name: CLOUD_CONFIG
            value: /etc/kubernetes-cloud-config/cloud.conf
          - name: OCP_INFRASTRUCTURE_NAME
            value: ci-op-9xx71rvq-1e28e-w667k
          - name: AZURE_FEDERATED_TOKEN_FILE
            valueFrom:
              secretKeyRef:
                key: azure_federated_token_file
                name: azure-cloud-credentials
                optional: true
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ce4fcfefebbc59a93cb599fbecd9dfdc61aca056610ba34247b5c8e1934dfaa
          imagePullPolicy: IfNotPresent
          name: cloud-controller-manager
          ports:
          - containerPort: 10258
            name: https
            protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/kubernetes
            name: host-etc-kube
            readOnly: true
          - mountPath: /etc/kubernetes-cloud-config
            name: merged-cloud-config
            readOnly: true
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: trusted-ca
            readOnly: true
          - mountPath: /var/run/secrets/openshift/serviceaccount
            name: bound-sa-token
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
              cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
            fi
            exec /azure-config-credentials-injector \
              --cloud-config-file-path=/etc/cloud-config/cloud.conf \
              --output-file-path=/etc/merged-cloud-config/cloud.conf \
              --disable-identity-extension-auth \
              --enable-azure-workload-identity=true
          env:
          - name: AZURE_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: azure_client_id
                name: azure-cloud-credentials
          - name: AZURE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: azure_client_secret
                name: azure-cloud-credentials
                optional: true
          - name: AZURE_TENANT_ID
            valueFrom:
              secretKeyRef:
                key: azure_tenant_id
                name: azure-cloud-credentials
                optional: true
          - name: AZURE_FEDERATED_TOKEN_FILE
            valueFrom:
              secretKeyRef:
                key: azure_federated_token_file
                name: azure-cloud-credentials
                optional: true
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
          imagePullPolicy: IfNotPresent
          name: azure-inject-credentials
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/cloud-config
            name: config-accm
            readOnly: true
          - mountPath: /etc/merged-cloud-config
            name: merged-cloud-config
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cloud-controller-manager
        serviceAccountName: cloud-controller-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: cloud.conf
              path: cloud.conf
            name: cloud-conf
          name: config-accm
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: ccm-trusted-ca
          name: trusted-ca
        - hostPath:
            path: /etc/kubernetes
            type: Directory
          name: host-etc-kube
        - name: bound-sa-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: openshift
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: merged-cloud-config
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-06-11T10:44:32Z"
      lastUpdateTime: "2024-06-11T10:44:56Z"
      message: ReplicaSet "azure-cloud-controller-manager-ccfbdcbbd" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-06-11T10:56:25Z"
      lastUpdateTime: "2024-06-11T10:56:25Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
kind: DeploymentList
metadata:
  resourceVersion: "39862"
