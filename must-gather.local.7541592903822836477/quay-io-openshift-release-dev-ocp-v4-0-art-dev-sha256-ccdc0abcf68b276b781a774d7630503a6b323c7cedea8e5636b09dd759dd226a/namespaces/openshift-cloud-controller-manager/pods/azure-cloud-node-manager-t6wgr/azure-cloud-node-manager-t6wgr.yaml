---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    operator.openshift.io/config-hash: fa49142ab64517579705cf4001c659c2d37c50626f6e3f9ba46275d7e50b6965
  creationTimestamp: "2024-06-11T10:56:31Z"
  generateName: azure-cloud-node-manager-
  labels:
    controller-revision-hash: 75c7f6fc44
    infrastructure.openshift.io/cloud-node-manager: Azure
    k8s-app: azure-cloud-node-manager
    pod-template-generation: "2"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:cluster-autoscaler.kubernetes.io/daemonset-pod: {}
          f:operator.openshift.io/config-hash: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:controller-revision-hash: {}
          f:infrastructure.openshift.io/cloud-node-manager: {}
          f:k8s-app: {}
          f:pod-template-generation: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:nodeAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:containers:
          k:{"name":"cloud-node-manager"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"NODE_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":10263,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/kubernetes"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:initContainers:
          .: {}
          k:{"name":"azure-inject-credentials"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"AZURE_CLIENT_ID"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
              k:{"name":"AZURE_CLIENT_SECRET"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
              k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
              k:{"name":"AZURE_TENANT_ID"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/cloud-config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/merged-cloud-config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"bound-sa-token"}:
            .: {}
            f:name: {}
            f:projected:
              .: {}
              f:defaultMode: {}
              f:sources: {}
          k:{"name":"host-etc-kube"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"merged-cloud-config"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
          k:{"name":"trusted-ca"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2024-06-11T10:56:31Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:initContainerStatuses: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.0.128.5"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2024-06-11T11:00:33Z"
  name: azure-cloud-node-manager-t6wgr
  namespace: openshift-cloud-controller-manager
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: azure-cloud-node-manager
    uid: 1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b
  resourceVersion: "21381"
  uid: 0164010d-cf03-41ae-9eea-74b71c3c0a08
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
  containers:
  - command:
    - /bin/bash
    - -c
    - |
      #!/bin/bash
      set -o allexport
      if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
        source /etc/kubernetes/apiserver-url.env
      fi
      exec /bin/azure-cloud-node-manager \
        --node-name=$(NODE_NAME) \
        --wait-routes=false \
        --enable-deprecated-beta-topology-labels
    env:
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
    imagePullPolicy: IfNotPresent
    name: cloud-node-manager
    ports:
    - containerPort: 10263
      hostPort: 10263
      name: https
      protocol: TCP
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/kubernetes
      name: merged-cloud-config
      readOnly: true
    - mountPath: /etc/pki/ca-trust/extracted/pem
      name: trusted-ca
      readOnly: true
    - mountPath: /var/run/secrets/openshift/serviceaccount
      name: bound-sa-token
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-54s45
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  initContainers:
  - command:
    - /bin/bash
    - -c
    - |
      #!/bin/bash
      if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
        cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
      fi
      exec /azure-config-credentials-injector \
        --cloud-config-file-path=/etc/cloud-config/cloud.conf \
        --output-file-path=/etc/merged-cloud-config/cloud.conf \
        --disable-identity-extension-auth \
        --enable-azure-workload-identity=true
    env:
    - name: AZURE_CLIENT_ID
      valueFrom:
        secretKeyRef:
          key: azure_client_id
          name: azure-cloud-credentials
    - name: AZURE_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          key: azure_client_secret
          name: azure-cloud-credentials
          optional: true
    - name: AZURE_TENANT_ID
      valueFrom:
        secretKeyRef:
          key: azure_tenant_id
          name: azure-cloud-credentials
          optional: true
    - name: AZURE_FEDERATED_TOKEN_FILE
      valueFrom:
        secretKeyRef:
          key: azure_federated_token_file
          name: azure-cloud-credentials
          optional: true
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
    imagePullPolicy: IfNotPresent
    name: azure-inject-credentials
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/cloud-config
      name: host-etc-kube
      readOnly: true
    - mountPath: /etc/merged-cloud-config
      name: merged-cloud-config
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-54s45
      readOnly: true
  nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: cloud-node-manager
  serviceAccountName: cloud-node-manager
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute
    key: node-role.kubernetes.io/infra
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      items:
      - key: ca-bundle.crt
        path: tls-ca-bundle.pem
      name: ccm-trusted-ca
    name: trusted-ca
  - hostPath:
      path: /etc/kubernetes
      type: Directory
    name: host-etc-kube
  - name: bound-sa-token
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          audience: openshift
          expirationSeconds: 3600
          path: token
  - emptyDir: {}
    name: merged-cloud-config
  - name: kube-api-access-54s45
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:57:13Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:57:13Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:59:08Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:59:08Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:56:31Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://56df7fe15b0a13cbbd3884c1f47cf5ff48f9d6e58a3dc1192b632ffc08bde901
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
    lastState:
      terminated:
        containerID: cri-o://d029c5fddf01b4462486c1fae5cf29135f4d0f638fdabeefed3df5c36bc4aed2
        exitCode: 255
        finishedAt: "2024-06-11T10:59:06Z"
        message: |
          W0611 10:57:35.893614       1 client_config.go:618] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
          I0611 10:57:35.896801       1 nodemanager.go:103] Version: github.com/openshift/cloud-provider-azure
          I0611 10:57:35.896844       1 nodemanager.go:104] NodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
          I0611 10:57:35.897446       1 nodemanager.go:147] Sending events to api server.
          I0611 10:57:35.897790       1 nodemanager.go:148] Started cloud-node-manager
          F0611 10:59:06.901418       1 nodemanager.go:153] Failed to wait for apiserver being healthy: timed out waiting for the condition: failed to get apiserver /healthz status: Get "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/healthz": dial tcp 10.0.0.4:6443: i/o timeout
        reason: Error
        startedAt: "2024-06-11T10:57:35Z"
    name: cloud-node-manager
    ready: true
    restartCount: 1
    started: true
    state:
      running:
        startedAt: "2024-06-11T10:59:07Z"
  hostIP: 10.0.128.5
  hostIPs:
  - ip: 10.0.128.5
  initContainerStatuses:
  - containerID: cri-o://8ea8113d3b81d3dd59d96fcc0ce65ddeeb5cac2a9717310daf09f1792424d8aa
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
    lastState: {}
    name: azure-inject-credentials
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://8ea8113d3b81d3dd59d96fcc0ce65ddeeb5cac2a9717310daf09f1792424d8aa
        exitCode: 0
        finishedAt: "2024-06-11T10:57:13Z"
        reason: Completed
        startedAt: "2024-06-11T10:57:13Z"
  phase: Running
  podIP: 10.0.128.5
  podIPs:
  - ip: 10.0.128.5
  qosClass: Burstable
  startTime: "2024-06-11T10:56:32Z"
