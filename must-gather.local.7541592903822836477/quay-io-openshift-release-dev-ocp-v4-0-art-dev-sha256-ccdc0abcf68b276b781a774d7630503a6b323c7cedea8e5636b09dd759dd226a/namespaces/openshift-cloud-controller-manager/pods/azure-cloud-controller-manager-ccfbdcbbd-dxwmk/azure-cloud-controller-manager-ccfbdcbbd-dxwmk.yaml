---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    operator.openshift.io/config-hash: 5f2b7e5868e4b3d21281245dcbe1b1ace01b8239175be47b491b5fc90c7bddaf
  creationTimestamp: "2024-06-11T10:44:50Z"
  generateName: azure-cloud-controller-manager-ccfbdcbbd-
  labels:
    infrastructure.openshift.io/cloud-controller-manager: Azure
    k8s-app: azure-cloud-controller-manager
    pod-template-hash: ccfbdcbbd
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:operator.openshift.io/config-hash: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:infrastructure.openshift.io/cloud-controller-manager: {}
          f:k8s-app: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"dd3974f7-905b-40e4-8ee9-397fb66a5ec3"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:podAntiAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:containers:
          k:{"name":"cloud-controller-manager"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
              k:{"name":"CLOUD_CONFIG"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"OCP_INFRASTRUCTURE_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":10258,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/kubernetes"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/kubernetes-cloud-config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:initContainers:
          .: {}
          k:{"name":"azure-inject-credentials"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"AZURE_CLIENT_ID"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
              k:{"name":"AZURE_CLIENT_SECRET"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
              k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
              k:{"name":"AZURE_TENANT_ID"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:secretKeyRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/cloud-config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/merged-cloud-config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"bound-sa-token"}:
            .: {}
            f:name: {}
            f:projected:
              .: {}
              f:defaultMode: {}
              f:sources: {}
          k:{"name":"config-accm"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
            f:name: {}
          k:{"name":"host-etc-kube"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"merged-cloud-config"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
          k:{"name":"trusted-ca"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2024-06-11T10:44:50Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:initContainerStatuses: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.0.0.8"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2024-06-11T10:56:18Z"
  name: azure-cloud-controller-manager-ccfbdcbbd-dxwmk
  namespace: openshift-cloud-controller-manager
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: azure-cloud-controller-manager-ccfbdcbbd
    uid: dd3974f7-905b-40e4-8ee9-397fb66a5ec3
  resourceVersion: "18382"
  uid: 2bdc39e1-5353-42b5-aef9-b985e18d36f7
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            infrastructure.openshift.io/cloud-controller-manager: Azure
            k8s-app: azure-cloud-controller-manager
        topologyKey: kubernetes.io/hostname
  containers:
  - command:
    - /bin/bash
    - -c
    - |
      #!/bin/bash
      set -o allexport
      if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
        source /etc/kubernetes/apiserver-url.env
      fi
      exec /bin/azure-cloud-controller-manager \
        --v=3 \
        --cloud-config=$(CLOUD_CONFIG) \
        --cloud-provider=azure \
        --concurrent-service-syncs=10 \
        --controllers=*,-cloud-node \
        --configure-cloud-routes=false \
        --use-service-account-credentials=true \
        --bind-address=127.0.0.1 \
        --cluster-name=$(OCP_INFRASTRUCTURE_NAME) \
        --leader-elect=true \
        --leader-elect-lease-duration=137s \
        --leader-elect-renew-deadline=107s \
        --leader-elect-retry-period=26s \
        --leader-elect-resource-namespace=openshift-cloud-controller-manager
    env:
    - name: CLOUD_CONFIG
      value: /etc/kubernetes-cloud-config/cloud.conf
    - name: OCP_INFRASTRUCTURE_NAME
      value: ci-op-9xx71rvq-1e28e-w667k
    - name: AZURE_FEDERATED_TOKEN_FILE
      valueFrom:
        secretKeyRef:
          key: azure_federated_token_file
          name: azure-cloud-credentials
          optional: true
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ce4fcfefebbc59a93cb599fbecd9dfdc61aca056610ba34247b5c8e1934dfaa
    imagePullPolicy: IfNotPresent
    name: cloud-controller-manager
    ports:
    - containerPort: 10258
      hostPort: 10258
      name: https
      protocol: TCP
    resources:
      requests:
        cpu: 200m
        memory: 50Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/kubernetes
      name: host-etc-kube
      readOnly: true
    - mountPath: /etc/kubernetes-cloud-config
      name: merged-cloud-config
      readOnly: true
    - mountPath: /etc/pki/ca-trust/extracted/pem
      name: trusted-ca
      readOnly: true
    - mountPath: /var/run/secrets/openshift/serviceaccount
      name: bound-sa-token
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-ch7x7
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  initContainers:
  - command:
    - /bin/bash
    - -c
    - |
      #!/bin/bash
      if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
        cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
      fi
      exec /azure-config-credentials-injector \
        --cloud-config-file-path=/etc/cloud-config/cloud.conf \
        --output-file-path=/etc/merged-cloud-config/cloud.conf \
        --disable-identity-extension-auth \
        --enable-azure-workload-identity=true
    env:
    - name: AZURE_CLIENT_ID
      valueFrom:
        secretKeyRef:
          key: azure_client_id
          name: azure-cloud-credentials
    - name: AZURE_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          key: azure_client_secret
          name: azure-cloud-credentials
          optional: true
    - name: AZURE_TENANT_ID
      valueFrom:
        secretKeyRef:
          key: azure_tenant_id
          name: azure-cloud-credentials
          optional: true
    - name: AZURE_FEDERATED_TOKEN_FILE
      valueFrom:
        secretKeyRef:
          key: azure_federated_token_file
          name: azure-cloud-credentials
          optional: true
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
    imagePullPolicy: IfNotPresent
    name: azure-inject-credentials
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/cloud-config
      name: config-accm
      readOnly: true
    - mountPath: /etc/merged-cloud-config
      name: merged-cloud-config
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-ch7x7
      readOnly: true
  nodeName: ci-op-9xx71rvq-1e28e-w667k-master-0
  nodeSelector:
    node-role.kubernetes.io/master: ""
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: cloud-controller-manager
  serviceAccountName: cloud-controller-manager
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 120
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 120
  - effect: NoSchedule
    key: node.cloudprovider.kubernetes.io/uninitialized
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - configMap:
      defaultMode: 420
      items:
      - key: cloud.conf
        path: cloud.conf
      name: cloud-conf
    name: config-accm
  - configMap:
      defaultMode: 420
      items:
      - key: ca-bundle.crt
        path: tls-ca-bundle.pem
      name: ccm-trusted-ca
    name: trusted-ca
  - hostPath:
      path: /etc/kubernetes
      type: Directory
    name: host-etc-kube
  - name: bound-sa-token
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          audience: openshift
          expirationSeconds: 3600
          path: token
  - emptyDir: {}
    name: merged-cloud-config
  - name: kube-api-access-ch7x7
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:44:52Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:44:52Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:56:18Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:56:18Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:44:50Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://fb583adb34102f85ad261b984fe979a10a6d48a8c2a90d8684b4bff4fcce46b7
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ce4fcfefebbc59a93cb599fbecd9dfdc61aca056610ba34247b5c8e1934dfaa
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ce4fcfefebbc59a93cb599fbecd9dfdc61aca056610ba34247b5c8e1934dfaa
    lastState:
      terminated:
        containerID: cri-o://16eccf477e522f6f42ae6775de77a283f38d7100962b26402e47b22d47c36f42
        exitCode: 1
        finishedAt: "2024-06-11T10:56:16Z"
        message: |
          ost] issuer=\"localhost-ca@1718102695\" (2024-06-11 09:44:55 +0000 UTC to 2025-06-11 09:44:55 +0000 UTC (now=2024-06-11 10:52:09.54700279 +0000 UTC))"
          I0611 10:52:09.547789       1 named_certificates.go:53] "Loaded SNI cert" index=0 certName="self-signed loopback" certDetail="\"apiserver-loopback-client@1718102696\" [serving] validServingFor=[apiserver-loopback-client] issuer=\"apiserver-loopback-client-ca@1718102696\" (2024-06-11 09:44:56 +0000 UTC to 2025-06-11 09:44:56 +0000 UTC (now=2024-06-11 10:52:09.547755094 +0000 UTC))"
          I0611 10:52:36.050507       1 azure.go:1241] managed=, ok=false, isNodeManagedByCloudProvider=true
          I0611 10:52:36.367881       1 azure.go:1241] managed=, ok=false, isNodeManagedByCloudProvider=true
          I0611 10:52:42.827492       1 azure.go:1241] managed=, ok=false, isNodeManagedByCloudProvider=true
          I0611 10:53:06.969334       1 azure.go:1241] managed=, ok=false, isNodeManagedByCloudProvider=true
          I0611 10:53:36.986223       1 azure.go:1241] managed=, ok=false, isNodeManagedByCloudProvider=true
          E0611 10:54:59.782207       1 leaderelection.go:332] error retrieving resource lock openshift-cloud-controller-manager/cloud-controller-manager: Get "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/coordination.k8s.io/v1/namespaces/openshift-cloud-controller-manager/leases/cloud-controller-manager?timeout=53.5s": dial tcp 10.0.0.4:6443: i/o timeout
          E0611 10:55:55.784550       1 leaderelection.go:332] error retrieving resource lock openshift-cloud-controller-manager/cloud-controller-manager: Get "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/coordination.k8s.io/v1/namespaces/openshift-cloud-controller-manager/leases/cloud-controller-manager?timeout=53.5s": dial tcp 10.0.0.4:6443: i/o timeout
          I0611 10:56:16.782117       1 leaderelection.go:285] failed to renew lease openshift-cloud-controller-manager/cloud-controller-manager: timed out waiting for the condition
          E0611 10:56:16.782191       1 controllermanager.go:136] "leaderelection lost"
        reason: Error
        startedAt: "2024-06-11T10:44:55Z"
    name: cloud-controller-manager
    ready: true
    restartCount: 1
    started: true
    state:
      running:
        startedAt: "2024-06-11T10:56:17Z"
  hostIP: 10.0.0.8
  hostIPs:
  - ip: 10.0.0.8
  initContainerStatuses:
  - containerID: cri-o://bb4439b523aff7ef5899aa07a84b98931513ab3a15db9be7fcc1635367c19f59
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
    lastState: {}
    name: azure-inject-credentials
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://bb4439b523aff7ef5899aa07a84b98931513ab3a15db9be7fcc1635367c19f59
        exitCode: 0
        finishedAt: "2024-06-11T10:44:51Z"
        reason: Completed
        startedAt: "2024-06-11T10:44:51Z"
  phase: Running
  podIP: 10.0.0.8
  podIPs:
  - ip: 10.0.0.8
  qosClass: Burstable
  startTime: "2024-06-11T10:44:50Z"
