---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      operator.openshift.io/config-hash: 5f2b7e5868e4b3d21281245dcbe1b1ace01b8239175be47b491b5fc90c7bddaf
    creationTimestamp: "2024-06-11T10:44:50Z"
    generateName: azure-cloud-controller-manager-ccfbdcbbd-
    labels:
      infrastructure.openshift.io/cloud-controller-manager: Azure
      k8s-app: azure-cloud-controller-manager
      pod-template-hash: ccfbdcbbd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:operator.openshift.io/config-hash: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:infrastructure.openshift.io/cloud-controller-manager: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dd3974f7-905b-40e4-8ee9-397fb66a5ec3"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"cloud-controller-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CLOUD_CONFIG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OCP_INFRASTRUCTURE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10258,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes-cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"azure-inject-credentials"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"AZURE_CLIENT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_TENANT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/merged-cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"bound-sa-token"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"config-accm"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"host-etc-kube"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"merged-cloud-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"trusted-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:44:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:56:18Z"
    name: azure-cloud-controller-manager-ccfbdcbbd-dxwmk
    namespace: openshift-cloud-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: azure-cloud-controller-manager-ccfbdcbbd
      uid: dd3974f7-905b-40e4-8ee9-397fb66a5ec3
    resourceVersion: "18382"
    uid: 2bdc39e1-5353-42b5-aef9-b985e18d36f7
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              infrastructure.openshift.io/cloud-controller-manager: Azure
              k8s-app: azure-cloud-controller-manager
          topologyKey: kubernetes.io/hostname
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -o allexport
        if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
          source /etc/kubernetes/apiserver-url.env
        fi
        exec /bin/azure-cloud-controller-manager \
          --v=3 \
          --cloud-config=$(CLOUD_CONFIG) \
          --cloud-provider=azure \
          --concurrent-service-syncs=10 \
          --controllers=*,-cloud-node \
          --configure-cloud-routes=false \
          --use-service-account-credentials=true \
          --bind-address=127.0.0.1 \
          --cluster-name=$(OCP_INFRASTRUCTURE_NAME) \
          --leader-elect=true \
          --leader-elect-lease-duration=137s \
          --leader-elect-renew-deadline=107s \
          --leader-elect-retry-period=26s \
          --leader-elect-resource-namespace=openshift-cloud-controller-manager
      env:
      - name: CLOUD_CONFIG
        value: /etc/kubernetes-cloud-config/cloud.conf
      - name: OCP_INFRASTRUCTURE_NAME
        value: ci-op-9xx71rvq-1e28e-w667k
      - name: AZURE_FEDERATED_TOKEN_FILE
        valueFrom:
          secretKeyRef:
            key: azure_federated_token_file
            name: azure-cloud-credentials
            optional: true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ce4fcfefebbc59a93cb599fbecd9dfdc61aca056610ba34247b5c8e1934dfaa
      imagePullPolicy: IfNotPresent
      name: cloud-controller-manager
      ports:
      - containerPort: 10258
        hostPort: 10258
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 200m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes
        name: host-etc-kube
        readOnly: true
      - mountPath: /etc/kubernetes-cloud-config
        name: merged-cloud-config
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca
        readOnly: true
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ch7x7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
          cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
        fi
        exec /azure-config-credentials-injector \
          --cloud-config-file-path=/etc/cloud-config/cloud.conf \
          --output-file-path=/etc/merged-cloud-config/cloud.conf \
          --disable-identity-extension-auth \
          --enable-azure-workload-identity=true
      env:
      - name: AZURE_CLIENT_ID
        valueFrom:
          secretKeyRef:
            key: azure_client_id
            name: azure-cloud-credentials
      - name: AZURE_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            key: azure_client_secret
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_TENANT_ID
        valueFrom:
          secretKeyRef:
            key: azure_tenant_id
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_FEDERATED_TOKEN_FILE
        valueFrom:
          secretKeyRef:
            key: azure_federated_token_file
            name: azure-cloud-credentials
            optional: true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imagePullPolicy: IfNotPresent
      name: azure-inject-credentials
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/cloud-config
        name: config-accm
        readOnly: true
      - mountPath: /etc/merged-cloud-config
        name: merged-cloud-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ch7x7
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-0
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: cloud-controller-manager
    serviceAccountName: cloud-controller-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: cloud.conf
          path: cloud.conf
        name: cloud-conf
      name: config-accm
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: ccm-trusted-ca
      name: trusted-ca
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: host-etc-kube
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: merged-cloud-config
    - name: kube-api-access-ch7x7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:56:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:56:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://fb583adb34102f85ad261b984fe979a10a6d48a8c2a90d8684b4bff4fcce46b7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ce4fcfefebbc59a93cb599fbecd9dfdc61aca056610ba34247b5c8e1934dfaa
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ce4fcfefebbc59a93cb599fbecd9dfdc61aca056610ba34247b5c8e1934dfaa
      lastState:
        terminated:
          containerID: cri-o://16eccf477e522f6f42ae6775de77a283f38d7100962b26402e47b22d47c36f42
          exitCode: 1
          finishedAt: "2024-06-11T10:56:16Z"
          message: |
            ost] issuer=\"localhost-ca@1718102695\" (2024-06-11 09:44:55 +0000 UTC to 2025-06-11 09:44:55 +0000 UTC (now=2024-06-11 10:52:09.54700279 +0000 UTC))"
            I0611 10:52:09.547789       1 named_certificates.go:53] "Loaded SNI cert" index=0 certName="self-signed loopback" certDetail="\"apiserver-loopback-client@1718102696\" [serving] validServingFor=[apiserver-loopback-client] issuer=\"apiserver-loopback-client-ca@1718102696\" (2024-06-11 09:44:56 +0000 UTC to 2025-06-11 09:44:56 +0000 UTC (now=2024-06-11 10:52:09.547755094 +0000 UTC))"
            I0611 10:52:36.050507       1 azure.go:1241] managed=, ok=false, isNodeManagedByCloudProvider=true
            I0611 10:52:36.367881       1 azure.go:1241] managed=, ok=false, isNodeManagedByCloudProvider=true
            I0611 10:52:42.827492       1 azure.go:1241] managed=, ok=false, isNodeManagedByCloudProvider=true
            I0611 10:53:06.969334       1 azure.go:1241] managed=, ok=false, isNodeManagedByCloudProvider=true
            I0611 10:53:36.986223       1 azure.go:1241] managed=, ok=false, isNodeManagedByCloudProvider=true
            E0611 10:54:59.782207       1 leaderelection.go:332] error retrieving resource lock openshift-cloud-controller-manager/cloud-controller-manager: Get "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/coordination.k8s.io/v1/namespaces/openshift-cloud-controller-manager/leases/cloud-controller-manager?timeout=53.5s": dial tcp 10.0.0.4:6443: i/o timeout
            E0611 10:55:55.784550       1 leaderelection.go:332] error retrieving resource lock openshift-cloud-controller-manager/cloud-controller-manager: Get "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/coordination.k8s.io/v1/namespaces/openshift-cloud-controller-manager/leases/cloud-controller-manager?timeout=53.5s": dial tcp 10.0.0.4:6443: i/o timeout
            I0611 10:56:16.782117       1 leaderelection.go:285] failed to renew lease openshift-cloud-controller-manager/cloud-controller-manager: timed out waiting for the condition
            E0611 10:56:16.782191       1 controllermanager.go:136] "leaderelection lost"
          reason: Error
          startedAt: "2024-06-11T10:44:55Z"
      name: cloud-controller-manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:56:17Z"
    hostIP: 10.0.0.8
    hostIPs:
    - ip: 10.0.0.8
    initContainerStatuses:
    - containerID: cri-o://bb4439b523aff7ef5899aa07a84b98931513ab3a15db9be7fcc1635367c19f59
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      lastState: {}
      name: azure-inject-credentials
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://bb4439b523aff7ef5899aa07a84b98931513ab3a15db9be7fcc1635367c19f59
          exitCode: 0
          finishedAt: "2024-06-11T10:44:51Z"
          reason: Completed
          startedAt: "2024-06-11T10:44:51Z"
    phase: Running
    podIP: 10.0.0.8
    podIPs:
    - ip: 10.0.0.8
    qosClass: Burstable
    startTime: "2024-06-11T10:44:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      operator.openshift.io/config-hash: 5f2b7e5868e4b3d21281245dcbe1b1ace01b8239175be47b491b5fc90c7bddaf
    creationTimestamp: "2024-06-11T10:44:50Z"
    generateName: azure-cloud-controller-manager-ccfbdcbbd-
    labels:
      infrastructure.openshift.io/cloud-controller-manager: Azure
      k8s-app: azure-cloud-controller-manager
      pod-template-hash: ccfbdcbbd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:operator.openshift.io/config-hash: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:infrastructure.openshift.io/cloud-controller-manager: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dd3974f7-905b-40e4-8ee9-397fb66a5ec3"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"cloud-controller-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"CLOUD_CONFIG"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OCP_INFRASTRUCTURE_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10258,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes-cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"azure-inject-credentials"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"AZURE_CLIENT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_TENANT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/merged-cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"bound-sa-token"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"config-accm"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"host-etc-kube"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"merged-cloud-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"trusted-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:44:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:44:56Z"
    name: azure-cloud-controller-manager-ccfbdcbbd-qd4nl
    namespace: openshift-cloud-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: azure-cloud-controller-manager-ccfbdcbbd
      uid: dd3974f7-905b-40e4-8ee9-397fb66a5ec3
    resourceVersion: "3852"
    uid: a5d948cd-66c3-4186-86c1-f1b1f0ac4d81
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              infrastructure.openshift.io/cloud-controller-manager: Azure
              k8s-app: azure-cloud-controller-manager
          topologyKey: kubernetes.io/hostname
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -o allexport
        if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
          source /etc/kubernetes/apiserver-url.env
        fi
        exec /bin/azure-cloud-controller-manager \
          --v=3 \
          --cloud-config=$(CLOUD_CONFIG) \
          --cloud-provider=azure \
          --concurrent-service-syncs=10 \
          --controllers=*,-cloud-node \
          --configure-cloud-routes=false \
          --use-service-account-credentials=true \
          --bind-address=127.0.0.1 \
          --cluster-name=$(OCP_INFRASTRUCTURE_NAME) \
          --leader-elect=true \
          --leader-elect-lease-duration=137s \
          --leader-elect-renew-deadline=107s \
          --leader-elect-retry-period=26s \
          --leader-elect-resource-namespace=openshift-cloud-controller-manager
      env:
      - name: CLOUD_CONFIG
        value: /etc/kubernetes-cloud-config/cloud.conf
      - name: OCP_INFRASTRUCTURE_NAME
        value: ci-op-9xx71rvq-1e28e-w667k
      - name: AZURE_FEDERATED_TOKEN_FILE
        valueFrom:
          secretKeyRef:
            key: azure_federated_token_file
            name: azure-cloud-credentials
            optional: true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ce4fcfefebbc59a93cb599fbecd9dfdc61aca056610ba34247b5c8e1934dfaa
      imagePullPolicy: IfNotPresent
      name: cloud-controller-manager
      ports:
      - containerPort: 10258
        hostPort: 10258
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 200m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes
        name: host-etc-kube
        readOnly: true
      - mountPath: /etc/kubernetes-cloud-config
        name: merged-cloud-config
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca
        readOnly: true
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cvxhp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
          cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
        fi
        exec /azure-config-credentials-injector \
          --cloud-config-file-path=/etc/cloud-config/cloud.conf \
          --output-file-path=/etc/merged-cloud-config/cloud.conf \
          --disable-identity-extension-auth \
          --enable-azure-workload-identity=true
      env:
      - name: AZURE_CLIENT_ID
        valueFrom:
          secretKeyRef:
            key: azure_client_id
            name: azure-cloud-credentials
      - name: AZURE_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            key: azure_client_secret
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_TENANT_ID
        valueFrom:
          secretKeyRef:
            key: azure_tenant_id
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_FEDERATED_TOKEN_FILE
        valueFrom:
          secretKeyRef:
            key: azure_federated_token_file
            name: azure-cloud-credentials
            optional: true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imagePullPolicy: IfNotPresent
      name: azure-inject-credentials
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/cloud-config
        name: config-accm
        readOnly: true
      - mountPath: /etc/merged-cloud-config
        name: merged-cloud-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cvxhp
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-1
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: cloud-controller-manager
    serviceAccountName: cloud-controller-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: cloud.conf
          path: cloud.conf
        name: cloud-conf
      name: config-accm
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: ccm-trusted-ca
      name: trusted-ca
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: host-etc-kube
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: merged-cloud-config
    - name: kube-api-access-cvxhp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4bcf7753186cb85ef9c33a7f322b5e758e3134f487f20bcdb43767903f35a757
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ce4fcfefebbc59a93cb599fbecd9dfdc61aca056610ba34247b5c8e1934dfaa
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0ce4fcfefebbc59a93cb599fbecd9dfdc61aca056610ba34247b5c8e1934dfaa
      lastState: {}
      name: cloud-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:44:55Z"
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    initContainerStatuses:
    - containerID: cri-o://b7fb01c8811ee1a7a407c13afab7fabbeadd15d7169df811cba565a94d4c6b8d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      lastState: {}
      name: azure-inject-credentials
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b7fb01c8811ee1a7a407c13afab7fabbeadd15d7169df811cba565a94d4c6b8d
          exitCode: 0
          finishedAt: "2024-06-11T10:44:51Z"
          reason: Completed
          startedAt: "2024-06-11T10:44:51Z"
    phase: Running
    podIP: 10.0.0.6
    podIPs:
    - ip: 10.0.0.6
    qosClass: Burstable
    startTime: "2024-06-11T10:44:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      operator.openshift.io/config-hash: fa49142ab64517579705cf4001c659c2d37c50626f6e3f9ba46275d7e50b6965
    creationTimestamp: "2024-06-11T10:44:50Z"
    generateName: azure-cloud-node-manager-
    labels:
      controller-revision-hash: 75c7f6fc44
      infrastructure.openshift.io/cloud-node-manager: Azure
      k8s-app: azure-cloud-node-manager
      pod-template-generation: "2"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/daemonset-pod: {}
            f:operator.openshift.io/config-hash: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:infrastructure.openshift.io/cloud-node-manager: {}
            f:k8s-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"cloud-node-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10263,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"azure-inject-credentials"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"AZURE_CLIENT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_TENANT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/merged-cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"bound-sa-token"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"host-etc-kube"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"merged-cloud-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"trusted-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:44:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:44:55Z"
    name: azure-cloud-node-manager-2hm2r
    namespace: openshift-cloud-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-cloud-node-manager
      uid: 1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b
    resourceVersion: "3833"
    uid: 5b0c93d9-b197-4d65-8d3f-7ad7a78a9a62
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-master-1
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -o allexport
        if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
          source /etc/kubernetes/apiserver-url.env
        fi
        exec /bin/azure-cloud-node-manager \
          --node-name=$(NODE_NAME) \
          --wait-routes=false \
          --enable-deprecated-beta-topology-labels
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      ports:
      - containerPort: 10263
        hostPort: 10263
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 50m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes
        name: merged-cloud-config
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca
        readOnly: true
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vtqsf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
          cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
        fi
        exec /azure-config-credentials-injector \
          --cloud-config-file-path=/etc/cloud-config/cloud.conf \
          --output-file-path=/etc/merged-cloud-config/cloud.conf \
          --disable-identity-extension-auth \
          --enable-azure-workload-identity=true
      env:
      - name: AZURE_CLIENT_ID
        valueFrom:
          secretKeyRef:
            key: azure_client_id
            name: azure-cloud-credentials
      - name: AZURE_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            key: azure_client_secret
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_TENANT_ID
        valueFrom:
          secretKeyRef:
            key: azure_tenant_id
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_FEDERATED_TOKEN_FILE
        valueFrom:
          secretKeyRef:
            key: azure_federated_token_file
            name: azure-cloud-credentials
            optional: true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imagePullPolicy: IfNotPresent
      name: azure-inject-credentials
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/cloud-config
        name: host-etc-kube
        readOnly: true
      - mountPath: /etc/merged-cloud-config
        name: merged-cloud-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vtqsf
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: ccm-trusted-ca
      name: trusted-ca
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: host-etc-kube
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: merged-cloud-config
    - name: kube-api-access-vtqsf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f12f9bc659ef0081989e8e9af70381a837018ac6796f288bec9743a54a8c90ac
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:44:54Z"
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    initContainerStatuses:
    - containerID: cri-o://13238048ea03983061071d1c11438d1dc7fcdd958df30c8eb749e8cc0ff80e70
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      lastState: {}
      name: azure-inject-credentials
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://13238048ea03983061071d1c11438d1dc7fcdd958df30c8eb749e8cc0ff80e70
          exitCode: 0
          finishedAt: "2024-06-11T10:44:51Z"
          reason: Completed
          startedAt: "2024-06-11T10:44:51Z"
    phase: Running
    podIP: 10.0.0.6
    podIPs:
    - ip: 10.0.0.6
    qosClass: Burstable
    startTime: "2024-06-11T10:44:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      operator.openshift.io/config-hash: fa49142ab64517579705cf4001c659c2d37c50626f6e3f9ba46275d7e50b6965
    creationTimestamp: "2024-06-11T10:56:25Z"
    generateName: azure-cloud-node-manager-
    labels:
      controller-revision-hash: 75c7f6fc44
      infrastructure.openshift.io/cloud-node-manager: Azure
      k8s-app: azure-cloud-node-manager
      pod-template-generation: "2"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/daemonset-pod: {}
            f:operator.openshift.io/config-hash: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:infrastructure.openshift.io/cloud-node-manager: {}
            f:k8s-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"cloud-node-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10263,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"azure-inject-credentials"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"AZURE_CLIENT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_TENANT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/merged-cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"bound-sa-token"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"host-etc-kube"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"merged-cloud-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"trusted-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:56:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:00:41Z"
    name: azure-cloud-node-manager-b7mbg
    namespace: openshift-cloud-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-cloud-node-manager
      uid: 1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b
    resourceVersion: "21526"
    uid: 7dd88648-53e0-4e26-9441-412a2923bab2
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -o allexport
        if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
          source /etc/kubernetes/apiserver-url.env
        fi
        exec /bin/azure-cloud-node-manager \
          --node-name=$(NODE_NAME) \
          --wait-routes=false \
          --enable-deprecated-beta-topology-labels
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      ports:
      - containerPort: 10263
        hostPort: 10263
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 50m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes
        name: merged-cloud-config
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca
        readOnly: true
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gn2rj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
          cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
        fi
        exec /azure-config-credentials-injector \
          --cloud-config-file-path=/etc/cloud-config/cloud.conf \
          --output-file-path=/etc/merged-cloud-config/cloud.conf \
          --disable-identity-extension-auth \
          --enable-azure-workload-identity=true
      env:
      - name: AZURE_CLIENT_ID
        valueFrom:
          secretKeyRef:
            key: azure_client_id
            name: azure-cloud-credentials
      - name: AZURE_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            key: azure_client_secret
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_TENANT_ID
        valueFrom:
          secretKeyRef:
            key: azure_tenant_id
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_FEDERATED_TOKEN_FILE
        valueFrom:
          secretKeyRef:
            key: azure_federated_token_file
            name: azure-cloud-credentials
            optional: true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imagePullPolicy: IfNotPresent
      name: azure-inject-credentials
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/cloud-config
        name: host-etc-kube
        readOnly: true
      - mountPath: /etc/merged-cloud-config
        name: merged-cloud-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gn2rj
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: ccm-trusted-ca
      name: trusted-ca
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: host-etc-kube
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: merged-cloud-config
    - name: kube-api-access-gn2rj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:59:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:59:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:56:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d8645592f09508aa0be12477ea9e30681bf2a343ad9c38e2a1df5afbdb7ab973
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      lastState:
        terminated:
          containerID: cri-o://5b185a002b89050973a251441e8baacd904341acc84814bdea99a331da456e55
          exitCode: 255
          finishedAt: "2024-06-11T10:59:12Z"
          message: |
            W0611 10:57:41.541569       1 client_config.go:618] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
            I0611 10:57:41.543001       1 nodemanager.go:103] Version: github.com/openshift/cloud-provider-azure
            I0611 10:57:41.543020       1 nodemanager.go:104] NodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
            I0611 10:57:41.543675       1 nodemanager.go:147] Sending events to api server.
            I0611 10:57:41.544024       1 nodemanager.go:148] Started cloud-node-manager
            F0611 10:59:12.548798       1 nodemanager.go:153] Failed to wait for apiserver being healthy: timed out waiting for the condition: failed to get apiserver /healthz status: Get "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/healthz": dial tcp 10.0.0.4:6443: i/o timeout
          reason: Error
          startedAt: "2024-06-11T10:57:41Z"
      name: cloud-node-manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:59:13Z"
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    initContainerStatuses:
    - containerID: cri-o://f3055a8aafc5990bd6e7430fe36b362878440f99520bc89c42f3d7f4c79194b2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      lastState: {}
      name: azure-inject-credentials
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://f3055a8aafc5990bd6e7430fe36b362878440f99520bc89c42f3d7f4c79194b2
          exitCode: 0
          finishedAt: "2024-06-11T10:57:22Z"
          reason: Completed
          startedAt: "2024-06-11T10:57:22Z"
    phase: Running
    podIP: 10.0.128.4
    podIPs:
    - ip: 10.0.128.4
    qosClass: Burstable
    startTime: "2024-06-11T10:56:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      operator.openshift.io/config-hash: fa49142ab64517579705cf4001c659c2d37c50626f6e3f9ba46275d7e50b6965
    creationTimestamp: "2024-06-11T10:44:50Z"
    generateName: azure-cloud-node-manager-
    labels:
      controller-revision-hash: 75c7f6fc44
      infrastructure.openshift.io/cloud-node-manager: Azure
      k8s-app: azure-cloud-node-manager
      pod-template-generation: "2"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/daemonset-pod: {}
            f:operator.openshift.io/config-hash: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:infrastructure.openshift.io/cloud-node-manager: {}
            f:k8s-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"cloud-node-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10263,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"azure-inject-credentials"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"AZURE_CLIENT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_TENANT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/merged-cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"bound-sa-token"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"host-etc-kube"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"merged-cloud-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"trusted-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:44:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.7"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:44:55Z"
    name: azure-cloud-node-manager-l4xmv
    namespace: openshift-cloud-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-cloud-node-manager
      uid: 1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b
    resourceVersion: "3828"
    uid: 9b100c7d-a8e5-46a6-82ad-039b5c411731
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-master-2
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -o allexport
        if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
          source /etc/kubernetes/apiserver-url.env
        fi
        exec /bin/azure-cloud-node-manager \
          --node-name=$(NODE_NAME) \
          --wait-routes=false \
          --enable-deprecated-beta-topology-labels
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      ports:
      - containerPort: 10263
        hostPort: 10263
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 50m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes
        name: merged-cloud-config
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca
        readOnly: true
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zj5c9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
          cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
        fi
        exec /azure-config-credentials-injector \
          --cloud-config-file-path=/etc/cloud-config/cloud.conf \
          --output-file-path=/etc/merged-cloud-config/cloud.conf \
          --disable-identity-extension-auth \
          --enable-azure-workload-identity=true
      env:
      - name: AZURE_CLIENT_ID
        valueFrom:
          secretKeyRef:
            key: azure_client_id
            name: azure-cloud-credentials
      - name: AZURE_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            key: azure_client_secret
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_TENANT_ID
        valueFrom:
          secretKeyRef:
            key: azure_tenant_id
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_FEDERATED_TOKEN_FILE
        valueFrom:
          secretKeyRef:
            key: azure_federated_token_file
            name: azure-cloud-credentials
            optional: true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imagePullPolicy: IfNotPresent
      name: azure-inject-credentials
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/cloud-config
        name: host-etc-kube
        readOnly: true
      - mountPath: /etc/merged-cloud-config
        name: merged-cloud-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zj5c9
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: ccm-trusted-ca
      name: trusted-ca
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: host-etc-kube
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: merged-cloud-config
    - name: kube-api-access-zj5c9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://59827d98590b67ca56730c81c25e13d99445d2e871395fba6ffcef4533a00256
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:44:54Z"
    hostIP: 10.0.0.7
    hostIPs:
    - ip: 10.0.0.7
    initContainerStatuses:
    - containerID: cri-o://44735a650cc88f4bf6ac9bc3d9f68545f18a206cb3da447b555cc20387577284
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      lastState: {}
      name: azure-inject-credentials
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://44735a650cc88f4bf6ac9bc3d9f68545f18a206cb3da447b555cc20387577284
          exitCode: 0
          finishedAt: "2024-06-11T10:44:50Z"
          reason: Completed
          startedAt: "2024-06-11T10:44:50Z"
    phase: Running
    podIP: 10.0.0.7
    podIPs:
    - ip: 10.0.0.7
    qosClass: Burstable
    startTime: "2024-06-11T10:44:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      operator.openshift.io/config-hash: fa49142ab64517579705cf4001c659c2d37c50626f6e3f9ba46275d7e50b6965
    creationTimestamp: "2024-06-11T10:44:50Z"
    generateName: azure-cloud-node-manager-
    labels:
      controller-revision-hash: 75c7f6fc44
      infrastructure.openshift.io/cloud-node-manager: Azure
      k8s-app: azure-cloud-node-manager
      pod-template-generation: "2"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/daemonset-pod: {}
            f:operator.openshift.io/config-hash: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:infrastructure.openshift.io/cloud-node-manager: {}
            f:k8s-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"cloud-node-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10263,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"azure-inject-credentials"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"AZURE_CLIENT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_TENANT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/merged-cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"bound-sa-token"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"host-etc-kube"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"merged-cloud-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"trusted-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:44:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:56:12Z"
    name: azure-cloud-node-manager-njdg9
    namespace: openshift-cloud-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-cloud-node-manager
      uid: 1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b
    resourceVersion: "18162"
    uid: 752162d6-e316-4b31-a7ab-4797212af4c5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-master-0
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -o allexport
        if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
          source /etc/kubernetes/apiserver-url.env
        fi
        exec /bin/azure-cloud-node-manager \
          --node-name=$(NODE_NAME) \
          --wait-routes=false \
          --enable-deprecated-beta-topology-labels
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      ports:
      - containerPort: 10263
        hostPort: 10263
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 50m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes
        name: merged-cloud-config
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca
        readOnly: true
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zwzxl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
          cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
        fi
        exec /azure-config-credentials-injector \
          --cloud-config-file-path=/etc/cloud-config/cloud.conf \
          --output-file-path=/etc/merged-cloud-config/cloud.conf \
          --disable-identity-extension-auth \
          --enable-azure-workload-identity=true
      env:
      - name: AZURE_CLIENT_ID
        valueFrom:
          secretKeyRef:
            key: azure_client_id
            name: azure-cloud-credentials
      - name: AZURE_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            key: azure_client_secret
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_TENANT_ID
        valueFrom:
          secretKeyRef:
            key: azure_tenant_id
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_FEDERATED_TOKEN_FILE
        valueFrom:
          secretKeyRef:
            key: azure_federated_token_file
            name: azure-cloud-credentials
            optional: true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imagePullPolicy: IfNotPresent
      name: azure-inject-credentials
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/cloud-config
        name: host-etc-kube
        readOnly: true
      - mountPath: /etc/merged-cloud-config
        name: merged-cloud-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zwzxl
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-0
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: ccm-trusted-ca
      name: trusted-ca
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: host-etc-kube
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: merged-cloud-config
    - name: kube-api-access-zwzxl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:44:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7ea9bb615c3ed0580e92eca37b593cbd5379b69c2adebb7ab9060a5e5f547cc1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:44:54Z"
    hostIP: 10.0.0.8
    hostIPs:
    - ip: 10.0.0.8
    initContainerStatuses:
    - containerID: cri-o://a516a31c151028d4532dd934e20013623f0113aaab2434aabc21d548bb68cd9d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      lastState: {}
      name: azure-inject-credentials
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://a516a31c151028d4532dd934e20013623f0113aaab2434aabc21d548bb68cd9d
          exitCode: 0
          finishedAt: "2024-06-11T10:44:50Z"
          reason: Completed
          startedAt: "2024-06-11T10:44:50Z"
    phase: Running
    podIP: 10.0.0.8
    podIPs:
    - ip: 10.0.0.8
    qosClass: Burstable
    startTime: "2024-06-11T10:44:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      operator.openshift.io/config-hash: fa49142ab64517579705cf4001c659c2d37c50626f6e3f9ba46275d7e50b6965
    creationTimestamp: "2024-06-11T10:56:26Z"
    generateName: azure-cloud-node-manager-
    labels:
      controller-revision-hash: 75c7f6fc44
      infrastructure.openshift.io/cloud-node-manager: Azure
      k8s-app: azure-cloud-node-manager
      pod-template-generation: "2"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/daemonset-pod: {}
            f:operator.openshift.io/config-hash: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:infrastructure.openshift.io/cloud-node-manager: {}
            f:k8s-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"cloud-node-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10263,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"azure-inject-credentials"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"AZURE_CLIENT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_TENANT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/merged-cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"bound-sa-token"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"host-etc-kube"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"merged-cloud-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"trusted-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:56:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:00:26Z"
    name: azure-cloud-node-manager-p48ld
    namespace: openshift-cloud-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-cloud-node-manager
      uid: 1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b
    resourceVersion: "21237"
    uid: d15842fc-b89e-4a33-907e-e1921a2a3124
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -o allexport
        if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
          source /etc/kubernetes/apiserver-url.env
        fi
        exec /bin/azure-cloud-node-manager \
          --node-name=$(NODE_NAME) \
          --wait-routes=false \
          --enable-deprecated-beta-topology-labels
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      ports:
      - containerPort: 10263
        hostPort: 10263
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 50m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes
        name: merged-cloud-config
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca
        readOnly: true
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jcq7n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
          cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
        fi
        exec /azure-config-credentials-injector \
          --cloud-config-file-path=/etc/cloud-config/cloud.conf \
          --output-file-path=/etc/merged-cloud-config/cloud.conf \
          --disable-identity-extension-auth \
          --enable-azure-workload-identity=true
      env:
      - name: AZURE_CLIENT_ID
        valueFrom:
          secretKeyRef:
            key: azure_client_id
            name: azure-cloud-credentials
      - name: AZURE_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            key: azure_client_secret
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_TENANT_ID
        valueFrom:
          secretKeyRef:
            key: azure_tenant_id
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_FEDERATED_TOKEN_FILE
        valueFrom:
          secretKeyRef:
            key: azure_federated_token_file
            name: azure-cloud-credentials
            optional: true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imagePullPolicy: IfNotPresent
      name: azure-inject-credentials
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/cloud-config
        name: host-etc-kube
        readOnly: true
      - mountPath: /etc/merged-cloud-config
        name: merged-cloud-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jcq7n
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: ccm-trusted-ca
      name: trusted-ca
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: host-etc-kube
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: merged-cloud-config
    - name: kube-api-access-jcq7n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:58:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:58:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:56:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://321e35d619c8cca3995e007bcdd3dd0a5cc6a7925a0c8808c8bd7f14f702660c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:58:12Z"
    hostIP: 10.0.128.6
    hostIPs:
    - ip: 10.0.128.6
    initContainerStatuses:
    - containerID: cri-o://0fa4c62cb0b82e48ae6fc1719e9448fb80d6551bae686ea91d38f64ce17e8efc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      lastState: {}
      name: azure-inject-credentials
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://0fa4c62cb0b82e48ae6fc1719e9448fb80d6551bae686ea91d38f64ce17e8efc
          exitCode: 0
          finishedAt: "2024-06-11T10:57:36Z"
          reason: Completed
          startedAt: "2024-06-11T10:57:35Z"
    phase: Running
    podIP: 10.0.128.6
    podIPs:
    - ip: 10.0.128.6
    qosClass: Burstable
    startTime: "2024-06-11T10:56:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      operator.openshift.io/config-hash: fa49142ab64517579705cf4001c659c2d37c50626f6e3f9ba46275d7e50b6965
    creationTimestamp: "2024-06-11T10:56:31Z"
    generateName: azure-cloud-node-manager-
    labels:
      controller-revision-hash: 75c7f6fc44
      infrastructure.openshift.io/cloud-node-manager: Azure
      k8s-app: azure-cloud-node-manager
      pod-template-generation: "2"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/daemonset-pod: {}
            f:operator.openshift.io/config-hash: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:infrastructure.openshift.io/cloud-node-manager: {}
            f:k8s-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"cloud-node-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10263,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/run/secrets/openshift/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"azure-inject-credentials"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"AZURE_CLIENT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_CLIENT_SECRET"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_FEDERATED_TOKEN_FILE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
                k:{"name":"AZURE_TENANT_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:secretKeyRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/merged-cloud-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"bound-sa-token"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"host-etc-kube"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"merged-cloud-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"trusted-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:56:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.5"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:00:33Z"
    name: azure-cloud-node-manager-t6wgr
    namespace: openshift-cloud-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-cloud-node-manager
      uid: 1d7f6aee-a9b6-4569-b38d-57ece0f4cb5b
    resourceVersion: "21381"
    uid: 0164010d-cf03-41ae-9eea-74b71c3c0a08
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -o allexport
        if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
          source /etc/kubernetes/apiserver-url.env
        fi
        exec /bin/azure-cloud-node-manager \
          --node-name=$(NODE_NAME) \
          --wait-routes=false \
          --enable-deprecated-beta-topology-labels
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      ports:
      - containerPort: 10263
        hostPort: 10263
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 50m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes
        name: merged-cloud-config
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca
        readOnly: true
      - mountPath: /var/run/secrets/openshift/serviceaccount
        name: bound-sa-token
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-54s45
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        if [[ -f /etc/cloud-config/apiserver-url.env ]]; then
          cp /etc/cloud-config/apiserver-url.env /etc/merged-cloud-config/
        fi
        exec /azure-config-credentials-injector \
          --cloud-config-file-path=/etc/cloud-config/cloud.conf \
          --output-file-path=/etc/merged-cloud-config/cloud.conf \
          --disable-identity-extension-auth \
          --enable-azure-workload-identity=true
      env:
      - name: AZURE_CLIENT_ID
        valueFrom:
          secretKeyRef:
            key: azure_client_id
            name: azure-cloud-credentials
      - name: AZURE_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            key: azure_client_secret
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_TENANT_ID
        valueFrom:
          secretKeyRef:
            key: azure_tenant_id
            name: azure-cloud-credentials
            optional: true
      - name: AZURE_FEDERATED_TOKEN_FILE
        valueFrom:
          secretKeyRef:
            key: azure_federated_token_file
            name: azure-cloud-credentials
            optional: true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imagePullPolicy: IfNotPresent
      name: azure-inject-credentials
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/cloud-config
        name: host-etc-kube
        readOnly: true
      - mountPath: /etc/merged-cloud-config
        name: merged-cloud-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-54s45
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node-role.kubernetes.io/infra
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: ccm-trusted-ca
      name: trusted-ca
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: host-etc-kube
    - name: bound-sa-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: openshift
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: merged-cloud-config
    - name: kube-api-access-54s45
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:59:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:59:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:56:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://56df7fe15b0a13cbbd3884c1f47cf5ff48f9d6e58a3dc1192b632ffc08bde901
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fadc119bc4c8e630b76b0df84e31adb20b5484dcaf8495d0edcfe4288f414546
      lastState:
        terminated:
          containerID: cri-o://d029c5fddf01b4462486c1fae5cf29135f4d0f638fdabeefed3df5c36bc4aed2
          exitCode: 255
          finishedAt: "2024-06-11T10:59:06Z"
          message: |
            W0611 10:57:35.893614       1 client_config.go:618] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
            I0611 10:57:35.896801       1 nodemanager.go:103] Version: github.com/openshift/cloud-provider-azure
            I0611 10:57:35.896844       1 nodemanager.go:104] NodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
            I0611 10:57:35.897446       1 nodemanager.go:147] Sending events to api server.
            I0611 10:57:35.897790       1 nodemanager.go:148] Started cloud-node-manager
            F0611 10:59:06.901418       1 nodemanager.go:153] Failed to wait for apiserver being healthy: timed out waiting for the condition: failed to get apiserver /healthz status: Get "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/healthz": dial tcp 10.0.0.4:6443: i/o timeout
          reason: Error
          startedAt: "2024-06-11T10:57:35Z"
      name: cloud-node-manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:59:07Z"
    hostIP: 10.0.128.5
    hostIPs:
    - ip: 10.0.128.5
    initContainerStatuses:
    - containerID: cri-o://8ea8113d3b81d3dd59d96fcc0ce65ddeeb5cac2a9717310daf09f1792424d8aa
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
      lastState: {}
      name: azure-inject-credentials
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://8ea8113d3b81d3dd59d96fcc0ce65ddeeb5cac2a9717310daf09f1792424d8aa
          exitCode: 0
          finishedAt: "2024-06-11T10:57:13Z"
          reason: Completed
          startedAt: "2024-06-11T10:57:13Z"
    phase: Running
    podIP: 10.0.128.5
    podIPs:
    - ip: 10.0.128.5
    qosClass: Burstable
    startTime: "2024-06-11T10:56:32Z"
kind: PodList
metadata:
  resourceVersion: "39862"
