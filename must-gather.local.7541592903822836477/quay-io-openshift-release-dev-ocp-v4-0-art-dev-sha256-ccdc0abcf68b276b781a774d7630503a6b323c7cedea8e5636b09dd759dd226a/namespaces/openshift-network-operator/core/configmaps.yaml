---
apiVersion: v1
items:
- apiVersion: v1
  data:
    applied: '{"managementState":"Managed","logLevel":"Normal","operatorLogLevel":"Normal","unsupportedConfigOverrides":null,"observedConfig":null,"clusterNetwork":[{"cidr":"10.128.0.0/14","hostPrefix":23}],"serviceNetwork":["172.30.0.0/16"],"defaultNetwork":{"type":"OVNKubernetes","ovnKubernetesConfig":{"mtu":1400,"genevePort":6081,"hybridOverlayConfig":{"hybridClusterNetwork":[{"cidr":"10.132.0.0/14","hostPrefix":23}]},"ipsecConfig":{"mode":"Disabled"},"policyAuditConfig":{"rateLimit":20,"maxFileSize":50,"maxLogFiles":5,"destination":"null","syslogFacility":"local0"},"gatewayConfig":{"ipv4":{},"ipv6":{}},"egressIPConfig":{}}},"disableMultiNetwork":false,"useMultiNetworkPolicy":false,"deployKubeProxy":false,"disableNetworkDiagnostics":false}'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-06-11T10:46:49Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:applied: {}
        f:metadata:
          f:ownerReferences:
            k:{"uid":"62ee1ce2-90a7-43aa-95fc-751c249264a6"}: {}
      manager: cluster-network-operator/operconfig
      operation: Apply
      time: "2024-06-11T10:47:16Z"
    name: applied-cluster
    namespace: openshift-network-operator
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: 62ee1ce2-90a7-43aa-95fc-751c249264a6
    resourceVersion: "5082"
    uid: 5d5f8b63-7e2c-481e-bb10-810a4e15aa53
- apiVersion: v1
  data:
    iptables-alerter.sh: |-
      #!/bin/bash

      set -euo pipefail

      function crictl {
          case "${1}" in
          inspectp)
              # Eat errors, since the pod may have exited since we started the loop.
              # The caller will catch the empty return value
              chroot /host /bin/crictl "$@" 2>/dev/null || true
              ;;
          *)
              chroot /host /bin/crictl "$@"
              ;;
          esac
      }
      function jq {
          chroot /host /bin/jq "$@"
      }
      function ip {
          chroot /host /sbin/ip "$@"
      }

      while :; do
          date
          # Iterate over local pods
          for id in $(crictl pods -q); do
              # Check that it's a pod-network pod
              netns=$(crictl inspectp "${id}" | jq -r .status.linux.namespaces.options.network)
              if [[ "${netns}" == "NODE" ]]; then
                  continue
              fi

              # Find the network namespace
              netns_path=$(crictl inspectp "${id}" | jq -r '.info.runtimeSpec.linux.namespaces[] | select(.type == "network").path')
              if [[ ! "${netns_path}" =~ ^/var/run/netns/ ]]; then
                  continue
              fi
              netns=$(basename "${netns_path}")

              # Gather pod metadata
              pod_namespace=$(crictl inspectp "${id}" | jq -r .status.metadata.namespace)
              pod_name=$(crictl inspectp "${id}" | jq -r .status.metadata.name)
              pod_uid=$(crictl inspectp "${id}" | jq -r .status.metadata.uid)

              # If the pod exited already then crictl will have returned "" for everything
              if [[ -z "${pod_uid}" ]]; then
                  continue
              fi

              # Check if we already logged an event for it
              events=$(kubectl get events -n "${pod_namespace}" -l pod-uid="${pod_uid}" 2>/dev/null)
              if [[ -n "${events}" ]]; then
                  echo "Skipping pod ${pod_namespace}/${pod_name} which we already logged an event for."
                  continue
              fi

              # Set iptables_output to the first iptables rule in the pod's network
              # namespace, if any. (We use `awk` here rather than `grep` intentionally
              # to avoid awkwardness with grep's exit status on no match.)
              iptables_output=$(
                  (ip netns exec "${netns}" iptables-save || true;
                   ip netns exec "${netns}" ip6tables-save || true) 2>/dev/null | \
                  awk '/^-A/ {print; exit}'
              )
              if [[ -z "${iptables_output}" ]]; then
                  continue
              fi

              echo "Logging event for ${pod_namespace}/${pod_name} which has iptables rules"

              # eg "2023-10-19T15:45:10.353846Z"
              event_time=$(date -u +%FT%T.%6NZ)

              kubectl create -f - <<EOF
      apiVersion: events.k8s.io/v1
      kind: Event
      metadata:
        namespace: ${pod_namespace}
        generateName: iptables-alert-
        labels:
          pod-uid: ${pod_uid}
      regarding:
        apiVersion: v1
        kind: Pod
        namespace: ${pod_namespace}
        name: ${pod_name}
        uid: ${pod_uid}
      reportingController: openshift.io/iptables-deprecation-alerter
      reportingInstance: ${ALERTER_POD_NAME}
      action: IPTablesUsageObserved
      reason: IPTablesUsageObserved
      type: Normal
      note: |
        This pod appears to have created one or more iptables rules. IPTables is
        deprecated and will no longer be available in RHEL 10 and later. You should
        consider migrating to another API such as nftables or eBPF. See also
        https://access.redhat.com/solutions/6739041

        Example iptables rule seen in this pod:
        ${iptables_output}
      eventTime: ${event_time}
      EOF
          done

          echo ""
          sleep 3600
      done
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: |
        This is a script used by the iptables-alerter DaemonSet
      release.openshift.io/version: 4.16.0-0.nightly-2024-06-10-211334
    creationTimestamp: "2024-06-11T10:47:11Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:iptables-alerter.sh: {}
        f:metadata:
          f:annotations:
            f:kubernetes.io/description: {}
            f:release.openshift.io/version: {}
          f:ownerReferences:
            k:{"uid":"62ee1ce2-90a7-43aa-95fc-751c249264a6"}: {}
      manager: cluster-network-operator/operconfig
      operation: Apply
      time: "2024-06-11T10:47:11Z"
    name: iptables-alerter-script
    namespace: openshift-network-operator
    ownerReferences:
    - apiVersion: operator.openshift.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Network
      name: cluster
      uid: 62ee1ce2-90a7-43aa-95fc-751c249264a6
    resourceVersion: "5014"
    uid: 4d760f75-5ad5-4869-8fd4-7677d7eccb3f
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDMjCCAhqgAwIBAgIIOZgkPKjiSXMwDQYJKoZIhvcNAQELBQAwNzESMBAGA1UE
      CxMJb3BlbnNoaWZ0MSEwHwYDVQQDExhrdWJlLWFwaXNlcnZlci1sYi1zaWduZXIw
      HhcNMjQwNjExMTAxOTAxWhcNMzQwNjA5MTAxOTAxWjA3MRIwEAYDVQQLEwlvcGVu
      c2hpZnQxITAfBgNVBAMTGGt1YmUtYXBpc2VydmVyLWxiLXNpZ25lcjCCASIwDQYJ
      KoZIhvcNAQEBBQADggEPADCCAQoCggEBAOMNJQ31plTY73mhN9xkeDKdBtdIMt+4
      7WAaFY8heeQdmlZfUZkZsjl1pvSugZ/hZcRXumQ3K1tdB+cKZOTKJQgPzIzOETHM
      bt0kQ6oQoul19LaT3suFT2TJ9vqNRK6fCd4IQOpLgmg51h3lBfcDz42Dd6vCWWjt
      mlGbLWsDXV0//db2PNdLlSPljFaqPdUJ60cE9eQwdzvDiTZkjN0wm4Cal/QRPmN6
      wm66FafdJAmGNhKqz23eR/KpNvf5UfZjvWXiCAgPH1okpIQswSIdPBCp3lrkftga
      XLqeX48BEJAU2+X5IZjzihzDyPngyHxiH4cXz/x6WKPpoEvdsabiCB8CAwEAAaNC
      MEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFAFe
      +hvToOpBQ1OjZmFKflYn87mGMA0GCSqGSIb3DQEBCwUAA4IBAQDdgDIWYEqHNCNx
      fVGa+5Sgh4qE/rKsILCAPKjFtvSWg5jkfTyTyZgig6ikby1xA8gVjL1dHy6jGv2g
      2RV8zavt9HBLSSHM/Gz+85dADsot5aE+fypMx3TQuFvxXNytcqE8TI1GUroQnwp4
      CEXcRaPJ3Tt9bqS3yJuPcwdREhUFjEdMO9ZFbVUk94tPsZ07tfPvaCTCrikf8Occ
      EmIBN0ahylZk8dw9OmKw3wtYgoLAeLfTFxNYTdVb1VYei4AK/yC29f8/skrwAPBX
      /9TNA9p5xnRtyaa9mYbO20LdfED7m4PsHzCw0U0XjqDvOosN/Xi1xD5ZxKsDRuxj
      EpPdHinx
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDQDCCAiigAwIBAgIIK/muZYsht/cwDQYJKoZIhvcNAQELBQAwPjESMBAGA1UE
      CxMJb3BlbnNoaWZ0MSgwJgYDVQQDEx9rdWJlLWFwaXNlcnZlci1sb2NhbGhvc3Qt
      c2lnbmVyMB4XDTI0MDYxMTEwMTkwMVoXDTM0MDYwOTEwMTkwMVowPjESMBAGA1UE
      CxMJb3BlbnNoaWZ0MSgwJgYDVQQDEx9rdWJlLWFwaXNlcnZlci1sb2NhbGhvc3Qt
      c2lnbmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4iXHckm/7n1U
      QUlmnOPjm6Co/1q/cl/cWJRtsdAMvd9V5hsKehnPJ4Q4mDCQ3rkpz7fagNbHSEvO
      P9rAjEI6Bgzwbo+JAwMqDelN7CbEO9p2AW2ciuXQX2OhMow+13NBbbZxa8UHZcqG
      2rh+yRv/SIYT+A/WotWCQZwQJc9JiGsK1q1oLe5kNNr/2sCjVe3o63Tf74TTMC52
      AY1rDbnhrsx2VKB3JMV2XcQS5k9IxZbFPLJWzvGM2t4zZBnu0U9hN4JtzArsNSgl
      b3LiKAC6PCLV3kCVGbXlOiTykOTyNq3lhARHJzd5Lm6cN+uXywmVtj+QE45pgfbJ
      yroFyOiOZwIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAqQwDwYDVR0TAQH/BAUwAwEB
      /zAdBgNVHQ4EFgQUUZKSa8GUZ9qjiL/E7pSges35z4AwDQYJKoZIhvcNAQELBQAD
      ggEBAC6QwBuPhM8F+wB5zqt9ldzYXOzzlVy7u1+4agEvTlfz0vB7l2Bi22rFEimw
      hEXsmuZhVIJxgGNWVqLbg2dr8ax1QZ/gPeXqZXJY8wz0kzlNQB3tERBlxCQhIIoa
      cuQipYTA51C7WEoIQQc68+HrPmmHnhBbFw5LZbN6k6jRmLFotg7RCtjZLDS+2bxw
      qZT0YencAZMBVpvDoDZyW4HEdUd4bzrmK2p1DUNkMlZuSR+Rjjp8CLz+0ikveesK
      cGanBxN+oW1OzlVyaCI2Epu+aagPwHbUUFdlw7hsyNc5lofab+nfm2ViHZhZwBcj
      A0LSVVmltDG7jfi0Xj49ug51mUA=
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDTDCCAjSgAwIBAgIINO0yAMSHeFcwDQYJKoZIhvcNAQELBQAwRDESMBAGA1UE
      CxMJb3BlbnNoaWZ0MS4wLAYDVQQDEyVrdWJlLWFwaXNlcnZlci1zZXJ2aWNlLW5l
      dHdvcmstc2lnbmVyMB4XDTI0MDYxMTEwMTkwMVoXDTM0MDYwOTEwMTkwMVowRDES
      MBAGA1UECxMJb3BlbnNoaWZ0MS4wLAYDVQQDEyVrdWJlLWFwaXNlcnZlci1zZXJ2
      aWNlLW5ldHdvcmstc2lnbmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
      AQEA3PLsu6vfUb4qCKyXxaExvUXWGRiUrV3b1BiEvyER08XIovGzpHDQ41aD7mxT
      w1+mjW19MsSWD8XXLHaj8ad6GiZ3aNJ2iIAp6PGATQrKWY+LlOFnSrk21XArYOx3
      8HNx6kjgFdQOs3A4unbbCBNQh3MTbnJXfUaSDNBEYY+QMWaHSAoQPVThS4VcD6rI
      F8d7GG726ogUuAM4eDum3b7Dw6h9xZWFHS9A3L/05S1jD/p6r/E7BghRNRvvJsSm
      M78c68fQmygMIwAHYV0iQTXYzFl4qeMovCUTlm933P56flpghXTLbV858pJEiVKq
      eInZ6QWrH4oEp1Wvduxsm6I3AQIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAqQwDwYD
      VR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUxgNzyToLk4YHrryxwHRdCi1YVZ4wDQYJ
      KoZIhvcNAQELBQADggEBACMEI0/eYMPlJf/TKVlQh+8zuFaqsmV4SEo4bcz2QR/5
      ytw7cC3W87lCAJ+yhWLF0c8ddjn2EgckASE97MVEvdY7z/JqD48tzS4MTBzKu5V6
      7g4qX0N8sPG8i7fKeB5VIdtpvk1THhwpJBgAYeRs2Vt3oR3hts38Hunf1Fm1Iq9a
      uC2a63NTfI5SFAg2jiICuokbdPcRSJWQhufS5vwBR5rTAoyP2iVJLtHrtPp+2+Fq
      O7G4qMDY8M8sVOsmTLnuXdoS7z+j9bwMGhYZG3xW3nvgEFLUEtB62OjM/8YQGzKj
      8PBR8CmLd/3Zz8/Bf4nIwJ9bB9acCCYHXh2Vr23X0sE=
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDlzCCAn+gAwIBAgIIEtJWch74/5wwDQYJKoZIhvcNAQELBQAwWTFXMFUGA1UE
      AwxOb3BlbnNoaWZ0LWt1YmUtYXBpc2VydmVyLW9wZXJhdG9yX2xvY2FsaG9zdC1y
      ZWNvdmVyeS1zZXJ2aW5nLXNpZ25lckAxNzE4MTAyOTAzMB4XDTI0MDYxMTEwNDgy
      MloXDTM0MDYwOTEwNDgyM1owWTFXMFUGA1UEAwxOb3BlbnNoaWZ0LWt1YmUtYXBp
      c2VydmVyLW9wZXJhdG9yX2xvY2FsaG9zdC1yZWNvdmVyeS1zZXJ2aW5nLXNpZ25l
      ckAxNzE4MTAyOTAzMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2gfY
      ieeA1s5yIPIyr4nreolJtWJU316iq04zgL77CwCJSCLdqovBxvSFgaprS5Cd+V3+
      7w3t5JrZ+/o1DeVfvMGcQdeYG0ruYp6tPAqzbV9huKjXNC4B1tipWTWL0xKfjfol
      VJJ+idbKQQm5cFg0q4MgwG8gT0B8sfJr7Tnz9pfjmUffcTqHk9xkq8A6ba+HnWc+
      AA5iZl7fmGUAtIRwaFHDZgMTGER7Hy7iY6DlaZhga2tHwk2srdj80gxFDutzIDXm
      DQla8I2ZEoEVbWZndub5JPpl0OrVc1l6JZ1Zo4dKz0Dg9ef9vd/AKTinVx+9sFUy
      XKBsbJnqWssuUNMYbwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAqQwDwYDVR0TAQH/
      BAUwAwEB/zAdBgNVHQ4EFgQUVC5qGhSPlvXcUxjPlGQx5kRN+JAwHwYDVR0jBBgw
      FoAUVC5qGhSPlvXcUxjPlGQx5kRN+JAwDQYJKoZIhvcNAQELBQADggEBADlCo4YF
      aa3VGBLnkAvygstPOaeCRAeUXTVPeFeo6IgkrNBrkR2l1lP3cmH2XhGfxEbTILxT
      enFFwDjhM1zm4LsygLqA9FC08TzWuQyS1uDOajvLaXxtam6s6d3N6nDAElZzuwh2
      19XYLGEFWxgs1Pt71KoN16kVdPW/rVFgCPFyn0CVTjbPeoPSmqgJbsqyK/Rs2VOR
      4segDUoBmTmGYAsBx0Kq9BuOAAtfaA7UlluIQ8q5qrGd9xQ/3s8qmCV+syah0ljJ
      X0/Z2S0DrWBqX5bzkR6i6vzUg/ACMt+5B/j++NCyqs03ls862GD7AeiP8jaS51a2
      VBPno2MjcbkakiI=
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDsTCCApmgAwIBAgIIdCvH9RE3lzgwDQYJKoZIhvcNAQELBQAwJjEkMCIGA1UE
      AwwbaW5ncmVzcy1vcGVyYXRvckAxNzE4MTAyOTYzMB4XDTI0MDYxMTEwNDkyNFoX
      DTI2MDYxMTEwNDkyNVowSDFGMEQGA1UEAww9Ki5hcHBzLmNpLW9wLTl4eDcxcnZx
      LTFlMjhlLnFlLmF6dXJlLmRldmNsdXN0ZXIub3BlbnNoaWZ0LmNvbTCCASIwDQYJ
      KoZIhvcNAQEBBQADggEPADCCAQoCggEBAMEXt7td5wBAHJLibHXL3j6/zeypnUlZ
      zFwfnYhxHFpmHdDXkj4+8yXVj/asJOtL9gTHh9VqNwnSr1slC+yq16+KEQPMGiwc
      Z94MpCUV4zNHTHqxCXOHWFCmQ+gXZXExRpWnZXN6jzUv29dCax/XJ+xA+Rre2Aly
      B45hkmfnDx3tggIcypQoFG3MMJVZxktKJZA/W9R/rRcQyYHRvIaWD96CNzaApjnR
      Z9l+FJ3U8zXEb2jUeNH9oa2/t2zPc5JOwaHFG0xaTPyTIif77qES6XbaqJgco6zr
      cCfim6/w6/9oaYcz9MD6cR1hGAoxokGphkazISMxL3UroLA+SFZ/cj8CAwEAAaOB
      wDCBvTAOBgNVHQ8BAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwEwDAYDVR0T
      AQH/BAIwADAdBgNVHQ4EFgQUxxTcJW1j1SIm1srEoxJRfxoYXv0wHwYDVR0jBBgw
      FoAU0EJZY45sDzwQHJ9Fbs4J0+5YQXAwSAYDVR0RBEEwP4I9Ki5hcHBzLmNpLW9w
      LTl4eDcxcnZxLTFlMjhlLnFlLmF6dXJlLmRldmNsdXN0ZXIub3BlbnNoaWZ0LmNv
      bTANBgkqhkiG9w0BAQsFAAOCAQEAJyrM8ojm2I0nTliQ9ax/wRX5mFQ9rB00O/Oo
      GIeyObuNTQPkyxEjAr7s/Gdh0FriZMZbfYj1LeEg9kwjRsufzZqxvpLmJxMPFZxp
      ol4n8LNctWlYIWWG4KH2edc6c/pvBaxOJC9R0MgnjuNqPfvrKAk1OcNada1QQF4H
      PHJGeDSR2nBUBJj8WTLD9EbAaXkuiK2hf6xBBKsn3+Eu8wOVtphxs7CpPj3bwZsM
      n5N7IqLMaE9exNFXVMd+0tALBpte6UmpRG7YpAzNkDSCVHVTR9H+KdpdPmTyZ8Al
      +LGjhyal9KyTiDFwlwUa3hnK2P3w4Q0EjH7jRBj85bALW2454w==
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDDDCCAfSgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtpbmdy
      ZXNzLW9wZXJhdG9yQDE3MTgxMDI5NjMwHhcNMjQwNjExMTA0OTIzWhcNMjYwNjEx
      MTA0OTI0WjAmMSQwIgYDVQQDDBtpbmdyZXNzLW9wZXJhdG9yQDE3MTgxMDI5NjMw
      ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDWuPsQsmr2xRHEfP71JdYl
      0GBQDYw3/OmIHjvzE6uOfM1PAGtVQ482iExzYG0AIJq5AFMr7L3+XJuPdaDiudWu
      2+x32AOlFayWaWzBnbIqkdT1Gmotprgj5qXnCVI2maXzsQbJwefEFMfjkq0+4hs0
      K1y5aKQKqgNP8cl4OdENL3J7B1AJT4i3zqHB7Uu1li72TYRs0K68+IVN37GdBFi4
      kpdpOLTjE+akA2mg7A9MbC5gZsIN0hfbBNxhkPRf8137YfajsfCCxMLbjb94mW5M
      pcNZAfMnrFTMgAX3ADOckuw2EndjLmPyRjQHDplJrcjF4TxQ83IReEZRNcvvXN1v
      AgMBAAGjRTBDMA4GA1UdDwEB/wQEAwICpDASBgNVHRMBAf8ECDAGAQH/AgEAMB0G
      A1UdDgQWBBTQQlljjmwPPBAcn0VuzgnT7lhBcDANBgkqhkiG9w0BAQsFAAOCAQEA
      Ujk7rdAYEprDClAOKLCbnuv1FiAFrZgSp+JHHxujTTupCisSmcLeShXtg9g0DJ+l
      ae2bW9ukn4UVTrXjIXgurE98HhOXf+7+VGDlFehPcfBNvwHr9vbOI1TXfyB0bPov
      m4YAfVVY7XEH9yDCqzPIWuEfPyBlY1/k+XPezEoMukrAT5d49nuBdtqsIN3cQEN9
      +0HTffr3BEZcxBdDAhp2/tpmxwPWcC4G4W9V/ptCKBoYDarSzCUViTvEV2VpC8Yl
      v24kgR5RgQWWaLN1jUI6lxZtcUVelHV98UBTpjhNPXPEVjzWhUzxLcPjwJXfLPyA
      CCnuScmLsxK+fnsBo6WM0Q==
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2024-06-11T10:40:55Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/description: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:53:21Z"
    name: kube-root-ca.crt
    namespace: openshift-network-operator
    resourceVersion: "16898"
    uid: ab582cfa-40f4-472c-9268-109d12d0f878
- apiVersion: v1
  data:
    mtu: "1500"
  kind: ConfigMap
  metadata:
    creationTimestamp: "2024-06-11T10:46:43Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:mtu: {}
      manager: cluster-network-operator
      operation: Update
      time: "2024-06-11T10:46:43Z"
    name: mtu
    namespace: openshift-network-operator
    resourceVersion: "4347"
    uid: a2badc33-fb13-49d3-ab8d-426433d19033
- apiVersion: v1
  data:
    service-ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDUTCCAjmgAwIBAgIIQdgmVTJQT4kwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE
      Awwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTcxODEwMjkwMjAe
      Fw0yNDA2MTExMDQ4MjFaFw0yNjA4MTAxMDQ4MjJaMDYxNDAyBgNVBAMMK29wZW5z
      aGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE3MTgxMDI5MDIwggEiMA0GCSqG
      SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVP6m7d0GDdpqj+2+64a6iVjk9x7vJ+Eu5
      LfUty1iTVrlAUAhluIi7467k12iZ+EOM4zZwQ1+W/NH8Igl40Khj4rxgnDyyGW++
      NuOy6fg8AXq1t2F2e4rL5kx5Cl0U+CmcGJEI/Wg/0v9kgFbVPFU/XqBk6i1dm2bF
      t0LwnjU6ir/lc1W+ehYAlpQhAnnqK6+cgwyNs0LaHXKC3vHHsSi/dbG8ez0Lmgk6
      hxrTKC3bCLENabvfsOB1xZWvEbsk0D34B/QDz7AWBKNAyJDuO8sI8kl+6gFFBwl8
      nWSNFrawluFvkdcAIUIuSdnCj5xMjZhImsHZhq5aDe7e1iJCVb9ZAgMBAAGjYzBh
      MA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTaQZF8
      zSjkHehTBQZMbjIJt/sA6jAfBgNVHSMEGDAWgBTaQZF8zSjkHehTBQZMbjIJt/sA
      6jANBgkqhkiG9w0BAQsFAAOCAQEAf7Ax/iimmJcbY0A7m1pkAYNYOM6fRP72ISGu
      6c+St77EADA9r3fYn3jtIJ/Br/rnsxNOAwAcGxUkofb8Pa8IFO61L8aykcEZljM2
      t98q890v/HWGt+msUqkaVDagEN/wUVnkbL8qcvI5I4CMGAnqOb3Cocyu/6NgpFlw
      5EkP2ncxaDN6WIYe7DZvZzsLHgkHbqFKq2Z9NXJoyZT3oh8wlW8YmxUxQ/87BS/o
      l2uj/A9HuAYB+0F0QRh167jCS1BQ0nK1hInxJ9ZkzPMcpLd5Z5JC6E71shQpx04u
      4egQz28icTrxjUEcZXYhX6aJ+4eHRE/Hoxst6QAOx1WK6kO6tA==
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      service.beta.openshift.io/inject-cabundle: "true"
    creationTimestamp: "2024-06-11T10:40:55Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data: {}
        f:metadata:
          f:annotations:
            .: {}
            f:service.beta.openshift.io/inject-cabundle: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:40:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:service-ca.crt: {}
      manager: service-ca-operator
      operation: Update
      time: "2024-06-11T10:48:36Z"
    name: openshift-service-ca.crt
    namespace: openshift-network-operator
    resourceVersion: "8501"
    uid: d6d3e858-fe66-4e1e-a184-225453be8ad7
kind: ConfigMapList
metadata:
  resourceVersion: "40177"
