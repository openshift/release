---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      capability.openshift.io/name: CloudControllerManager
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      include.release.openshift.io/self-managed-high-availability: "true"
      include.release.openshift.io/single-node-developer: "true"
    creationTimestamp: "2024-06-11T10:41:51Z"
    generation: 2
    labels:
      k8s-app: cloud-manager-operator
      pod-template-hash: 54fdff58dc
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:capability.openshift.io/name: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
            f:include.release.openshift.io/single-node-developer: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c5a74e02-d699-4585-858a-bacac9722b2a"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/default-container: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"cluster-cloud-controller-manager"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"RELEASE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9257,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9259,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/cloud-controller-manager-config/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/kubernetes"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                k:{"name":"config-sync-controllers"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"RELEASE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9260,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kubernetes"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                k:{"name":"kube-rbac-proxy"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9258,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-proxy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"auth-proxy-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"cloud-controller-manager-operator-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"host-etc-kube"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"images"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:43:00Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T10:43:00Z"
    name: cluster-cloud-controller-manager-operator-54fdff58dc
    namespace: openshift-cloud-controller-manager-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cluster-cloud-controller-manager-operator
      uid: c5a74e02-d699-4585-858a-bacac9722b2a
    resourceVersion: "2930"
    uid: b3a592d8-e210-4740-b903-b564d8464e14
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: cloud-manager-operator
        pod-template-hash: 54fdff58dc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: cluster-cloud-controller-manager
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          k8s-app: cloud-manager-operator
          pod-template-hash: 54fdff58dc
      spec:
        containers:
        - command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            set -o allexport
            if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
              source /etc/kubernetes/apiserver-url.env
            else
              URL_ONLY_KUBECONFIG=/etc/kubernetes/kubeconfig
            fi
            exec /cluster-controller-manager-operator \
            --leader-elect=true \
            --leader-elect-lease-duration=137s \
            --leader-elect-renew-deadline=107s \
            --leader-elect-retry-period=26s \
            --leader-elect-resource-namespace=openshift-cloud-controller-manager-operator \
            "--images-json=/etc/cloud-controller-manager-config/images.json" \
            --metrics-bind-address=127.0.0.1:9257 \
            --health-addr=127.0.0.1:9259
          env:
          - name: RELEASE_VERSION
            value: 4.16.0-0.nightly-2024-06-10-211334
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
          imagePullPolicy: IfNotPresent
          name: cluster-cloud-controller-manager
          ports:
          - containerPort: 9257
            name: metrics
            protocol: TCP
          - containerPort: 9259
            name: healthz
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/cloud-controller-manager-config/
            name: images
          - mountPath: /etc/kubernetes
            name: host-etc-kube
            readOnly: true
        - command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            set -o allexport
            if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
              source /etc/kubernetes/apiserver-url.env
            else
              URL_ONLY_KUBECONFIG=/etc/kubernetes/kubeconfig
            fi
            exec /config-sync-controllers \
            --leader-elect=true \
            --leader-elect-lease-duration=137s \
            --leader-elect-renew-deadline=107s \
            --leader-elect-retry-period=26s \
            --leader-elect-resource-namespace=openshift-cloud-controller-manager-operator \
            --health-addr=127.0.0.1:9260
          env:
          - name: RELEASE_VERSION
            value: 4.16.0-0.nightly-2024-06-10-211334
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
          imagePullPolicy: IfNotPresent
          name: config-sync-controllers
          ports:
          - containerPort: 9260
            name: healthz
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/kubernetes
            name: host-etc-kube
            readOnly: true
        - args:
          - --secure-listen-address=0.0.0.0:9258
          - --upstream=http://127.0.0.1:9257/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --config-file=/etc/kube-rbac-proxy/config-file.yaml
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
          - --logtostderr=true
          - --v=3
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 9258
            name: https
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/kube-rbac-proxy
            name: auth-proxy-config
          - mountPath: /etc/tls/private
            name: cloud-controller-manager-operator-tls
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cluster-cloud-controller-manager
        serviceAccountName: cluster-cloud-controller-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          value: "true"
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: cloud-controller-manager-images
          name: images
        - hostPath:
            path: /etc/kubernetes
            type: Directory
          name: host-etc-kube
        - configMap:
            defaultMode: 420
            name: kube-rbac-proxy
          name: auth-proxy-config
        - name: cloud-controller-manager-operator-tls
          secret:
            defaultMode: 420
            optional: true
            secretName: cloud-controller-manager-operator-tls
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      capability.openshift.io/name: CloudControllerManager
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "2"
      include.release.openshift.io/self-managed-high-availability: "true"
      include.release.openshift.io/single-node-developer: "true"
    creationTimestamp: "2024-06-11T10:43:00Z"
    generation: 1
    labels:
      k8s-app: cloud-manager-operator
      pod-template-hash: 6cf975b6c8
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:capability.openshift.io/name: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
            f:include.release.openshift.io/single-node-developer: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c5a74e02-d699-4585-858a-bacac9722b2a"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/default-container: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"cluster-cloud-controller-manager"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"RELEASE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9257,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9259,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/cloud-controller-manager-config/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/kubernetes"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                k:{"name":"config-sync-controllers"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"RELEASE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9260,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kubernetes"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                k:{"name":"kube-rbac-proxy"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9258,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:hostPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-proxy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"auth-proxy-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"cloud-controller-manager-operator-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"host-etc-kube"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"images"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:43:00Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T10:50:21Z"
    name: cluster-cloud-controller-manager-operator-6cf975b6c8
    namespace: openshift-cloud-controller-manager-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cluster-cloud-controller-manager-operator
      uid: c5a74e02-d699-4585-858a-bacac9722b2a
    resourceVersion: "12513"
    uid: 4330651b-4c80-46f3-836a-0619666b51f4
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: cloud-manager-operator
        pod-template-hash: 6cf975b6c8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: cluster-cloud-controller-manager
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          k8s-app: cloud-manager-operator
          pod-template-hash: 6cf975b6c8
      spec:
        containers:
        - command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            set -o allexport
            if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
              source /etc/kubernetes/apiserver-url.env
            else
              URL_ONLY_KUBECONFIG=/etc/kubernetes/kubeconfig
            fi
            exec /cluster-controller-manager-operator \
            --leader-elect=true \
            --leader-elect-lease-duration=137s \
            --leader-elect-renew-deadline=107s \
            --leader-elect-retry-period=26s \
            --leader-elect-resource-namespace=openshift-cloud-controller-manager-operator \
            "--images-json=/etc/cloud-controller-manager-config/images.json" \
            --metrics-bind-address=127.0.0.1:9257 \
            --health-addr=127.0.0.1:9259
          env:
          - name: RELEASE_VERSION
            value: 4.16.0-0.nightly-2024-06-10-211334
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
          imagePullPolicy: IfNotPresent
          name: cluster-cloud-controller-manager
          ports:
          - containerPort: 9257
            hostPort: 9257
            name: metrics
            protocol: TCP
          - containerPort: 9259
            hostPort: 9259
            name: healthz
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/cloud-controller-manager-config/
            name: images
          - mountPath: /etc/kubernetes
            name: host-etc-kube
            readOnly: true
        - command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            set -o allexport
            if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
              source /etc/kubernetes/apiserver-url.env
            else
              URL_ONLY_KUBECONFIG=/etc/kubernetes/kubeconfig
            fi
            exec /config-sync-controllers \
            --leader-elect=true \
            --leader-elect-lease-duration=137s \
            --leader-elect-renew-deadline=107s \
            --leader-elect-retry-period=26s \
            --leader-elect-resource-namespace=openshift-cloud-controller-manager-operator \
            --health-addr=127.0.0.1:9260
          env:
          - name: RELEASE_VERSION
            value: 4.16.0-0.nightly-2024-06-10-211334
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1bd9232bd59867a84e0c1ce986e4d77e8077d3d01eb3d0b9977ecdcad6a82d38
          imagePullPolicy: IfNotPresent
          name: config-sync-controllers
          ports:
          - containerPort: 9260
            hostPort: 9260
            name: healthz
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/kubernetes
            name: host-etc-kube
            readOnly: true
        - args:
          - --secure-listen-address=0.0.0.0:9258
          - --upstream=http://127.0.0.1:9257/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --config-file=/etc/kube-rbac-proxy/config-file.yaml
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
          - --logtostderr=true
          - --v=3
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 9258
            hostPort: 9258
            name: https
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/kube-rbac-proxy
            name: auth-proxy-config
          - mountPath: /etc/tls/private
            name: cloud-controller-manager-operator-tls
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cluster-cloud-controller-manager
        serviceAccountName: cluster-cloud-controller-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          value: "true"
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: cloud-controller-manager-images
          name: images
        - hostPath:
            path: /etc/kubernetes
            type: Directory
          name: host-etc-kube
        - configMap:
            defaultMode: 420
            name: kube-rbac-proxy
          name: auth-proxy-config
        - name: cloud-controller-manager-operator-tls
          secret:
            defaultMode: 420
            optional: true
            secretName: cloud-controller-manager-operator-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: ReplicaSetList
metadata:
  resourceVersion: "39850"
