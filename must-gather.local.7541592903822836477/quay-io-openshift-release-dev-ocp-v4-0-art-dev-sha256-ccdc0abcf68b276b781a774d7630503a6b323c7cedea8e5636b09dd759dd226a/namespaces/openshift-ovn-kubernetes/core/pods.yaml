---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: enabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-06-11T10:47:05Z"
    generateName: ovnkube-control-plane-5df5bbb869-
    labels:
      app: ovnkube-control-plane
      component: network
      kubernetes.io/os: linux
      openshift.io/component: network
      pod-template-hash: 5df5bbb869
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5e388d4f-cf9d-444f-8d57-78bf28bb9736"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"ovnkube-cluster-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"ovn-control-plane-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:47:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:56:12Z"
    name: ovnkube-control-plane-5df5bbb869-7dsfz
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ovnkube-control-plane-5df5bbb869
      uid: 5e388d4f-cf9d-444f-8d57-78bf28bb9736
    resourceVersion: "18180"
    uid: e331dd93-4484-43b8-8ac1-525dff9e9e93
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        TLS_PK=/etc/pki/tls/metrics-cert/tls.key
        TLS_CERT=/etc/pki/tls/metrics-cert/tls.crt
        # As the secret mount is optional we must wait for the files to be present.
        # The service is created in monitor.yaml and this is created in sdn.yaml.
        TS=$(date +%s)
        WARN_TS=$(( ${TS} + $(( 20 * 60)) ))
        HAS_LOGGED_INFO=0

        log_missing_certs(){
            CUR_TS=$(date +%s)
            if [[ "${CUR_TS}" -gt "WARN_TS"  ]]; then
              echo $(date -Iseconds) WARN: ovn-control-plane-metrics-cert not mounted after 20 minutes.
            elif [[ "${HAS_LOGGED_INFO}" -eq 0 ]] ; then
              echo $(date -Iseconds) INFO: ovn-control-plane-metrics-cert not mounted. Waiting 20 minutes.
              HAS_LOGGED_INFO=1
            fi
        }
        while [[ ! -f "${TLS_PK}" ||  ! -f "${TLS_CERT}" ]] ; do
          log_missing_certs
          sleep 5
        done

        echo $(date -Iseconds) INFO: ovn-control-plane-metrics-certs mounted, starting kube-rbac-proxy
        exec /usr/bin/kube-rbac-proxy \
          --logtostderr \
          --secure-listen-address=:9108 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --upstream=http://127.0.0.1:29108/ \
          --tls-private-key-file=${TLS_PK} \
          --tls-cert-file=${TLS_CERT}
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9108
        hostPort: 9108
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-control-plane-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bkpsv
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        ovn_v4_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_join_subnet_opt="--gateway-v4-join-subnet "
        fi
        ovn_v6_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_join_subnet_opt="--gateway-v6-join-subnet "
        fi

        ovn_v4_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_transit_switch_subnet_opt="--cluster-manager-v4-transit-switch-subnet "
        fi
        ovn_v6_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_transit_switch_subnet_opt="--cluster-manager-v6-transit-switch-subnet "
        fi

        dns_name_resolver_enabled_flag=
        if [[ "false" == "true" ]]; then
          dns_name_resolver_enabled_flag="--enable-dns-name-resolver"
        fi

        echo "I$(date "+%m%d %H:%M:%S.%N") - ovnkube-control-plane - start ovnkube --init-cluster-manager ${K8S_NODE}"
        exec /usr/bin/ovnkube \
          --enable-interconnect \
          --init-cluster-manager "${K8S_NODE}" \
          --config-file=/run/ovnkube-config/ovnkube.conf \
          --loglevel "${OVN_KUBE_LOG_LEVEL}" \
          --metrics-bind-address "127.0.0.1:29108" \
          --metrics-enable-pprof \
          --metrics-enable-config-duration \
          ${ovn_v4_join_subnet_opt} \
          ${ovn_v6_join_subnet_opt} \
          ${ovn_v4_transit_switch_subnet_opt} \
          ${ovn_v6_transit_switch_subnet_opt} \
          ${dns_name_resolver_enabled_flag}
      env:
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovnkube-cluster-manager
      ports:
      - containerPort: 29108
        hostPort: 29108
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bkpsv
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-0
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-control-plane
    serviceAccountName: ovn-kubernetes-control-plane
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
    - key: node.kubernetes.io/unreachable
      operator: Exists
    - key: node.kubernetes.io/network-unavailable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-control-plane-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-control-plane-metrics-cert
    - name: kube-api-access-bkpsv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2cdaf30273346230f2de79ab694e86855947ff350d2713bc6befd479c982c155
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:13Z"
    - containerID: cri-o://1603cd908ed9cf78562905bafd2dc6b24964a326c03ae118ced8131e95caf587
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovnkube-cluster-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:39Z"
    hostIP: 10.0.0.8
    hostIPs:
    - ip: 10.0.0.8
    phase: Running
    podIP: 10.0.0.8
    podIPs:
    - ip: 10.0.0.8
    qosClass: Burstable
    startTime: "2024-06-11T10:47:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: enabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-06-11T10:47:05Z"
    generateName: ovnkube-control-plane-5df5bbb869-
    labels:
      app: ovnkube-control-plane
      component: network
      kubernetes.io/os: linux
      openshift.io/component: network
      pod-template-hash: 5df5bbb869
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5e388d4f-cf9d-444f-8d57-78bf28bb9736"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"ovnkube-cluster-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"ovn-control-plane-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:47:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.7"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:56:07Z"
    name: ovnkube-control-plane-5df5bbb869-x5nhm
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ovnkube-control-plane-5df5bbb869
      uid: 5e388d4f-cf9d-444f-8d57-78bf28bb9736
    resourceVersion: "18102"
    uid: dfb9a00d-a417-44c2-b21f-50bb73aabf65
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        TLS_PK=/etc/pki/tls/metrics-cert/tls.key
        TLS_CERT=/etc/pki/tls/metrics-cert/tls.crt
        # As the secret mount is optional we must wait for the files to be present.
        # The service is created in monitor.yaml and this is created in sdn.yaml.
        TS=$(date +%s)
        WARN_TS=$(( ${TS} + $(( 20 * 60)) ))
        HAS_LOGGED_INFO=0

        log_missing_certs(){
            CUR_TS=$(date +%s)
            if [[ "${CUR_TS}" -gt "WARN_TS"  ]]; then
              echo $(date -Iseconds) WARN: ovn-control-plane-metrics-cert not mounted after 20 minutes.
            elif [[ "${HAS_LOGGED_INFO}" -eq 0 ]] ; then
              echo $(date -Iseconds) INFO: ovn-control-plane-metrics-cert not mounted. Waiting 20 minutes.
              HAS_LOGGED_INFO=1
            fi
        }
        while [[ ! -f "${TLS_PK}" ||  ! -f "${TLS_CERT}" ]] ; do
          log_missing_certs
          sleep 5
        done

        echo $(date -Iseconds) INFO: ovn-control-plane-metrics-certs mounted, starting kube-rbac-proxy
        exec /usr/bin/kube-rbac-proxy \
          --logtostderr \
          --secure-listen-address=:9108 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --upstream=http://127.0.0.1:29108/ \
          --tls-private-key-file=${TLS_PK} \
          --tls-cert-file=${TLS_CERT}
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9108
        hostPort: 9108
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-control-plane-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4sf2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        ovn_v4_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_join_subnet_opt="--gateway-v4-join-subnet "
        fi
        ovn_v6_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_join_subnet_opt="--gateway-v6-join-subnet "
        fi

        ovn_v4_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_transit_switch_subnet_opt="--cluster-manager-v4-transit-switch-subnet "
        fi
        ovn_v6_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_transit_switch_subnet_opt="--cluster-manager-v6-transit-switch-subnet "
        fi

        dns_name_resolver_enabled_flag=
        if [[ "false" == "true" ]]; then
          dns_name_resolver_enabled_flag="--enable-dns-name-resolver"
        fi

        echo "I$(date "+%m%d %H:%M:%S.%N") - ovnkube-control-plane - start ovnkube --init-cluster-manager ${K8S_NODE}"
        exec /usr/bin/ovnkube \
          --enable-interconnect \
          --init-cluster-manager "${K8S_NODE}" \
          --config-file=/run/ovnkube-config/ovnkube.conf \
          --loglevel "${OVN_KUBE_LOG_LEVEL}" \
          --metrics-bind-address "127.0.0.1:29108" \
          --metrics-enable-pprof \
          --metrics-enable-config-duration \
          ${ovn_v4_join_subnet_opt} \
          ${ovn_v6_join_subnet_opt} \
          ${ovn_v4_transit_switch_subnet_opt} \
          ${ovn_v6_transit_switch_subnet_opt} \
          ${dns_name_resolver_enabled_flag}
      env:
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovnkube-cluster-manager
      ports:
      - containerPort: 29108
        hostPort: 29108
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w4sf2
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-2
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-control-plane
    serviceAccountName: ovn-kubernetes-control-plane
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
    - key: node.kubernetes.io/unreachable
      operator: Exists
    - key: node.kubernetes.io/network-unavailable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-control-plane-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-control-plane-metrics-cert
    - name: kube-api-access-w4sf2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:56:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:56:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2c40dee753888185c369689da6299e3287822680dbf7a6ce57f4a8f72b70a3db
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:08Z"
    - containerID: cri-o://1d0af08e11e4d4a98ea7a24a502436f610d8be77f1dd23732f801316ce55323f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState:
        terminated:
          containerID: cri-o://745454e4b25b58cc296d059cc3e299d1964e595909bd25442ca4fa83d8a6bef5
          exitCode: 0
          finishedAt: "2024-06-11T10:56:06Z"
          reason: Completed
          startedAt: "2024-06-11T10:47:22Z"
      name: ovnkube-cluster-manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:56:06Z"
    hostIP: 10.0.0.7
    hostIPs:
    - ip: 10.0.0.7
    phase: Running
    podIP: 10.0.0.7
    podIPs:
    - ip: 10.0.0.7
    qosClass: Burstable
    startTime: "2024-06-11T10:47:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: 2c7b484d86685fd6937f41480595845f255a08ac
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: enabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-06-11T10:56:26Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 566d996666
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"533350b2-a188-4e96-bb7e-564a6d2dce4a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"drop-icmp"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:56:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:00:47Z"
    name: ovnkube-node-4hhxq
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 533350b2-a188-4e96-bb7e-564a6d2dce4a
    resourceVersion: "21719"
    uid: 7c7e1d11-58a9-4c99-9af8-90e02688b1a9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxvjk
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxvjk
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxvjk
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxvjk
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxvjk
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxvjk
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxvjk
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxvjk
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe

        # Wait for cert file
        retries=0
        tries=20
        key_cert="/etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem"
        while [ ! -f "${key_cert}" ]; do
          (( retries += 1 ))
          if [[ "${retries}" -gt ${tries} ]]; then
            echo "$(date -Iseconds) - ERROR - ${key_cert} not found"
            return 1
          fi
          sleep 1
        done
        export KUBECONFIG=/etc/ovn/kubeconfig

        touch /var/run/ovn/add_iptables.sh
        chmod 0755 /var/run/ovn/add_iptables.sh
        cat <<'EOF' > /var/run/ovn/add_iptables.sh
        #!/bin/sh
        if [ -z "$3" ]
        then
             echo "Called with host address missing, ignore"
             exit 0
        fi
        echo "Adding ICMP drop rule for '$3' "
        if iptables -C CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        then
             echo "iptables already set for $3"
        else
             iptables -A CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        fi
        EOF

        echo "I$(date "+%m%d %H:%M:%S.%N") - drop-icmp - start drop-icmp ${K8S_NODE}"
        iptables -X CHECK_ICMP_SOURCE || true
        iptables -N CHECK_ICMP_SOURCE || true
        iptables -F CHECK_ICMP_SOURCE
        iptables -D INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE || true
        iptables -I INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE
        iptables -N ICMP_ACTION || true
        iptables -F ICMP_ACTION
        iptables -A ICMP_ACTION -j LOG
        iptables -A ICMP_ACTION -j DROP
        #
        ip addr show
        ip route show
        iptables -nvL
        iptables -nvL -t nat
        oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
        #systemd-run -qPG -- oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
      env:
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/bash
            - -c
            - echo drop-icmp done
      name: drop-icmp
      resources:
        requests:
          cpu: 5m
          memory: 20Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxvjk
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rxvjk
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-rxvjk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:00:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:00:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:56:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a5956c638a544d4605c5d10a232fab48c9a4ba6aa2bfecac7fe9ee17bd93086a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState:
        terminated:
          containerID: cri-o://7df02881f21d239090990f150e9f8232bb44e63d4ad3e8f6e4ccee2530d4da66
          exitCode: 2
          finishedAt: "2024-06-11T10:59:43Z"
          message: |-
            t 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 8 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 9 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 10 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 11 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 12 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 13 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 14 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 15 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 16 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 17 -g
          reason: Error
          startedAt: "2024-06-11T10:59:23Z"
      name: drop-icmp
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:00:34Z"
    - containerID: cri-o://2c76a526ef19c558d221b16416839e128887e322b88a7e3f2c12211aca82d94f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:22Z"
    - containerID: cri-o://743c509971624957f280486d60055bfbb89fd7d0d520af9d99ef080eb670275a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:23Z"
    - containerID: cri-o://a0ce851dd846e07081144471e0eeb95aaaea65b32d18e365066b3556a33bd646
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:23Z"
    - containerID: cri-o://10304f0439c92dbbf694601e3325394e6d8602d02015eecf9fea006016f24fae
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:23Z"
    - containerID: cri-o://1003c0ffac1cf0212c8180581fbe3c82914d3c1837ca91b4b7b656fcddd9a3c1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:22Z"
    - containerID: cri-o://d4f69910121b32b55adce100ecfc4fa694813e3e9dcbdf0263c85a30ab5e84c4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:22Z"
    - containerID: cri-o://880c84b22f7db8643b62ee33610b15d01516a9c42634726472f80f75e9015156
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState:
        terminated:
          containerID: cri-o://f16713a7396a42772b33ad70713392d60ff768d6334c8264618512dddf688b53
          exitCode: 1
          finishedAt: "2024-06-11T10:59:41Z"
          message: |-
            es.io/kube-apiserver-client: Failed while requesting a signed certificate from the control plane: cannot create certificate signing request: Post "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/certificates.k8s.io/v1/certificatesigningrequests": dial tcp 10.0.0.4:6443: i/o timeout
            I0611 10:58:13.551698    3866 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Rotating certificates
            E0611 10:58:43.554098    3866 certificate_manager.go:562] kubernetes.io/kube-apiserver-client: Failed while requesting a signed certificate from the control plane: cannot create certificate signing request: Post "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/certificates.k8s.io/v1/certificatesigningrequests": dial tcp 10.0.0.4:6443: i/o timeout
            I0611 10:58:47.631616    3866 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Rotating certificates
            E0611 10:59:17.632810    3866 certificate_manager.go:562] kubernetes.io/kube-apiserver-client: Failed while requesting a signed certificate from the control plane: cannot create certificate signing request: Post "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/ce
          reason: Error
          startedAt: "2024-06-11T10:57:41Z"
      name: ovnkube-controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:59:42Z"
    - containerID: cri-o://c4e16f37aff464cd0c8fa27ebb3c24ca03951ac2a9e6f031c1b2c8f80dc1972b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:26Z"
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    initContainerStatuses:
    - containerID: cri-o://19b1e383f8c4eb80b7adb542d9160e29da685028194a36590ae9c4f751aca2ec
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://19b1e383f8c4eb80b7adb542d9160e29da685028194a36590ae9c4f751aca2ec
          exitCode: 0
          finishedAt: "2024-06-11T10:57:22Z"
          reason: Completed
          startedAt: "2024-06-11T10:57:22Z"
    phase: Running
    podIP: 10.0.128.4
    podIPs:
    - ip: 10.0.128.4
    qosClass: Burstable
    startTime: "2024-06-11T10:56:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: 2c7b484d86685fd6937f41480595845f255a08ac
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: enabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-06-11T10:47:41Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 566d996666
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"533350b2-a188-4e96-bb7e-564a6d2dce4a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"drop-icmp"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:47:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:48:03Z"
    name: ovnkube-node-cpcp9
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 533350b2-a188-4e96-bb7e-564a6d2dce4a
    resourceVersion: "5970"
    uid: 042be972-659d-474c-b2f5-ea63e003665c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-master-1
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97v4g
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97v4g
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97v4g
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97v4g
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97v4g
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97v4g
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97v4g
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97v4g
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe

        # Wait for cert file
        retries=0
        tries=20
        key_cert="/etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem"
        while [ ! -f "${key_cert}" ]; do
          (( retries += 1 ))
          if [[ "${retries}" -gt ${tries} ]]; then
            echo "$(date -Iseconds) - ERROR - ${key_cert} not found"
            return 1
          fi
          sleep 1
        done
        export KUBECONFIG=/etc/ovn/kubeconfig

        touch /var/run/ovn/add_iptables.sh
        chmod 0755 /var/run/ovn/add_iptables.sh
        cat <<'EOF' > /var/run/ovn/add_iptables.sh
        #!/bin/sh
        if [ -z "$3" ]
        then
             echo "Called with host address missing, ignore"
             exit 0
        fi
        echo "Adding ICMP drop rule for '$3' "
        if iptables -C CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        then
             echo "iptables already set for $3"
        else
             iptables -A CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        fi
        EOF

        echo "I$(date "+%m%d %H:%M:%S.%N") - drop-icmp - start drop-icmp ${K8S_NODE}"
        iptables -X CHECK_ICMP_SOURCE || true
        iptables -N CHECK_ICMP_SOURCE || true
        iptables -F CHECK_ICMP_SOURCE
        iptables -D INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE || true
        iptables -I INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE
        iptables -N ICMP_ACTION || true
        iptables -F ICMP_ACTION
        iptables -A ICMP_ACTION -j LOG
        iptables -A ICMP_ACTION -j DROP
        #
        ip addr show
        ip route show
        iptables -nvL
        iptables -nvL -t nat
        oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
        #systemd-run -qPG -- oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
      env:
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/bash
            - -c
            - echo drop-icmp done
      name: drop-icmp
      resources:
        requests:
          cpu: 5m
          memory: 20Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97v4g
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-97v4g
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-97v4g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:48:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:48:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://fe6b8b8337d345ab6a0f64ae5f41dc36a4017791950195ce452711ef6a187ee3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: drop-icmp
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:47Z"
    - containerID: cri-o://f106b65ae4d5b4becde63233ce7e76a672fa172fc8fcdb2b85d68f86e87825a3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:42Z"
    - containerID: cri-o://85cf3bea754ca75314458cd136f79888d613c868998a7e29dfa716fffa863761
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:42Z"
    - containerID: cri-o://c80827e21ba3857f79b5a8a1a90bbdbc08a4fd2dce6b7c9b7b68daf686baf391
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:42Z"
    - containerID: cri-o://381280e56f2a4ea5e56d9437d29af195e6cdec5a1b4599b6f814150e7f8574dd
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:42Z"
    - containerID: cri-o://bfbbc0a7bd4d3e125c62512f075a80d2b0af375fd675f5638584b107f2ab91ab
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:42Z"
    - containerID: cri-o://7e5010fd497d8d9fc332208a880bbb074f48bdc24d3ec9eb8264f505822562b3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:42Z"
    - containerID: cri-o://f700a572ac06e17fb09d024ecbd2ae062c21736512c68f8075aea83114e3b63e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:47Z"
    - containerID: cri-o://52e5c7f17ba57a9603533bfb0d62573446a8e56bbd35f068041e627c461f60c7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:44Z"
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    initContainerStatuses:
    - containerID: cri-o://63be3d0229010fd5c33f7c21c51f0f8e0d04a368758d45d952c0dcc6f0050076
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://63be3d0229010fd5c33f7c21c51f0f8e0d04a368758d45d952c0dcc6f0050076
          exitCode: 0
          finishedAt: "2024-06-11T10:47:41Z"
          reason: Completed
          startedAt: "2024-06-11T10:47:41Z"
    phase: Running
    podIP: 10.0.0.6
    podIPs:
    - ip: 10.0.0.6
    qosClass: Burstable
    startTime: "2024-06-11T10:47:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: 2c7b484d86685fd6937f41480595845f255a08ac
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: enabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-06-11T10:56:31Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 566d996666
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"533350b2-a188-4e96-bb7e-564a6d2dce4a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"drop-icmp"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:56:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.5"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:05:53Z"
    name: ovnkube-node-fh4k2
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 533350b2-a188-4e96-bb7e-564a6d2dce4a
    resourceVersion: "24402"
    uid: 7fb073d1-2e40-4979-bd1c-cdde8252b91e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sxp5f
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sxp5f
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sxp5f
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sxp5f
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sxp5f
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sxp5f
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sxp5f
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sxp5f
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe

        # Wait for cert file
        retries=0
        tries=20
        key_cert="/etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem"
        while [ ! -f "${key_cert}" ]; do
          (( retries += 1 ))
          if [[ "${retries}" -gt ${tries} ]]; then
            echo "$(date -Iseconds) - ERROR - ${key_cert} not found"
            return 1
          fi
          sleep 1
        done
        export KUBECONFIG=/etc/ovn/kubeconfig

        touch /var/run/ovn/add_iptables.sh
        chmod 0755 /var/run/ovn/add_iptables.sh
        cat <<'EOF' > /var/run/ovn/add_iptables.sh
        #!/bin/sh
        if [ -z "$3" ]
        then
             echo "Called with host address missing, ignore"
             exit 0
        fi
        echo "Adding ICMP drop rule for '$3' "
        if iptables -C CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        then
             echo "iptables already set for $3"
        else
             iptables -A CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        fi
        EOF

        echo "I$(date "+%m%d %H:%M:%S.%N") - drop-icmp - start drop-icmp ${K8S_NODE}"
        iptables -X CHECK_ICMP_SOURCE || true
        iptables -N CHECK_ICMP_SOURCE || true
        iptables -F CHECK_ICMP_SOURCE
        iptables -D INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE || true
        iptables -I INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE
        iptables -N ICMP_ACTION || true
        iptables -F ICMP_ACTION
        iptables -A ICMP_ACTION -j LOG
        iptables -A ICMP_ACTION -j DROP
        #
        ip addr show
        ip route show
        iptables -nvL
        iptables -nvL -t nat
        oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
        #systemd-run -qPG -- oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
      env:
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/bash
            - -c
            - echo drop-icmp done
      name: drop-icmp
      resources:
        requests:
          cpu: 5m
          memory: 20Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sxp5f
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sxp5f
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-sxp5f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:05:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:05:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:56:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://dc9e801e353609edd0bd134c1522929779f14810db48f4461dce70df6c0f1378
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState:
        terminated:
          containerID: cri-o://6c6b5f3c6353efb39f0dbe817399461411f599e9441e475bd48170973cbf12ec
          exitCode: 1
          finishedAt: "2024-06-11T11:03:09Z"
          message: "   \n    0     0 DNAT       tcp  --  *      *       0.0.0.0/0
            \           172.169.4.53         tcp dpt:443 to:172.30.193.71:443\n    0
            \    0 DNAT       tcp  --  *      *       0.0.0.0/0            172.169.4.53
            \        tcp dpt:80 to:172.30.193.71:80\n\nChain OVN-KUBE-ITP (1 references)\n
            pkts bytes target     prot opt in     out     source               destination
            \        \n\nChain OVN-KUBE-NODEPORT (2 references)\n pkts bytes target
            \    prot opt in     out     source               destination         \n
            \   0     0 DNAT       tcp  --  *      *       0.0.0.0/0            0.0.0.0/0
            \           ADDRTYPE match dst-type LOCAL tcp dpt:31133 to:172.30.193.71:443\n
            \   0     0 DNAT       tcp  --  *      *       0.0.0.0/0            0.0.0.0/0
            \           ADDRTYPE match dst-type LOCAL tcp dpt:30280 to:172.30.193.71:80\n\nChain
            OVN-KUBE-SNAT-MGMTPORT (1 references)\n pkts bytes target     prot opt
            in     out     source               destination         \n    0     0
            RETURN     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp
            dpt:31133\n    0     0 RETURN     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0
            \           tcp dpt:30280\n   81  4860 SNAT       all  --  *      ovn-k8s-mp0
            \ 0.0.0.0/0            0.0.0.0/0"
          reason: Error
          startedAt: "2024-06-11T11:02:09Z"
      name: drop-icmp
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:05:52Z"
    - containerID: cri-o://afe86f42bd675efb9c982dec6c2f2bd9253e9e7d4d09eeae06a467195f905b13
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:14Z"
    - containerID: cri-o://b5e8729cb2ddd96322d4be629f2b1c2a902453ccbe1b8767a6d4e214911cb5dc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:14Z"
    - containerID: cri-o://692129de72c8c60b6234064bedf6c4ea1765028ca7dc749537b898bca110d1a5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:14Z"
    - containerID: cri-o://02716da94589e5bf3e48fd52f6155053af4c1fc580a21fc8d64a38157e977ab8
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:14Z"
    - containerID: cri-o://5d3801fdd7707df359394c50d3676c405cceddbd671c4a24845ccc2e987fe986
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:14Z"
    - containerID: cri-o://5f44e06ae551bb3a068700e8fc60e0de4aa2b446c7716e498de556d1c2d268a3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:14Z"
    - containerID: cri-o://949b3285997d5685d4793a1a1f3f2a9beefbec21dfdcd57b2762061a48c86d9e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState:
        terminated:
          containerID: cri-o://30b1013fa3491af757d82f0d3cad425cfe101bd17b52926af27d509d06c6bee1
          exitCode: 1
          finishedAt: "2024-06-11T10:59:35Z"
          message: |-
            10:57:35.663391    3925 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Certificate rotation is enabled
            I0611 10:57:35.663692    3925 kube.go:358] Waiting for certificate
            I0611 10:57:35.663930    3925 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Rotating certificates
            I0611 10:57:35.667336    3925 cert_rotation.go:137] Starting client certificate rotation controller
            E0611 10:58:05.670006    3925 certificate_manager.go:562] kubernetes.io/kube-apiserver-client: Failed while requesting a signed certificate from the control plane: cannot create certificate signing request: Post "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/certificates.k8s.io/v1/certificatesigningrequests": dial tcp 10.0.0.4:6443: i/o timeout
            I0611 10:58:07.780452    3925 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Rotating certificates
            E0611 10:58:37.781991    3925 certificate_manager.go:562] kubernetes.io/kube-apiserver-client: Failed while requesting a signed certificate from the control plane: cannot create certificate signing request: Post "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/certificates.k8s.io/v1/certifi
          reason: Error
          startedAt: "2024-06-11T10:57:35Z"
      name: ovnkube-controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:59:36Z"
    - containerID: cri-o://e3e912e7b8420f6623e115a7e3aa005a5466ef935f39aa53a6a38a8b9a2e708b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:17Z"
    hostIP: 10.0.128.5
    hostIPs:
    - ip: 10.0.128.5
    initContainerStatuses:
    - containerID: cri-o://408cf81432f9b534d17317aecccea3cb8acfaba158d58ccb261bdf2bfa2477cc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://408cf81432f9b534d17317aecccea3cb8acfaba158d58ccb261bdf2bfa2477cc
          exitCode: 0
          finishedAt: "2024-06-11T10:57:12Z"
          reason: Completed
          startedAt: "2024-06-11T10:57:12Z"
    phase: Running
    podIP: 10.0.128.5
    podIPs:
    - ip: 10.0.128.5
    qosClass: Burstable
    startTime: "2024-06-11T10:56:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: 2c7b484d86685fd6937f41480595845f255a08ac
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: enabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-06-11T10:47:40Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 566d996666
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"533350b2-a188-4e96-bb7e-564a6d2dce4a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"drop-icmp"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:47:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:56:12Z"
    name: ovnkube-node-rxzbs
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 533350b2-a188-4e96-bb7e-564a6d2dce4a
    resourceVersion: "18154"
    uid: e9190fff-1964-47a0-89c1-f1698ee2092c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-master-0
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wggkw
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wggkw
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wggkw
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wggkw
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wggkw
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wggkw
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wggkw
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wggkw
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe

        # Wait for cert file
        retries=0
        tries=20
        key_cert="/etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem"
        while [ ! -f "${key_cert}" ]; do
          (( retries += 1 ))
          if [[ "${retries}" -gt ${tries} ]]; then
            echo "$(date -Iseconds) - ERROR - ${key_cert} not found"
            return 1
          fi
          sleep 1
        done
        export KUBECONFIG=/etc/ovn/kubeconfig

        touch /var/run/ovn/add_iptables.sh
        chmod 0755 /var/run/ovn/add_iptables.sh
        cat <<'EOF' > /var/run/ovn/add_iptables.sh
        #!/bin/sh
        if [ -z "$3" ]
        then
             echo "Called with host address missing, ignore"
             exit 0
        fi
        echo "Adding ICMP drop rule for '$3' "
        if iptables -C CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        then
             echo "iptables already set for $3"
        else
             iptables -A CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        fi
        EOF

        echo "I$(date "+%m%d %H:%M:%S.%N") - drop-icmp - start drop-icmp ${K8S_NODE}"
        iptables -X CHECK_ICMP_SOURCE || true
        iptables -N CHECK_ICMP_SOURCE || true
        iptables -F CHECK_ICMP_SOURCE
        iptables -D INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE || true
        iptables -I INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE
        iptables -N ICMP_ACTION || true
        iptables -F ICMP_ACTION
        iptables -A ICMP_ACTION -j LOG
        iptables -A ICMP_ACTION -j DROP
        #
        ip addr show
        ip route show
        iptables -nvL
        iptables -nvL -t nat
        oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
        #systemd-run -qPG -- oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
      env:
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/bash
            - -c
            - echo drop-icmp done
      name: drop-icmp
      resources:
        requests:
          cpu: 5m
          memory: 20Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wggkw
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wggkw
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-0
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-wggkw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:48:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:48:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6068313200eeae3ba2d33e224a80c6e0552cdbe2ecf4dd40f7c43102425691e3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: drop-icmp
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:47Z"
    - containerID: cri-o://f775c6b1a0bb1467f237f44a593379a02334639a9906eb927b7c0c2bc6c2df0c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:42Z"
    - containerID: cri-o://c00ead47ce7728bbc54298b617f3f18bd75a7e438b74ddd434777486afcffe8b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:42Z"
    - containerID: cri-o://307502db3f5b059eb5b0ec84595c3bde8b746315987b847a94a88ee9adf5d412
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:42Z"
    - containerID: cri-o://d56c327c4c39504f18e10d9a32f5ea1027c0b6fe97e77bebf73d8d89877f0f6e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:42Z"
    - containerID: cri-o://94755613f3ac0af401ed1dd555c7b853cf8f5828e4e16b72de2a89bda243d1f9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:41Z"
    - containerID: cri-o://c81c8983db369ab726147a047df6822fad677e2743a45a96bc9763399a43a0b5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:41Z"
    - containerID: cri-o://dc118c45b41076b9dc2ab294e868ca5e60b8338f7cfa8fa013789a3642de3250
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:46Z"
    - containerID: cri-o://1622961d83a335e7cf09e5654451ae34fc048335aa0f4feb2edec7a627583f8d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:44Z"
    hostIP: 10.0.0.8
    hostIPs:
    - ip: 10.0.0.8
    initContainerStatuses:
    - containerID: cri-o://7fcd1337a939959411f24800c55e554d2af2bb86f80a76ec20aca69d204d29b4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7fcd1337a939959411f24800c55e554d2af2bb86f80a76ec20aca69d204d29b4
          exitCode: 0
          finishedAt: "2024-06-11T10:47:41Z"
          reason: Completed
          startedAt: "2024-06-11T10:47:41Z"
    phase: Running
    podIP: 10.0.0.8
    podIPs:
    - ip: 10.0.0.8
    qosClass: Burstable
    startTime: "2024-06-11T10:47:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: 2c7b484d86685fd6937f41480595845f255a08ac
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: enabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-06-11T10:56:26Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 566d996666
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"533350b2-a188-4e96-bb7e-564a6d2dce4a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"drop-icmp"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:56:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:06Z"
    name: ovnkube-node-tnm8w
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 533350b2-a188-4e96-bb7e-564a6d2dce4a
    resourceVersion: "22199"
    uid: fafdb5a1-9f78-4ccf-bb5e-0c588838cb44
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rk5c5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rk5c5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rk5c5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rk5c5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rk5c5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rk5c5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rk5c5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rk5c5
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe

        # Wait for cert file
        retries=0
        tries=20
        key_cert="/etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem"
        while [ ! -f "${key_cert}" ]; do
          (( retries += 1 ))
          if [[ "${retries}" -gt ${tries} ]]; then
            echo "$(date -Iseconds) - ERROR - ${key_cert} not found"
            return 1
          fi
          sleep 1
        done
        export KUBECONFIG=/etc/ovn/kubeconfig

        touch /var/run/ovn/add_iptables.sh
        chmod 0755 /var/run/ovn/add_iptables.sh
        cat <<'EOF' > /var/run/ovn/add_iptables.sh
        #!/bin/sh
        if [ -z "$3" ]
        then
             echo "Called with host address missing, ignore"
             exit 0
        fi
        echo "Adding ICMP drop rule for '$3' "
        if iptables -C CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        then
             echo "iptables already set for $3"
        else
             iptables -A CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        fi
        EOF

        echo "I$(date "+%m%d %H:%M:%S.%N") - drop-icmp - start drop-icmp ${K8S_NODE}"
        iptables -X CHECK_ICMP_SOURCE || true
        iptables -N CHECK_ICMP_SOURCE || true
        iptables -F CHECK_ICMP_SOURCE
        iptables -D INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE || true
        iptables -I INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE
        iptables -N ICMP_ACTION || true
        iptables -F ICMP_ACTION
        iptables -A ICMP_ACTION -j LOG
        iptables -A ICMP_ACTION -j DROP
        #
        ip addr show
        ip route show
        iptables -nvL
        iptables -nvL -t nat
        oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
        #systemd-run -qPG -- oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
      env:
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/bash
            - -c
            - echo drop-icmp done
      name: drop-icmp
      resources:
        requests:
          cpu: 5m
          memory: 20Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rk5c5
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rk5c5
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-rk5c5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:36Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:56:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c95bbad60a77f30850f76e94f0d8d3517113bb1f01c22d5f5b35424f34b94b78
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState:
        terminated:
          containerID: cri-o://3b7c100fc3f04ba0ceed5827c93c1a1f380418367a4b4d255e62ea441a432dea
          exitCode: 2
          finishedAt: "2024-06-11T11:00:21Z"
          message: |-
            t 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 8 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 9 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 10 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 11 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 12 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 13 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 14 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 15 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 16 -gt 20 ]]
            + sleep 1
            + '[' '!' -f /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem ']'
            + ((  retries += 1  ))
            + [[ 17 -g
          reason: Error
          startedAt: "2024-06-11T11:00:01Z"
      name: drop-icmp
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:06Z"
    - containerID: cri-o://8aa3beb77d9f839d2c84ba1d560d40896123ac80d25497e897b4a8c3ce559588
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:39Z"
    - containerID: cri-o://4473538fda1c8369b03970e97458ed24c19f2328c090215a1545fe5a3b5dcd04
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:40Z"
    - containerID: cri-o://12b30b1d89b3f6c500a8d1a41fc67eccb44af10088ba3f988ea29af24f192c16
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:41Z"
    - containerID: cri-o://d0fc6d9f4c057793f6a6a01912685b696472695bee7f8197136b5dafbd1c3085
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:41Z"
    - containerID: cri-o://1ab04deb8b5b2e95e602a2e4c1f02ac7ca73096beb3571960a7b1b726d4f8580
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState:
        terminated:
          containerID: cri-o://dca5e9d6eb3bd50b6e56b947f82a8ea1f8afe620e72c07ad1cb8457c0c100639
          exitCode: 1
          finishedAt: "2024-06-11T10:57:38Z"
          message: |
            ++ K8S_NODE=
            ++ [[ -n '' ]]
            ++ northd_pidfile=/var/run/ovn/ovn-northd.pid
            ++ controller_pidfile=/var/run/ovn/ovn-controller.pid
            ++ controller_logfile=/var/log/ovn/acl-audit-log.log
            ++ vswitch_dbsock=/var/run/openvswitch/db.sock
            ++ nbdb_pidfile=/var/run/ovn/ovnnb_db.pid
            ++ nbdb_sock=/var/run/ovn/ovnnb_db.sock
            ++ nbdb_ctl=/var/run/ovn/ovnnb_db.ctl
            ++ sbdb_pidfile=/var/run/ovn/ovnsb_db.pid
            ++ sbdb_sock=/var/run/ovn/ovnsb_db.sock
            ++ sbdb_ctl=/var/run/ovn/ovnsb_db.ctl
            + start-audit-log-rotation
            + MAXFILESIZE=50000000
            + MAXLOGFILES=5
            ++ dirname /var/log/ovn/acl-audit-log.log
            + LOGDIR=/var/log/ovn
            + local retries=0
            + [[ 30 -gt 0 ]]
            + ((  retries += 1  ))
            ++ cat /var/run/ovn/ovn-controller.pid
            cat: /var/run/ovn/ovn-controller.pid: No such file or directory
            + CONTROLLERPID=
          reason: Error
          startedAt: "2024-06-11T10:57:38Z"
      name: ovn-acl-logging
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:58:12Z"
    - containerID: cri-o://8c66740672697cf69bef8c1736f097cca23b44703cd4da87351f9ed21c6f107f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:37Z"
    - containerID: cri-o://d64db500ebdb4ea4968422a69f980843ddfad0707cd32c6934a49cd420c1b145
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState:
        terminated:
          containerID: cri-o://e4abff4681f5881b3d71c176a412284040903ce02bc1193c1bacd92adeb9c343
          exitCode: 1
          finishedAt: "2024-06-11T11:00:12Z"
          message: |-
            tchSubnet:fd97::/64}}
            I0611 10:58:12.458410    3976 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Certificate rotation is enabled
            I0611 10:58:12.458456    3976 kube.go:358] Waiting for certificate
            I0611 10:58:12.458542    3976 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Rotating certificates
            I0611 10:58:12.460934    3976 cert_rotation.go:137] Starting client certificate rotation controller
            E0611 10:58:42.462810    3976 certificate_manager.go:562] kubernetes.io/kube-apiserver-client: Failed while requesting a signed certificate from the control plane: cannot create certificate signing request: Post "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/certificates.k8s.io/v1/certificatesigningrequests": dial tcp 10.0.0.4:6443: i/o timeout
            I0611 10:58:44.584535    3976 certificate_manager.go:356] kubernetes.io/kube-apiserver-client: Rotating certificates
            E0611 10:59:14.585931    3976 certificate_manager.go:562] kubernetes.io/kube-apiserver-client: Failed while requesting a signed certificate from the control plane: cannot create certificate signing request: Post "https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443/apis/ce
          reason: Error
          startedAt: "2024-06-11T10:58:12Z"
      name: ovnkube-controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:00:13Z"
    - containerID: cri-o://7af5d84323d650e8734028de7f460aacdadd6c2e5bb53d616c316dcca4c7099c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:57:46Z"
    hostIP: 10.0.128.6
    hostIPs:
    - ip: 10.0.128.6
    initContainerStatuses:
    - containerID: cri-o://819a477cd728e1a49a1df61ee8e487821c7726a5ce25328418c14e6c3278bada
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://819a477cd728e1a49a1df61ee8e487821c7726a5ce25328418c14e6c3278bada
          exitCode: 0
          finishedAt: "2024-06-11T10:57:35Z"
          reason: Completed
          startedAt: "2024-06-11T10:57:35Z"
    phase: Running
    podIP: 10.0.128.6
    podIPs:
    - ip: 10.0.128.6
    qosClass: Burstable
    startTime: "2024-06-11T10:56:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: 2c7b484d86685fd6937f41480595845f255a08ac
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: enabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2024-06-11T10:47:33Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 566d996666
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"533350b2-a188-4e96-bb7e-564a6d2dce4a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"drop-icmp"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:47:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.7"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:47:54Z"
    name: ovnkube-node-vgfpv
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 533350b2-a188-4e96-bb7e-564a6d2dce4a
    resourceVersion: "5665"
    uid: 6626d454-58ff-4254-97ac-e5a029410356
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-master-2
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtdlp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtdlp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtdlp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtdlp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtdlp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtdlp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtdlp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtdlp
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe

        # Wait for cert file
        retries=0
        tries=20
        key_cert="/etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem"
        while [ ! -f "${key_cert}" ]; do
          (( retries += 1 ))
          if [[ "${retries}" -gt ${tries} ]]; then
            echo "$(date -Iseconds) - ERROR - ${key_cert} not found"
            return 1
          fi
          sleep 1
        done
        export KUBECONFIG=/etc/ovn/kubeconfig

        touch /var/run/ovn/add_iptables.sh
        chmod 0755 /var/run/ovn/add_iptables.sh
        cat <<'EOF' > /var/run/ovn/add_iptables.sh
        #!/bin/sh
        if [ -z "$3" ]
        then
             echo "Called with host address missing, ignore"
             exit 0
        fi
        echo "Adding ICMP drop rule for '$3' "
        if iptables -C CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        then
             echo "iptables already set for $3"
        else
             iptables -A CHECK_ICMP_SOURCE -p icmp -s $3 -j ICMP_ACTION
        fi
        EOF

        echo "I$(date "+%m%d %H:%M:%S.%N") - drop-icmp - start drop-icmp ${K8S_NODE}"
        iptables -X CHECK_ICMP_SOURCE || true
        iptables -N CHECK_ICMP_SOURCE || true
        iptables -F CHECK_ICMP_SOURCE
        iptables -D INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE || true
        iptables -I INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE
        iptables -N ICMP_ACTION || true
        iptables -F ICMP_ACTION
        iptables -A ICMP_ACTION -j LOG
        iptables -A ICMP_ACTION -j DROP
        #
        ip addr show
        ip route show
        iptables -nvL
        iptables -nvL -t nat
        oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
        #systemd-run -qPG -- oc observe pods -n openshift-ovn-kubernetes --listen-addr='' -l app=ovnkube-node -a '{ .status.hostIP }' -- /var/run/ovn/add_iptables.sh
      env:
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/bash
            - -c
            - echo drop-icmp done
      name: drop-icmp
      resources:
        requests:
          cpu: 5m
          memory: 20Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtdlp
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dtdlp
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-dtdlp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:47:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7ecf4c24e66c62b630f4166bc9796448a3b70319622dc7236f0bcae47a671bb3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: drop-icmp
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:39Z"
    - containerID: cri-o://a50f814605f3764b2862db369c92c3977f25efe150425c627f678b7bfbb7cfa4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:34Z"
    - containerID: cri-o://69f3b02c69f90643cd77c5d4cfadff1f4a7cea2187ea9c9accdfc045f49d7a9d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:35Z"
    - containerID: cri-o://df218b113b0585538df7beba33aa87bfe3a99a390a68438941a78590a78ff930
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:35Z"
    - containerID: cri-o://f463c73d7db4210218f7d2d21015066d29e1920bc141e885d3518ffbf872b0ad
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:35Z"
    - containerID: cri-o://6e43ae1a1594bd057f2a23d0be58f55042fb685bd79b795e0abc3ad464d115b8
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:34Z"
    - containerID: cri-o://961bf1c6cee5490f7871ee6db196583134799b401beb579dc31aea74f5cb926b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:34Z"
    - containerID: cri-o://571b800f85723228af8ff191eba33388150541fc026a5f032f91bc67deb5c7bc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:39Z"
    - containerID: cri-o://182f6f747be806e8c1703a1eda99ffe14048f465238b11a488339888f12f2d58
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:47:37Z"
    hostIP: 10.0.0.7
    hostIPs:
    - ip: 10.0.0.7
    initContainerStatuses:
    - containerID: cri-o://46237166cd815b2803795c9007cc3354a4c044eff0662d5048f3f8b057441e27
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f51f47793a3eda34f600e1e7eab027bc309b914eb8ea948765cf1a03549b34e4
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://46237166cd815b2803795c9007cc3354a4c044eff0662d5048f3f8b057441e27
          exitCode: 0
          finishedAt: "2024-06-11T10:47:34Z"
          reason: Completed
          startedAt: "2024-06-11T10:47:34Z"
    phase: Running
    podIP: 10.0.0.7
    podIPs:
    - ip: 10.0.0.7
    qosClass: Burstable
    startTime: "2024-06-11T10:47:33Z"
kind: PodList
metadata:
  resourceVersion: "40137"
