---
apiVersion: monitoring.coreos.com/v1
items:
- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    annotations:
      include.release.openshift.io/self-managed-high-availability: "true"
      include.release.openshift.io/single-node-developer: "true"
    creationTimestamp: "2024-06-11T10:41:13Z"
    generation: 1
    labels:
      k8s-app: kube-controller-manager
    managedFields:
    - apiVersion: monitoring.coreos.com/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
            f:include.release.openshift.io/single-node-developer: {}
          f:labels:
            .: {}
            f:k8s-app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7f5ed23b-8031-407e-bbf3-8850738c2d59"}: {}
        f:spec:
          .: {}
          f:endpoints: {}
          f:namespaceSelector:
            .: {}
            f:matchNames: {}
          f:selector: {}
      manager: cluster-version-operator
      operation: Update
      time: "2024-06-11T10:41:13Z"
    name: kube-controller-manager
    namespace: openshift-kube-controller-manager
    ownerReferences:
    - apiVersion: config.openshift.io/v1
      controller: true
      kind: ClusterVersion
      name: version
      uid: 7f5ed23b-8031-407e-bbf3-8850738c2d59
    resourceVersion: "1754"
    uid: 3161c33d-df12-45e1-a004-cd7befb1b648
  spec:
    endpoints:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      interval: 30s
      metricRelabelings:
      - action: drop
        regex: etcd_(debugging|disk|request|server).*
        sourceLabels:
        - __name__
      - action: drop
        regex: rest_client_request_latency_seconds_(bucket|count|sum)
        sourceLabels:
        - __name__
      - action: drop
        regex: root_ca_cert_publisher_sync_duration_seconds_(bucket|count|sum)
        sourceLabels:
        - __name__
      port: https
      scheme: https
      tlsConfig:
        caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
        certFile: /etc/prometheus/secrets/metrics-client-certs/tls.crt
        keyFile: /etc/prometheus/secrets/metrics-client-certs/tls.key
        serverName: kube-controller-manager.openshift-kube-controller-manager.svc
    namespaceSelector:
      matchNames:
      - openshift-kube-controller-manager
    selector:
      matchLabels:
        prometheus: kube-controller-manager
kind: ServiceMonitorList
metadata:
  continue: ""
  resourceVersion: "40046"
