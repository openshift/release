---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: NTY3MCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: builder
    creationTimestamp: "2024-06-11T10:52:28Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"4b3646d3-6864-4ca9-8998-f994f6c0ffa7"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:09Z"
    name: builder-dockercfg-vcp2r
    namespace: openshift-route-controller-manager
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: builder
      uid: 4b3646d3-6864-4ca9-8998-f994f6c0ffa7
    resourceVersion: "27060"
    uid: d35fbb19-545f-4423-90d3-0be447535e4c
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTY3MCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: default
    creationTimestamp: "2024-06-11T10:52:25Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"3fa53a64-5379-4d20-894e-070b52f904f6"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:09Z"
    name: default-dockercfg-l99dg
    namespace: openshift-route-controller-manager
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: default
      uid: 3fa53a64-5379-4d20-894e-070b52f904f6
    resourceVersion: "27069"
    uid: 4ebdae29-9985-4e19-a592-fadc111d00ff
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTY4MiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: deployer
    creationTimestamp: "2024-06-11T10:52:28Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"1e5b4f84-2da0-42e0-8d58-28097d44a510"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:09Z"
    name: deployer-dockercfg-fjb45
    namespace: openshift-route-controller-manager
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: deployer
      uid: 1e5b4f84-2da0-42e0-8d58-28097d44a510
    resourceVersion: "27070"
    uid: 7e30f222-93f2-4e59-9b4a-96ceceb28be9
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTk5NCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: route-controller-manager-sa
    creationTimestamp: "2024-06-11T10:52:25Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"a379a5f0-985a-40a3-b664-022b6856fefc"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:09Z"
    name: route-controller-manager-sa-dockercfg-svp86
    namespace: openshift-route-controller-manager
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: route-controller-manager-sa
      uid: a379a5f0-985a-40a3-b664-022b6856fefc
    resourceVersion: "27072"
    uid: 6a08771e-bc72-4415-b475-93b2ff75fd76
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVVRENDQXppZ0F3SUJBZ0lJVExPVUk1T1pJRlF3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRjeE9ERXdNamt3TWpBZQpGdzB5TkRBMk1URXhNRFE0TkROYUZ3MHlOakEyTVRFeE1EUTRORFJhTUVveFNEQkdCZ05WQkFNVFAzSnZkWFJsCkxXTnZiblJ5YjJ4c1pYSXRiV0Z1WVdkbGNpNXZjR1Z1YzJocFpuUXRjbTkxZEdVdFkyOXVkSEp2Ykd4bGNpMXQKWVc1aFoyVnlMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVhKM21qSgpuQUJJb3hSS1o3NVEvV2dBMml3RUxVV0J6Yytod2ZRZ01QeElLaHlKNUYyMW9oMUtGdXZ2a25JQUZIVnZsMXRrCml2d3lSZytNRWFmczVLcGNxcWhEQ2pISGtESXU0N1ZwZE1nM3FaZUx5ZFJYNnBMdTdZMldBMi8vVTBRV2MxT04KOEV3K2ZNTXhGcXNmZE13ZERRTWhnTVpJYXRicTBPZ25yVU5pVkxBLzJoZzh5WEx3NVVNakdBT0F6YUVuUWtvVwp3eWpjWXUzM1QzVDBZTVRxTkVYSGtEQW1uQnd1THI5WmJad0RURWhYb04rNFEzWjlJUStTbG9kRjk4aHhsVDc4CmZRc3VnMkRkYkRlS0IyT3draDZjaWlPMVQvdjJMN2Z1MFRVSmhGeG9Ma2szNEsyME1rLzdOUjdzRGlyVjlxRHIKbXZMcThlRmkxdFY4NFZjQ0F3RUFBYU9DQVV3d2dnRklNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRQpEREFLQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlFiMEtlTUxyMWhHdnhNCkJ3SzZPNjhpWWJpbXJqQWZCZ05WSFNNRUdEQVdnQlRhUVpGOHpTamtIZWhUQlFaTWJqSUp0L3NBNmpDQm13WUQKVlIwUkJJR1RNSUdRZ2o5eWIzVjBaUzFqYjI1MGNtOXNiR1Z5TFcxaGJtRm5aWEl1YjNCbGJuTm9hV1owTFhKdgpkWFJsTFdOdmJuUnliMnhzWlhJdGJXRnVZV2RsY2k1emRtT0NUWEp2ZFhSbExXTnZiblJ5YjJ4c1pYSXRiV0Z1CllXZGxjaTV2Y0dWdWMyaHBablF0Y205MWRHVXRZMjl1ZEhKdmJHeGxjaTF0WVc1aFoyVnlMbk4yWXk1amJIVnoKZEdWeUxteHZZMkZzTURVR0N5c0dBUVFCa2dnUlpBSUJCQ1lUSkdVeU1HUTFORFkwTFdSaU5tVXRORFl4TVMxaQpOR1E0TFRZeFlqUTNORFExWTJFek9EQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFRd2U5SDU5UmYwUEdCZnNpCllIbGpsaU1sWE9SdmdjbVp4ZzZqLytzUGFXOThsb3liN3lPV29CeWZsTG5tejZRWmtGa0F0MHFBU3ZPSGN2WGIKT3M4SmR4SHY5N0Y4NXhWUXVEL2JWSEpkUzFDL09xQzFDdVRrc1J1b1JhVTY5TGV0RlJHMjN5TG9PTXlUUENscgpUcG0wQmJlVU5qbnBMM2hvNkFkcklBMDZXbXNiZmtsbElnWGxhaWpBWFhQb040NWVXY3UxVmVucXE5NU9rVFJNClV1Z2RvSHM4TGtYRzhwdngwTDBsOEpEbk5heTlnTjE4elhlcWRNaHJ6c0dkcDhRNGlHM2NvSUVRaDRaYUtiUkoKWTdYRXZMazErSjBEejRSNW5wa0xHV0JXazJnSDBLZ1UyNHBJSHBZRjNFVmVvNnJKVTBmSU1KVjZzcWIyWlRCZAozczAydXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVVRDQ0FqbWdBd0lCQWdJSVFkZ21WVEpRVDRrd0RRWUpLb1pJaHZjTkFRRUxCUUF3TmpFME1ESUdBMVVFCkF3d3JiM0JsYm5Ob2FXWjBMWE5sY25acFkyVXRjMlZ5ZG1sdVp5MXphV2R1WlhKQU1UY3hPREV3TWprd01qQWUKRncweU5EQTJNVEV4TURRNE1qRmFGdzB5TmpBNE1UQXhNRFE0TWpKYU1EWXhOREF5QmdOVkJBTU1LMjl3Wlc1egphR2xtZEMxelpYSjJhV05sTFhObGNuWnBibWN0YzJsbmJtVnlRREUzTVRneE1ESTVNREl3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURWUDZtN2QwR0RkcHFqKzIrNjRhNmlWams5eDd2SitFdTUKTGZVdHkxaVRWcmxBVUFobHVJaTc0NjdrMTJpWitFT000elp3UTErVy9OSDhJZ2w0MEtoajRyeGduRHl5R1crKwpOdU95NmZnOEFYcTF0MkYyZTRyTDVreDVDbDBVK0NtY0dKRUkvV2cvMHY5a2dGYlZQRlUvWHFCazZpMWRtMmJGCnQwTHdualU2aXIvbGMxVytlaFlBbHBRaEFubnFLNitjZ3d5TnMwTGFIWEtDM3ZISHNTaS9kYkc4ZXowTG1nazYKaHhyVEtDM2JDTEVOYWJ2ZnNPQjF4Wld2RWJzazBEMzRCL1FEejdBV0JLTkF5SkR1TzhzSThrbCs2Z0ZGQndsOApuV1NORnJhd2x1RnZrZGNBSVVJdVNkbkNqNXhNalpoSW1zSFpocTVhRGU3ZTFpSkNWYjlaQWdNQkFBR2pZekJoCk1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUYVFaRjgKelNqa0hlaFRCUVpNYmpJSnQvc0E2akFmQmdOVkhTTUVHREFXZ0JUYVFaRjh6U2prSGVoVEJRWk1iaklKdC9zQQo2akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZjdBeC9paW1tSmNiWTBBN20xcGtBWU5ZT002ZlJQNzJJU0d1CjZjK1N0NzdFQURBOXIzZlluM2p0SUovQnIvcm5zeE5PQXdBY0d4VWtvZmI4UGE4SUZPNjFMOGF5a2NFWmxqTTIKdDk4cTg5MHYvSFdHdCttc1Vxa2FWRGFnRU4vd1VWbmtiTDhxY3ZJNUk0Q01HQW5xT2IzQ29jeXUvNk5ncEZsdwo1RWtQMm5jeGFETjZXSVllN0Radlp6c0xIZ2tIYnFGS3EyWjlOWEpveVpUM29oOHdsVzhZbXhVeFEvODdCUy9vCmwydWovQTlIdUFZQiswRjBRUmgxNjdqQ1MxQlEwbksxaElueEo5Wmt6UE1jcExkNVo1SkM2RTcxc2hRcHgwNHUKNGVnUXoyOGljVHJ4alVFY1pYWWhYNmFKKzRlSFJFL0hveHN0NlFBT3gxV0s2a082dEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: MTY3OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/description: 'Secret contains a pair signed serving certificate/key
        that is generated by Service CA operator for service/route-controller-manager
        with hostname route-controller-manager.openshift-route-controller-manager.svc
        and is annotated to the service with annotating a service resource with ''service.beta.openshift.io/serving-cert-secret-name:
        serving-cert''. The certificate is valid for 2 years.'
      openshift.io/owning-component: service-ca
      service.alpha.openshift.io/expiry: "2026-06-11T10:48:44Z"
      service.beta.openshift.io/expiry: "2026-06-11T10:48:44Z"
      service.beta.openshift.io/originating-service-name: route-controller-manager
      service.beta.openshift.io/originating-service-uid: e20d5464-db6e-4611-b4d8-61b47445ca38
    creationTimestamp: "2024-06-11T10:48:45Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/description: {}
            f:openshift.io/owning-component: {}
            f:service.alpha.openshift.io/expiry: {}
            f:service.beta.openshift.io/expiry: {}
            f:service.beta.openshift.io/originating-service-name: {}
            f:service.beta.openshift.io/originating-service-uid: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e20d5464-db6e-4611-b4d8-61b47445ca38"}: {}
        f:type: {}
      manager: service-ca-operator
      operation: Update
      time: "2024-06-11T10:48:45Z"
    name: serving-cert
    namespace: openshift-route-controller-manager
    ownerReferences:
    - apiVersion: v1
      kind: Service
      name: route-controller-manager
      uid: e20d5464-db6e-4611-b4d8-61b47445ca38
    resourceVersion: "8975"
    uid: 3992e7bb-88b7-4855-ae14-ddedc7ce80e7
  type: kubernetes.io/tls
kind: SecretList
metadata:
  resourceVersion: "40189"
