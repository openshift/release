---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.7/23"],"mac_address":"0a:58:0a:81:02:07","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.7/23","gateway_ip":"10.129.2.1"}}'
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.129.2.7"
          ],
          "mac": "0a:58:0a:81:02:07",
          "default": true,
          "dns": {}
      }]
    openshift.io/scc: hostnetwork
  creationTimestamp: "2024-06-11T10:49:24Z"
  generateName: router-default-7c66d9f4d8-
  labels:
    ingresscontroller.operator.openshift.io/deployment-ingresscontroller: default
    ingresscontroller.operator.openshift.io/hash: 5c98bb89db
    pod-template-hash: 7c66d9f4d8
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:ingresscontroller.operator.openshift.io/deployment-ingresscontroller: {}
          f:ingresscontroller.operator.openshift.io/hash: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"ef36aa35-aae1-46f8-92e9-800920722574"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:nodeAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:podAffinity:
            .: {}
            f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:podAntiAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:containers:
          k:{"name":"router"}:
            .: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_CERTIFICATE_DIR"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"DEFAULT_DESTINATION_CA_PATH"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELOAD_INTERVAL"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_ALLOW_WILDCARD_ROUTES"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_CANONICAL_HOSTNAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_CIPHERS"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_CIPHERSUITES"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_DISABLE_HTTP2"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_DISABLE_NAMESPACE_OWNERSHIP_CHECK"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_DOMAIN"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_LOAD_BALANCE_ALGORITHM"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_METRICS_TLS_CERT_FILE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_METRICS_TLS_KEY_FILE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_METRICS_TYPE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_SERVICE_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_SERVICE_NAMESPACE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_SET_FORWARDED_HEADERS"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_TCP_BALANCE_SCHEME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ROUTER_THREADS"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"SSL_MIN_VERSION"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"STATS_PASSWORD_FILE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"STATS_PORT"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"STATS_USERNAME_FILE"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:terminationGracePeriodSeconds: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":80,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
              k:{"containerPort":443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
              k:{"containerPort":1936,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:readOnlyRootFilesystem: {}
            f:startupProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/pki/tls/metrics-certs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/pki/tls/private"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/lib/haproxy/conf/metrics-auth"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/run/configmaps/service-ca"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:topologySpreadConstraints:
          .: {}
          k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
            .: {}
            f:labelSelector: {}
            f:maxSkew: {}
            f:topologyKey: {}
            f:whenUnsatisfiable: {}
        f:volumes:
          .: {}
          k:{"name":"default-certificate"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"metrics-certs"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"service-ca-bundle"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
              f:optional: {}
            f:name: {}
          k:{"name":"stats-auth"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2024-06-11T10:49:24Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          .: {}
          k:{"type":"PodScheduled"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: kube-scheduler
    operation: Update
    subresource: status
    time: "2024-06-11T10:49:24Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.ovn.org/pod-networks: {}
    manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
    operation: Update
    subresource: status
    time: "2024-06-11T11:00:59Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.v1.cni.cncf.io/network-status: {}
    manager: multus-daemon
    operation: Update
    subresource: status
    time: "2024-06-11T11:01:00Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.129.2.7"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2024-06-11T11:06:47Z"
  name: router-default-7c66d9f4d8-hjjcl
  namespace: openshift-ingress
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: router-default-7c66d9f4d8
    uid: ef36aa35-aae1-46f8-92e9-800920722574
  resourceVersion: "24975"
  uid: 76c09b51-8f40-410d-8516-6d900ac69fbf
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node.openshift.io/remote-worker
            operator: NotIn
            values:
            - ""
    podAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: ingresscontroller.operator.openshift.io/deployment-ingresscontroller
              operator: In
              values:
              - default
            - key: ingresscontroller.operator.openshift.io/hash
              operator: NotIn
              values:
              - 5c98bb89db
          topologyKey: kubernetes.io/hostname
        weight: 100
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: ingresscontroller.operator.openshift.io/deployment-ingresscontroller
            operator: In
            values:
            - default
          - key: ingresscontroller.operator.openshift.io/hash
            operator: In
            values:
            - 5c98bb89db
        topologyKey: kubernetes.io/hostname
  containers:
  - env:
    - name: DEFAULT_CERTIFICATE_DIR
      value: /etc/pki/tls/private
    - name: DEFAULT_DESTINATION_CA_PATH
      value: /var/run/configmaps/service-ca/service-ca.crt
    - name: RELOAD_INTERVAL
      value: 5s
    - name: ROUTER_ALLOW_WILDCARD_ROUTES
      value: "false"
    - name: ROUTER_CANONICAL_HOSTNAME
      value: router-default.apps.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
    - name: ROUTER_CIPHERS
      value: ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    - name: ROUTER_CIPHERSUITES
      value: TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    - name: ROUTER_DISABLE_HTTP2
      value: "true"
    - name: ROUTER_DISABLE_NAMESPACE_OWNERSHIP_CHECK
      value: "false"
    - name: ROUTER_DOMAIN
      value: apps.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
    - name: ROUTER_LOAD_BALANCE_ALGORITHM
      value: random
    - name: ROUTER_METRICS_TLS_CERT_FILE
      value: /etc/pki/tls/metrics-certs/tls.crt
    - name: ROUTER_METRICS_TLS_KEY_FILE
      value: /etc/pki/tls/metrics-certs/tls.key
    - name: ROUTER_METRICS_TYPE
      value: haproxy
    - name: ROUTER_SERVICE_NAME
      value: default
    - name: ROUTER_SERVICE_NAMESPACE
      value: openshift-ingress
    - name: ROUTER_SET_FORWARDED_HEADERS
      value: append
    - name: ROUTER_TCP_BALANCE_SCHEME
      value: source
    - name: ROUTER_THREADS
      value: "4"
    - name: SSL_MIN_VERSION
      value: TLSv1.2
    - name: STATS_PASSWORD_FILE
      value: /var/lib/haproxy/conf/metrics-auth/statsPassword
    - name: STATS_PORT
      value: "1936"
    - name: STATS_USERNAME_FILE
      value: /var/lib/haproxy/conf/metrics-auth/statsUsername
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:48910918f7c73a9f9ad6490fcead5fae8c17ab3e32beb778627c3dcbc8e3387c
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 1936
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      terminationGracePeriodSeconds: 10
      timeoutSeconds: 1
    name: router
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
    - containerPort: 443
      name: https
      protocol: TCP
    - containerPort: 1936
      name: metrics
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz/ready
        port: 1936
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        drop:
        - KILL
        - MKNOD
        - SETGID
        - SETUID
      readOnlyRootFilesystem: false
      runAsNonRoot: true
      runAsUser: 1000630000
    startupProbe:
      failureThreshold: 120
      httpGet:
        path: /healthz/ready
        port: 1936
        scheme: HTTP
      periodSeconds: 1
      successThreshold: 1
      timeoutSeconds: 1
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/pki/tls/private
      name: default-certificate
      readOnly: true
    - mountPath: /var/run/configmaps/service-ca
      name: service-ca-bundle
      readOnly: true
    - mountPath: /var/lib/haproxy/conf/metrics-auth
      name: stats-auth
      readOnly: true
    - mountPath: /etc/pki/tls/metrics-certs
      name: metrics-certs
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-sk6ds
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
  nodeSelector:
    kubernetes.io/os: linux
    node-role.kubernetes.io/worker: ""
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000630000
    seLinuxOptions:
      level: s0:c25,c15
    supplementalGroups:
    - 1000630000
  serviceAccount: router
  serviceAccountName: router
  terminationGracePeriodSeconds: 3600
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  topologySpreadConstraints:
  - labelSelector:
      matchExpressions:
      - key: ingresscontroller.operator.openshift.io/hash
        operator: In
        values:
        - 5c98bb89db
    maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: ScheduleAnyway
  volumes:
  - name: default-certificate
    secret:
      defaultMode: 420
      secretName: router-certs-default
  - configMap:
      defaultMode: 420
      items:
      - key: service-ca.crt
        path: service-ca.crt
      name: service-ca-bundle
      optional: false
    name: service-ca-bundle
  - name: stats-auth
    secret:
      defaultMode: 420
      secretName: router-stats-default
  - name: metrics-certs
    secret:
      defaultMode: 420
      secretName: router-metrics-certs-default
  - name: kube-api-access-sk6ds
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T11:01:14Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T11:00:59Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T11:06:47Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T11:06:47Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T11:00:59Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://e9db5a097e6118c4a8f54de79761748cd60c83364c7f95d969df9e5050aab9ec
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:48910918f7c73a9f9ad6490fcead5fae8c17ab3e32beb778627c3dcbc8e3387c
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:48910918f7c73a9f9ad6490fcead5fae8c17ab3e32beb778627c3dcbc8e3387c
    lastState:
      terminated:
        containerID: cri-o://bfba69f956bda4c1ed98435959adea21834af1075b327d1c748b8d1553bfd9c2
        exitCode: 0
        finishedAt: "2024-06-11T11:06:45Z"
        reason: Completed
        startedAt: "2024-06-11T11:03:59Z"
    name: router
    ready: true
    restartCount: 2
    started: true
    state:
      running:
        startedAt: "2024-06-11T11:06:45Z"
  hostIP: 10.0.128.5
  hostIPs:
  - ip: 10.0.128.5
  phase: Running
  podIP: 10.129.2.7
  podIPs:
  - ip: 10.129.2.7
  qosClass: Burstable
  startTime: "2024-06-11T11:00:59Z"
