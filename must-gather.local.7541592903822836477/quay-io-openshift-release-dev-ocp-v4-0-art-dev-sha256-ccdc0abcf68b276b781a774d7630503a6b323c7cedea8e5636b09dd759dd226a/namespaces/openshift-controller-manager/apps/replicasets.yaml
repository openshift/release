---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
      operator.openshift.io/spec-hash: e0af073005a58cda5ddaf2636c73b7917b099fe0f7fa30273f21e635eb8a7b43
      release.openshift.io/version: 4.16.0-0.nightly-2024-06-10-211334
    creationTimestamp: "2024-06-11T10:48:24Z"
    generation: 3
    labels:
      app: openshift-controller-manager-a
      controller-manager: "true"
      openshift-route-controller-manager-anti-affinity: "true"
      pod-template-hash: 58c5c594b9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
            f:release.openshift.io/version: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-manager: {}
            f:openshift-route-controller-manager-anti-affinity: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bdd00219-5464-457c-8650-34f138d075fe"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:configmaps/client-ca: {}
                f:configmaps/config: {}
                f:configmaps/openshift-global-ca: {}
                f:configmaps/openshift-service-ca: {}
                f:openshift.io/required-scc: {}
                f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:controller-manager: {}
                f:openshift-route-controller-manager-anti-affinity: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"controller-manager"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/client-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"proxy-ca-bundles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:52:16Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T10:52:17Z"
    name: controller-manager-58c5c594b9
    namespace: openshift-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: controller-manager
      uid: bdd00219-5464-457c-8650-34f138d075fe
    resourceVersion: "14557"
    uid: b445e170-6a1f-4b89-8070-3bdd23048588
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: openshift-controller-manager-a
        controller-manager: "true"
        pod-template-hash: 58c5c594b9
    template:
      metadata:
        annotations:
          configmaps/client-ca: "0"
          configmaps/config: "7105"
          configmaps/openshift-global-ca: "6893"
          configmaps/openshift-service-ca: "6886"
          openshift.io/required-scc: restricted-v2
          openshiftcontrollermanagers.operator.openshift.io/cluster: "2"
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: openshift-controller-manager-a
          controller-manager: "true"
          openshift-route-controller-manager-anti-affinity: "true"
          pod-template-hash: 58c5c594b9
        name: openshift-controller-manager
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: openshift-controller-manager-a
                  controller-manager: "true"
                  openshift-route-controller-manager-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --config=/var/run/configmaps/config/config.yaml
          - -v=2
          command:
          - openshift-controller-manager
          - start
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36405aaf37dd3a4676764e25cebf2d0832944a3b96cc5c3b93ec896d0af969f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller-manager
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/client-ca
            name: client-ca
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: proxy-ca-bundles
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: openshift-controller-manager-sa
        serviceAccountName: openshift-controller-manager-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: client-ca
          name: client-ca
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: openshift-global-ca
          name: proxy-ca-bundles
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
      operator.openshift.io/spec-hash: cf003596267713a5789c580f3fbf189ea669e40034f5ce61d1ca433b2c9843c2
      release.openshift.io/version: 4.16.0-0.nightly-2024-06-10-211334
    creationTimestamp: "2024-06-11T10:48:23Z"
    generation: 3
    labels:
      app: openshift-controller-manager-a
      controller-manager: "true"
      openshift-route-controller-manager-anti-affinity: "true"
      pod-template-hash: 5c89cb9bc9
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
            f:release.openshift.io/version: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-manager: {}
            f:openshift-route-controller-manager-anti-affinity: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bdd00219-5464-457c-8650-34f138d075fe"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:configmaps/client-ca: {}
                f:configmaps/config: {}
                f:configmaps/openshift-global-ca: {}
                f:configmaps/openshift-service-ca: {}
                f:openshift.io/required-scc: {}
                f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:controller-manager: {}
                f:openshift-route-controller-manager-anti-affinity: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"controller-manager"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/client-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"proxy-ca-bundles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:52:16Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T10:52:16Z"
    name: controller-manager-5c89cb9bc9
    namespace: openshift-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: controller-manager
      uid: bdd00219-5464-457c-8650-34f138d075fe
    resourceVersion: "14480"
    uid: 7c4bd349-62d5-440b-8bb4-88769b556538
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: openshift-controller-manager-a
        controller-manager: "true"
        pod-template-hash: 5c89cb9bc9
    template:
      metadata:
        annotations:
          configmaps/client-ca: "0"
          configmaps/config: "6884"
          configmaps/openshift-global-ca: "6889"
          configmaps/openshift-service-ca: "6886"
          openshift.io/required-scc: restricted-v2
          openshiftcontrollermanagers.operator.openshift.io/cluster: "2"
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: openshift-controller-manager-a
          controller-manager: "true"
          openshift-route-controller-manager-anti-affinity: "true"
          pod-template-hash: 5c89cb9bc9
        name: openshift-controller-manager
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: openshift-controller-manager-a
                  controller-manager: "true"
                  openshift-route-controller-manager-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --config=/var/run/configmaps/config/config.yaml
          - -v=2
          command:
          - openshift-controller-manager
          - start
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36405aaf37dd3a4676764e25cebf2d0832944a3b96cc5c3b93ec896d0af969f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller-manager
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/client-ca
            name: client-ca
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: proxy-ca-bundles
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: openshift-controller-manager-sa
        serviceAccountName: openshift-controller-manager-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: client-ca
          name: client-ca
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: openshift-global-ca
          name: proxy-ca-bundles
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "4"
      operator.openshift.io/spec-hash: 44d836264cf7d3a837098229baffddb0069496074f33fd99d0804c8287b499da
      release.openshift.io/version: 4.16.0-0.nightly-2024-06-10-211334
    creationTimestamp: "2024-06-11T10:48:41Z"
    generation: 3
    labels:
      app: openshift-controller-manager-a
      controller-manager: "true"
      openshift-route-controller-manager-anti-affinity: "true"
      pod-template-hash: 6d46446fb6
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
            f:release.openshift.io/version: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-manager: {}
            f:openshift-route-controller-manager-anti-affinity: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bdd00219-5464-457c-8650-34f138d075fe"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:configmaps/client-ca: {}
                f:configmaps/config: {}
                f:configmaps/openshift-global-ca: {}
                f:configmaps/openshift-service-ca: {}
                f:openshift.io/required-scc: {}
                f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:controller-manager: {}
                f:openshift-route-controller-manager-anti-affinity: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"controller-manager"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/client-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"proxy-ca-bundles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:52:24Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T10:52:24Z"
    name: controller-manager-6d46446fb6
    namespace: openshift-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: controller-manager
      uid: bdd00219-5464-457c-8650-34f138d075fe
    resourceVersion: "14843"
    uid: ff9e57cd-85d3-48b7-9477-c2dc290f315f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: openshift-controller-manager-a
        controller-manager: "true"
        pod-template-hash: 6d46446fb6
    template:
      metadata:
        annotations:
          configmaps/client-ca: "0"
          configmaps/config: "8822"
          configmaps/openshift-global-ca: "6893"
          configmaps/openshift-service-ca: "8039"
          openshift.io/required-scc: restricted-v2
          openshiftcontrollermanagers.operator.openshift.io/cluster: "2"
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: openshift-controller-manager-a
          controller-manager: "true"
          openshift-route-controller-manager-anti-affinity: "true"
          pod-template-hash: 6d46446fb6
        name: openshift-controller-manager
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: openshift-controller-manager-a
                  controller-manager: "true"
                  openshift-route-controller-manager-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --config=/var/run/configmaps/config/config.yaml
          - -v=2
          command:
          - openshift-controller-manager
          - start
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36405aaf37dd3a4676764e25cebf2d0832944a3b96cc5c3b93ec896d0af969f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller-manager
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/client-ca
            name: client-ca
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: proxy-ca-bundles
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: openshift-controller-manager-sa
        serviceAccountName: openshift-controller-manager-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: client-ca
          name: client-ca
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: openshift-global-ca
          name: proxy-ca-bundles
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "7"
      operator.openshift.io/spec-hash: bd40e37f9307a45b906b068879827a80427b6fcb0f34d295e369fdf53b76d0a8
      release.openshift.io/version: 4.16.0-0.nightly-2024-06-10-211334
    creationTimestamp: "2024-06-11T11:07:17Z"
    generation: 4
    labels:
      app: openshift-controller-manager-a
      controller-manager: "true"
      openshift-route-controller-manager-anti-affinity: "true"
      pod-template-hash: 7699bb97f8
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
            f:release.openshift.io/version: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-manager: {}
            f:openshift-route-controller-manager-anti-affinity: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bdd00219-5464-457c-8650-34f138d075fe"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:configmaps/client-ca: {}
                f:configmaps/config: {}
                f:configmaps/openshift-global-ca: {}
                f:configmaps/openshift-service-ca: {}
                f:openshift.io/required-scc: {}
                f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:controller-manager: {}
                f:openshift-route-controller-manager-anti-affinity: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"controller-manager"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/client-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"proxy-ca-bundles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:07:25Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T11:07:32Z"
    name: controller-manager-7699bb97f8
    namespace: openshift-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: controller-manager
      uid: bdd00219-5464-457c-8650-34f138d075fe
    resourceVersion: "28433"
    uid: 06fd38d2-a613-4ea1-a575-27bd6efbc745
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: openshift-controller-manager-a
        controller-manager: "true"
        pod-template-hash: 7699bb97f8
    template:
      metadata:
        annotations:
          configmaps/client-ca: "14452"
          configmaps/config: "27691"
          configmaps/openshift-global-ca: "6893"
          configmaps/openshift-service-ca: "8039"
          openshift.io/required-scc: restricted-v2
          openshiftcontrollermanagers.operator.openshift.io/cluster: "3"
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: openshift-controller-manager-a
          controller-manager: "true"
          openshift-route-controller-manager-anti-affinity: "true"
          pod-template-hash: 7699bb97f8
        name: openshift-controller-manager
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: openshift-controller-manager-a
                  controller-manager: "true"
                  openshift-route-controller-manager-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --config=/var/run/configmaps/config/config.yaml
          - -v=2
          command:
          - openshift-controller-manager
          - start
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36405aaf37dd3a4676764e25cebf2d0832944a3b96cc5c3b93ec896d0af969f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller-manager
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/client-ca
            name: client-ca
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: proxy-ca-bundles
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: openshift-controller-manager-sa
        serviceAccountName: openshift-controller-manager-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: client-ca
          name: client-ca
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: openshift-global-ca
          name: proxy-ca-bundles
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 4
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      operator.openshift.io/spec-hash: e274b060df2d91ed9f84e88a1005a32ccf8e257c5ccb6c9f6a20ce6a645883b0
      release.openshift.io/version: 4.16.0-0.nightly-2024-06-10-211334
    creationTimestamp: "2024-06-11T10:48:21Z"
    generation: 4
    labels:
      app: openshift-controller-manager-a
      controller-manager: "true"
      openshift-route-controller-manager-anti-affinity: "true"
      pod-template-hash: 7777c4d45c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
            f:release.openshift.io/version: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-manager: {}
            f:openshift-route-controller-manager-anti-affinity: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bdd00219-5464-457c-8650-34f138d075fe"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:configmaps/client-ca: {}
                f:openshift.io/required-scc: {}
                f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:controller-manager: {}
                f:openshift-route-controller-manager-anti-affinity: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"controller-manager"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/client-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"proxy-ca-bundles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:48:41Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T10:48:41Z"
    name: controller-manager-7777c4d45c
    namespace: openshift-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: controller-manager
      uid: bdd00219-5464-457c-8650-34f138d075fe
    resourceVersion: "8842"
    uid: 1a56bb31-59d5-4e26-9556-3f802e7c9549
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: openshift-controller-manager-a
        controller-manager: "true"
        pod-template-hash: 7777c4d45c
    template:
      metadata:
        annotations:
          configmaps/client-ca: "0"
          openshift.io/required-scc: restricted-v2
          openshiftcontrollermanagers.operator.openshift.io/cluster: "1"
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: openshift-controller-manager-a
          controller-manager: "true"
          openshift-route-controller-manager-anti-affinity: "true"
          pod-template-hash: 7777c4d45c
        name: openshift-controller-manager
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: openshift-controller-manager-a
                  controller-manager: "true"
                  openshift-route-controller-manager-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --config=/var/run/configmaps/config/config.yaml
          - -v=2
          command:
          - openshift-controller-manager
          - start
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36405aaf37dd3a4676764e25cebf2d0832944a3b96cc5c3b93ec896d0af969f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller-manager
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/client-ca
            name: client-ca
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: proxy-ca-bundles
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: openshift-controller-manager-sa
        serviceAccountName: openshift-controller-manager-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: client-ca
          name: client-ca
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: openshift-global-ca
          name: proxy-ca-bundles
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "6"
      operator.openshift.io/spec-hash: 80560468cc731ec3ef46f2a90e08c238b38627b261a97b8acb8c65b25819f886
      release.openshift.io/version: 4.16.0-0.nightly-2024-06-10-211334
    creationTimestamp: "2024-06-11T10:52:16Z"
    generation: 7
    labels:
      app: openshift-controller-manager-a
      controller-manager: "true"
      openshift-route-controller-manager-anti-affinity: "true"
      pod-template-hash: 7cfc668fc8
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
            f:release.openshift.io/version: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-manager: {}
            f:openshift-route-controller-manager-anti-affinity: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bdd00219-5464-457c-8650-34f138d075fe"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:configmaps/client-ca: {}
                f:configmaps/config: {}
                f:configmaps/openshift-global-ca: {}
                f:configmaps/openshift-service-ca: {}
                f:openshift.io/required-scc: {}
                f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:controller-manager: {}
                f:openshift-route-controller-manager-anti-affinity: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"controller-manager"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/client-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"proxy-ca-bundles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:07:25Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T11:07:25Z"
    name: controller-manager-7cfc668fc8
    namespace: openshift-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: controller-manager
      uid: bdd00219-5464-457c-8650-34f138d075fe
    resourceVersion: "28192"
    uid: 83799fbe-6b00-44d4-bb40-13736c4226ca
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: openshift-controller-manager-a
        controller-manager: "true"
        pod-template-hash: 7cfc668fc8
    template:
      metadata:
        annotations:
          configmaps/client-ca: "14452"
          configmaps/config: "14492"
          configmaps/openshift-global-ca: "6893"
          configmaps/openshift-service-ca: "8039"
          openshift.io/required-scc: restricted-v2
          openshiftcontrollermanagers.operator.openshift.io/cluster: "2"
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: openshift-controller-manager-a
          controller-manager: "true"
          openshift-route-controller-manager-anti-affinity: "true"
          pod-template-hash: 7cfc668fc8
        name: openshift-controller-manager
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: openshift-controller-manager-a
                  controller-manager: "true"
                  openshift-route-controller-manager-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --config=/var/run/configmaps/config/config.yaml
          - -v=2
          command:
          - openshift-controller-manager
          - start
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36405aaf37dd3a4676764e25cebf2d0832944a3b96cc5c3b93ec896d0af969f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller-manager
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/client-ca
            name: client-ca
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: proxy-ca-bundles
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: openshift-controller-manager-sa
        serviceAccountName: openshift-controller-manager-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: client-ca
          name: client-ca
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: openshift-global-ca
          name: proxy-ca-bundles
  status:
    observedGeneration: 7
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "5"
      operator.openshift.io/spec-hash: 7afcce2180f2ffb72810d9b1633552c3cfce6e4f96cc1f190f095d90070882be
      release.openshift.io/version: 4.16.0-0.nightly-2024-06-10-211334
    creationTimestamp: "2024-06-11T10:52:16Z"
    generation: 3
    labels:
      app: openshift-controller-manager-a
      controller-manager: "true"
      openshift-route-controller-manager-anti-affinity: "true"
      pod-template-hash: d8cbffd66
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
            f:release.openshift.io/version: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-manager: {}
            f:openshift-route-controller-manager-anti-affinity: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"bdd00219-5464-457c-8650-34f138d075fe"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:configmaps/client-ca: {}
                f:configmaps/config: {}
                f:configmaps/openshift-global-ca: {}
                f:configmaps/openshift-service-ca: {}
                f:openshift.io/required-scc: {}
                f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:controller-manager: {}
                f:openshift-route-controller-manager-anti-affinity: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"controller-manager"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/client-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"proxy-ca-bundles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:52:33Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T10:52:33Z"
    name: controller-manager-d8cbffd66
    namespace: openshift-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: controller-manager
      uid: bdd00219-5464-457c-8650-34f138d075fe
    resourceVersion: "16088"
    uid: af4bd55d-d113-469c-bc19-1635794e0630
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: openshift-controller-manager-a
        controller-manager: "true"
        pod-template-hash: d8cbffd66
    template:
      metadata:
        annotations:
          configmaps/client-ca: "14452"
          configmaps/config: "8822"
          configmaps/openshift-global-ca: "6893"
          configmaps/openshift-service-ca: "8039"
          openshift.io/required-scc: restricted-v2
          openshiftcontrollermanagers.operator.openshift.io/cluster: "2"
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: openshift-controller-manager-a
          controller-manager: "true"
          openshift-route-controller-manager-anti-affinity: "true"
          pod-template-hash: d8cbffd66
        name: openshift-controller-manager
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: openshift-controller-manager-a
                  controller-manager: "true"
                  openshift-route-controller-manager-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - --config=/var/run/configmaps/config/config.yaml
          - -v=2
          command:
          - openshift-controller-manager
          - start
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36405aaf37dd3a4676764e25cebf2d0832944a3b96cc5c3b93ec896d0af969f3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller-manager
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/configmaps/client-ca
            name: client-ca
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: proxy-ca-bundles
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: openshift-controller-manager-sa
        serviceAccountName: openshift-controller-manager-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - configMap:
            defaultMode: 420
            name: client-ca
          name: client-ca
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: openshift-global-ca
          name: proxy-ca-bundles
  status:
    observedGeneration: 3
    replicas: 0
kind: ReplicaSetList
metadata:
  resourceVersion: "40187"
