---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: NTU2MiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: builder
    creationTimestamp: "2024-06-11T10:52:26Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"2c30072a-1966-4dde-a8f7-4c0b3e90c13e"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:03Z"
    name: builder-dockercfg-2cqsl
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: builder
      uid: 2c30072a-1966-4dde-a8f7-4c0b3e90c13e
    resourceVersion: "26184"
    uid: 93b852d9-2404-4157-ade1-7b31b0a6c984
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTk0NiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: cluster-image-registry-operator
    creationTimestamp: "2024-06-11T10:52:25Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"865783fb-a8e3-4aed-9df2-edd702bc6587"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:04Z"
    name: cluster-image-registry-operator-dockercfg-7ngbg
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: cluster-image-registry-operator
      uid: 865783fb-a8e3-4aed-9df2-edd702bc6587
    resourceVersion: "26193"
    uid: 8dc173de-a920-48e5-87f7-3037ed0474db
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTU2MiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: default
    creationTimestamp: "2024-06-11T10:52:25Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"da506121-a52d-4afe-b54f-ee9986a787e6"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:04Z"
    name: default-dockercfg-j67zz
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: default
      uid: da506121-a52d-4afe-b54f-ee9986a787e6
    resourceVersion: "26202"
    uid: e2fee6a3-a1ca-47d1-b77a-3917fe92ce87
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTU3NCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: deployer
    creationTimestamp: "2024-06-11T10:52:26Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"948e5991-e09f-42f6-ad3d-b3c243f63a84"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:04Z"
    name: deployer-dockercfg-2z6hq
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: deployer
      uid: 948e5991-e09f-42f6-ad3d-b3c243f63a84
    resourceVersion: "26217"
    uid: ebcf18de-47ab-4742-bdf3-2b0c9df03e44
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVzRENDQTVpZ0F3SUJBZ0lJSXM2YnlKK1NGVnd3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRjeE9ERXdNamt3TWpBZQpGdzB5TkRBMk1URXhNRFE0TXpGYUZ3MHlOakEyTVRFeE1EUTRNekphTUVFeFB6QTlCZ05WQkFNTU5pb3VhVzFoCloyVXRjbVZuYVhOMGNua3RiM0JsY21GMGIzSXViM0JsYm5Ob2FXWjBMV2x0WVdkbExYSmxaMmx6ZEhKNUxuTjIKWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTk5uQ1g0UjBkZ2NoK2FiaElPagowem1RZHdlOExxN1ExL3MxakN4MERQeFI0N1FFYW9RcUJxdFZIdWFkbFV5MEhaaHcxVUtkSlBRbzhITnZHb0pIClBTMExJYkI2UVloeGNjcGdMQlFvekJqWVpVemRCOUtKRTlCK09kYmxiQk8rZ24zWlRNaC9kUWRtTFdBcjdlV3gKSWF0Tm4zUzY4dDQ5UEZGM0pFMGc0MFcrTzBlaGRqUE1sQmpaajJobXlVUHZYL09uNDN3Njc2eXUwL2xRRDNDRAp4SldTNFJiUGJOOFh6aTlCZ1RzRXI5YTM1dGNhMFZjcllyc1YwVzZESzRwZ1dTaWNkYUdPblZ2aTBoRGh4MHErClV1eTJGdlU4ODAxZjRYWFN6VlJFMHo4K0NwOUJqVSt5dUZjb3loVXdmeEZaMzJ6RTkrYnJFQllqaWNTRy9nZVcKQkxFQ0F3RUFBYU9DQWJVd2dnR3hNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRUREQUtCZ2dyQmdFRgpCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlFmeUlwd2JtNG5USkRNb3lFVUpNTFljdnA0CkZ6QWZCZ05WSFNNRUdEQVdnQlRhUVpGOHpTamtIZWhUQlFaTWJqSUp0L3NBNmpDQ0FRTUdBMVVkRVFTQit6Q0IKK0lJMktpNXBiV0ZuWlMxeVpXZHBjM1J5ZVMxdmNHVnlZWFJ2Y2k1dmNHVnVjMmhwWm5RdGFXMWhaMlV0Y21WbgphWE4wY25rdWMzWmpna1FxTG1sdFlXZGxMWEpsWjJsemRISjVMVzl3WlhKaGRHOXlMbTl3Wlc1emFHbG1kQzFwCmJXRm5aUzF5WldkcGMzUnllUzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSUkwYVcxaFoyVXRjbVZuYVhOMGNua3QKYjNCbGNtRjBiM0l1YjNCbGJuTm9hV1owTFdsdFlXZGxMWEpsWjJsemRISjVMbk4yWTRKQ2FXMWhaMlV0Y21WbgphWE4wY25rdGIzQmxjbUYwYjNJdWIzQmxibk5vYVdaMExXbHRZV2RsTFhKbFoybHpkSEo1TG5OMll5NWpiSFZ6CmRHVnlMbXh2WTJGc01EVUdDeXNHQVFRQmtnZ1JaQUlCQkNZVEpHVTVZV0pqWmpNNExXUTBPV1F0TkdVMk15MDQKWkRVNUxXUTNOek5oWkRkaU5XWmlOekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQlNvUC9VNzY5UUd3WWcyawo2eXlFd0VFODFrSUdZWHdLTkFZb1hTQ0dnZ1dQblhIZmJGZ0s1YmtWbjF3TjlWRlZDU3hodFdDUzBJcjNjeTlvCjdMVDdDLzF2bTAzaEtxT0JBQlVjcVk5T0tVSzhDMERPcC8yc3QxSnQxYTQyWDZ4UzhIRnF4R1o3NElnUjFwQjcKZW9UUjczTHFiazRvajcrTDFoTTVadUxZc1czdTkxbjdETFpHWmFGU2NiUEM5QW5ZVGsybDB3bHFwRVptNVZuTwpxcnI3YlhlUFppd0JYc2ZkTUt0MS9VR1VQazdMNENzV0U2d2tyZFNoaDFxYjFhYko0VitNaWU1aWJRQUI0bE01ClZudGFTQzQ0ck5OWXZxa0dWOE5jR0FJQzJWcStyKzF5VTBzcmt3RGkvNHlJS01keTlkU3JNUEpFZkZwTS9CT2kKZFlJejR3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFVUQ0NBam1nQXdJQkFnSUlRZGdtVlRKUVQ0a3dEUVlKS29aSWh2Y05BUUVMQlFBd05qRTBNRElHQTFVRQpBd3dyYjNCbGJuTm9hV1owTFhObGNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVGN4T0RFd01qa3dNakFlCkZ3MHlOREEyTVRFeE1EUTRNakZhRncweU5qQTRNVEF4TURRNE1qSmFNRFl4TkRBeUJnTlZCQU1NSzI5d1pXNXoKYUdsbWRDMXpaWEoyYVdObExYTmxjblpwYm1jdGMybG5ibVZ5UURFM01UZ3hNREk1TURJd2dnRWlNQTBHQ1NxRwpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEVlA2bTdkMEdEZHBxaisyKzY0YTZpVmprOXg3dkorRXU1CkxmVXR5MWlUVnJsQVVBaGx1SWk3NDY3azEyaVorRU9NNHpad1ExK1cvTkg4SWdsNDBLaGo0cnhnbkR5eUdXKysKTnVPeTZmZzhBWHExdDJGMmU0ckw1a3g1Q2wwVStDbWNHSkVJL1dnLzB2OWtnRmJWUEZVL1hxQms2aTFkbTJiRgp0MEx3bmpVNmlyL2xjMVcrZWhZQWxwUWhBbm5xSzYrY2d3eU5zMExhSFhLQzN2SEhzU2kvZGJHOGV6MExtZ2s2Cmh4clRLQzNiQ0xFTmFidmZzT0IxeFpXdkVic2swRDM0Qi9RRHo3QVdCS05BeUpEdU84c0k4a2wrNmdGRkJ3bDgKbldTTkZyYXdsdUZ2a2RjQUlVSXVTZG5DajV4TWpaaEltc0haaHE1YURlN2UxaUpDVmI5WkFnTUJBQUdqWXpCaApNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGFRWkY4CnpTamtIZWhUQlFaTWJqSUp0L3NBNmpBZkJnTlZIU01FR0RBV2dCVGFRWkY4elNqa0hlaFRCUVpNYmpJSnQvc0EKNmpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWY3QXgvaWltbUpjYlkwQTdtMXBrQVlOWU9NNmZSUDcySVNHdQo2YytTdDc3RUFEQTlyM2ZZbjNqdElKL0JyL3Juc3hOT0F3QWNHeFVrb2ZiOFBhOElGTzYxTDhheWtjRVpsak0yCnQ5OHE4OTB2L0hXR3QrbXNVcWthVkRhZ0VOL3dVVm5rYkw4cWN2STVJNENNR0FucU9iM0NvY3l1LzZOZ3BGbHcKNUVrUDJuY3hhRE42V0lZZTdEWnZaenNMSGdrSGJxRktxMlo5TlhKb3laVDNvaDh3bFc4WW14VXhRLzg3QlMvbwpsMnVqL0E5SHVBWUIrMEYwUVJoMTY3akNTMUJRMG5LMWhJbnhKOVprelBNY3BMZDVaNUpDNkU3MXNoUXB4MDR1CjRlZ1F6MjhpY1RyeGpVRWNaWFloWDZhSis0ZUhSRS9Ib3hzdDZRQU94MVdLNmtPNnRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: MTY3NSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/description: 'Secret contains a pair signed serving certificate/key
        that is generated by Service CA operator for service/image-registry-operator
        with hostname image-registry-operator.openshift-image-registry.svc and is
        annotated to the service with annotating a service resource with ''service.beta.openshift.io/serving-cert-secret-name:
        image-registry-operator-tls''. The certificate is valid for 2 years.'
      openshift.io/owning-component: service-ca
      service.alpha.openshift.io/expiry: "2026-06-11T10:48:32Z"
      service.alpha.openshift.io/originating-service-name: image-registry-operator
      service.alpha.openshift.io/originating-service-uid: e9abcf38-d49d-4e63-8d59-d773ad7b5fb7
      service.beta.openshift.io/expiry: "2026-06-11T10:48:32Z"
    creationTimestamp: "2024-06-11T10:48:33Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/description: {}
            f:openshift.io/owning-component: {}
            f:service.alpha.openshift.io/expiry: {}
            f:service.alpha.openshift.io/originating-service-name: {}
            f:service.alpha.openshift.io/originating-service-uid: {}
            f:service.beta.openshift.io/expiry: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e9abcf38-d49d-4e63-8d59-d773ad7b5fb7"}: {}
        f:type: {}
      manager: service-ca-operator
      operation: Update
      time: "2024-06-11T10:48:33Z"
    name: image-registry-operator-tls
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: v1
      kind: Service
      name: image-registry-operator
      uid: e9abcf38-d49d-4e63-8d59-d773ad7b5fb7
    resourceVersion: "8292"
    uid: 0f3eb8c7-37d3-4403-94a8-41cb4a266f6b
  type: kubernetes.io/tls
- apiVersion: v1
  data:
    REGISTRY_STORAGE_AZURE_ACCOUNTKEY: ODggYnl0ZXMgbG9uZw==
  kind: Secret
  metadata:
    annotations:
      imageregistry.operator.openshift.io/checksum: sha256:9fdbf61166d20fef0772dbe8aafa0adb611e7d7cf4cf7e51aa2ae8432a7c43e5
    creationTimestamp: "2024-06-11T11:07:00Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:REGISTRY_STORAGE_AZURE_ACCOUNTKEY: {}
        f:metadata:
          f:annotations:
            .: {}
            f:imageregistry.operator.openshift.io/checksum: {}
        f:type: {}
      manager: cluster-image-registry-operator
      operation: Update
      time: "2024-06-11T11:07:00Z"
    name: image-registry-private-configuration
    namespace: openshift-image-registry
    resourceVersion: "25376"
    uid: 0fc2fb41-fbde-4003-a0ea-a171a4c49bc8
  type: Opaque
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVFVENDQXZtZ0F3SUJBZ0lJYVdydTh1ZmJpNjB3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRjeE9ERXdNamt3TWpBZQpGdzB5TkRBMk1URXhNVEEyTlRsYUZ3MHlOakEyTVRFeE1UQTNNREJhTURZeE5EQXlCZ05WQkFNVEsybHRZV2RsCkxYSmxaMmx6ZEhKNUxtOXdaVzV6YUdsbWRDMXBiV0ZuWlMxeVpXZHBjM1J5ZVM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHFPZkU5U0FiZTFrZEJJYWY4K3YxbFVJZjFPb25nTzRiOAovQjNSdjJNTngxemlVTXM2eDh5bUhYTWh5NkVSZTk0cStaaU14WGVxaXM5MjJENk1XRkJRMDhabDh5MGVUTjQyCmFSWTVyR1RnUWN3aTRvQXhLQ3VjSnZnTVdJZXNleFZndENwemJvYU1sRmhZYy8zdmFya2xBcDg5VlVPYm1wdmEKblEvUDZKRlVHYWd0SCtQc25DNnBOdW90M3pCc3VvS0ZqZVBuYTZhelJyeU1VVVQzOUJGRGxsa3graWhxQnJaSAp3SmhMZXFNQ3h5bm5NSUtrYm9FbG5rcFltQ0VDRlF6OXJUWTE5eDFHMUdEclNBajBBZ2VoZmhmenU1MEI5ZDljCkxCbDhtbXZYOWRHU2cyakVaL3ZHVlNNVkh5aEE4SEpLK3hjWmNLc3Z5MmQ0bExOUzZnRFBBZ01CQUFHamdnRWgKTUlJQkhUQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3RXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVRQjU5a054RThMaHBIWlNHTkFZais1bjdIYTh3SHdZRFZSMGpCQmd3CkZvQVUya0dSZk0wbzVCM29Vd1VHVEc0eUNiZjdBT293Y1FZRFZSMFJCR293YUlJcmFXMWhaMlV0Y21WbmFYTjAKY25rdWIzQmxibk5vYVdaMExXbHRZV2RsTFhKbFoybHpkSEo1TG5OMlk0STVhVzFoWjJVdGNtVm5hWE4wY25rdQpiM0JsYm5Ob2FXWjBMV2x0WVdkbExYSmxaMmx6ZEhKNUxuTjJZeTVqYkhWemRHVnlMbXh2WTJGc01EVUdDeXNHCkFRUUJrZ2dSWkFJQkJDWVRKR1JrTldZNU9UVTFMV1ZoTWpjdE5ESXdaaTFoT1RFMkxUSmtaV001WkdJM1lUQXgKTVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWxXRkxQQ1VFbU1OOWV4ei9qZ3p2bm5zdWw5S0VXL2VFQWlYKwpJcWIrdGI4OEFuVVVCbGhTZmpFY2xQS0owSVYwQ0RCMm0xdjNRWWZtSXUwa0RDcy9EbUlQVFZGa290VWpCeUZZCm4zTDJXM29xLzBiY3BZcC9ETThBWno5SVJrMVBGdUJ6U3E3dzJuc3E1L3VtNnhsNmE5RzBTTHBtOWFGSFB6UFAKREFKWUk5SFhWVkZ6TkMyRmV0REpRZGdxVFRLZ3diaXNkeTd2dDN0NVk4VkxjNlZCZTdaTkh5VDdYWnU5RkRhdQpxdEY2bmxySHRJd05NWXg2U2hscWF6VFBHZFJEMHNtWDV4aGF6YnBJVE9mSWxEOVUyRHR2YmVna2g3TEJDVkRYClRMTTVDck5nTkJwajd3UzZCQVBZSXZvRVhwckJhQUpmMkQyNzBGK21lQzhaa1ZOZ0ZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFVUQ0NBam1nQXdJQkFnSUlRZGdtVlRKUVQ0a3dEUVlKS29aSWh2Y05BUUVMQlFBd05qRTBNRElHQTFVRQpBd3dyYjNCbGJuTm9hV1owTFhObGNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVGN4T0RFd01qa3dNakFlCkZ3MHlOREEyTVRFeE1EUTRNakZhRncweU5qQTRNVEF4TURRNE1qSmFNRFl4TkRBeUJnTlZCQU1NSzI5d1pXNXoKYUdsbWRDMXpaWEoyYVdObExYTmxjblpwYm1jdGMybG5ibVZ5UURFM01UZ3hNREk1TURJd2dnRWlNQTBHQ1NxRwpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEVlA2bTdkMEdEZHBxaisyKzY0YTZpVmprOXg3dkorRXU1CkxmVXR5MWlUVnJsQVVBaGx1SWk3NDY3azEyaVorRU9NNHpad1ExK1cvTkg4SWdsNDBLaGo0cnhnbkR5eUdXKysKTnVPeTZmZzhBWHExdDJGMmU0ckw1a3g1Q2wwVStDbWNHSkVJL1dnLzB2OWtnRmJWUEZVL1hxQms2aTFkbTJiRgp0MEx3bmpVNmlyL2xjMVcrZWhZQWxwUWhBbm5xSzYrY2d3eU5zMExhSFhLQzN2SEhzU2kvZGJHOGV6MExtZ2s2Cmh4clRLQzNiQ0xFTmFidmZzT0IxeFpXdkVic2swRDM0Qi9RRHo3QVdCS05BeUpEdU84c0k4a2wrNmdGRkJ3bDgKbldTTkZyYXdsdUZ2a2RjQUlVSXVTZG5DajV4TWpaaEltc0haaHE1YURlN2UxaUpDVmI5WkFnTUJBQUdqWXpCaApNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGFRWkY4CnpTamtIZWhUQlFaTWJqSUp0L3NBNmpBZkJnTlZIU01FR0RBV2dCVGFRWkY4elNqa0hlaFRCUVpNYmpJSnQvc0EKNmpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWY3QXgvaWltbUpjYlkwQTdtMXBrQVlOWU9NNmZSUDcySVNHdQo2YytTdDc3RUFEQTlyM2ZZbjNqdElKL0JyL3Juc3hOT0F3QWNHeFVrb2ZiOFBhOElGTzYxTDhheWtjRVpsak0yCnQ5OHE4OTB2L0hXR3QrbXNVcWthVkRhZ0VOL3dVVm5rYkw4cWN2STVJNENNR0FucU9iM0NvY3l1LzZOZ3BGbHcKNUVrUDJuY3hhRE42V0lZZTdEWnZaenNMSGdrSGJxRktxMlo5TlhKb3laVDNvaDh3bFc4WW14VXhRLzg3QlMvbwpsMnVqL0E5SHVBWUIrMEYwUVJoMTY3akNTMUJRMG5LMWhJbnhKOVprelBNY3BMZDVaNUpDNkU3MXNoUXB4MDR1CjRlZ1F6MjhpY1RyeGpVRWNaWFloWDZhSis0ZUhSRS9Ib3hzdDZRQU94MVdLNmtPNnRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: MTY3OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/description: 'Secret contains a pair signed serving certificate/key
        that is generated by Service CA operator for service/image-registry with hostname
        image-registry.openshift-image-registry.svc and is annotated to the service
        with annotating a service resource with ''service.beta.openshift.io/serving-cert-secret-name:
        image-registry-tls''. The certificate is valid for 2 years.'
      openshift.io/owning-component: service-ca
      service.alpha.openshift.io/expiry: "2026-06-11T11:07:00Z"
      service.alpha.openshift.io/originating-service-name: image-registry
      service.alpha.openshift.io/originating-service-uid: dd5f9955-ea27-420f-a916-2dec9db7a011
      service.beta.openshift.io/expiry: "2026-06-11T11:07:00Z"
    creationTimestamp: "2024-06-11T11:07:00Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/description: {}
            f:openshift.io/owning-component: {}
            f:service.alpha.openshift.io/expiry: {}
            f:service.alpha.openshift.io/originating-service-name: {}
            f:service.alpha.openshift.io/originating-service-uid: {}
            f:service.beta.openshift.io/expiry: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dd5f9955-ea27-420f-a916-2dec9db7a011"}: {}
        f:type: {}
      manager: service-ca-operator
      operation: Update
      time: "2024-06-11T11:07:00Z"
    name: image-registry-tls
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: v1
      kind: Service
      name: image-registry
      uid: dd5f9955-ea27-420f-a916-2dec9db7a011
    resourceVersion: "25525"
    uid: c758a580-ba49-4482-bf85-8a0f28b96c82
  type: kubernetes.io/tls
- apiVersion: v1
  data:
    .dockerconfigjson: NzEzNCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      imageregistry.operator.openshift.io/checksum: sha256:19fdf37440348d8fab55e8ac75c0759a629618e191a5a5e7aa198e2a34b361ae
    creationTimestamp: "2024-06-11T11:07:00Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockerconfigjson: {}
        f:metadata:
          f:annotations:
            .: {}
            f:imageregistry.operator.openshift.io/checksum: {}
        f:type: {}
      manager: cluster-image-registry-operator
      operation: Update
      time: "2024-06-11T11:22:15Z"
    name: installation-pull-secrets
    namespace: openshift-image-registry
    resourceVersion: "35156"
    uid: 2e2073bb-01c5-4371-9d33-bdf047275458
  type: kubernetes.io/dockerconfigjson
- apiVersion: v1
  data:
    azure_client_id: MzYgYnl0ZXMgbG9uZw==
    azure_client_secret: NDAgYnl0ZXMgbG9uZw==
    azure_region: OSBieXRlcyBsb25n
    azure_resource_prefix: MjYgYnl0ZXMgbG9uZw==
    azure_resourcegroup: MjkgYnl0ZXMgbG9uZw==
    azure_subscription_id: MzYgYnl0ZXMgbG9uZw==
    azure_tenant_id: MzYgYnl0ZXMgbG9uZw==
  kind: Secret
  metadata:
    annotations:
      cloudcredential.openshift.io/credentials-request: openshift-cloud-credential-operator/openshift-image-registry-azure
    creationTimestamp: "2024-06-11T10:41:33Z"
    labels:
      cloudcredential.openshift.io/credentials-request: "true"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:azure_client_id: {}
          f:azure_client_secret: {}
          f:azure_region: {}
          f:azure_resource_prefix: {}
          f:azure_resourcegroup: {}
          f:azure_subscription_id: {}
          f:azure_tenant_id: {}
        f:metadata:
          f:annotations:
            .: {}
            f:cloudcredential.openshift.io/credentials-request: {}
          f:labels:
            .: {}
            f:cloudcredential.openshift.io/credentials-request: {}
        f:type: {}
      manager: Go-http-client
      operation: Update
      time: "2024-06-11T10:41:33Z"
    name: installer-cloud-credentials
    namespace: openshift-image-registry
    resourceVersion: "2504"
    uid: 15dbd5cd-eb59-4e65-9507-875201f9f1aa
  type: Opaque
- apiVersion: v1
  data:
    .dockercfg: NTU2MiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: node-ca
    creationTimestamp: "2024-06-11T10:52:25Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"10a48a6f-147b-4a1a-847c-f051f91376cb"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:04Z"
    name: node-ca-dockercfg-446xg
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: node-ca
      uid: 10a48a6f-147b-4a1a-847c-f051f91376cb
    resourceVersion: "26218"
    uid: e95254f0-ca55-43c8-8119-958fe6788cc5
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTU1MCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: pruner
    creationTimestamp: "2024-06-11T10:52:25Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"16fd1a44-828a-4af9-a063-17f52f6dbaf0"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:04Z"
    name: pruner-dockercfg-l8bz9
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: pruner
      uid: 16fd1a44-828a-4af9-a063-17f52f6dbaf0
    resourceVersion: "26223"
    uid: 87dd8862-750b-4837-ad6f-b91824223f31
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTU3NCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: registry
    creationTimestamp: "2024-06-11T11:07:00Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"d7a8fb17-45aa-4784-9e2b-a6b49da28970"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T11:07:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:10Z"
    name: registry-dockercfg-t8b8m
    namespace: openshift-image-registry
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: registry
      uid: d7a8fb17-45aa-4784-9e2b-a6b49da28970
    resourceVersion: "27250"
    uid: 47a62d51-afc0-402c-9bbf-034e84350b6f
  type: kubernetes.io/dockercfg
kind: SecretList
metadata:
  resourceVersion: "39938"
