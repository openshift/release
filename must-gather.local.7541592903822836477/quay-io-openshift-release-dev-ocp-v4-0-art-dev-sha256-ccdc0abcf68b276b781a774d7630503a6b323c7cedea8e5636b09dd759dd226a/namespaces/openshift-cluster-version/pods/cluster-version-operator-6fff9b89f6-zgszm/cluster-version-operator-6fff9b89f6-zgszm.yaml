---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/required-scc: hostaccess
    openshift.io/scc: hostaccess
  creationTimestamp: "2024-06-11T10:44:25Z"
  generateName: cluster-version-operator-6fff9b89f6-
  labels:
    k8s-app: cluster-version-operator
    pod-template-hash: 6fff9b89f6
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:openshift.io/required-scc: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:k8s-app: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"3564af15-b5a8-4680-9a2b-36e3cf4d610c"}: {}
      f:spec:
        f:automountServiceAccountToken: {}
        f:containers:
          k:{"name":"cluster-version-operator"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"CLUSTER_PROFILE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_HOST"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_PORT"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"NODE_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"OPERATOR_IMAGE_VERSION"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/cvo/updatepayloads"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/ssl/certs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/tls/service-ca"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/tls/serving-cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"etc-cvo-updatepayloads"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"etc-ssl-certs"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"kube-api-access"}:
            .: {}
            f:name: {}
            f:projected:
              .: {}
              f:defaultMode: {}
              f:sources: {}
          k:{"name":"service-ca"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"serving-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2024-06-11T10:44:25Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          .: {}
          k:{"type":"PodScheduled"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
    manager: kube-scheduler
    operation: Update
    subresource: status
    time: "2024-06-11T10:44:25Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.0.0.7"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2024-06-11T10:56:07Z"
  name: cluster-version-operator-6fff9b89f6-zgszm
  namespace: openshift-cluster-version
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: cluster-version-operator-6fff9b89f6
    uid: 3564af15-b5a8-4680-9a2b-36e3cf4d610c
  resourceVersion: "18101"
  uid: 77bd6914-fdf8-4353-9801-34d9bf03ab8c
spec:
  automountServiceAccountToken: false
  containers:
  - args:
    - start
    - --release-image=registry.build02.ci.openshift.org/ci-op-9xx71rvq/release@sha256:65102daae8065dffb1c67481ff030f5ad71eab5a7335d2498348a84cb5189074
    - --enable-auto-update=false
    - --listen=0.0.0.0:9099
    - --serving-cert-file=/etc/tls/serving-cert/tls.crt
    - --serving-key-file=/etc/tls/serving-cert/tls.key
    - --v=2
    - --always-enable-capabilities=Ingress
    env:
    - name: OPERATOR_IMAGE_VERSION
      value: 0.0.1-snapshot
    - name: KUBERNETES_SERVICE_PORT
      value: "6443"
    - name: KUBERNETES_SERVICE_HOST
      value: api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: CLUSTER_PROFILE
      value: self-managed-high-availability
    image: registry.build02.ci.openshift.org/ci-op-9xx71rvq/release@sha256:65102daae8065dffb1c67481ff030f5ad71eab5a7335d2498348a84cb5189074
    imagePullPolicy: IfNotPresent
    name: cluster-version-operator
    resources:
      requests:
        cpu: 20m
        memory: 50Mi
    securityContext:
      capabilities:
        drop:
        - KILL
        - MKNOD
        - SETGID
        - SETUID
      runAsNonRoot: true
      runAsUser: 1000040000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/ssl/certs
      name: etc-ssl-certs
      readOnly: true
    - mountPath: /etc/cvo/updatepayloads
      name: etc-cvo-updatepayloads
      readOnly: true
    - mountPath: /etc/tls/serving-cert
      name: serving-cert
      readOnly: true
    - mountPath: /etc/tls/service-ca
      name: service-ca
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access
      readOnly: true
  dnsPolicy: Default
  enableServiceLinks: true
  hostNetwork: true
  nodeName: ci-op-9xx71rvq-1e28e-w667k-master-2
  nodeSelector:
    node-role.kubernetes.io/master: ""
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000040000
    seLinuxOptions:
      level: s0:c6,c5
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 130
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 120
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 120
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - hostPath:
      path: /etc/ssl/certs
      type: ""
    name: etc-ssl-certs
  - hostPath:
      path: /etc/cvo/updatepayloads
      type: ""
    name: etc-cvo-updatepayloads
  - name: serving-cert
    secret:
      defaultMode: 420
      secretName: cluster-version-operator-serving-cert
  - configMap:
      defaultMode: 420
      name: openshift-service-ca.crt
    name: service-ca
  - name: kube-api-access
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3600
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:49:07Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:44:54Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:56:07Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:56:07Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:44:54Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://0da9940280163fbf6baf146f7618eee706521ba58e76cc5e827f657f9bd6890c
    image: registry.build02.ci.openshift.org/ci-op-9xx71rvq/release@sha256:65102daae8065dffb1c67481ff030f5ad71eab5a7335d2498348a84cb5189074
    imageID: registry.build02.ci.openshift.org/ci-op-9xx71rvq/release@sha256:65102daae8065dffb1c67481ff030f5ad71eab5a7335d2498348a84cb5189074
    lastState:
      terminated:
        containerID: cri-o://3528086dcecdd7259207ce3aa3694f60ec66afa784a82454dc1aebecc36c6706
        exitCode: 0
        finishedAt: "2024-06-11T10:56:05Z"
        reason: Completed
        startedAt: "2024-06-11T10:49:07Z"
    name: cluster-version-operator
    ready: true
    restartCount: 1
    started: true
    state:
      running:
        startedAt: "2024-06-11T10:56:06Z"
  hostIP: 10.0.0.7
  hostIPs:
  - ip: 10.0.0.7
  phase: Running
  podIP: 10.0.0.7
  podIPs:
  - ip: 10.0.0.7
  qosClass: Burstable
  startTime: "2024-06-11T10:44:54Z"
