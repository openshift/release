---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      exclude.release.openshift.io/internal-openshift-hosted: "true"
      include.release.openshift.io/self-managed-high-availability: "true"
      kubernetes.io/description: The cluster-version operator manages OpenShift updates
        and reconciles core resources and cluster operators.
    creationTimestamp: "2024-06-11T10:40:25Z"
    generation: 2
    labels:
      k8s-app: cluster-version-operator
      pod-template-hash: 54b95d5d49
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:exclude.release.openshift.io/internal-openshift-hosted: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
            f:kubernetes.io/description: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ee73e6ff-bdef-490b-8981-c537c6bac033"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"cluster-version-operator"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"CLUSTER_PROFILE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"KUBERNETES_SERVICE_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"KUBERNETES_SERVICE_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"OPERATOR_IMAGE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/cvo/updatepayloads"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/ssl/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/service-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"etc-cvo-updatepayloads"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"etc-ssl-certs"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"kube-api-access"}:
                  .: {}
                  f:name: {}
                  f:projected:
                    .: {}
                    f:defaultMode: {}
                    f:sources: {}
                k:{"name":"service-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:41:41Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T10:41:41Z"
    name: cluster-version-operator-54b95d5d49
    namespace: openshift-cluster-version
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cluster-version-operator
      uid: ee73e6ff-bdef-490b-8981-c537c6bac033
    resourceVersion: "2552"
    uid: 13fba630-d977-4c40-9e73-22685d25c05f
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: cluster-version-operator
        pod-template-hash: 54b95d5d49
    template:
      metadata:
        annotations:
          openshift.io/required-scc: hostaccess
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          k8s-app: cluster-version-operator
          pod-template-hash: 54b95d5d49
        name: cluster-version-operator
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - start
          - --release-image=registry.build02.ci.openshift.org/ci-op-9xx71rvq/release@sha256:65102daae8065dffb1c67481ff030f5ad71eab5a7335d2498348a84cb5189074
          - --enable-auto-update=false
          - --listen=0.0.0.0:9099
          - --serving-cert-file=/etc/tls/serving-cert/tls.crt
          - --serving-key-file=/etc/tls/serving-cert/tls.key
          - --v=2
          - --always-enable-capabilities=Ingress
          env:
          - name: OPERATOR_IMAGE_VERSION
            value: 0.0.1-snapshot
          - name: KUBERNETES_SERVICE_PORT
            value: "6443"
          - name: KUBERNETES_SERVICE_HOST
            value: 127.0.0.1
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER_PROFILE
            value: self-managed-high-availability
          image: registry.build02.ci.openshift.org/ci-op-9xx71rvq/release@sha256:65102daae8065dffb1c67481ff030f5ad71eab5a7335d2498348a84cb5189074
          imagePullPolicy: IfNotPresent
          name: cluster-version-operator
          resources:
            requests:
              cpu: 20m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/ssl/certs
            name: etc-ssl-certs
            readOnly: true
          - mountPath: /etc/cvo/updatepayloads
            name: etc-cvo-updatepayloads
            readOnly: true
          - mountPath: /etc/tls/serving-cert
            name: serving-cert
            readOnly: true
          - mountPath: /etc/tls/service-ca
            name: service-ca
            readOnly: true
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: kube-api-access
            readOnly: true
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 130
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/network-unavailable
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: ""
          name: etc-ssl-certs
        - hostPath:
            path: /etc/cvo/updatepayloads
            type: ""
          name: etc-cvo-updatepayloads
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: cluster-version-operator-serving-cert
        - configMap:
            defaultMode: 420
            name: openshift-service-ca.crt
          name: service-ca
        - name: kube-api-access
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                expirationSeconds: 3600
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "2"
      exclude.release.openshift.io/internal-openshift-hosted: "true"
      include.release.openshift.io/self-managed-high-availability: "true"
      kubernetes.io/description: The cluster-version operator manages OpenShift updates
        and reconciles core resources and cluster operators.
    creationTimestamp: "2024-06-11T10:41:41Z"
    generation: 1
    labels:
      k8s-app: cluster-version-operator
      pod-template-hash: 6fff9b89f6
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:exclude.release.openshift.io/internal-openshift-hosted: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
            f:kubernetes.io/description: {}
          f:labels:
            .: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ee73e6ff-bdef-490b-8981-c537c6bac033"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"cluster-version-operator"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"CLUSTER_PROFILE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"KUBERNETES_SERVICE_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"KUBERNETES_SERVICE_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"OPERATOR_IMAGE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/cvo/updatepayloads"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/ssl/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/service-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"etc-cvo-updatepayloads"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"etc-ssl-certs"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"kube-api-access"}:
                  .: {}
                  f:name: {}
                  f:projected:
                    .: {}
                    f:defaultMode: {}
                    f:sources: {}
                k:{"name":"service-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:41:41Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-06-11T10:49:07Z"
    name: cluster-version-operator-6fff9b89f6
    namespace: openshift-cluster-version
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cluster-version-operator
      uid: ee73e6ff-bdef-490b-8981-c537c6bac033
    resourceVersion: "10037"
    uid: 3564af15-b5a8-4680-9a2b-36e3cf4d610c
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: cluster-version-operator
        pod-template-hash: 6fff9b89f6
    template:
      metadata:
        annotations:
          openshift.io/required-scc: hostaccess
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          k8s-app: cluster-version-operator
          pod-template-hash: 6fff9b89f6
        name: cluster-version-operator
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - start
          - --release-image=registry.build02.ci.openshift.org/ci-op-9xx71rvq/release@sha256:65102daae8065dffb1c67481ff030f5ad71eab5a7335d2498348a84cb5189074
          - --enable-auto-update=false
          - --listen=0.0.0.0:9099
          - --serving-cert-file=/etc/tls/serving-cert/tls.crt
          - --serving-key-file=/etc/tls/serving-cert/tls.key
          - --v=2
          - --always-enable-capabilities=Ingress
          env:
          - name: OPERATOR_IMAGE_VERSION
            value: 0.0.1-snapshot
          - name: KUBERNETES_SERVICE_PORT
            value: "6443"
          - name: KUBERNETES_SERVICE_HOST
            value: api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER_PROFILE
            value: self-managed-high-availability
          image: registry.build02.ci.openshift.org/ci-op-9xx71rvq/release@sha256:65102daae8065dffb1c67481ff030f5ad71eab5a7335d2498348a84cb5189074
          imagePullPolicy: IfNotPresent
          name: cluster-version-operator
          resources:
            requests:
              cpu: 20m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/ssl/certs
            name: etc-ssl-certs
            readOnly: true
          - mountPath: /etc/cvo/updatepayloads
            name: etc-cvo-updatepayloads
            readOnly: true
          - mountPath: /etc/tls/serving-cert
            name: serving-cert
            readOnly: true
          - mountPath: /etc/tls/service-ca
            name: service-ca
            readOnly: true
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: kube-api-access
            readOnly: true
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 130
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/network-unavailable
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: ""
          name: etc-ssl-certs
        - hostPath:
            path: /etc/cvo/updatepayloads
            type: ""
          name: etc-cvo-updatepayloads
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: cluster-version-operator-serving-cert
        - configMap:
            defaultMode: 420
            name: openshift-service-ca.crt
          name: service-ca
        - name: kube-api-access
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                expirationSeconds: 3600
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: ReplicaSetList
metadata:
  resourceVersion: "39759"
