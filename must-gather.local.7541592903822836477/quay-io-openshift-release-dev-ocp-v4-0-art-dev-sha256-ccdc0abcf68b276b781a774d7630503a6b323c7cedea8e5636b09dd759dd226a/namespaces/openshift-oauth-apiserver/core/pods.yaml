---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.62/23"],"mac_address":"0a:58:0a:81:00:3e","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.62/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.62"
            ],
            "mac": "0a:58:0a:81:00:3e",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: 3c-yJg==
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: RrQ2Zw==
    creationTimestamp: "2024-06-11T10:57:03Z"
    generateName: apiserver-f74744fc5-
    labels:
      apiserver: "true"
      app: openshift-oauth-apiserver
      oauth-apiserver-anti-affinity: "true"
      pod-template-hash: f74744fc5
      revision: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:oauth-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f4925ce3-3e61-4ac4-8910-5375865d0862"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"oauth-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/audit"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/encryption-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/etcd-client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"fix-audit-permissions"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"audit-policies"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"encryption-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"etcd-client"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"etcd-serving-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:57:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2024-06-11T10:57:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-master-1
      operation: Update
      subresource: status
      time: "2024-06-11T10:57:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T10:57:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.62"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:00:53Z"
    name: apiserver-f74744fc5-czt9k
    namespace: openshift-oauth-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apiserver-f74744fc5
      uid: f4925ce3-3e61-4ac4-8910-5375865d0862
    resourceVersion: "21804"
    uid: 572954e8-f4c0-45b2-9b7e-05e3760e286c
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              apiserver: "true"
              app: openshift-oauth-apiserver
              oauth-apiserver-anti-affinity: "true"
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - |
        if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
          echo "Copying system trust bundle"
          cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi
        exec oauth-apiserver start \
          --secure-port=8443 \
          --audit-log-path=/var/log/oauth-apiserver/audit.log \
          --audit-log-format=json \
          --audit-log-maxsize=100 \
          --audit-log-maxbackup=10 \
          --audit-policy-file=/var/run/configmaps/audit/policy.yaml \
          --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \
          --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \
          --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \
          --shutdown-delay-duration=15s \
          --shutdown-send-retry-after=true \
          --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \
          --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \
          --enable-priority-and-fairness=false \
          --api-audiences=https://kubernetes.default.svc \
          --cors-allowed-origins='//127\.0\.0\.1(:|$)' \
          --cors-allowed-origins='//localhost(:|$)' \
          --etcd-servers=https://10.0.0.6:2379 \
          --etcd-servers=https://10.0.0.7:2379 \
          --etcd-servers=https://10.0.0.8:2379 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-min-version=VersionTLS12 \
          --v=2
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: oauth-apiserver
      ports:
      - containerPort: 8443
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 150m
          memory: 200Mi
      securityContext:
        privileged: true
        runAsUser: 0
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/audit
        name: audit-policies
      - mountPath: /var/run/secrets/etcd-client
        name: etcd-client
      - mountPath: /var/run/configmaps/etcd-serving-ca
        name: etcd-serving-ca
      - mountPath: /var/run/configmaps/trusted-ca-bundle
        name: trusted-ca-bundle
      - mountPath: /var/run/secrets/serving-cert
        name: serving-cert
      - mountPath: /var/run/secrets/encryption-config
        name: encryption-config
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zcqkj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log
        && chmod 0600 /var/log/oauth-apiserver/*
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imagePullPolicy: IfNotPresent
      name: fix-audit-permissions
      resources:
        requests:
          cpu: 15m
          memory: 50Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zcqkj
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-1
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: oauth-apiserver-sa
    serviceAccountName: oauth-apiserver-sa
    terminationGracePeriodSeconds: 90
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: audit-1
      name: audit-policies
    - name: etcd-client
      secret:
        defaultMode: 420
        secretName: etcd-client
    - configMap:
        defaultMode: 420
        name: etcd-serving-ca
      name: etcd-serving-ca
    - name: serving-cert
      secret:
        defaultMode: 420
        secretName: serving-cert
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca-bundle
        optional: true
      name: trusted-ca-bundle
    - name: encryption-config
      secret:
        defaultMode: 420
        optional: true
        secretName: encryption-config-1
    - hostPath:
        path: /var/log/oauth-apiserver
        type: ""
      name: audit-dir
    - name: kube-api-access-zcqkj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:00:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:00:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://52982ae44182df7b7bc27bc98b4a50d7659d8fa175fb6869045eefe7e67fe295
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      lastState:
        terminated:
          containerID: cri-o://25c22b656c0797a6447af12f173579001d8003d3f05cfe24624fec1a89db034b
          exitCode: 1
          finishedAt: "2024-06-11T10:58:51Z"
          message: |
            64] FLAG: --secure-port="8443"
            I0611 10:58:50.624049       1 flags.go:64] FLAG: --shutdown-delay-duration="15s"
            I0611 10:58:50.624052       1 flags.go:64] FLAG: --shutdown-send-retry-after="true"
            I0611 10:58:50.624055       1 flags.go:64] FLAG: --shutdown-watch-termination-grace-period="0s"
            I0611 10:58:50.624058       1 flags.go:64] FLAG: --storage-backend=""
            I0611 10:58:50.624062       1 flags.go:64] FLAG: --storage-media-type="application/json"
            I0611 10:58:50.624065       1 flags.go:64] FLAG: --strict-transport-security-directives="[]"
            I0611 10:58:50.624071       1 flags.go:64] FLAG: --tls-cert-file="/var/run/secrets/serving-cert/tls.crt"
            I0611 10:58:50.624075       1 flags.go:64] FLAG: --tls-cipher-suites="[TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256]"
            I0611 10:58:50.624085       1 flags.go:64] FLAG: --tls-min-version="VersionTLS12"
            I0611 10:58:50.624091       1 flags.go:64] FLAG: --tls-private-key-file="/var/run/secrets/serving-cert/tls.key"
            I0611 10:58:50.624095       1 flags.go:64] FLAG: --tls-sni-cert-key="[]"
            I0611 10:58:50.624102       1 flags.go:64] FLAG: --tracing-config-file=""
            I0611 10:58:50.624107       1 flags.go:64] FLAG: --v="2"
            I0611 10:58:50.624114       1 flags.go:64] FLAG: --vmodule=""
            I0611 10:58:50.624120       1 flags.go:64] FLAG: --watch-cache="true"
            I0611 10:58:50.624124       1 flags.go:64] FLAG: --watch-cache-sizes="[]"
            I0611 10:58:50.637894       1 dynamic_serving_content.go:113] "Loaded a new cert/key pair" name="serving-cert::/var/run/secrets/serving-cert/tls.crt::/var/run/secrets/serving-cert/tls.key"
            E0611 10:58:51.222849       1 run.go:74] "command failed" err="unable to load configmap based request-header-client-ca-file: Get \"https://172.30.0.1:443/api/v1/namespaces/kube-system/configmaps/extension-apiserver-authentication\": dial tcp 172.30.0.1:443: connect: connection refused"
          reason: Error
          startedAt: "2024-06-11T10:58:50Z"
      name: oauth-apiserver
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:00:23Z"
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    initContainerStatuses:
    - containerID: cri-o://e5b383fe5073ac114e62b6cf1ffc30af72a08bcd90155c214c99bf72206616b2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      lastState: {}
      name: fix-audit-permissions
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e5b383fe5073ac114e62b6cf1ffc30af72a08bcd90155c214c99bf72206616b2
          exitCode: 0
          finishedAt: "2024-06-11T10:57:21Z"
          reason: Completed
          startedAt: "2024-06-11T10:57:21Z"
    phase: Running
    podIP: 10.129.0.62
    podIPs:
    - ip: 10.129.0.62
    qosClass: Burstable
    startTime: "2024-06-11T10:57:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.55/23"],"mac_address":"0a:58:0a:82:00:37","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.55/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.55"
            ],
            "mac": "0a:58:0a:82:00:37",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: 3c-yJg==
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: RrQ2Zw==
    creationTimestamp: "2024-06-11T11:00:27Z"
    generateName: apiserver-f74744fc5-
    labels:
      apiserver: "true"
      app: openshift-oauth-apiserver
      oauth-apiserver-anti-affinity: "true"
      pod-template-hash: f74744fc5
      revision: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:oauth-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f4925ce3-3e61-4ac4-8910-5375865d0862"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"oauth-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/audit"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/encryption-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/etcd-client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"fix-audit-permissions"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"audit-policies"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"encryption-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"etcd-client"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"etcd-serving-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:00:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2024-06-11T11:00:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-master-2
      operation: Update
      subresource: status
      time: "2024-06-11T11:00:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:00:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.55"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:06:25Z"
    name: apiserver-f74744fc5-d2ds7
    namespace: openshift-oauth-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apiserver-f74744fc5
      uid: f4925ce3-3e61-4ac4-8910-5375865d0862
    resourceVersion: "24716"
    uid: 3d727fad-7027-4130-8779-4ccdfe4fffb1
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              apiserver: "true"
              app: openshift-oauth-apiserver
              oauth-apiserver-anti-affinity: "true"
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - |
        if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
          echo "Copying system trust bundle"
          cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi
        exec oauth-apiserver start \
          --secure-port=8443 \
          --audit-log-path=/var/log/oauth-apiserver/audit.log \
          --audit-log-format=json \
          --audit-log-maxsize=100 \
          --audit-log-maxbackup=10 \
          --audit-policy-file=/var/run/configmaps/audit/policy.yaml \
          --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \
          --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \
          --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \
          --shutdown-delay-duration=15s \
          --shutdown-send-retry-after=true \
          --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \
          --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \
          --enable-priority-and-fairness=false \
          --api-audiences=https://kubernetes.default.svc \
          --cors-allowed-origins='//127\.0\.0\.1(:|$)' \
          --cors-allowed-origins='//localhost(:|$)' \
          --etcd-servers=https://10.0.0.6:2379 \
          --etcd-servers=https://10.0.0.7:2379 \
          --etcd-servers=https://10.0.0.8:2379 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-min-version=VersionTLS12 \
          --v=2
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: oauth-apiserver
      ports:
      - containerPort: 8443
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 150m
          memory: 200Mi
      securityContext:
        privileged: true
        runAsUser: 0
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/audit
        name: audit-policies
      - mountPath: /var/run/secrets/etcd-client
        name: etcd-client
      - mountPath: /var/run/configmaps/etcd-serving-ca
        name: etcd-serving-ca
      - mountPath: /var/run/configmaps/trusted-ca-bundle
        name: trusted-ca-bundle
      - mountPath: /var/run/secrets/serving-cert
        name: serving-cert
      - mountPath: /var/run/secrets/encryption-config
        name: encryption-config
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jqhm5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log
        && chmod 0600 /var/log/oauth-apiserver/*
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imagePullPolicy: IfNotPresent
      name: fix-audit-permissions
      resources:
        requests:
          cpu: 15m
          memory: 50Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jqhm5
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-2
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: oauth-apiserver-sa
    serviceAccountName: oauth-apiserver-sa
    terminationGracePeriodSeconds: 90
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: audit-1
      name: audit-policies
    - name: etcd-client
      secret:
        defaultMode: 420
        secretName: etcd-client
    - configMap:
        defaultMode: 420
        name: etcd-serving-ca
      name: etcd-serving-ca
    - name: serving-cert
      secret:
        defaultMode: 420
        secretName: serving-cert
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca-bundle
        optional: true
      name: trusted-ca-bundle
    - name: encryption-config
      secret:
        defaultMode: 420
        optional: true
        secretName: encryption-config-1
    - hostPath:
        path: /var/log/oauth-apiserver
        type: ""
      name: audit-dir
    - name: kube-api-access-jqhm5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:00:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:00:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:06:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:06:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:00:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://3201184e72e7ef359d9cd56b14f1d29399c63c93315343cb3a7f5b66e47f9675
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      lastState: {}
      name: oauth-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:00:46Z"
    hostIP: 10.0.0.7
    hostIPs:
    - ip: 10.0.0.7
    initContainerStatuses:
    - containerID: cri-o://d4429686c1eefa7a6d2c2c407c650831ad2909df9eda8671b34e46a10fcb2fd1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      lastState: {}
      name: fix-audit-permissions
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://d4429686c1eefa7a6d2c2c407c650831ad2909df9eda8671b34e46a10fcb2fd1
          exitCode: 0
          finishedAt: "2024-06-11T11:00:43Z"
          reason: Completed
          startedAt: "2024-06-11T11:00:43Z"
    phase: Running
    podIP: 10.130.0.55
    podIPs:
    - ip: 10.130.0.55
    qosClass: Burstable
    startTime: "2024-06-11T11:00:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.42/23"],"mac_address":"0a:58:0a:80:00:2a","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.42/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.42"
            ],
            "mac": "0a:58:0a:80:00:2a",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: 3c-yJg==
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: RrQ2Zw==
    creationTimestamp: "2024-06-11T10:53:36Z"
    generateName: apiserver-f74744fc5-
    labels:
      apiserver: "true"
      app: openshift-oauth-apiserver
      oauth-apiserver-anti-affinity: "true"
      pod-template-hash: f74744fc5
      revision: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:oauth-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f4925ce3-3e61-4ac4-8910-5375865d0862"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"oauth-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/audit"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/encryption-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/etcd-client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"fix-audit-permissions"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"audit-policies"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"encryption-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"etcd-client"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"etcd-serving-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:53:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2024-06-11T10:53:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-master-0
      operation: Update
      subresource: status
      time: "2024-06-11T10:53:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T10:53:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.42"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:57:03Z"
    name: apiserver-f74744fc5-xrzm4
    namespace: openshift-oauth-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apiserver-f74744fc5
      uid: f4925ce3-3e61-4ac4-8910-5375865d0862
    resourceVersion: "19355"
    uid: 89e97185-b8d4-4311-b124-2a3b01cf4387
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              apiserver: "true"
              app: openshift-oauth-apiserver
              oauth-apiserver-anti-affinity: "true"
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - |
        if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
          echo "Copying system trust bundle"
          cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi
        exec oauth-apiserver start \
          --secure-port=8443 \
          --audit-log-path=/var/log/oauth-apiserver/audit.log \
          --audit-log-format=json \
          --audit-log-maxsize=100 \
          --audit-log-maxbackup=10 \
          --audit-policy-file=/var/run/configmaps/audit/policy.yaml \
          --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \
          --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \
          --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \
          --shutdown-delay-duration=15s \
          --shutdown-send-retry-after=true \
          --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \
          --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \
          --enable-priority-and-fairness=false \
          --api-audiences=https://kubernetes.default.svc \
          --cors-allowed-origins='//127\.0\.0\.1(:|$)' \
          --cors-allowed-origins='//localhost(:|$)' \
          --etcd-servers=https://10.0.0.6:2379 \
          --etcd-servers=https://10.0.0.7:2379 \
          --etcd-servers=https://10.0.0.8:2379 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-min-version=VersionTLS12 \
          --v=2
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: oauth-apiserver
      ports:
      - containerPort: 8443
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 150m
          memory: 200Mi
      securityContext:
        privileged: true
        runAsUser: 0
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/audit
        name: audit-policies
      - mountPath: /var/run/secrets/etcd-client
        name: etcd-client
      - mountPath: /var/run/configmaps/etcd-serving-ca
        name: etcd-serving-ca
      - mountPath: /var/run/configmaps/trusted-ca-bundle
        name: trusted-ca-bundle
      - mountPath: /var/run/secrets/serving-cert
        name: serving-cert
      - mountPath: /var/run/secrets/encryption-config
        name: encryption-config
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s7cdc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log
        && chmod 0600 /var/log/oauth-apiserver/*
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imagePullPolicy: IfNotPresent
      name: fix-audit-permissions
      resources:
        requests:
          cpu: 15m
          memory: 50Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s7cdc
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-0
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: oauth-apiserver-sa
    serviceAccountName: oauth-apiserver-sa
    terminationGracePeriodSeconds: 90
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: audit-1
      name: audit-policies
    - name: etcd-client
      secret:
        defaultMode: 420
        secretName: etcd-client
    - configMap:
        defaultMode: 420
        name: etcd-serving-ca
      name: etcd-serving-ca
    - name: serving-cert
      secret:
        defaultMode: 420
        secretName: serving-cert
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca-bundle
        optional: true
      name: trusted-ca-bundle
    - name: encryption-config
      secret:
        defaultMode: 420
        optional: true
        secretName: encryption-config-1
    - hostPath:
        path: /var/log/oauth-apiserver
        type: ""
      name: audit-dir
    - name: kube-api-access-s7cdc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:53:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:53:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:57:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:53:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://157ba9fb12baa840f2a9cb553c7f5a7a25df2aabc9b6ff52a70ae6bec1cd3b81
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      lastState:
        terminated:
          containerID: cri-o://7cf63cd0830aa37afc050db0fcc6c14875983d3c985ee3b980a4c93414ca1919
          exitCode: 1
          finishedAt: "2024-06-11T10:55:35Z"
          message: |
            64] FLAG: --secure-port="8443"
            I0611 10:55:35.401250       1 flags.go:64] FLAG: --shutdown-delay-duration="15s"
            I0611 10:55:35.401253       1 flags.go:64] FLAG: --shutdown-send-retry-after="true"
            I0611 10:55:35.401257       1 flags.go:64] FLAG: --shutdown-watch-termination-grace-period="0s"
            I0611 10:55:35.401261       1 flags.go:64] FLAG: --storage-backend=""
            I0611 10:55:35.401264       1 flags.go:64] FLAG: --storage-media-type="application/json"
            I0611 10:55:35.401267       1 flags.go:64] FLAG: --strict-transport-security-directives="[]"
            I0611 10:55:35.401272       1 flags.go:64] FLAG: --tls-cert-file="/var/run/secrets/serving-cert/tls.crt"
            I0611 10:55:35.401276       1 flags.go:64] FLAG: --tls-cipher-suites="[TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256]"
            I0611 10:55:35.401286       1 flags.go:64] FLAG: --tls-min-version="VersionTLS12"
            I0611 10:55:35.401292       1 flags.go:64] FLAG: --tls-private-key-file="/var/run/secrets/serving-cert/tls.key"
            I0611 10:55:35.401299       1 flags.go:64] FLAG: --tls-sni-cert-key="[]"
            I0611 10:55:35.401307       1 flags.go:64] FLAG: --tracing-config-file=""
            I0611 10:55:35.401314       1 flags.go:64] FLAG: --v="2"
            I0611 10:55:35.401320       1 flags.go:64] FLAG: --vmodule=""
            I0611 10:55:35.401329       1 flags.go:64] FLAG: --watch-cache="true"
            I0611 10:55:35.401336       1 flags.go:64] FLAG: --watch-cache-sizes="[]"
            I0611 10:55:35.415015       1 dynamic_serving_content.go:113] "Loaded a new cert/key pair" name="serving-cert::/var/run/secrets/serving-cert/tls.crt::/var/run/secrets/serving-cert/tls.key"
            E0611 10:55:35.733483       1 run.go:74] "command failed" err="unable to load configmap based request-header-client-ca-file: Get \"https://172.30.0.1:443/api/v1/namespaces/kube-system/configmaps/extension-apiserver-authentication\": dial tcp 172.30.0.1:443: connect: connection refused"
          reason: Error
          startedAt: "2024-06-11T10:55:35Z"
      name: oauth-apiserver
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:56:58Z"
    hostIP: 10.0.0.8
    hostIPs:
    - ip: 10.0.0.8
    initContainerStatuses:
    - containerID: cri-o://21484d80ae3c940c0ba63ce812e3cc307d3d6c77ec7fe9060ff2afd7fd35e4a9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca16980fc0e2808b2bab35cc848ad16da6f79e43fd4cacf17d77d98c0d581d02
      lastState: {}
      name: fix-audit-permissions
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://21484d80ae3c940c0ba63ce812e3cc307d3d6c77ec7fe9060ff2afd7fd35e4a9
          exitCode: 0
          finishedAt: "2024-06-11T10:53:58Z"
          reason: Completed
          startedAt: "2024-06-11T10:53:58Z"
    phase: Running
    podIP: 10.128.0.42
    podIPs:
    - ip: 10.128.0.42
    qosClass: Burstable
    startTime: "2024-06-11T10:53:57Z"
kind: PodList
metadata:
  resourceVersion: "39838"
