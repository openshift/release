---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.16/23"],"mac_address":"0a:58:0a:80:02:10","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.16/23","gateway_ip":"10.128.2.1"}}'
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.128.2.16"
          ],
          "mac": "0a:58:0a:80:02:10",
          "default": true,
          "dns": {}
      }]
    kubectl.kubernetes.io/default-container: prometheus
    openshift.io/required-scc: nonroot
    openshift.io/scc: nonroot
  creationTimestamp: "2024-06-11T11:11:38Z"
  generateName: prometheus-k8s-
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/managed-by: prometheus-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: openshift-monitoring
    app.kubernetes.io/version: 2.52.0
    apps.kubernetes.io/pod-index: "1"
    controller-revision-hash: prometheus-k8s-7bcf46c49f
    operator.prometheus.io/name: k8s
    operator.prometheus.io/shard: "0"
    prometheus: k8s
    statefulset.kubernetes.io/pod-name: prometheus-k8s-1
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/default-container: {}
          f:openshift.io/required-scc: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:app.kubernetes.io/version: {}
          f:apps.kubernetes.io/pod-index: {}
          f:controller-revision-hash: {}
          f:operator.prometheus.io/name: {}
          f:operator.prometheus.io/shard: {}
          f:prometheus: {}
          f:statefulset.kubernetes.io/pod-name: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"dd29a391-af20-4668-8329-0fe332c6aa9b"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:podAntiAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:automountServiceAccountToken: {}
        f:containers:
          k:{"name":"config-reloader"}:
            .: {}
            f:args: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"POD_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"SHARD"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/prometheus/config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/prometheus/config_out"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
                f:subPath: {}
          k:{"name":"kube-rbac-proxy"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":9092,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/kube-rbac-proxy"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/tls/client"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/tls/private"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"kube-rbac-proxy-thanos"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"POD_IP"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":10903,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/kube-rbac-proxy"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/tls/client"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/tls/private"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
          k:{"name":"kube-rbac-proxy-web"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":9091,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/kube-rbac-proxy"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/tls/private"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"prometheus"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:readinessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
            f:startupProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/prometheus/certs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/prometheus/config_out"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/prometheus/configmaps/kubelet-serving-ca-bundle"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/prometheus/configmaps/metrics-client-ca"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/prometheus/configmaps/serving-certs-ca-bundle"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/prometheus/secrets/kube-rbac-proxy"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/prometheus/secrets/metrics-client-certs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-kube-rbac-proxy-web"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-tls"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
                f:subPath: {}
              k:{"mountPath":"/prometheus"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:subPath: {}
          k:{"name":"thanos-sidecar"}:
            .: {}
            f:args: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":10901,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
              k:{"containerPort":10902,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/tls/grpc"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostname: {}
        f:initContainers:
          .: {}
          k:{"name":"init-config-reloader"}:
            .: {}
            f:args: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"POD_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"SHARD"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8080,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/prometheus/config"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/prometheus/config_out"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
                f:subPath: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:fsGroup: {}
          f:runAsNonRoot: {}
          f:runAsUser: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:shareProcessNamespace: {}
        f:subdomain: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"config"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"config-out"}:
            .: {}
            f:emptyDir:
              .: {}
              f:medium: {}
            f:name: {}
          k:{"name":"configmap-kubelet-serving-ca-bundle"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"configmap-metrics-client-ca"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"configmap-serving-certs-ca-bundle"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"prometheus-data"}:
            .: {}
            f:name: {}
            f:persistentVolumeClaim:
              .: {}
              f:claimName: {}
          k:{"name":"prometheus-k8s-rulefiles-0"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"prometheus-trusted-ca-bundle"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:name: {}
            f:name: {}
          k:{"name":"secret-grpc-tls"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"secret-kube-rbac-proxy"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"secret-metrics-client-certs"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"secret-prometheus-k8s-kube-rbac-proxy-web"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"secret-prometheus-k8s-thanos-sidecar-tls"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"secret-prometheus-k8s-tls"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"tls-assets"}:
            .: {}
            f:name: {}
            f:projected:
              .: {}
              f:defaultMode: {}
              f:sources: {}
          k:{"name":"web-config"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2024-06-11T11:11:38Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.ovn.org/pod-networks: {}
    manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    operation: Update
    subresource: status
    time: "2024-06-11T11:11:41Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.v1.cni.cncf.io/network-status: {}
    manager: multus-daemon
    operation: Update
    subresource: status
    time: "2024-06-11T11:11:52Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:initContainerStatuses: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.128.2.16"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2024-06-11T11:12:52Z"
  name: prometheus-k8s-1
  namespace: openshift-monitoring
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: prometheus-k8s
    uid: dd29a391-af20-4668-8329-0fe332c6aa9b
  resourceVersion: "32070"
  uid: 8d11db17-2123-4894-b38f-7aaf77263ed9
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            app.kubernetes.io/component: prometheus
            app.kubernetes.io/instance: k8s
            app.kubernetes.io/name: prometheus
            app.kubernetes.io/part-of: openshift-monitoring
        namespaces:
        - openshift-monitoring
        topologyKey: kubernetes.io/hostname
  automountServiceAccountToken: true
  containers:
  - args:
    - --web.console.templates=/etc/prometheus/consoles
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
    - --web.enable-lifecycle
    - --web.external-url=https://console-openshift-console.apps.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com/monitoring
    - --web.route-prefix=/
    - --web.listen-address=127.0.0.1:9090
    - --storage.tsdb.retention.time=15d
    - --storage.tsdb.path=/prometheus
    - --web.config.file=/etc/prometheus/web_config/web-config.yaml
    - --scrape.timestamp-tolerance=15ms
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e3ff0220509aee666082ff1316ade676d06a1f7167b2feba51d2ae64e7bb8e7
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - sh
        - -c
        - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/healthy;
          elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/healthy;
          else exit 1; fi
      failureThreshold: 6
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 3
    name: prometheus
    readinessProbe:
      exec:
        command:
        - sh
        - -c
        - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/ready;
          elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
          else exit 1; fi
      failureThreshold: 3
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 3
    resources:
      requests:
        cpu: 70m
        memory: 1Gi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
        - KILL
        - MKNOD
        - SETGID
        - SETUID
      readOnlyRootFilesystem: true
    startupProbe:
      exec:
        command:
        - sh
        - -c
        - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/ready;
          elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
          else exit 1; fi
      failureThreshold: 60
      periodSeconds: 60
      successThreshold: 1
      timeoutSeconds: 3
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/pki/ca-trust/extracted/pem/
      name: prometheus-trusted-ca-bundle
    - mountPath: /etc/prometheus/config_out
      name: config-out
      readOnly: true
    - mountPath: /etc/prometheus/certs
      name: tls-assets
      readOnly: true
    - mountPath: /prometheus
      name: prometheus-data
      subPath: prometheus-db
    - mountPath: /etc/prometheus/secrets/prometheus-k8s-tls
      name: secret-prometheus-k8s-tls
      readOnly: true
    - mountPath: /etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls
      name: secret-prometheus-k8s-thanos-sidecar-tls
      readOnly: true
    - mountPath: /etc/prometheus/secrets/kube-rbac-proxy
      name: secret-kube-rbac-proxy
      readOnly: true
    - mountPath: /etc/prometheus/secrets/prometheus-k8s-kube-rbac-proxy-web
      name: secret-prometheus-k8s-kube-rbac-proxy-web
      readOnly: true
    - mountPath: /etc/prometheus/secrets/metrics-client-certs
      name: secret-metrics-client-certs
      readOnly: true
    - mountPath: /etc/prometheus/configmaps/serving-certs-ca-bundle
      name: configmap-serving-certs-ca-bundle
      readOnly: true
    - mountPath: /etc/prometheus/configmaps/kubelet-serving-ca-bundle
      name: configmap-kubelet-serving-ca-bundle
      readOnly: true
    - mountPath: /etc/prometheus/configmaps/metrics-client-ca
      name: configmap-metrics-client-ca
      readOnly: true
    - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
      name: prometheus-k8s-rulefiles-0
    - mountPath: /etc/prometheus/web_config/web-config.yaml
      name: web-config
      readOnly: true
      subPath: web-config.yaml
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-n992j
      readOnly: true
  - args:
    - --listen-address=localhost:8080
    - --web-config-file=/etc/prometheus/web_config/web-config.yaml
    - --reload-url=http://localhost:9090/-/reload
    - --config-file=/etc/prometheus/config/prometheus.yaml.gz
    - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
    - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
    command:
    - /bin/prometheus-config-reloader
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: SHARD
      value: "0"
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
    imagePullPolicy: IfNotPresent
    name: config-reloader
    resources:
      requests:
        cpu: 1m
        memory: 10Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
        - KILL
        - MKNOD
        - SETGID
        - SETUID
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/prometheus/config
      name: config
    - mountPath: /etc/prometheus/config_out
      name: config-out
    - mountPath: /etc/prometheus/web_config/web-config.yaml
      name: web-config
      readOnly: true
      subPath: web-config.yaml
    - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
      name: prometheus-k8s-rulefiles-0
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-n992j
      readOnly: true
  - args:
    - sidecar
    - --prometheus.url=http://localhost:9090/
    - --tsdb.path=/prometheus
    - --http-address=127.0.0.1:10902
    - --grpc-server-tls-cert=/etc/tls/grpc/server.crt
    - --grpc-server-tls-key=/etc/tls/grpc/server.key
    - --grpc-server-tls-client-ca=/etc/tls/grpc/ca.crt
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
    imagePullPolicy: IfNotPresent
    name: thanos-sidecar
    ports:
    - containerPort: 10902
      name: http
      protocol: TCP
    - containerPort: 10901
      name: grpc
      protocol: TCP
    resources:
      requests:
        cpu: 1m
        memory: 25Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
        - KILL
        - MKNOD
        - SETGID
        - SETUID
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/tls/grpc
      name: secret-grpc-tls
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-n992j
      readOnly: true
  - args:
    - --secure-listen-address=0.0.0.0:9091
    - --upstream=http://127.0.0.1:9090
    - --config-file=/etc/kube-rbac-proxy/config.yaml
    - --tls-cert-file=/etc/tls/private/tls.crt
    - --tls-private-key-file=/etc/tls/private/tls.key
    - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
    - --ignore-paths=/-/healthy,/-/ready
    - --tls-min-version=VersionTLS12
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy-web
    ports:
    - containerPort: 9091
      name: web
      protocol: TCP
    resources:
      requests:
        cpu: 1m
        memory: 15Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
        - KILL
        - MKNOD
        - SETGID
        - SETUID
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/tls/private
      name: secret-prometheus-k8s-tls
    - mountPath: /etc/kube-rbac-proxy
      name: secret-prometheus-k8s-kube-rbac-proxy-web
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-n992j
      readOnly: true
  - args:
    - --secure-listen-address=0.0.0.0:9092
    - --upstream=http://127.0.0.1:9090
    - --allow-paths=/metrics,/federate
    - --config-file=/etc/kube-rbac-proxy/config.yaml
    - --tls-cert-file=/etc/tls/private/tls.crt
    - --tls-private-key-file=/etc/tls/private/tls.key
    - --client-ca-file=/etc/tls/client/client-ca.crt
    - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
    - --tls-min-version=VersionTLS12
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy
    ports:
    - containerPort: 9092
      name: metrics
      protocol: TCP
    resources:
      requests:
        cpu: 1m
        memory: 15Mi
    securityContext:
      capabilities:
        drop:
        - KILL
        - MKNOD
        - SETGID
        - SETUID
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/tls/private
      name: secret-prometheus-k8s-tls
    - mountPath: /etc/tls/client
      name: configmap-metrics-client-ca
      readOnly: true
    - mountPath: /etc/kube-rbac-proxy
      name: secret-kube-rbac-proxy
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-n992j
      readOnly: true
  - args:
    - --secure-listen-address=[$(POD_IP)]:10903
    - --upstream=http://127.0.0.1:10902
    - --tls-cert-file=/etc/tls/private/tls.crt
    - --tls-private-key-file=/etc/tls/private/tls.key
    - --client-ca-file=/etc/tls/client/client-ca.crt
    - --config-file=/etc/kube-rbac-proxy/config.yaml
    - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
    - --allow-paths=/metrics
    - --logtostderr=true
    - --tls-min-version=VersionTLS12
    env:
    - name: POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy-thanos
    ports:
    - containerPort: 10903
      name: thanos-proxy
      protocol: TCP
    resources:
      requests:
        cpu: 1m
        memory: 10Mi
    securityContext:
      capabilities:
        drop:
        - KILL
        - MKNOD
        - SETGID
        - SETUID
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/tls/private
      name: secret-prometheus-k8s-thanos-sidecar-tls
      readOnly: true
    - mountPath: /etc/kube-rbac-proxy
      name: secret-kube-rbac-proxy
      readOnly: true
    - mountPath: /etc/tls/client
      name: configmap-metrics-client-ca
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-n992j
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: prometheus-k8s-1
  imagePullSecrets:
  - name: prometheus-k8s-dockercfg-m9qxf
  initContainers:
  - args:
    - --watch-interval=0
    - --listen-address=:8080
    - --config-file=/etc/prometheus/config/prometheus.yaml.gz
    - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
    - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
    command:
    - /bin/prometheus-config-reloader
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: SHARD
      value: "0"
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
    imagePullPolicy: IfNotPresent
    name: init-config-reloader
    ports:
    - containerPort: 8080
      name: reloader-web
      protocol: TCP
    resources:
      requests:
        cpu: 1m
        memory: 10Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
        - KILL
        - MKNOD
        - SETGID
        - SETUID
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /etc/prometheus/config
      name: config
    - mountPath: /etc/prometheus/config_out
      name: config-out
    - mountPath: /etc/prometheus/web_config/web-config.yaml
      name: web-config
      readOnly: true
      subPath: web-config.yaml
    - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
      name: prometheus-k8s-rulefiles-0
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-n992j
      readOnly: true
  nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
    seLinuxOptions:
      level: s0:c21,c15
  serviceAccount: prometheus-k8s
  serviceAccountName: prometheus-k8s
  shareProcessNamespace: false
  subdomain: prometheus-operated
  terminationGracePeriodSeconds: 600
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: prometheus-data
    persistentVolumeClaim:
      claimName: prometheus-data-prometheus-k8s-1
  - name: config
    secret:
      defaultMode: 420
      secretName: prometheus-k8s
  - name: tls-assets
    projected:
      defaultMode: 420
      sources:
      - secret:
          name: prometheus-k8s-tls-assets-0
  - emptyDir:
      medium: Memory
    name: config-out
  - name: secret-prometheus-k8s-tls
    secret:
      defaultMode: 420
      secretName: prometheus-k8s-tls
  - name: secret-prometheus-k8s-thanos-sidecar-tls
    secret:
      defaultMode: 420
      secretName: prometheus-k8s-thanos-sidecar-tls
  - name: secret-kube-rbac-proxy
    secret:
      defaultMode: 420
      secretName: kube-rbac-proxy
  - name: secret-prometheus-k8s-kube-rbac-proxy-web
    secret:
      defaultMode: 420
      secretName: prometheus-k8s-kube-rbac-proxy-web
  - name: secret-metrics-client-certs
    secret:
      defaultMode: 420
      secretName: metrics-client-certs
  - configMap:
      defaultMode: 420
      name: serving-certs-ca-bundle
    name: configmap-serving-certs-ca-bundle
  - configMap:
      defaultMode: 420
      name: kubelet-serving-ca-bundle
    name: configmap-kubelet-serving-ca-bundle
  - configMap:
      defaultMode: 420
      name: metrics-client-ca
    name: configmap-metrics-client-ca
  - configMap:
      defaultMode: 420
      name: prometheus-k8s-rulefiles-0
    name: prometheus-k8s-rulefiles-0
  - name: web-config
    secret:
      defaultMode: 420
      secretName: prometheus-k8s-web-config
  - configMap:
      defaultMode: 420
      items:
      - key: ca-bundle.crt
        path: tls-ca-bundle.pem
      name: prometheus-trusted-ca-bundle
    name: prometheus-trusted-ca-bundle
  - name: secret-grpc-tls
    secret:
      defaultMode: 420
      secretName: prometheus-k8s-grpc-tls-9838dml7sm2ad
  - name: kube-api-access-n992j
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T11:11:55Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T11:11:55Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T11:12:52Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T11:12:52Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T11:11:41Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://812e61dc473c13d6ee1482d0b849d23f8ed9621ebca003b5e8ba5c8295015dba
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
    lastState: {}
    name: config-reloader
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T11:11:59Z"
  - containerID: cri-o://98525226b321d072af9662a5bbf5d6879d1d0189545c071f77c42f1beadc96b6
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
    lastState: {}
    name: kube-rbac-proxy
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T11:12:01Z"
  - containerID: cri-o://7b2596b207805c683e6ed6006b74be6bf36eb3865ee16bedafd9739976888d6d
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
    lastState: {}
    name: kube-rbac-proxy-thanos
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T11:12:01Z"
  - containerID: cri-o://171929d25424d4bacb597305903dd003e4b73823932688c69887a6b964f7d2d0
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
    lastState: {}
    name: kube-rbac-proxy-web
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T11:11:59Z"
  - containerID: cri-o://dd20781bba7a8447cd4840eb626d5404458f757ff62e167c9c3089888f258fd9
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e3ff0220509aee666082ff1316ade676d06a1f7167b2feba51d2ae64e7bb8e7
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e3ff0220509aee666082ff1316ade676d06a1f7167b2feba51d2ae64e7bb8e7
    lastState: {}
    name: prometheus
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T11:11:59Z"
  - containerID: cri-o://adb256fe1873a673e94ced85600965c2593efcba17f928503bc14c867931bfd3
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
    lastState: {}
    name: thanos-sidecar
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T11:11:59Z"
  hostIP: 10.0.128.6
  hostIPs:
  - ip: 10.0.128.6
  initContainerStatuses:
  - containerID: cri-o://0c863608ea16537d1ea6840e9008d3b76410588586906718d7023bcfae35fb02
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
    lastState: {}
    name: init-config-reloader
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://0c863608ea16537d1ea6840e9008d3b76410588586906718d7023bcfae35fb02
        exitCode: 0
        finishedAt: "2024-06-11T11:11:54Z"
        reason: Completed
        startedAt: "2024-06-11T11:11:54Z"
  phase: Running
  podIP: 10.128.2.16
  podIPs:
  - ip: 10.128.2.16
  qosClass: Burstable
  startTime: "2024-06-11T11:11:41Z"
