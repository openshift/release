---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.16/23"],"mac_address":"0a:58:0a:81:02:10","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.16/23","gateway_ip":"10.129.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.16"
            ],
            "mac": "0a:58:0a:81:02:10",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: alertmanager
      openshift.io/required-scc: nonroot
      openshift.io/scc: nonroot
    creationTimestamp: "2024-06-11T11:11:32Z"
    generateName: alertmanager-main-
    labels:
      alertmanager: main
      app.kubernetes.io/component: alert-router
      app.kubernetes.io/instance: main
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.26.0
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: alertmanager-main-576b9cb47
      statefulset.kubernetes.io/pod-name: alertmanager-main-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:alertmanager: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0f92faa5-1a9e-4e54-928a-d00a6574fa75"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"alertmanager"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9094,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9094,"protocol":"UDP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:startupProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/alertmanager"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-metric"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9097,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"kube-rbac-proxy-web"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9095,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"prom-label-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"init-config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"alertmanager-main-db"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"alertmanager-trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"config-out"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"config-volume"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-alertmanager-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-kube-rbac-proxy-metric"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-kube-rbac-proxy-web"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-main-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tls-assets"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"web-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:11:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.16"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:12:04Z"
    name: alertmanager-main-0
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: alertmanager-main
      uid: 0f92faa5-1a9e-4e54-928a-d00a6574fa75
    resourceVersion: "31690"
    uid: a1bb8452-ff8d-468e-ae1e-5cbfca853c2c
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: alert-router
              app.kubernetes.io/instance: main
              app.kubernetes.io/name: alertmanager
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --storage.path=/alertmanager
      - --data.retention=120h
      - --cluster.listen-address=[$(POD_IP)]:9094
      - --web.listen-address=127.0.0.1:9093
      - --web.external-url=https://console-openshift-console.apps.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com/monitoring
      - --web.route-prefix=/
      - --cluster.label=openshift-monitoring/main
      - --cluster.peer=alertmanager-main-0.alertmanager-operated:9094
      - --cluster.peer=alertmanager-main-1.alertmanager-operated:9094
      - --cluster.reconnect-timeout=5m
      - --web.config.file=/etc/alertmanager/web_config/web-config.yaml
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d1d10e2ca4e2a2c1e039e2ece57e28b13daec87608161983a77206ec28a87560
      imagePullPolicy: IfNotPresent
      name: alertmanager
      ports:
      - containerPort: 9094
        name: mesh-tcp
        protocol: TCP
      - containerPort: 9094
        name: mesh-udp
        protocol: UDP
      resources:
        requests:
          cpu: 4m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      startupProbe:
        exec:
          command:
          - sh
          - -c
          - exec curl --fail http://localhost:9093/-/ready
        failureThreshold: 40
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
      - mountPath: /etc/alertmanager/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/alertmanager/certs
        name: tls-assets
        readOnly: true
      - mountPath: /alertmanager
        name: alertmanager-main-db
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web
        name: secret-alertmanager-kube-rbac-proxy-web
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: alertmanager-trusted-ca-bundle
      - mountPath: /etc/alertmanager/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7bswj
        readOnly: true
    - args:
      - --listen-address=localhost:8080
      - --web-config-file=/etc/alertmanager/web_config/web-config.yaml
      - --reload-url=http://localhost:9093/-/reload
      - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
      - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --watched-dir=/etc/alertmanager/config
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-tls
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /etc/alertmanager/config_out
        name: config-out
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web
        name: secret-alertmanager-kube-rbac-proxy-web
        readOnly: true
      - mountPath: /etc/alertmanager/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7bswj
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9095
      - --upstream=http://127.0.0.1:9093
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --ignore-paths=/-/healthy,/-/ready
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-web
      ports:
      - containerPort: 9095
        name: web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy-web
        readOnly: true
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7bswj
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9096
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: tenancy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7bswj
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9097
      - --upstream=http://127.0.0.1:9093
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --allow-paths=/metrics
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-metric
      ports:
      - containerPort: 9097
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7bswj
        readOnly: true
    - args:
      - --insecure-listen-address=127.0.0.1:9096
      - --upstream=http://127.0.0.1:9093
      - --label=namespace
      - --error-on-replace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      imagePullPolicy: IfNotPresent
      name: prom-label-proxy
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7bswj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: alertmanager-main-0
    imagePullSecrets:
    - name: alertmanager-main-dockercfg-ndmg9
    initContainers:
    - args:
      - --watch-interval=0
      - --listen-address=:8080
      - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
      - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --watched-dir=/etc/alertmanager/config
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-tls
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imagePullPolicy: IfNotPresent
      name: init-config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /etc/alertmanager/config_out
        name: config-out
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web
        name: secret-alertmanager-kube-rbac-proxy-web
        readOnly: true
      - mountPath: /etc/alertmanager/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7bswj
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seLinuxOptions:
        level: s0:c21,c15
    serviceAccount: alertmanager-main
    serviceAccountName: alertmanager-main
    subdomain: alertmanager-operated
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: config-volume
      secret:
        defaultMode: 420
        secretName: alertmanager-main-generated
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: alertmanager-main-tls-assets-0
    - emptyDir:
        medium: Memory
      name: config-out
    - name: secret-alertmanager-main-tls
      secret:
        defaultMode: 420
        secretName: alertmanager-main-tls
    - name: secret-alertmanager-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: alertmanager-kube-rbac-proxy
    - name: secret-alertmanager-kube-rbac-proxy-metric
      secret:
        defaultMode: 420
        secretName: alertmanager-kube-rbac-proxy-metric
    - name: secret-alertmanager-kube-rbac-proxy-web
      secret:
        defaultMode: 420
        secretName: alertmanager-kube-rbac-proxy-web
    - name: web-config
      secret:
        defaultMode: 420
        secretName: alertmanager-main-web-config
    - emptyDir: {}
      name: alertmanager-main-db
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: alertmanager-trusted-ca-bundle
      name: alertmanager-trusted-ca-bundle
    - name: kube-api-access-7bswj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:12:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:12:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1b632536a5153b4b75e244b227e0bb48e7101da099aeb1ffccc62e569d0a84da
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d1d10e2ca4e2a2c1e039e2ece57e28b13daec87608161983a77206ec28a87560
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d1d10e2ca4e2a2c1e039e2ece57e28b13daec87608161983a77206ec28a87560
      lastState: {}
      name: alertmanager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:40Z"
    - containerID: cri-o://5d10c61e6fa23adf01ae51d3714abd7a760b5e5b66fd36798b6ad85dffaa960d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:41Z"
    - containerID: cri-o://c118e6031a31bdc2a7f54dc191c5981a37dc7927659cb64229b1a75579ad714e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:41Z"
    - containerID: cri-o://bc81cb35fcf8d292e62f0678d920b62894a147c50da6ec2364ba4d32f1a1d36b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-metric
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:41Z"
    - containerID: cri-o://58e06b858f665b6773e120fd3401b55d8bac0a8954cb7071612dc852edce939c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-web
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:41Z"
    - containerID: cri-o://d1fa5b81c385ff6e5e635ab17d50def12e7e2b1c5fbe170315e8f7d2a1cb41ab
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      lastState: {}
      name: prom-label-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:43Z"
    hostIP: 10.0.128.5
    hostIPs:
    - ip: 10.0.128.5
    initContainerStatuses:
    - containerID: cri-o://742dfa9c195666d342bd162713e88fd052fa9a818aa87480ad23ed3393cbceb1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      lastState: {}
      name: init-config-reloader
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://742dfa9c195666d342bd162713e88fd052fa9a818aa87480ad23ed3393cbceb1
          exitCode: 0
          finishedAt: "2024-06-11T11:11:37Z"
          reason: Completed
          startedAt: "2024-06-11T11:11:37Z"
    phase: Running
    podIP: 10.129.2.16
    podIPs:
    - ip: 10.129.2.16
    qosClass: Burstable
    startTime: "2024-06-11T11:11:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.15/23"],"mac_address":"0a:58:0a:83:00:0f","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.15/23","gateway_ip":"10.131.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.15"
            ],
            "mac": "0a:58:0a:83:00:0f",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: alertmanager
      openshift.io/required-scc: nonroot
      openshift.io/scc: nonroot
    creationTimestamp: "2024-06-11T11:11:32Z"
    generateName: alertmanager-main-
    labels:
      alertmanager: main
      app.kubernetes.io/component: alert-router
      app.kubernetes.io/instance: main
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.26.0
      apps.kubernetes.io/pod-index: "1"
      controller-revision-hash: alertmanager-main-576b9cb47
      statefulset.kubernetes.io/pod-name: alertmanager-main-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:alertmanager: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0f92faa5-1a9e-4e54-928a-d00a6574fa75"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"alertmanager"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9094,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9094,"protocol":"UDP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:startupProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/alertmanager"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-metric"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9097,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"kube-rbac-proxy-web"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9095,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"prom-label-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"init-config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"alertmanager-main-db"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"alertmanager-trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"config-out"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"config-volume"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-alertmanager-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-kube-rbac-proxy-metric"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-kube-rbac-proxy-web"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-main-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tls-assets"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"web-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:11:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.15"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:12:03Z"
    name: alertmanager-main-1
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: alertmanager-main
      uid: 0f92faa5-1a9e-4e54-928a-d00a6574fa75
    resourceVersion: "31677"
    uid: e8e87dbf-6575-4ec7-82bd-ed2ccc88e661
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: alert-router
              app.kubernetes.io/instance: main
              app.kubernetes.io/name: alertmanager
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --storage.path=/alertmanager
      - --data.retention=120h
      - --cluster.listen-address=[$(POD_IP)]:9094
      - --web.listen-address=127.0.0.1:9093
      - --web.external-url=https://console-openshift-console.apps.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com/monitoring
      - --web.route-prefix=/
      - --cluster.label=openshift-monitoring/main
      - --cluster.peer=alertmanager-main-0.alertmanager-operated:9094
      - --cluster.peer=alertmanager-main-1.alertmanager-operated:9094
      - --cluster.reconnect-timeout=5m
      - --web.config.file=/etc/alertmanager/web_config/web-config.yaml
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d1d10e2ca4e2a2c1e039e2ece57e28b13daec87608161983a77206ec28a87560
      imagePullPolicy: IfNotPresent
      name: alertmanager
      ports:
      - containerPort: 9094
        name: mesh-tcp
        protocol: TCP
      - containerPort: 9094
        name: mesh-udp
        protocol: UDP
      resources:
        requests:
          cpu: 4m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      startupProbe:
        exec:
          command:
          - sh
          - -c
          - exec curl --fail http://localhost:9093/-/ready
        failureThreshold: 40
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
      - mountPath: /etc/alertmanager/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/alertmanager/certs
        name: tls-assets
        readOnly: true
      - mountPath: /alertmanager
        name: alertmanager-main-db
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web
        name: secret-alertmanager-kube-rbac-proxy-web
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: alertmanager-trusted-ca-bundle
      - mountPath: /etc/alertmanager/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f4pnv
        readOnly: true
    - args:
      - --listen-address=localhost:8080
      - --web-config-file=/etc/alertmanager/web_config/web-config.yaml
      - --reload-url=http://localhost:9093/-/reload
      - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
      - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --watched-dir=/etc/alertmanager/config
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-tls
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /etc/alertmanager/config_out
        name: config-out
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web
        name: secret-alertmanager-kube-rbac-proxy-web
        readOnly: true
      - mountPath: /etc/alertmanager/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f4pnv
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9095
      - --upstream=http://127.0.0.1:9093
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --ignore-paths=/-/healthy,/-/ready
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-web
      ports:
      - containerPort: 9095
        name: web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy-web
        readOnly: true
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f4pnv
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9096
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: tenancy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f4pnv
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9097
      - --upstream=http://127.0.0.1:9093
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --allow-paths=/metrics
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-metric
      ports:
      - containerPort: 9097
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f4pnv
        readOnly: true
    - args:
      - --insecure-listen-address=127.0.0.1:9096
      - --upstream=http://127.0.0.1:9093
      - --label=namespace
      - --error-on-replace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      imagePullPolicy: IfNotPresent
      name: prom-label-proxy
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f4pnv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: alertmanager-main-1
    imagePullSecrets:
    - name: alertmanager-main-dockercfg-ndmg9
    initContainers:
    - args:
      - --watch-interval=0
      - --listen-address=:8080
      - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
      - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --watched-dir=/etc/alertmanager/config
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-tls
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imagePullPolicy: IfNotPresent
      name: init-config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /etc/alertmanager/config_out
        name: config-out
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-web
        name: secret-alertmanager-kube-rbac-proxy-web
        readOnly: true
      - mountPath: /etc/alertmanager/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f4pnv
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seLinuxOptions:
        level: s0:c21,c15
    serviceAccount: alertmanager-main
    serviceAccountName: alertmanager-main
    subdomain: alertmanager-operated
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: config-volume
      secret:
        defaultMode: 420
        secretName: alertmanager-main-generated
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: alertmanager-main-tls-assets-0
    - emptyDir:
        medium: Memory
      name: config-out
    - name: secret-alertmanager-main-tls
      secret:
        defaultMode: 420
        secretName: alertmanager-main-tls
    - name: secret-alertmanager-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: alertmanager-kube-rbac-proxy
    - name: secret-alertmanager-kube-rbac-proxy-metric
      secret:
        defaultMode: 420
        secretName: alertmanager-kube-rbac-proxy-metric
    - name: secret-alertmanager-kube-rbac-proxy-web
      secret:
        defaultMode: 420
        secretName: alertmanager-kube-rbac-proxy-web
    - name: web-config
      secret:
        defaultMode: 420
        secretName: alertmanager-main-web-config
    - emptyDir: {}
      name: alertmanager-main-db
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: alertmanager-trusted-ca-bundle
      name: alertmanager-trusted-ca-bundle
    - name: kube-api-access-f4pnv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:12:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:12:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://53f449f36dcf98e7ed6fc30eb7d2398da619bb366952f959c42fa84a2d27c87a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d1d10e2ca4e2a2c1e039e2ece57e28b13daec87608161983a77206ec28a87560
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d1d10e2ca4e2a2c1e039e2ece57e28b13daec87608161983a77206ec28a87560
      lastState: {}
      name: alertmanager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:40Z"
    - containerID: cri-o://7ec782c070d7bc2717b58829f9f2450c9facc5d59ecd21819bce5fbbf52a83b2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:40Z"
    - containerID: cri-o://e7751314f49d1ece280e4170a9421344db6c28e94bf9a5f3dce00a12dbbed11f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:41Z"
    - containerID: cri-o://f6f345b80180a2088ed4901f945b2bf96de16c9127d6af97cff626a9831a0b61
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-metric
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:41Z"
    - containerID: cri-o://6d07a3f592f9e0ff36ed4d1e0830579faaf2a935055c962aa1afc1b8c21a212a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-web
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:40Z"
    - containerID: cri-o://b92b3568ef2205f8e534ee843aff52e249b3a1b181ac5685562a04dcebfe4b95
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      lastState: {}
      name: prom-label-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:41Z"
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    initContainerStatuses:
    - containerID: cri-o://8df93cd8d803f4d6e49275d08f269407670a0f6ac271aba18457e1205842e9a5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      lastState: {}
      name: init-config-reloader
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://8df93cd8d803f4d6e49275d08f269407670a0f6ac271aba18457e1205842e9a5
          exitCode: 0
          finishedAt: "2024-06-11T11:11:36Z"
          reason: Completed
          startedAt: "2024-06-11T11:11:36Z"
    phase: Running
    podIP: 10.131.0.15
    podIPs:
    - ip: 10.131.0.15
    qosClass: Burstable
    startTime: "2024-06-11T11:11:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.37/23"],"mac_address":"0a:58:0a:81:00:25","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.37/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.37"
            ],
            "mac": "0a:58:0a:81:00:25",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T10:46:48Z"
    generateName: cluster-monitoring-operator-799db46f99-
    labels:
      app: cluster-monitoring-operator
      app.kubernetes.io/name: cluster-monitoring-operator
      pod-template-hash: 799db46f99
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f4709739-1561-48a6-bc80-acc839e32283"}: {}
        f:spec:
          f:containers:
            k:{"name":"cluster-monitoring-operator"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RELEASE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/cluster-monitoring-operator/telemetry"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cluster-monitoring-operator-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"telemetry-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:46:48Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2024-06-11T10:46:48Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-master-1
      operation: Update
      subresource: status
      time: "2024-06-11T10:48:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T10:49:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.37"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T10:49:23Z"
    name: cluster-monitoring-operator-799db46f99-r6f42
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cluster-monitoring-operator-799db46f99
      uid: f4709739-1561-48a6-bc80-acc839e32283
    resourceVersion: "10394"
    uid: b6e1e292-1485-4d79-8992-adce0499b8eb
  spec:
    containers:
    - args:
      - -namespace=openshift-monitoring
      - -namespace-user-workload=openshift-user-workload-monitoring
      - -configmap=cluster-monitoring-config
      - -release-version=$(RELEASE_VERSION)
      - -logtostderr=true
      - -v=2
      - -cert-file=/etc/tls/private/tls.crt
      - -key-file=/etc/tls/private/tls.key
      - -images=prometheus-operator=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fcb3b0af68cb042fa56c1eac2be34b4ff2d766e2c8e4d769349b5a8b4bfff37e
      - -images=prometheus-config-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      - -images=prometheus-operator-admission-webhook=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c9cb2094942cf6eba4ae69c856e11222e922ad4d839506d3e95913b068ec88c3
      - -images=configmap-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f3902416479cefeb73ede1ead32b35bb91d0c54eb9ec0dd7c0181c82e7764d27
      - -images=prometheus=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e3ff0220509aee666082ff1316ade676d06a1f7167b2feba51d2ae64e7bb8e7
      - -images=alertmanager=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d1d10e2ca4e2a2c1e039e2ece57e28b13daec87608161983a77206ec28a87560
      - -images=oauth-proxy=quay.io/openshift/origin-oauth-proxy:latest
      - -images=node-exporter=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      - -images=kube-state-metrics=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b9279ce7b6bdf993e9b37924ece65982b806475f0a633ef2eae1c5c960e5e1d
      - -images=openshift-state-metrics=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fa7ef88f868ac71e4ef7fddd109c920efaece57f089e237830b24b9c256c8ba4
      - -images=kube-rbac-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      - -images=telemeter-client=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5cf343fbff230391d5154834041903600727dc2c63d0af07f766528647950410
      - -images=prom-label-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      - -images=k8s-prometheus-adapter=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:18941a8f54b1f356a1baa4435259ccdb9d7606da0cec401858050c0d70816697
      - -images=thanos=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      - -images=monitoring-plugin=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e916b5de7af0f8bd07324259867f42b1f21e7a5d6445d06c0f0d857a6a084acf
      - -images=kube-metrics-server=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c6a174cf59840331f2295deb5660fa1b584671c086c1ad64ce572cc5aad54c50
      env:
      - name: RELEASE_VERSION
        value: 4.16.0-0.nightly-2024-06-10-211334
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d07a4a7e6f001e827895fd370373d91a4912e737b9c7bd56ad9e3aa2bdcd6349
      imagePullPolicy: IfNotPresent
      name: cluster-monitoring-operator
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 75Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: cluster-monitoring-operator-tls
        readOnly: true
      - mountPath: /etc/cluster-monitoring-operator/telemetry
        name: telemetry-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-98d84
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-1
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cluster-monitoring-operator
    serviceAccountName: cluster-monitoring-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    volumes:
    - configMap:
        defaultMode: 420
        name: telemetry-config
      name: telemetry-config
    - name: cluster-monitoring-operator-tls
      secret:
        defaultMode: 420
        secretName: cluster-monitoring-operator-tls
    - name: kube-api-access-98d84
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:49:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:48:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:49:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:49:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T10:48:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1fdaa6251a38945ecb2e2424c4067fcda502f92909347834c6efbc8749d9d112
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d07a4a7e6f001e827895fd370373d91a4912e737b9c7bd56ad9e3aa2bdcd6349
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d07a4a7e6f001e827895fd370373d91a4912e737b9c7bd56ad9e3aa2bdcd6349
      lastState: {}
      name: cluster-monitoring-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T10:49:22Z"
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    phase: Running
    podIP: 10.129.0.37
    podIPs:
    - ip: 10.129.0.37
    qosClass: Burstable
    startTime: "2024-06-11T10:48:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.10/23"],"mac_address":"0a:58:0a:83:00:0a","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.10/23","gateway_ip":"10.131.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.10"
            ],
            "mac": "0a:58:0a:83:00:0a",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: kube-state-metrics
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:21Z"
    generateName: kube-state-metrics-598b4cb887-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 2.12.0
      pod-template-hash: 598b4cb887
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5b8b38d2-3054-4749-a3de-0a314ce765b8"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-main"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-self"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-state-metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-state-metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"kube-state-metrics-custom-resource-state-configmap"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"kube-state-metrics-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"kube-state-metrics-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"volume-directive-shadow"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.10"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:26Z"
    name: kube-state-metrics-598b4cb887-xkxn7
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-state-metrics-598b4cb887
      uid: 5b8b38d2-3054-4749-a3de-0a314ce765b8
    resourceVersion: "22880"
    uid: 86df920b-757c-4964-9a6e-4d43c9401afb
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --host=127.0.0.1
      - --port=8081
      - --telemetry-host=127.0.0.1
      - --telemetry-port=8082
      - |
        --metric-denylist=
        ^kube_secret_labels$,
        ^kube_.+_annotations$
        ^kube_customresource_.+_annotations_info$,
        ^kube_customresource_.+_labels_info$,
      - --metric-labels-allowlist=pods=[*],nodes=[*],namespaces=[*],persistentvolumes=[*],persistentvolumeclaims=[*],poddisruptionbudgets=[*]
      - |
        --metric-denylist=
        ^kube_.+_created$,
        ^kube_.+_metadata_resource_version$,
        ^kube_replicaset_metadata_generation$,
        ^kube_replicaset_status_observed_generation$,
        ^kube_pod_restart_policy$,
        ^kube_pod_init_container_status_terminated$,
        ^kube_pod_init_container_status_running$,
        ^kube_pod_container_status_terminated$,
        ^kube_pod_container_status_running$,
        ^kube_pod_completion_time$,
        ^kube_pod_status_scheduled$
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b9279ce7b6bdf993e9b37924ece65982b806475f0a633ef2eae1c5c960e5e1d
      imagePullPolicy: IfNotPresent
      name: kube-state-metrics
      resources:
        requests:
          cpu: 2m
          memory: 80Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /tmp
        name: volume-directive-shadow
      - mountPath: /etc/kube-state-metrics
        name: kube-state-metrics-custom-resource-state-configmap
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bgvr6
        readOnly: true
    - args:
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:8081/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-main
      ports:
      - containerPort: 8443
        name: https-main
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: kube-state-metrics-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: kube-state-metrics-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bgvr6
        readOnly: true
    - args:
      - --secure-listen-address=:9443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:8082/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-self
      ports:
      - containerPort: 9443
        name: https-self
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: kube-state-metrics-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: kube-state-metrics-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bgvr6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kube-state-metrics
    serviceAccountName: kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: volume-directive-shadow
    - name: kube-state-metrics-tls
      secret:
        defaultMode: 420
        secretName: kube-state-metrics-tls
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: kube-state-metrics-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: kube-state-metrics-kube-rbac-proxy-config
    - configMap:
        defaultMode: 420
        name: kube-state-metrics-custom-resource-state-configmap
      name: kube-state-metrics-custom-resource-state-configmap
    - name: kube-api-access-bgvr6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://19ce4e66368bdb28142e6ce6ea199e7f10bb938396f446178cfbf8b3c586ddee
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-main
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:25Z"
    - containerID: cri-o://68d535f410b0cab219c13ed3c0080fab71f80b74d0ef64bea15d783a1b2e7b4b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-self
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:26Z"
    - containerID: cri-o://b9ad98698c881328a50d259e23f4747edd27b93a9673d9767fafd35e4f0136f9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b9279ce7b6bdf993e9b37924ece65982b806475f0a633ef2eae1c5c960e5e1d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6b9279ce7b6bdf993e9b37924ece65982b806475f0a633ef2eae1c5c960e5e1d
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:25Z"
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    phase: Running
    podIP: 10.131.0.10
    podIPs:
    - ip: 10.131.0.10
    qosClass: Burstable
    startTime: "2024-06-11T11:01:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.11/23"],"mac_address":"0a:58:0a:83:00:0b","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.11/23","gateway_ip":"10.131.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.11"
            ],
            "mac": "0a:58:0a:83:00:0b",
            "default": true,
            "dns": {}
        }]
      monitoring.openshift.io/kubelet-serving-ca-bundle-hash: 43hf9t1qb20v6
      monitoring.openshift.io/metrics-client-cert-hash: 58e913qjq5jgt
      monitoring.openshift.io/serving-ca-secret-hash: 3dpid4kietd6o
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:28Z"
    generateName: metrics-server-66666c5bf-
    labels:
      app.kubernetes.io/component: metrics-server
      app.kubernetes.io/name: metrics-server
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 66666c5bf
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:monitoring.openshift.io/kubelet-serving-ca-bundle-hash: {}
            f:monitoring.openshift.io/metrics-client-cert-hash: {}
            f:monitoring.openshift.io/serving-ca-secret-hash: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"44932e9d-ed5a-4a9e-bcf2-1a1fe1df0a39"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"metrics-server"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10250,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/audit"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/client-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/kubelet-serving-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/metrics-client-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/metrics-server"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"audit-log"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"client-ca-bundle"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"configmap-kubelet-serving-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"metrics-server-audit-profiles"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-metrics-client-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-metrics-server-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.11"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:02:08Z"
    name: metrics-server-66666c5bf-2k6dh
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-66666c5bf
      uid: 44932e9d-ed5a-4a9e-bcf2-1a1fe1df0a39
    resourceVersion: "23270"
    uid: 47b0444c-d2b2-4b90-b8cb-d65fa81dc3f2
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: metrics-server
              app.kubernetes.io/name: metrics-server
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --secure-port=10250
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      - --kubelet-certificate-authority=/etc/tls/kubelet-serving-ca-bundle/ca-bundle.crt
      - --kubelet-client-certificate=/etc/tls/metrics-client-certs/tls.crt
      - --kubelet-client-key=/etc/tls/metrics-client-certs/tls.key
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --tls-min-version=VersionTLS12
      - --client-ca-file=/etc/client-ca-bundle/client-ca-file
      - --requestheader-client-ca-file=/etc/client-ca-bundle/requestheader-client-ca-file
      - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --audit-policy-file=/etc/audit/metadata-profile.yaml
      - --audit-log-path=/var/log/metrics-server/audit.log
      - --audit-log-maxsize=100
      - --audit-log-maxbackup=5
      - --audit-log-compress=true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c6a174cf59840331f2295deb5660fa1b584671c086c1ad64ce572cc5aad54c50
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 1m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-metrics-server-tls
      - mountPath: /etc/tls/metrics-client-certs
        name: secret-metrics-client-certs
      - mountPath: /etc/tls/kubelet-serving-ca-bundle
        name: configmap-kubelet-serving-ca-bundle
      - mountPath: /etc/audit
        name: metrics-server-audit-profiles
        readOnly: true
      - mountPath: /var/log/metrics-server
        name: audit-log
      - mountPath: /etc/client-ca-bundle
        name: client-ca-bundle
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l2sw5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: secret-metrics-client-certs
      secret:
        defaultMode: 420
        secretName: metrics-client-certs
    - name: secret-metrics-server-tls
      secret:
        defaultMode: 420
        secretName: metrics-server-tls
    - configMap:
        defaultMode: 420
        name: kubelet-serving-ca-bundle
      name: configmap-kubelet-serving-ca-bundle
    - emptyDir: {}
      name: audit-log
    - configMap:
        defaultMode: 420
        name: metrics-server-audit-profiles
      name: metrics-server-audit-profiles
    - name: client-ca-bundle
      secret:
        defaultMode: 420
        secretName: metrics-server-9a6ldng0krfu1
    - name: kube-api-access-l2sw5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:02:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:02:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a64a9a801d6d70dc39cb26599bc3feba12732228c549d4138806c9277de01419
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c6a174cf59840331f2295deb5660fa1b584671c086c1ad64ce572cc5aad54c50
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c6a174cf59840331f2295deb5660fa1b584671c086c1ad64ce572cc5aad54c50
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:31Z"
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    phase: Running
    podIP: 10.131.0.11
    podIPs:
    - ip: 10.131.0.11
    qosClass: Burstable
    startTime: "2024-06-11T11:01:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.11/23"],"mac_address":"0a:58:0a:80:02:0b","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.11/23","gateway_ip":"10.128.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.11"
            ],
            "mac": "0a:58:0a:80:02:0b",
            "default": true,
            "dns": {}
        }]
      monitoring.openshift.io/kubelet-serving-ca-bundle-hash: 43hf9t1qb20v6
      monitoring.openshift.io/metrics-client-cert-hash: 58e913qjq5jgt
      monitoring.openshift.io/serving-ca-secret-hash: 3dpid4kietd6o
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:28Z"
    generateName: metrics-server-66666c5bf-
    labels:
      app.kubernetes.io/component: metrics-server
      app.kubernetes.io/name: metrics-server
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 66666c5bf
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:monitoring.openshift.io/kubelet-serving-ca-bundle-hash: {}
            f:monitoring.openshift.io/metrics-client-cert-hash: {}
            f:monitoring.openshift.io/serving-ca-secret-hash: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"44932e9d-ed5a-4a9e-bcf2-1a1fe1df0a39"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"metrics-server"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10250,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/audit"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/client-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/kubelet-serving-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/metrics-client-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/metrics-server"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"audit-log"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"client-ca-bundle"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"configmap-kubelet-serving-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"metrics-server-audit-profiles"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-metrics-client-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-metrics-server-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.11"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:02:08Z"
    name: metrics-server-66666c5bf-5b985
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-66666c5bf
      uid: 44932e9d-ed5a-4a9e-bcf2-1a1fe1df0a39
    resourceVersion: "23274"
    uid: 9b8e6c5d-0153-4ec4-915d-1c1e71a122f3
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: metrics-server
              app.kubernetes.io/name: metrics-server
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --secure-port=10250
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --kubelet-use-node-status-port
      - --metric-resolution=15s
      - --kubelet-certificate-authority=/etc/tls/kubelet-serving-ca-bundle/ca-bundle.crt
      - --kubelet-client-certificate=/etc/tls/metrics-client-certs/tls.crt
      - --kubelet-client-key=/etc/tls/metrics-client-certs/tls.key
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --tls-min-version=VersionTLS12
      - --client-ca-file=/etc/client-ca-bundle/client-ca-file
      - --requestheader-client-ca-file=/etc/client-ca-bundle/requestheader-client-ca-file
      - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --audit-policy-file=/etc/audit/metadata-profile.yaml
      - --audit-log-path=/var/log/metrics-server/audit.log
      - --audit-log-maxsize=100
      - --audit-log-maxbackup=5
      - --audit-log-compress=true
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c6a174cf59840331f2295deb5660fa1b584671c086c1ad64ce572cc5aad54c50
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 1m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-metrics-server-tls
      - mountPath: /etc/tls/metrics-client-certs
        name: secret-metrics-client-certs
      - mountPath: /etc/tls/kubelet-serving-ca-bundle
        name: configmap-kubelet-serving-ca-bundle
      - mountPath: /etc/audit
        name: metrics-server-audit-profiles
        readOnly: true
      - mountPath: /var/log/metrics-server
        name: audit-log
      - mountPath: /etc/client-ca-bundle
        name: client-ca-bundle
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-699hj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: secret-metrics-client-certs
      secret:
        defaultMode: 420
        secretName: metrics-client-certs
    - name: secret-metrics-server-tls
      secret:
        defaultMode: 420
        secretName: metrics-server-tls
    - configMap:
        defaultMode: 420
        name: kubelet-serving-ca-bundle
      name: configmap-kubelet-serving-ca-bundle
    - emptyDir: {}
      name: audit-log
    - configMap:
        defaultMode: 420
        name: metrics-server-audit-profiles
      name: metrics-server-audit-profiles
    - name: client-ca-bundle
      secret:
        defaultMode: 420
        secretName: metrics-server-9a6ldng0krfu1
    - name: kube-api-access-699hj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:02:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:02:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1dbfdb14112710970530d8270b15bafb0100f10340284f7bc763de75ab4d68c5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c6a174cf59840331f2295deb5660fa1b584671c086c1ad64ce572cc5aad54c50
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c6a174cf59840331f2295deb5660fa1b584671c086c1ad64ce572cc5aad54c50
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:31Z"
    hostIP: 10.0.128.6
    hostIPs:
    - ip: 10.0.128.6
    phase: Running
    podIP: 10.128.2.11
    podIPs:
    - ip: 10.128.2.11
    qosClass: Burstable
    startTime: "2024-06-11T11:01:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.13/23"],"mac_address":"0a:58:0a:81:02:0d","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.13/23","gateway_ip":"10.129.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.13"
            ],
            "mac": "0a:58:0a:81:02:0d",
            "default": true,
            "dns": {}
        }]
      monitoring.openshift.io/cert-hash: 546usijjbl6gn
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:06:59Z"
    generateName: monitoring-plugin-75c9c44bd5-
    labels:
      app.kubernetes.io/component: monitoring-plugin
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: monitoring-plugin
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 75c9c44bd5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
      operation: Update
      subresource: status
      time: "2024-06-11T11:06:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:monitoring.openshift.io/cert-hash: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4e219902-e113-4953-ac89-e51a324f18fb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"monitoring-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/nginx/nginx.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/var/cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"monitoring-plugin-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"nginx-conf"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:06:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:06:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.13"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:07:03Z"
    name: monitoring-plugin-75c9c44bd5-2qdlt
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: monitoring-plugin-75c9c44bd5
      uid: 4e219902-e113-4953-ac89-e51a324f18fb
    resourceVersion: "26007"
    uid: b9ff2f4e-5e97-4290-a9fa-c96662349787
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: monitoring-plugin
              app.kubernetes.io/managed-by: cluster-monitoring-operator
              app.kubernetes.io/name: monitoring-plugin
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: false
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        if echo "$POD_IP" | grep -qE '^([0-9]{1,3}\.){3}[0-9]{1,3}$'; then
          LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME="9443"
        else
          LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME="[::]:9443"
        fi
        sed "s/LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME/$LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME/g" /etc/nginx/nginx.conf > /tmp/nginx.conf
        exec nginx -c /tmp/nginx.conf -g 'daemon off;'
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e916b5de7af0f8bd07324259867f42b1f21e7a5d6445d06c0f0d857a6a084acf
      imagePullPolicy: IfNotPresent
      name: monitoring-plugin
      ports:
      - containerPort: 9443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/cert
        name: monitoring-plugin-cert
        readOnly: true
      - mountPath: /etc/nginx/nginx.conf
        name: nginx-conf
        readOnly: true
        subPath: nginx.conf
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: monitoring-plugin
      name: nginx-conf
    - name: monitoring-plugin-cert
      secret:
        defaultMode: 420
        secretName: monitoring-plugin-cert
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:07:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:06:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:07:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:07:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:06:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://af3b0e6d63240ae1bd90b89539ef40301e9a75712d3a23f5665a42bd778db336
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e916b5de7af0f8bd07324259867f42b1f21e7a5d6445d06c0f0d857a6a084acf
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e916b5de7af0f8bd07324259867f42b1f21e7a5d6445d06c0f0d857a6a084acf
      lastState: {}
      name: monitoring-plugin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:07:02Z"
    hostIP: 10.0.128.5
    hostIPs:
    - ip: 10.0.128.5
    phase: Running
    podIP: 10.129.2.13
    podIPs:
    - ip: 10.129.2.13
    qosClass: Burstable
    startTime: "2024-06-11T11:06:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.12/23"],"mac_address":"0a:58:0a:83:00:0c","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.12/23","gateway_ip":"10.131.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.12"
            ],
            "mac": "0a:58:0a:83:00:0c",
            "default": true,
            "dns": {}
        }]
      monitoring.openshift.io/cert-hash: 546usijjbl6gn
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:06:59Z"
    generateName: monitoring-plugin-75c9c44bd5-
    labels:
      app.kubernetes.io/component: monitoring-plugin
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: monitoring-plugin
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 75c9c44bd5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
      operation: Update
      subresource: status
      time: "2024-06-11T11:06:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:monitoring.openshift.io/cert-hash: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4e219902-e113-4953-ac89-e51a324f18fb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"monitoring-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/nginx/nginx.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/var/cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"monitoring-plugin-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"nginx-conf"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:06:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:06:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.12"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:07:02Z"
    name: monitoring-plugin-75c9c44bd5-pnrvb
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: monitoring-plugin-75c9c44bd5
      uid: 4e219902-e113-4953-ac89-e51a324f18fb
    resourceVersion: "25834"
    uid: d0ba4b91-e3ed-45ce-af8a-775d2fa42fef
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: monitoring-plugin
              app.kubernetes.io/managed-by: cluster-monitoring-operator
              app.kubernetes.io/name: monitoring-plugin
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: false
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        if echo "$POD_IP" | grep -qE '^([0-9]{1,3}\.){3}[0-9]{1,3}$'; then
          LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME="9443"
        else
          LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME="[::]:9443"
        fi
        sed "s/LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME/$LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME/g" /etc/nginx/nginx.conf > /tmp/nginx.conf
        exec nginx -c /tmp/nginx.conf -g 'daemon off;'
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e916b5de7af0f8bd07324259867f42b1f21e7a5d6445d06c0f0d857a6a084acf
      imagePullPolicy: IfNotPresent
      name: monitoring-plugin
      ports:
      - containerPort: 9443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/cert
        name: monitoring-plugin-cert
        readOnly: true
      - mountPath: /etc/nginx/nginx.conf
        name: nginx-conf
        readOnly: true
        subPath: nginx.conf
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: monitoring-plugin
      name: nginx-conf
    - name: monitoring-plugin-cert
      secret:
        defaultMode: 420
        secretName: monitoring-plugin-cert
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:07:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:06:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:07:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:07:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:06:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a0f3de6ebf1ee6bbeed90745bc84e26632bc672432a0ca36b8c680ce37383721
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e916b5de7af0f8bd07324259867f42b1f21e7a5d6445d06c0f0d857a6a084acf
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e916b5de7af0f8bd07324259867f42b1f21e7a5d6445d06c0f0d857a6a084acf
      lastState: {}
      name: monitoring-plugin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:07:02Z"
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    phase: Running
    podIP: 10.131.0.12
    podIPs:
    - ip: 10.131.0.12
    qosClass: Burstable
    startTime: "2024-06-11T11:06:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:22Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.8.0
      controller-revision-hash: 7f8fdb8bf6
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"74be2099-3c00-4f8d-82a0-1e20bbaf6072"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.5"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:28Z"
    name: node-exporter-4xjkt
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: 74be2099-3c00-4f8d-82a0-1e20bbaf6072
    resourceVersion: "22958"
    uid: 3ddeb9a4-0392-4dc3-bfc3-d2de473d8007
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4zgl
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4zgl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4zgl
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-v4zgl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6aa72c188d701080356bf98f836075cd8766116d20fa7f2167acda02f045dd55
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:27Z"
    - containerID: cri-o://67c177ea9cc64588beecfea48c5b733c90611f9f57d40fbd2e6046ae8e08cb8c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:27Z"
    hostIP: 10.0.128.5
    hostIPs:
    - ip: 10.0.128.5
    initContainerStatuses:
    - containerID: cri-o://e0163b3a4cc08ee92851a370c9248abd855108011a564e5a03c9a134da9317cb
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e0163b3a4cc08ee92851a370c9248abd855108011a564e5a03c9a134da9317cb
          exitCode: 0
          finishedAt: "2024-06-11T11:01:27Z"
          reason: Completed
          startedAt: "2024-06-11T11:01:26Z"
    phase: Running
    podIP: 10.0.128.5
    podIPs:
    - ip: 10.0.128.5
    qosClass: Burstable
    startTime: "2024-06-11T11:01:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:22Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.8.0
      controller-revision-hash: 7f8fdb8bf6
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"74be2099-3c00-4f8d-82a0-1e20bbaf6072"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:27Z"
    name: node-exporter-h2gfv
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: 74be2099-3c00-4f8d-82a0-1e20bbaf6072
    resourceVersion: "22907"
    uid: c8dc720c-2b39-4e98-bde4-87e572d1191e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-master-0
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-78hqv
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-78hqv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-78hqv
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-0
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-78hqv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c31fb2cb7cefeea766764255c3739712d21520eee734de2bc317ae6aab2aaca6
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:26Z"
    - containerID: cri-o://8ddff5350675f1cf81d05f27691eced3b7c945ba0067ea526cc4fa3716ab04a0
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:26Z"
    hostIP: 10.0.0.8
    hostIPs:
    - ip: 10.0.0.8
    initContainerStatuses:
    - containerID: cri-o://7274e40376b97dd7c6858ac5d74113768e95075d693069c73ca5b38ac389e066
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7274e40376b97dd7c6858ac5d74113768e95075d693069c73ca5b38ac389e066
          exitCode: 0
          finishedAt: "2024-06-11T11:01:24Z"
          reason: Completed
          startedAt: "2024-06-11T11:01:24Z"
    phase: Running
    podIP: 10.0.0.8
    podIPs:
    - ip: 10.0.0.8
    qosClass: Burstable
    startTime: "2024-06-11T11:01:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:22Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.8.0
      controller-revision-hash: 7f8fdb8bf6
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"74be2099-3c00-4f8d-82a0-1e20bbaf6072"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:26Z"
    name: node-exporter-j8fxj
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: 74be2099-3c00-4f8d-82a0-1e20bbaf6072
    resourceVersion: "22875"
    uid: f323b9af-e51a-4a52-8f6e-d52476fe88b0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7rfdk
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7rfdk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7rfdk
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-7rfdk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c13b84be5f51af28f6e1f4200e5e3390de01b34087c5d0fc6bd67ff62adf0386
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:25Z"
    - containerID: cri-o://ba5313f4ef94e20e0b99a70591c6bbd337f6709697805d6349213c308d85c342
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:25Z"
    hostIP: 10.0.128.6
    hostIPs:
    - ip: 10.0.128.6
    initContainerStatuses:
    - containerID: cri-o://d06c6118c9fad5bfeaf335f195a88baf14e5480e08ac5932f8507c988051d86d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://d06c6118c9fad5bfeaf335f195a88baf14e5480e08ac5932f8507c988051d86d
          exitCode: 0
          finishedAt: "2024-06-11T11:01:24Z"
          reason: Completed
          startedAt: "2024-06-11T11:01:24Z"
    phase: Running
    podIP: 10.0.128.6
    podIPs:
    - ip: 10.0.128.6
    qosClass: Burstable
    startTime: "2024-06-11T11:01:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:21Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.8.0
      controller-revision-hash: 7f8fdb8bf6
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"74be2099-3c00-4f8d-82a0-1e20bbaf6072"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:26Z"
    name: node-exporter-lxgj9
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: 74be2099-3c00-4f8d-82a0-1e20bbaf6072
    resourceVersion: "22864"
    uid: 15fa6439-9af1-4fdc-a9b3-5177ccf7cd32
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-master-1
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v9z2b
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v9z2b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v9z2b
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-v9z2b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://632b560b5b53eb1c9945c33a42466efc351b1a1a56bde8f12c723d2c84bb793f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:25Z"
    - containerID: cri-o://2ed7f25acf9a4f35ece87b03200cd83ca87c1be1d73d24dc7a916bf1cb0446bf
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:25Z"
    hostIP: 10.0.0.6
    hostIPs:
    - ip: 10.0.0.6
    initContainerStatuses:
    - containerID: cri-o://aaa2d9ecd93fde7e15384081aac0a28c84a4a225ca7aa9b48ac72f345b5f512f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://aaa2d9ecd93fde7e15384081aac0a28c84a4a225ca7aa9b48ac72f345b5f512f
          exitCode: 0
          finishedAt: "2024-06-11T11:01:25Z"
          reason: Completed
          startedAt: "2024-06-11T11:01:25Z"
    phase: Running
    podIP: 10.0.0.6
    podIPs:
    - ip: 10.0.0.6
    qosClass: Burstable
    startTime: "2024-06-11T11:01:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:21Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.8.0
      controller-revision-hash: 7f8fdb8bf6
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"74be2099-3c00-4f8d-82a0-1e20bbaf6072"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.0.7"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:26Z"
    name: node-exporter-ppw7h
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: 74be2099-3c00-4f8d-82a0-1e20bbaf6072
    resourceVersion: "22870"
    uid: 17a038b0-d5a2-47fb-bf6f-da4c55c73396
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-master-2
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nxlqx
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nxlqx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nxlqx
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-nxlqx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4bafa92fdbbc7c4150c4aba9164b772720b74d84b16a304492b4b340cec89cd9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:25Z"
    - containerID: cri-o://28023eead8ab5cfac1af61234179638e81d57a665f267f6550d8b84b194f109f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:25Z"
    hostIP: 10.0.0.7
    hostIPs:
    - ip: 10.0.0.7
    initContainerStatuses:
    - containerID: cri-o://3760e77f84803b0887f07070404671306a8d2af7104f8d9edba21ec2d8896c56
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://3760e77f84803b0887f07070404671306a8d2af7104f8d9edba21ec2d8896c56
          exitCode: 0
          finishedAt: "2024-06-11T11:01:24Z"
          reason: Completed
          startedAt: "2024-06-11T11:01:24Z"
    phase: Running
    podIP: 10.0.0.7
    podIPs:
    - ip: 10.0.0.7
    qosClass: Burstable
    startTime: "2024-06-11T11:01:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:21Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.8.0
      controller-revision-hash: 7f8fdb8bf6
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"74be2099-3c00-4f8d-82a0-1e20bbaf6072"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.128.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:27Z"
    name: node-exporter-w5svb
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: 74be2099-3c00-4f8d-82a0-1e20bbaf6072
    resourceVersion: "22921"
    uid: 6b184eb3-1b1b-4514-9972-1e3087a4122c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gq7sr
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gq7sr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gq7sr
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-gq7sr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://e20a59b5741290ffad6acd19c1f52dfaa074ce8556ab359a88a0a344244bb54a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:26Z"
    - containerID: cri-o://c4be1d18e3ef09fa11d5a0c319204608c0d7351e7dcdd014b9705165c1230399
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:26Z"
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    initContainerStatuses:
    - containerID: cri-o://5cfdabc4af93b328de0f4c5a0f76d8451e527acfa3cb354da4433c77d97360ef
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b9eba2f769468893fb6bd7407847653fca7153da88e00ef8d68af2dd5a3d28e7
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://5cfdabc4af93b328de0f4c5a0f76d8451e527acfa3cb354da4433c77d97360ef
          exitCode: 0
          finishedAt: "2024-06-11T11:01:25Z"
          reason: Completed
          startedAt: "2024-06-11T11:01:25Z"
    phase: Running
    podIP: 10.0.128.4
    podIPs:
    - ip: 10.0.128.4
    qosClass: Burstable
    startTime: "2024-06-11T11:01:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.9/23"],"mac_address":"0a:58:0a:83:00:09","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.9/23","gateway_ip":"10.131.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.9"
            ],
            "mac": "0a:58:0a:83:00:09",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:21Z"
    generateName: openshift-state-metrics-86886ccdb8-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: openshift-state-metrics
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 86886ccdb8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a3780c56-b137-45ba-8976-cbd0f70d64d7"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy-main"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-self"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"openshift-state-metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"openshift-state-metrics-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"openshift-state-metrics-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:21Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.9"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:26Z"
    name: openshift-state-metrics-86886ccdb8-6v5s2
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: openshift-state-metrics-86886ccdb8
      uid: a3780c56-b137-45ba-8976-cbd0f70d64d7
    resourceVersion: "22884"
    uid: ee470c8e-4e60-474c-86e5-0607a0012eab
  spec:
    containers:
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:8081/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-main
      ports:
      - containerPort: 8443
        name: https-main
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: openshift-state-metrics-tls
      - mountPath: /etc/kube-rbac-policy
        name: openshift-state-metrics-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p8rxf
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:9443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:8082/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-self
      ports:
      - containerPort: 9443
        name: https-self
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: openshift-state-metrics-tls
      - mountPath: /etc/kube-rbac-policy
        name: openshift-state-metrics-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p8rxf
        readOnly: true
    - args:
      - --host=127.0.0.1
      - --port=8081
      - --telemetry-host=127.0.0.1
      - --telemetry-port=8082
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fa7ef88f868ac71e4ef7fddd109c920efaece57f089e237830b24b9c256c8ba4
      imagePullPolicy: IfNotPresent
      name: openshift-state-metrics
      resources:
        requests:
          cpu: 1m
          memory: 32Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p8rxf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: openshift-state-metrics
    serviceAccountName: openshift-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: openshift-state-metrics-tls
      secret:
        defaultMode: 420
        secretName: openshift-state-metrics-tls
    - name: openshift-state-metrics-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: openshift-state-metrics-kube-rbac-proxy-config
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: kube-api-access-p8rxf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://07d90b6f96d7432f3573c42a9acd986d2e8f94c0585a769ede539451ade4d427
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-main
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:22Z"
    - containerID: cri-o://5c6ef880f4d965170fb3506c80824b421d44608c9dd5b7b2b5776870f3af7889
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-self
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:22Z"
    - containerID: cri-o://ad8b94a739c3d94cd30388bf5e09c9e5d0f730cef68e388900073b8a86e11261
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fa7ef88f868ac71e4ef7fddd109c920efaece57f089e237830b24b9c256c8ba4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fa7ef88f868ac71e4ef7fddd109c920efaece57f089e237830b24b9c256c8ba4
      lastState: {}
      name: openshift-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:25Z"
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    phase: Running
    podIP: 10.131.0.9
    podIPs:
    - ip: 10.131.0.9
    qosClass: Burstable
    startTime: "2024-06-11T11:01:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.17/23"],"mac_address":"0a:58:0a:83:00:11","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.17/23","gateway_ip":"10.131.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.17"
            ],
            "mac": "0a:58:0a:83:00:11",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: prometheus
      openshift.io/required-scc: nonroot
      openshift.io/scc: nonroot
    creationTimestamp: "2024-06-11T11:11:37Z"
    generateName: prometheus-k8s-
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 2.52.0
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: prometheus-k8s-7bcf46c49f
      operator.prometheus.io/name: k8s
      operator.prometheus.io/shard: "0"
      prometheus: k8s
      statefulset.kubernetes.io/pod-name: prometheus-k8s-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:operator.prometheus.io/name: {}
            f:operator.prometheus.io/shard: {}
            f:prometheus: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dd29a391-af20-4668-8329-0fe332c6aa9b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-thanos"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10903,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"kube-rbac-proxy-web"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prometheus"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:startupProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/kubelet-serving-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/metrics-client-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/serving-certs-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/secrets/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/metrics-client-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-kube-rbac-proxy-web"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/prometheus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
            k:{"name":"thanos-sidecar"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10901,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":10902,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/grpc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"init-config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:shareProcessNamespace: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"config-out"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"configmap-kubelet-serving-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"configmap-metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"configmap-serving-certs-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
            k:{"name":"prometheus-k8s-rulefiles-0"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-metrics-client-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-kube-rbac-proxy-web"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-thanos-sidecar-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tls-assets"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"web-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:11:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.17"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:12:51Z"
    name: prometheus-k8s-0
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: prometheus-k8s
      uid: dd29a391-af20-4668-8329-0fe332c6aa9b
    resourceVersion: "32056"
    uid: 7f9d0f85-9dc6-41cf-99ba-1c73bbb40e6e
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: prometheus
              app.kubernetes.io/instance: k8s
              app.kubernetes.io/name: prometheus
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
      - --web.enable-lifecycle
      - --web.external-url=https://console-openshift-console.apps.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com/monitoring
      - --web.route-prefix=/
      - --web.listen-address=127.0.0.1:9090
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.path=/prometheus
      - --web.config.file=/etc/prometheus/web_config/web-config.yaml
      - --scrape.timestamp-tolerance=15ms
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e3ff0220509aee666082ff1316ade676d06a1f7167b2feba51d2ae64e7bb8e7
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/healthy;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/healthy;
            else exit 1; fi
        failureThreshold: 6
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      name: prometheus
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/ready;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
            else exit 1; fi
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        requests:
          cpu: 70m
          memory: 1Gi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      startupProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/ready;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
            else exit 1; fi
        failureThreshold: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: prometheus-trusted-ca-bundle
      - mountPath: /etc/prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: tls-assets
        readOnly: true
      - mountPath: /prometheus
        name: prometheus-data
        subPath: prometheus-db
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-tls
        name: secret-prometheus-k8s-tls
        readOnly: true
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls
        name: secret-prometheus-k8s-thanos-sidecar-tls
        readOnly: true
      - mountPath: /etc/prometheus/secrets/kube-rbac-proxy
        name: secret-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-kube-rbac-proxy-web
        name: secret-prometheus-k8s-kube-rbac-proxy-web
        readOnly: true
      - mountPath: /etc/prometheus/secrets/metrics-client-certs
        name: secret-metrics-client-certs
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/serving-certs-ca-bundle
        name: configmap-serving-certs-ca-bundle
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/kubelet-serving-ca-bundle
        name: configmap-kubelet-serving-ca-bundle
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/metrics-client-ca
        name: configmap-metrics-client-ca
        readOnly: true
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /etc/prometheus/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wznhn
        readOnly: true
    - args:
      - --listen-address=localhost:8080
      - --web-config-file=/etc/prometheus/web_config/web-config.yaml
      - --reload-url=http://localhost:9090/-/reload
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wznhn
        readOnly: true
    - args:
      - sidecar
      - --prometheus.url=http://localhost:9090/
      - --tsdb.path=/prometheus
      - --http-address=127.0.0.1:10902
      - --grpc-server-tls-cert=/etc/tls/grpc/server.crt
      - --grpc-server-tls-key=/etc/tls/grpc/server.key
      - --grpc-server-tls-client-ca=/etc/tls/grpc/ca.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      imagePullPolicy: IfNotPresent
      name: thanos-sidecar
      ports:
      - containerPort: 10902
        name: http
        protocol: TCP
      - containerPort: 10901
        name: grpc
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 25Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/grpc
        name: secret-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wznhn
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9091
      - --upstream=http://127.0.0.1:9090
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --ignore-paths=/-/healthy,/-/ready
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-web
      ports:
      - containerPort: 9091
        name: web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-prometheus-k8s-kube-rbac-proxy-web
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wznhn
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9090
      - --allow-paths=/metrics,/federate
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-tls
      - mountPath: /etc/tls/client
        name: configmap-metrics-client-ca
        readOnly: true
      - mountPath: /etc/kube-rbac-proxy
        name: secret-kube-rbac-proxy
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wznhn
        readOnly: true
    - args:
      - --secure-listen-address=[$(POD_IP)]:10903
      - --upstream=http://127.0.0.1:10902
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/metrics
      - --logtostderr=true
      - --tls-min-version=VersionTLS12
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-thanos
      ports:
      - containerPort: 10903
        name: thanos-proxy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-thanos-sidecar-tls
        readOnly: true
      - mountPath: /etc/kube-rbac-proxy
        name: secret-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/tls/client
        name: configmap-metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wznhn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: prometheus-k8s-0
    imagePullSecrets:
    - name: prometheus-k8s-dockercfg-m9qxf
    initContainers:
    - args:
      - --watch-interval=0
      - --listen-address=:8080
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imagePullPolicy: IfNotPresent
      name: init-config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wznhn
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seLinuxOptions:
        level: s0:c21,c15
    serviceAccount: prometheus-k8s
    serviceAccountName: prometheus-k8s
    shareProcessNamespace: false
    subdomain: prometheus-operated
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: prometheus-data
      persistentVolumeClaim:
        claimName: prometheus-data-prometheus-k8s-0
    - name: config
      secret:
        defaultMode: 420
        secretName: prometheus-k8s
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: prometheus-k8s-tls-assets-0
    - emptyDir:
        medium: Memory
      name: config-out
    - name: secret-prometheus-k8s-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-tls
    - name: secret-prometheus-k8s-thanos-sidecar-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-thanos-sidecar-tls
    - name: secret-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: kube-rbac-proxy
    - name: secret-prometheus-k8s-kube-rbac-proxy-web
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-kube-rbac-proxy-web
    - name: secret-metrics-client-certs
      secret:
        defaultMode: 420
        secretName: metrics-client-certs
    - configMap:
        defaultMode: 420
        name: serving-certs-ca-bundle
      name: configmap-serving-certs-ca-bundle
    - configMap:
        defaultMode: 420
        name: kubelet-serving-ca-bundle
      name: configmap-kubelet-serving-ca-bundle
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: configmap-metrics-client-ca
    - configMap:
        defaultMode: 420
        name: prometheus-k8s-rulefiles-0
      name: prometheus-k8s-rulefiles-0
    - name: web-config
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-web-config
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: prometheus-trusted-ca-bundle
      name: prometheus-trusted-ca-bundle
    - name: secret-grpc-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-grpc-tls-9838dml7sm2ad
    - name: kube-api-access-wznhn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:12:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:12:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://58022dde1f902efd1003d8810df7a0bf47e590822bf2d141bac0dda6b0f3cde7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:57Z"
    - containerID: cri-o://209252d8818e0925751a8c6a75bfb313af652a73deecc175ee83dcc567f6388f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:57Z"
    - containerID: cri-o://e84825300a674d4fb1fbed5523248501afdc0eabbdf9cdf4a2f4b3d9f5e21294
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-thanos
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:57Z"
    - containerID: cri-o://0a434d6a0927ffae0cca28a5b424f202ddaec92168a6b22c7110eecd73f44a09
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-web
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:57Z"
    - containerID: cri-o://dbdf898bbf453412a5d6fe7d854964e8192aeb7b50ce90d025bbf3e599a4696f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e3ff0220509aee666082ff1316ade676d06a1f7167b2feba51d2ae64e7bb8e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e3ff0220509aee666082ff1316ade676d06a1f7167b2feba51d2ae64e7bb8e7
      lastState: {}
      name: prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:56Z"
    - containerID: cri-o://226816502c473892dcb5ee628dfce1c7ddff52f9c522c9f4d8432d44e006b4d5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      lastState: {}
      name: thanos-sidecar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:57Z"
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    initContainerStatuses:
    - containerID: cri-o://8cdeb1c6a49fc678c84bf61c4f3ec49eaa1727b5ec19afd28ec0af6b618ba438
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      lastState: {}
      name: init-config-reloader
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://8cdeb1c6a49fc678c84bf61c4f3ec49eaa1727b5ec19afd28ec0af6b618ba438
          exitCode: 0
          finishedAt: "2024-06-11T11:11:51Z"
          reason: Completed
          startedAt: "2024-06-11T11:11:51Z"
    phase: Running
    podIP: 10.131.0.17
    podIPs:
    - ip: 10.131.0.17
    qosClass: Burstable
    startTime: "2024-06-11T11:11:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.16/23"],"mac_address":"0a:58:0a:80:02:10","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.16/23","gateway_ip":"10.128.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.16"
            ],
            "mac": "0a:58:0a:80:02:10",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: prometheus
      openshift.io/required-scc: nonroot
      openshift.io/scc: nonroot
    creationTimestamp: "2024-06-11T11:11:38Z"
    generateName: prometheus-k8s-
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 2.52.0
      apps.kubernetes.io/pod-index: "1"
      controller-revision-hash: prometheus-k8s-7bcf46c49f
      operator.prometheus.io/name: k8s
      operator.prometheus.io/shard: "0"
      prometheus: k8s
      statefulset.kubernetes.io/pod-name: prometheus-k8s-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:operator.prometheus.io/name: {}
            f:operator.prometheus.io/shard: {}
            f:prometheus: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dd29a391-af20-4668-8329-0fe332c6aa9b"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-thanos"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10903,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"kube-rbac-proxy-web"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prometheus"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:startupProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/kubelet-serving-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/metrics-client-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/serving-certs-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/secrets/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/metrics-client-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-kube-rbac-proxy-web"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/prometheus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:subPath: {}
            k:{"name":"thanos-sidecar"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10901,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":10902,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/grpc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"init-config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:shareProcessNamespace: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"config-out"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"configmap-kubelet-serving-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"configmap-metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"configmap-serving-certs-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-data"}:
              .: {}
              f:name: {}
              f:persistentVolumeClaim:
                .: {}
                f:claimName: {}
            k:{"name":"prometheus-k8s-rulefiles-0"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-metrics-client-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-kube-rbac-proxy-web"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-thanos-sidecar-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tls-assets"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"web-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:11:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.16"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:12:52Z"
    name: prometheus-k8s-1
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: prometheus-k8s
      uid: dd29a391-af20-4668-8329-0fe332c6aa9b
    resourceVersion: "32070"
    uid: 8d11db17-2123-4894-b38f-7aaf77263ed9
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: prometheus
              app.kubernetes.io/instance: k8s
              app.kubernetes.io/name: prometheus
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
      - --web.enable-lifecycle
      - --web.external-url=https://console-openshift-console.apps.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com/monitoring
      - --web.route-prefix=/
      - --web.listen-address=127.0.0.1:9090
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.path=/prometheus
      - --web.config.file=/etc/prometheus/web_config/web-config.yaml
      - --scrape.timestamp-tolerance=15ms
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e3ff0220509aee666082ff1316ade676d06a1f7167b2feba51d2ae64e7bb8e7
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/healthy;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/healthy;
            else exit 1; fi
        failureThreshold: 6
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      name: prometheus
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/ready;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
            else exit 1; fi
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        requests:
          cpu: 70m
          memory: 1Gi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      startupProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/ready;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
            else exit 1; fi
        failureThreshold: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: prometheus-trusted-ca-bundle
      - mountPath: /etc/prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: tls-assets
        readOnly: true
      - mountPath: /prometheus
        name: prometheus-data
        subPath: prometheus-db
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-tls
        name: secret-prometheus-k8s-tls
        readOnly: true
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls
        name: secret-prometheus-k8s-thanos-sidecar-tls
        readOnly: true
      - mountPath: /etc/prometheus/secrets/kube-rbac-proxy
        name: secret-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-kube-rbac-proxy-web
        name: secret-prometheus-k8s-kube-rbac-proxy-web
        readOnly: true
      - mountPath: /etc/prometheus/secrets/metrics-client-certs
        name: secret-metrics-client-certs
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/serving-certs-ca-bundle
        name: configmap-serving-certs-ca-bundle
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/kubelet-serving-ca-bundle
        name: configmap-kubelet-serving-ca-bundle
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/metrics-client-ca
        name: configmap-metrics-client-ca
        readOnly: true
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /etc/prometheus/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n992j
        readOnly: true
    - args:
      - --listen-address=localhost:8080
      - --web-config-file=/etc/prometheus/web_config/web-config.yaml
      - --reload-url=http://localhost:9090/-/reload
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n992j
        readOnly: true
    - args:
      - sidecar
      - --prometheus.url=http://localhost:9090/
      - --tsdb.path=/prometheus
      - --http-address=127.0.0.1:10902
      - --grpc-server-tls-cert=/etc/tls/grpc/server.crt
      - --grpc-server-tls-key=/etc/tls/grpc/server.key
      - --grpc-server-tls-client-ca=/etc/tls/grpc/ca.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      imagePullPolicy: IfNotPresent
      name: thanos-sidecar
      ports:
      - containerPort: 10902
        name: http
        protocol: TCP
      - containerPort: 10901
        name: grpc
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 25Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/grpc
        name: secret-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n992j
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9091
      - --upstream=http://127.0.0.1:9090
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --ignore-paths=/-/healthy,/-/ready
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-web
      ports:
      - containerPort: 9091
        name: web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-prometheus-k8s-kube-rbac-proxy-web
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n992j
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9090
      - --allow-paths=/metrics,/federate
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-tls
      - mountPath: /etc/tls/client
        name: configmap-metrics-client-ca
        readOnly: true
      - mountPath: /etc/kube-rbac-proxy
        name: secret-kube-rbac-proxy
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n992j
        readOnly: true
    - args:
      - --secure-listen-address=[$(POD_IP)]:10903
      - --upstream=http://127.0.0.1:10902
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/metrics
      - --logtostderr=true
      - --tls-min-version=VersionTLS12
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-thanos
      ports:
      - containerPort: 10903
        name: thanos-proxy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-thanos-sidecar-tls
        readOnly: true
      - mountPath: /etc/kube-rbac-proxy
        name: secret-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/tls/client
        name: configmap-metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n992j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: prometheus-k8s-1
    imagePullSecrets:
    - name: prometheus-k8s-dockercfg-m9qxf
    initContainers:
    - args:
      - --watch-interval=0
      - --listen-address=:8080
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imagePullPolicy: IfNotPresent
      name: init-config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n992j
        readOnly: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seLinuxOptions:
        level: s0:c21,c15
    serviceAccount: prometheus-k8s
    serviceAccountName: prometheus-k8s
    shareProcessNamespace: false
    subdomain: prometheus-operated
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: prometheus-data
      persistentVolumeClaim:
        claimName: prometheus-data-prometheus-k8s-1
    - name: config
      secret:
        defaultMode: 420
        secretName: prometheus-k8s
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: prometheus-k8s-tls-assets-0
    - emptyDir:
        medium: Memory
      name: config-out
    - name: secret-prometheus-k8s-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-tls
    - name: secret-prometheus-k8s-thanos-sidecar-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-thanos-sidecar-tls
    - name: secret-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: kube-rbac-proxy
    - name: secret-prometheus-k8s-kube-rbac-proxy-web
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-kube-rbac-proxy-web
    - name: secret-metrics-client-certs
      secret:
        defaultMode: 420
        secretName: metrics-client-certs
    - configMap:
        defaultMode: 420
        name: serving-certs-ca-bundle
      name: configmap-serving-certs-ca-bundle
    - configMap:
        defaultMode: 420
        name: kubelet-serving-ca-bundle
      name: configmap-kubelet-serving-ca-bundle
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: configmap-metrics-client-ca
    - configMap:
        defaultMode: 420
        name: prometheus-k8s-rulefiles-0
      name: prometheus-k8s-rulefiles-0
    - name: web-config
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-web-config
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: prometheus-trusted-ca-bundle
      name: prometheus-trusted-ca-bundle
    - name: secret-grpc-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-grpc-tls-9838dml7sm2ad
    - name: kube-api-access-n992j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:12:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:12:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://812e61dc473c13d6ee1482d0b849d23f8ed9621ebca003b5e8ba5c8295015dba
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:59Z"
    - containerID: cri-o://98525226b321d072af9662a5bbf5d6879d1d0189545c071f77c42f1beadc96b6
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:12:01Z"
    - containerID: cri-o://7b2596b207805c683e6ed6006b74be6bf36eb3865ee16bedafd9739976888d6d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-thanos
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:12:01Z"
    - containerID: cri-o://171929d25424d4bacb597305903dd003e4b73823932688c69887a6b964f7d2d0
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-web
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:59Z"
    - containerID: cri-o://dd20781bba7a8447cd4840eb626d5404458f757ff62e167c9c3089888f258fd9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e3ff0220509aee666082ff1316ade676d06a1f7167b2feba51d2ae64e7bb8e7
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e3ff0220509aee666082ff1316ade676d06a1f7167b2feba51d2ae64e7bb8e7
      lastState: {}
      name: prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:59Z"
    - containerID: cri-o://adb256fe1873a673e94ced85600965c2593efcba17f928503bc14c867931bfd3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      lastState: {}
      name: thanos-sidecar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:59Z"
    hostIP: 10.0.128.6
    hostIPs:
    - ip: 10.0.128.6
    initContainerStatuses:
    - containerID: cri-o://0c863608ea16537d1ea6840e9008d3b76410588586906718d7023bcfae35fb02
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      lastState: {}
      name: init-config-reloader
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://0c863608ea16537d1ea6840e9008d3b76410588586906718d7023bcfae35fb02
          exitCode: 0
          finishedAt: "2024-06-11T11:11:54Z"
          reason: Completed
          startedAt: "2024-06-11T11:11:54Z"
    phase: Running
    podIP: 10.128.2.16
    podIPs:
    - ip: 10.128.2.16
    qosClass: Burstable
    startTime: "2024-06-11T11:11:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.59/23"],"mac_address":"0a:58:0a:82:00:3b","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.59/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.59"
            ],
            "mac": "0a:58:0a:82:00:3b",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: prometheus-operator
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:01:15Z"
    generateName: prometheus-operator-9cd6bf8d5-
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.73.2
      pod-template-hash: 9cd6bf8d5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-master-2
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"05c52f00-b081-44d6-9944-7f41b7dbc13e"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"prometheus-operator"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"GOGC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-operator-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"prometheus-operator-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:01:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.59"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:19Z"
    name: prometheus-operator-9cd6bf8d5-d8nbk
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-operator-9cd6bf8d5
      uid: 05c52f00-b081-44d6-9944-7f41b7dbc13e
    resourceVersion: "22496"
    uid: 2d2cb826-1070-4391-8652-0014a4303e2a
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --kubelet-service=kube-system/kubelet
      - --prometheus-config-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cfc189a1a1eae1859c452714b8bbc6c66fa5b837717f7da83631ee8de437fc63
      - --prometheus-instance-namespaces=openshift-monitoring
      - --thanos-ruler-instance-namespaces=openshift-monitoring
      - --alertmanager-instance-namespaces=openshift-monitoring
      - --config-reloader-cpu-limit=0
      - --config-reloader-memory-limit=0
      - --config-reloader-cpu-request=1m
      - --config-reloader-memory-request=10Mi
      - --web.listen-address=127.0.0.1:8080
      - --controller-id=openshift-monitoring/prometheus-operator
      env:
      - name: GOGC
        value: "30"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fcb3b0af68cb042fa56c1eac2be34b4ff2d766e2c8e4d769349b5a8b4bfff37e
      imagePullPolicy: IfNotPresent
      name: prometheus-operator
      resources:
        requests:
          cpu: 5m
          memory: 150Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4cb77
        readOnly: true
    - args:
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://localhost:8080/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: prometheus-operator-tls
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /etc/kube-rbac-policy
        name: prometheus-operator-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4cb77
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-master-2
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: prometheus-operator
    serviceAccountName: prometheus-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: prometheus-operator-tls
      secret:
        defaultMode: 420
        secretName: prometheus-operator-tls
    - name: prometheus-operator-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: prometheus-operator-kube-rbac-proxy-config
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: kube-api-access-4cb77
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b58b700d0e558485144265ae23b2764882e583bee21895127aada295ba03a406
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:18Z"
    - containerID: cri-o://a799464e7c779302dfdd3a4eb25b8711097f30d18164ac1a82d5f85c56609d90
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fcb3b0af68cb042fa56c1eac2be34b4ff2d766e2c8e4d769349b5a8b4bfff37e
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fcb3b0af68cb042fa56c1eac2be34b4ff2d766e2c8e4d769349b5a8b4bfff37e
      lastState: {}
      name: prometheus-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:18Z"
    hostIP: 10.0.0.7
    hostIPs:
    - ip: 10.0.0.7
    phase: Running
    podIP: 10.130.0.59
    podIPs:
    - ip: 10.130.0.59
    qosClass: Burstable
    startTime: "2024-06-11T11:01:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.8/23"],"mac_address":"0a:58:0a:81:02:08","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.8/23","gateway_ip":"10.129.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.8"
            ],
            "mac": "0a:58:0a:81:02:08",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: prometheus-operator-admission-webhook
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T10:49:23Z"
    generateName: prometheus-operator-admission-webhook-566b55489f-
    labels:
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-operator-admission-webhook
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.73.2
      pod-template-hash: 566b55489f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5bff07e9-ac90-4fa2-9243-018d27ff7f71"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"prometheus-operator-admission-webhook"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"tls-certificates"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:49:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2024-06-11T10:49:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
      operation: Update
      subresource: status
      time: "2024-06-11T11:00:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:14Z"
    name: prometheus-operator-admission-webhook-566b55489f-2ktqr
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-operator-admission-webhook-566b55489f
      uid: 5bff07e9-ac90-4fa2-9243-018d27ff7f71
    resourceVersion: "22383"
    uid: 76a629dd-c4fd-4aee-a330-a56979c55639
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus-operator-admission-webhook
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: false
    containers:
    - args:
      - --web.enable-tls=true
      - --web.cert-file=/etc/tls/private/tls.crt
      - --web.key-file=/etc/tls/private/tls.key
      - --web.tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --web.tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c9cb2094942cf6eba4ae69c856e11222e922ad4d839506d3e95913b068ec88c3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus-operator-admission-webhook
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: tls-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus3-hgn49
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: prometheus-operator-admission-webhook
    serviceAccountName: prometheus-operator-admission-webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: tls-certificates
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        secretName: prometheus-operator-admission-webhook-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:00:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:00:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://140d314c2268c38f34a4ac910469dc46c9b4d6500a4864a829ee82525ce888b7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c9cb2094942cf6eba4ae69c856e11222e922ad4d839506d3e95913b068ec88c3
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c9cb2094942cf6eba4ae69c856e11222e922ad4d839506d3e95913b068ec88c3
      lastState: {}
      name: prometheus-operator-admission-webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:13Z"
    hostIP: 10.0.128.5
    hostIPs:
    - ip: 10.0.128.5
    phase: Running
    podIP: 10.129.2.8
    podIPs:
    - ip: 10.129.2.8
    qosClass: Burstable
    startTime: "2024-06-11T11:00:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.9/23"],"mac_address":"0a:58:0a:80:02:09","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.9/23","gateway_ip":"10.128.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.9"
            ],
            "mac": "0a:58:0a:80:02:09",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: prometheus-operator-admission-webhook
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T10:49:23Z"
    generateName: prometheus-operator-admission-webhook-566b55489f-
    labels:
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-operator-admission-webhook
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.73.2
      pod-template-hash: 566b55489f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5bff07e9-ac90-4fa2-9243-018d27ff7f71"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"prometheus-operator-admission-webhook"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"tls-certificates"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T10:49:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2024-06-11T11:00:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.9"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:01:07Z"
    name: prometheus-operator-admission-webhook-566b55489f-wzvmv
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-operator-admission-webhook-566b55489f
      uid: 5bff07e9-ac90-4fa2-9243-018d27ff7f71
    resourceVersion: "22242"
    uid: 7b50edf2-2d8e-4669-a7c0-faf69197afa6
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus-operator-admission-webhook
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: false
    containers:
    - args:
      - --web.enable-tls=true
      - --web.cert-file=/etc/tls/private/tls.crt
      - --web.key-file=/etc/tls/private/tls.key
      - --web.tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --web.tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c9cb2094942cf6eba4ae69c856e11222e922ad4d839506d3e95913b068ec88c3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus-operator-admission-webhook
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: tls-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: prometheus-operator-admission-webhook
    serviceAccountName: prometheus-operator-admission-webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: tls-certificates
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        secretName: prometheus-operator-admission-webhook-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:01:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://fd79acb0c76e313f1cd6fc496f778ce4dd11761eb5ee0a0bad7ecabe137ec36f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c9cb2094942cf6eba4ae69c856e11222e922ad4d839506d3e95913b068ec88c3
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c9cb2094942cf6eba4ae69c856e11222e922ad4d839506d3e95913b068ec88c3
      lastState: {}
      name: prometheus-operator-admission-webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:01:06Z"
    hostIP: 10.0.128.6
    hostIPs:
    - ip: 10.0.128.6
    phase: Running
    podIP: 10.128.2.9
    podIPs:
    - ip: 10.128.2.9
    qosClass: Burstable
    startTime: "2024-06-11T11:01:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.15/23"],"mac_address":"0a:58:0a:80:02:0f","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.15/23","gateway_ip":"10.128.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.15"
            ],
            "mac": "0a:58:0a:80:02:0f",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:11:33Z"
    generateName: thanos-querier-567fbb8d4b-
    labels:
      app.kubernetes.io/component: query-layer
      app.kubernetes.io/instance: thanos-querier
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: thanos-query
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.35.0
      pod-template-hash: 567fbb8d4b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6823b5b2-045b-4eaf-9815-7c1173aeb2ba"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9094,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-rules"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9093,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-web"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prom-label-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"thanos-query"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"HOST_IP_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/grpc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-metrics"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-rules"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-web"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:11:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.15"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:42Z"
    name: thanos-querier-567fbb8d4b-5wkwj
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: thanos-querier-567fbb8d4b
      uid: 6823b5b2-045b-4eaf-9815-7c1173aeb2ba
    resourceVersion: "31382"
    uid: a048b026-c744-48ff-ad26-a27b6d996fd5
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: query-layer
              app.kubernetes.io/instance: thanos-querier
              app.kubernetes.io/name: thanos-query
              app.kubernetes.io/part-of: openshift-monitoring
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - query
      - --grpc-address=127.0.0.1:10901
      - --http-address=127.0.0.1:9090
      - --log.format=logfmt
      - --query.replica-label=prometheus_replica
      - --query.replica-label=thanos_ruler_replica
      - --endpoint=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --query.auto-downsampling
      - --store.sd-dns-resolver=miekgdns
      - --grpc-client-tls-secure
      - --grpc-client-tls-cert=/etc/tls/grpc/client.crt
      - --grpc-client-tls-key=/etc/tls/grpc/client.key
      - --grpc-client-tls-ca=/etc/tls/grpc/ca.crt
      - --grpc-client-server-name=prometheus-grpc
      - --rule=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --target=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --web.disable-cors
      env:
      - name: HOST_IP_ADDRESS
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      imagePullPolicy: IfNotPresent
      name: thanos-query
      ports:
      - containerPort: 9090
        name: http
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 12Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000450000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/grpc
        name: secret-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2c4t
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9091
      - --upstream=http://127.0.0.1:9090
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --ignore-paths=/-/healthy,/-/ready
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 4
        httpGet:
          path: /-/healthy
          port: 9091
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: kube-rbac-proxy-web
      ports:
      - containerPort: 9091
        name: web
        protocol: TCP
      readinessProbe:
        failureThreshold: 20
        httpGet:
          path: /-/ready
          port: 9091
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-web
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2c4t
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9095
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/api/v1/query,/api/v1/query_range,/api/v1/labels,/api/v1/label/*/values,/api/v1/series
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: tenancy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2c4t
        readOnly: true
    - args:
      - --insecure-listen-address=127.0.0.1:9095
      - --upstream=http://127.0.0.1:9090
      - --label=namespace
      - --enable-label-apis
      - --error-on-replace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      imagePullPolicy: IfNotPresent
      name: prom-label-proxy
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2c4t
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9093
      - --upstream=http://127.0.0.1:9095
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/api/v1/rules,/api/v1/alerts
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-rules
      ports:
      - containerPort: 9093
        name: tenancy-rules
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2c4t
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9094
      - --upstream=http://127.0.0.1:9090
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --allow-paths=/metrics
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-metrics
      ports:
      - containerPort: 9094
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-metrics
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b2c4t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: thanos-querier-dockercfg-mp5k5
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus2-xnvk9
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: thanos-querier
    serviceAccountName: thanos-querier
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: secret-thanos-querier-tls
      secret:
        defaultMode: 420
        secretName: thanos-querier-tls
    - name: secret-thanos-querier-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy
    - name: secret-thanos-querier-kube-rbac-proxy-web
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-web
    - name: secret-thanos-querier-kube-rbac-proxy-rules
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-rules
    - name: secret-thanos-querier-kube-rbac-proxy-metrics
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-metrics
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: secret-grpc-tls
      secret:
        defaultMode: 420
        secretName: thanos-querier-grpc-tls-dhqjjp8v87kee
    - name: kube-api-access-b2c4t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://132a9f7987259af0df9ca03ae4178e7eadc92be654dff6bb12046cfc9f3cbfb0
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:37Z"
    - containerID: cri-o://0ec833ccf676c4af690fb0e56ff6f381c41dff329ee64de11414b532cf67d9cb
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:40Z"
    - containerID: cri-o://c229897bf83940f78e0d4cf791c6a22999c7574f59192b5622307e7cfb2896fb
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-rules
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:40Z"
    - containerID: cri-o://8b06368c04d8e821b1b6c6a581730dd76d223b19cc119e01bb99ede5adaf75d5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-web
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:37Z"
    - containerID: cri-o://64629c38ba7f11c3c1ed7e08ad9db7978c1e2e2a32525633d93d49f8629f41ca
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      lastState: {}
      name: prom-label-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:40Z"
    - containerID: cri-o://1e49943dfc84425e7c9c3b20c2ff84880d15002b3e7477619b6b2dccea86be11
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      lastState: {}
      name: thanos-query
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:37Z"
    hostIP: 10.0.128.6
    hostIPs:
    - ip: 10.0.128.6
    phase: Running
    podIP: 10.128.2.15
    podIPs:
    - ip: 10.128.2.15
    qosClass: Burstable
    startTime: "2024-06-11T11:11:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.16/23"],"mac_address":"0a:58:0a:83:00:10","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.16/23","gateway_ip":"10.131.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.16"
            ],
            "mac": "0a:58:0a:83:00:10",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2024-06-11T11:11:33Z"
    generateName: thanos-querier-567fbb8d4b-
    labels:
      app.kubernetes.io/component: query-layer
      app.kubernetes.io/instance: thanos-querier
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: thanos-query
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.35.0
      pod-template-hash: 567fbb8d4b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6823b5b2-045b-4eaf-9815-7c1173aeb2ba"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9094,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-rules"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9093,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-web"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prom-label-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"thanos-query"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"HOST_IP_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/grpc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-metrics"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-rules"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-web"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-11T11:11:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.16"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-06-11T11:11:42Z"
    name: thanos-querier-567fbb8d4b-nzc6t
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: thanos-querier-567fbb8d4b
      uid: 6823b5b2-045b-4eaf-9815-7c1173aeb2ba
    resourceVersion: "31387"
    uid: 00710434-1840-407f-85b6-5ff708fa0fad
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: query-layer
              app.kubernetes.io/instance: thanos-querier
              app.kubernetes.io/name: thanos-query
              app.kubernetes.io/part-of: openshift-monitoring
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - query
      - --grpc-address=127.0.0.1:10901
      - --http-address=127.0.0.1:9090
      - --log.format=logfmt
      - --query.replica-label=prometheus_replica
      - --query.replica-label=thanos_ruler_replica
      - --endpoint=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --query.auto-downsampling
      - --store.sd-dns-resolver=miekgdns
      - --grpc-client-tls-secure
      - --grpc-client-tls-cert=/etc/tls/grpc/client.crt
      - --grpc-client-tls-key=/etc/tls/grpc/client.key
      - --grpc-client-tls-ca=/etc/tls/grpc/ca.crt
      - --grpc-client-server-name=prometheus-grpc
      - --rule=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --target=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --web.disable-cors
      env:
      - name: HOST_IP_ADDRESS
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      imagePullPolicy: IfNotPresent
      name: thanos-query
      ports:
      - containerPort: 9090
        name: http
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 12Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000450000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/grpc
        name: secret-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d48mw
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9091
      - --upstream=http://127.0.0.1:9090
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --ignore-paths=/-/healthy,/-/ready
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 4
        httpGet:
          path: /-/healthy
          port: 9091
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: kube-rbac-proxy-web
      ports:
      - containerPort: 9091
        name: web
        protocol: TCP
      readinessProbe:
        failureThreshold: 20
        httpGet:
          path: /-/ready
          port: 9091
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-web
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d48mw
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9095
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/api/v1/query,/api/v1/query_range,/api/v1/labels,/api/v1/label/*/values,/api/v1/series
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: tenancy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d48mw
        readOnly: true
    - args:
      - --insecure-listen-address=127.0.0.1:9095
      - --upstream=http://127.0.0.1:9090
      - --label=namespace
      - --enable-label-apis
      - --error-on-replace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      imagePullPolicy: IfNotPresent
      name: prom-label-proxy
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d48mw
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9093
      - --upstream=http://127.0.0.1:9095
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/api/v1/rules,/api/v1/alerts
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-rules
      ports:
      - containerPort: 9093
        name: tenancy-rules
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d48mw
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9094
      - --upstream=http://127.0.0.1:9090
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --allow-paths=/metrics
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-metrics
      ports:
      - containerPort: 9094
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000450000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-metrics
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-d48mw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: thanos-querier-dockercfg-mp5k5
    nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000450000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c21,c15
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: thanos-querier
    serviceAccountName: thanos-querier
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: secret-thanos-querier-tls
      secret:
        defaultMode: 420
        secretName: thanos-querier-tls
    - name: secret-thanos-querier-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy
    - name: secret-thanos-querier-kube-rbac-proxy-web
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-web
    - name: secret-thanos-querier-kube-rbac-proxy-rules
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-rules
    - name: secret-thanos-querier-kube-rbac-proxy-metrics
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-metrics
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: secret-grpc-tls
      secret:
        defaultMode: 420
        secretName: thanos-querier-grpc-tls-dhqjjp8v87kee
    - name: kube-api-access-d48mw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-11T11:11:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b65c705e6e2bb32b8369453fb5599b9a590d2275654e5cd82745739712f05235
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:38Z"
    - containerID: cri-o://b4ca540e62f5b216823e26f2531e3454825706180cf491a225de20053b1cba87
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:41Z"
    - containerID: cri-o://48b2fb7723397c490a4e7a6987c77d475824aafb052bc30cfafd9ede9e78a76b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-rules
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:40Z"
    - containerID: cri-o://169b0ce23590a6d522c32d8cb7106dfff0046997d76b9eaff0fc91604bf206a8
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:592ec166fee1aabf6b7dfd82cdd541e5cb608f99c7cc41c9ad3841dd1b854776
      lastState: {}
      name: kube-rbac-proxy-web
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:37Z"
    - containerID: cri-o://dcfe99e0350f1de570bf19328e9c69566662ba3c31fec61e7f1ba90f4b15eff1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f925bb31c2c18c74b574e35352286036c72fcbb4ed95331ea4d1ba5d5b58f173
      lastState: {}
      name: prom-label-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:40Z"
    - containerID: cri-o://df310f027699d31a23263e33a8541cb9df59e1aad1a0ed5a53c38d0969fc46f3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f43437c43a1932bd4b62e7561a92cc5d85bf776a0349df7965451bc0482d4483
      lastState: {}
      name: thanos-query
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-11T11:11:37Z"
    hostIP: 10.0.128.4
    hostIPs:
    - ip: 10.0.128.4
    phase: Running
    podIP: 10.131.0.16
    podIPs:
    - ip: 10.131.0.16
    qosClass: Burstable
    startTime: "2024-06-11T11:11:33Z"
kind: PodList
metadata:
  resourceVersion: "39959"
