---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: NTU3NCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: builder
    creationTimestamp: "2024-06-11T10:52:26Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"f4b3c944-e82b-4877-a297-37d63a4657ce"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:02Z"
    name: builder-dockercfg-dbkx7
    namespace: openshift-config-operator
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: builder
      uid: f4b3c944-e82b-4877-a297-37d63a4657ce
    resourceVersion: "25962"
    uid: 130c39f6-7ace-4fb8-942d-628362cf0c55
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQvekNDQXVlZ0F3SUJBZ0lJSmxPWW5sUUdFQjB3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRjeE9ERXdNamt3TWpBZQpGdzB5TkRBMk1URXhNRFE0TWpsYUZ3MHlOakEyTVRFeE1EUTRNekJhTURBeExqQXNCZ05WQkFNVEpXMWxkSEpwClkzTXViM0JsYm5Ob2FXWjBMV052Ym1acFp5MXZjR1Z5WVhSdmNpNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURVOU1YWVltR0JaM09mVEg4Q1ZiVnZuOXFDZHh4V1Y1bHpsL0FkNXdsRwpOeFhhb1JtS2F3VlFvMzlPUkJLRzZISGZHNE40aGRrWWVscmdOOFBqaHNqMDNiN1g5WnFueTVKbUhJSVduRDdNCkN2SDRaZW5hOVJSdEt4QTJBQkxFeGtIS0VYclFXV2R1SGY2dUFsdDRDRDFKcTFkNHAvNmRPN2g0UVkwcWxkeEEKbHA1WVlLcVFpY0pqZHRTYTFLT1U0UHJySjZTK2RYTTNERVlzNlFvdGJuY21vVHBqVHEyWS93SWp2M0dVL1FMVwpkMkhOaEdEWW5oeTJod2x3ZGVyM29xU0VPeEQ3U0ZmTmI2dXQwdk0vUC8rbzlsdm9jeFUzRXJoVGRxQ1QvSUwxCmx4NUtrMkVoczJuaHRoK2g4cUkrZUNhaURyYWthaTZiMncwbTA2cVE4ak92QWdNQkFBR2pnZ0VWTUlJQkVUQU8KQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvQkFJdwpBREFkQmdOVkhRNEVGZ1FVTU1yR2w0ZTNrczM5OStSbzFrQzZrWDlvRFFNd0h3WURWUjBqQkJnd0ZvQVUya0dSCmZNMG81QjNvVXdVR1RHNHlDYmY3QU9vd1pRWURWUjBSQkY0d1hJSWxiV1YwY21samN5NXZjR1Z1YzJocFpuUXQKWTI5dVptbG5MVzl3WlhKaGRHOXlMbk4yWTRJemJXVjBjbWxqY3k1dmNHVnVjMmhwWm5RdFkyOXVabWxuTFc5dwpaWEpoZEc5eUxuTjJZeTVqYkhWemRHVnlMbXh2WTJGc01EVUdDeXNHQVFRQmtnZ1JaQUlCQkNZVEpEWTJNVFprCk1XSXpMV1kwTmpRdE5ETmtaaTA1WlRKaUxURmxPV1V4T0ROaU1UTmhOVEFOQmdrcWhraUc5dzBCQVFzRkFBT0MKQVFFQXRreE9KYUp3Q2VGTTNUOVVvZFhISDdiYmIxRHNPUGVrZGluRWRyaWVuaW1FYjQ2RnNUNmcwMjV4VmlPLwpVWEJVK0ZMRTNDV0NTMEV5N3JpZ1duclVWbDliUDZ3NGxKSHhUTmtSVXJCR0NrN2RLMmpnKzdaa2pRR1lia05XCnM4Z2VMdXJGaDVjQ1owZ3RMeGVFTXp2K0FSVmJVSjhLbjh1ZXBHVXh3VFJyUjgwYnNvd3o3aDdTV1BBS3dxY0MKd1BnSGp3UEMyMEFyTVRYbnpDVzlxU1lwOEIxaWFNTzVVM1RqU1pBWFQ3R01KTVlWREJaS1ltNDlWa1RxV3hGaAp4TVlCeVNaMXJmVXJxUTQyTlZPdENQMHBaeE15djdBZXk0Sk1TUVZyRWhoSnN5RVJveXJYTk5WaDJCeWo5UGZ5CjE0anVxc3hlVFI0V3BlaFpJOGtVd3NnbGR3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFVUQ0NBam1nQXdJQkFnSUlRZGdtVlRKUVQ0a3dEUVlKS29aSWh2Y05BUUVMQlFBd05qRTBNRElHQTFVRQpBd3dyYjNCbGJuTm9hV1owTFhObGNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVGN4T0RFd01qa3dNakFlCkZ3MHlOREEyTVRFeE1EUTRNakZhRncweU5qQTRNVEF4TURRNE1qSmFNRFl4TkRBeUJnTlZCQU1NSzI5d1pXNXoKYUdsbWRDMXpaWEoyYVdObExYTmxjblpwYm1jdGMybG5ibVZ5UURFM01UZ3hNREk1TURJd2dnRWlNQTBHQ1NxRwpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEVlA2bTdkMEdEZHBxaisyKzY0YTZpVmprOXg3dkorRXU1CkxmVXR5MWlUVnJsQVVBaGx1SWk3NDY3azEyaVorRU9NNHpad1ExK1cvTkg4SWdsNDBLaGo0cnhnbkR5eUdXKysKTnVPeTZmZzhBWHExdDJGMmU0ckw1a3g1Q2wwVStDbWNHSkVJL1dnLzB2OWtnRmJWUEZVL1hxQms2aTFkbTJiRgp0MEx3bmpVNmlyL2xjMVcrZWhZQWxwUWhBbm5xSzYrY2d3eU5zMExhSFhLQzN2SEhzU2kvZGJHOGV6MExtZ2s2Cmh4clRLQzNiQ0xFTmFidmZzT0IxeFpXdkVic2swRDM0Qi9RRHo3QVdCS05BeUpEdU84c0k4a2wrNmdGRkJ3bDgKbldTTkZyYXdsdUZ2a2RjQUlVSXVTZG5DajV4TWpaaEltc0haaHE1YURlN2UxaUpDVmI5WkFnTUJBQUdqWXpCaApNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGFRWkY4CnpTamtIZWhUQlFaTWJqSUp0L3NBNmpBZkJnTlZIU01FR0RBV2dCVGFRWkY4elNqa0hlaFRCUVpNYmpJSnQvc0EKNmpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWY3QXgvaWltbUpjYlkwQTdtMXBrQVlOWU9NNmZSUDcySVNHdQo2YytTdDc3RUFEQTlyM2ZZbjNqdElKL0JyL3Juc3hOT0F3QWNHeFVrb2ZiOFBhOElGTzYxTDhheWtjRVpsak0yCnQ5OHE4OTB2L0hXR3QrbXNVcWthVkRhZ0VOL3dVVm5rYkw4cWN2STVJNENNR0FucU9iM0NvY3l1LzZOZ3BGbHcKNUVrUDJuY3hhRE42V0lZZTdEWnZaenNMSGdrSGJxRktxMlo5TlhKb3laVDNvaDh3bFc4WW14VXhRLzg3QlMvbwpsMnVqL0E5SHVBWUIrMEYwUVJoMTY3akNTMUJRMG5LMWhJbnhKOVprelBNY3BMZDVaNUpDNkU3MXNoUXB4MDR1CjRlZ1F6MjhpY1RyeGpVRWNaWFloWDZhSis0ZUhSRS9Ib3hzdDZRQU94MVdLNmtPNnRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: MTY3OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/description: 'Secret contains a pair signed serving certificate/key
        that is generated by Service CA operator for service/metrics with hostname
        metrics.openshift-config-operator.svc and is annotated to the service with
        annotating a service resource with ''service.beta.openshift.io/serving-cert-secret-name:
        config-operator-serving-cert''. The certificate is valid for 2 years.'
      openshift.io/owning-component: service-ca
      service.alpha.openshift.io/expiry: "2026-06-11T10:48:30Z"
      service.alpha.openshift.io/originating-service-name: metrics
      service.alpha.openshift.io/originating-service-uid: 6616d1b3-f464-43df-9e2b-1e9e183b13a5
      service.beta.openshift.io/expiry: "2026-06-11T10:48:30Z"
    creationTimestamp: "2024-06-11T10:48:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/description: {}
            f:openshift.io/owning-component: {}
            f:service.alpha.openshift.io/expiry: {}
            f:service.alpha.openshift.io/originating-service-name: {}
            f:service.alpha.openshift.io/originating-service-uid: {}
            f:service.beta.openshift.io/expiry: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6616d1b3-f464-43df-9e2b-1e9e183b13a5"}: {}
        f:type: {}
      manager: service-ca-operator
      operation: Update
      time: "2024-06-11T10:48:30Z"
    name: config-operator-serving-cert
    namespace: openshift-config-operator
    ownerReferences:
    - apiVersion: v1
      kind: Service
      name: metrics
      uid: 6616d1b3-f464-43df-9e2b-1e9e183b13a5
    resourceVersion: "8012"
    uid: 8dfd00de-41ac-4b03-8dcb-74e31d8012ab
  type: kubernetes.io/tls
- apiVersion: v1
  data:
    .dockercfg: NTU3NCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: default
    creationTimestamp: "2024-06-11T10:52:25Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"b5f1953c-9fbf-4dd0-a892-c33aea177a7c"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:02Z"
    name: default-dockercfg-lcwxt
    namespace: openshift-config-operator
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: default
      uid: b5f1953c-9fbf-4dd0-a892-c33aea177a7c
    resourceVersion: "25970"
    uid: e5546a88-7698-42c4-b3e9-7e5999e8173b
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTU4NiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: deployer
    creationTimestamp: "2024-06-11T10:52:26Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"d6ca1ba0-ce19-478e-82f8-b8e405ef80aa"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:02Z"
    name: deployer-dockercfg-n5vnr
    namespace: openshift-config-operator
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: deployer
      uid: d6ca1ba0-ce19-478e-82f8-b8e405ef80aa
    resourceVersion: "25974"
    uid: 1cba98ca-62b8-4ab3-b75d-c2d6d23f3766
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTg2MiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: openshift-config-operator
    creationTimestamp: "2024-06-11T10:52:25Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"034f5713-bf42-42ab-8dd3-3c218b205374"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2024-06-11T10:52:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2024-06-11T11:07:02Z"
    name: openshift-config-operator-dockercfg-x7mqg
    namespace: openshift-config-operator
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: openshift-config-operator
      uid: 034f5713-bf42-42ab-8dd3-3c218b205374
    resourceVersion: "25976"
    uid: 57763a79-a339-4aec-b296-a42b0fb45358
  type: kubernetes.io/dockercfg
kind: SecretList
metadata:
  resourceVersion: "39880"
