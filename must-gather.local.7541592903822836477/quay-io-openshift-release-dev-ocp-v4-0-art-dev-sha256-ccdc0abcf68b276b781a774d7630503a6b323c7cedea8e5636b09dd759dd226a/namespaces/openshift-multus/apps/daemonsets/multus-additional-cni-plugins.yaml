---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
    kubernetes.io/description: |
      This daemon installs and configures auxiliary CNI plugins on each node.
    release.openshift.io/version: 4.16.0-0.nightly-2024-06-10-211334
  creationTimestamp: "2024-06-11T10:46:54Z"
  generation: 1
  labels:
    networkoperator.openshift.io/generates-operator-status: stand-alone
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:kubernetes.io/description: {}
          f:release.openshift.io/version: {}
        f:labels:
          f:networkoperator.openshift.io/generates-operator-status: {}
        f:ownerReferences:
          k:{"uid":"62ee1ce2-90a7-43aa-95fc-751c249264a6"}: {}
      f:spec:
        f:selector: {}
        f:template:
          f:metadata:
            f:annotations:
              f:target.workload.openshift.io/management: {}
            f:labels:
              f:app: {}
              f:component: {}
              f:openshift.io/component: {}
              f:type: {}
          f:spec:
            f:containers:
              k:{"name":"kube-multus-additional-cni-plugins"}:
                .: {}
                f:args: {}
                f:command: {}
                f:image: {}
                f:name: {}
                f:resources:
                  f:requests:
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  f:privileged: {}
                f:terminationMessagePolicy: {}
            f:hostNetwork: {}
            f:initContainers:
              k:{"name":"bond-cni-plugin"}:
                .: {}
                f:command: {}
                f:env:
                  k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:name: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  k:{"mountPath":"/entrypoint"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/host/etc/os-release"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/host/opt/cni/bin"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"cni-plugins"}:
                .: {}
                f:command: {}
                f:env:
                  k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:name: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  k:{"mountPath":"/entrypoint"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/host/etc/cni/tuning/"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/host/etc/os-release"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/host/opt/cni/bin"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/sysctls"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"egress-router-binary-copy"}:
                .: {}
                f:command: {}
                f:env:
                  k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:name: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  k:{"mountPath":"/entrypoint"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/host/etc/os-release"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/host/opt/cni/bin"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"routeoverride-cni"}:
                .: {}
                f:command: {}
                f:env:
                  k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:name: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  k:{"mountPath":"/entrypoint"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/host/etc/os-release"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/host/opt/cni/bin"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"whereabouts-cni"}:
                .: {}
                f:command: {}
                f:env:
                  k:{"name":"CNI_BIN_DIR"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CNI_CONF_DIR"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"KUBERNETES_SERVICE_HOST"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"KUBERNETES_SERVICE_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"SLEEP"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"WHEREABOUTS_NAMESPACE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:name: {}
                f:resources:
                  f:requests:
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  k:{"mountPath":"/host/etc/cni/net.d"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/host/opt/cni/bin"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"whereabouts-cni-bincopy"}:
                .: {}
                f:command: {}
                f:env:
                  k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:name: {}
                f:resources:
                  f:requests:
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  k:{"mountPath":"/entrypoint"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                  k:{"mountPath":"/host/etc/os-release"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/host/opt/cni/bin"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:nodeSelector: {}
            f:priorityClassName: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
            f:tolerations: {}
            f:volumes:
              k:{"name":"cni-binary-copy"}:
                .: {}
                f:configMap:
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"cni-sysctl-allowlist"}:
                .: {}
                f:configMap:
                  f:defaultMode: {}
                  f:name: {}
                f:name: {}
              k:{"name":"cnibin"}:
                .: {}
                f:hostPath:
                  f:path: {}
                f:name: {}
              k:{"name":"multus-cni-dir"}:
                .: {}
                f:hostPath:
                  f:path: {}
                f:name: {}
              k:{"name":"os-release"}:
                .: {}
                f:hostPath:
                  f:path: {}
                  f:type: {}
                f:name: {}
              k:{"name":"system-cni-dir"}:
                .: {}
                f:hostPath:
                  f:path: {}
                f:name: {}
              k:{"name":"tuning-conf-dir"}:
                .: {}
                f:hostPath:
                  f:path: {}
                  f:type: {}
                f:name: {}
        f:updateStrategy:
          f:rollingUpdate:
            f:maxUnavailable: {}
          f:type: {}
    manager: cluster-network-operator/operconfig
    operation: Apply
    time: "2024-06-11T10:46:54Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:currentNumberScheduled: {}
        f:desiredNumberScheduled: {}
        f:numberAvailable: {}
        f:numberReady: {}
        f:observedGeneration: {}
        f:updatedNumberScheduled: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2024-06-11T10:59:45Z"
  name: multus-additional-cni-plugins
  namespace: openshift-multus
  ownerReferences:
  - apiVersion: operator.openshift.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: Network
    name: cluster
    uid: 62ee1ce2-90a7-43aa-95fc-751c249264a6
  resourceVersion: "20819"
  uid: 76cf4995-72ea-4c3d-8010-ae3678232daa
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: multus-additional-cni-plugins
  template:
    metadata:
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      creationTimestamp: null
      labels:
        app: multus-additional-cni-plugins
        component: network
        openshift.io/component: network
        type: infra
    spec:
      containers:
      - args:
        - |
          trap : TERM INT; sleep infinity & wait
        command:
        - /bin/bash
        - -ec
        - --
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9518d76d829701a272518e2eeed8438692e49392b35d0f4b7dc897726e32824a
        imagePullPolicy: IfNotPresent
        name: kube-multus-additional-cni-plugins
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      hostNetwork: true
      initContainers:
      - command:
        - /entrypoint/cnibincopy.sh
        env:
        - name: RHEL8_SOURCE_DIRECTORY
          value: /usr/src/egress-router-cni/rhel8/bin/
        - name: RHEL9_SOURCE_DIRECTORY
          value: /usr/src/egress-router-cni/rhel9/bin/
        - name: DEFAULT_SOURCE_DIRECTORY
          value: /usr/src/egress-router-cni/bin/
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b09fd8c20080a440e2fb91e64deed04b5a8678296f0376dfa2f2908941b5309a
        imagePullPolicy: IfNotPresent
        name: egress-router-binary-copy
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /entrypoint
          name: cni-binary-copy
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
      - command:
        - /bin/bash
        - -c
        - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
        env:
        - name: RHEL8_SOURCE_DIRECTORY
          value: /usr/src/plugins/rhel8/bin/
        - name: RHEL9_SOURCE_DIRECTORY
          value: /usr/src/plugins/rhel9/bin/
        - name: DEFAULT_SOURCE_DIRECTORY
          value: /usr/src/plugins/bin/
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:443e172a5bba1222249dea114b13e2df0d1b0f7992ef3b774723c8aec78bb522
        imagePullPolicy: IfNotPresent
        name: cni-plugins
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /entrypoint
          name: cni-binary-copy
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
        - mountPath: /host/etc/cni/tuning/
          name: tuning-conf-dir
        - mountPath: /sysctls
          name: cni-sysctl-allowlist
      - command:
        - /entrypoint/cnibincopy.sh
        env:
        - name: RHEL8_SOURCE_DIRECTORY
          value: /bondcni/rhel8/
        - name: RHEL9_SOURCE_DIRECTORY
          value: /bondcni/rhel9/
        - name: DEFAULT_SOURCE_DIRECTORY
          value: /bondcni/rhel9/
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:492aea82e8accb6e690e9251e98bf5592433f92ca4d3df9bcad7af44a482559d
        imagePullPolicy: IfNotPresent
        name: bond-cni-plugin
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /entrypoint
          name: cni-binary-copy
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
      - command:
        - /entrypoint/cnibincopy.sh
        env:
        - name: RHEL8_SOURCE_DIRECTORY
          value: /usr/src/route-override/rhel8/bin/
        - name: RHEL9_SOURCE_DIRECTORY
          value: /usr/src/route-override/rhel9/bin/
        - name: DEFAULT_SOURCE_DIRECTORY
          value: /usr/src/route-override/bin/
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:68a95a354a5bb6c5312ebd4670ae305b8bf0123ed426048ed5befcbfeeff3fda
        imagePullPolicy: IfNotPresent
        name: routeoverride-cni
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /entrypoint
          name: cni-binary-copy
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
      - command:
        - /entrypoint/cnibincopy.sh
        env:
        - name: RHEL8_SOURCE_DIRECTORY
          value: /usr/src/whereabouts/rhel8/bin/
        - name: RHEL9_SOURCE_DIRECTORY
          value: /usr/src/whereabouts/rhel9/bin/
        - name: DEFAULT_SOURCE_DIRECTORY
          value: /usr/src/whereabouts/bin/
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a8206d4649f0806073d7dd4df10dcbbb47e35e29d0f51d15af5c0d1ba86c3a9d
        imagePullPolicy: IfNotPresent
        name: whereabouts-cni-bincopy
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /entrypoint
          name: cni-binary-copy
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/os-release
          name: os-release
          readOnly: true
      - command:
        - /bin/sh
        - -c
        - |
          #!/bin/sh

          set -u -e

          CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
          WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
          CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

          # Make a whereabouts.d directory (for our kubeconfig)

          mkdir -p $CNI_CONF_DIR/whereabouts.d
          WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
          WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

          # ------------------------------- Generate a "kube-config"
          SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
          KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
          SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
          SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


          # Check if we're running as a k8s pod.
          if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
            # We're running as a k8d pod - expect some variables.
            if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
              error "KUBERNETES_SERVICE_HOST not set"; exit 1;
            fi
            if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
              error "KUBERNETES_SERVICE_PORT not set"; exit 1;
            fi

            if [ "$SKIP_TLS_VERIFY" == "true" ]; then
              TLS_CFG="insecure-skip-tls-verify: true"
            elif [ -f "$KUBE_CA_FILE" ]; then
              TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
            fi

            # Write a kubeconfig file for the CNI plugin.  Do this
            # to skip TLS verification for now.  We should eventually support
            # writing more complete kubeconfig files. This is only used
            # if the provided CNI network config references it.
            touch $WHEREABOUTS_KUBECONFIG
            chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
            cat > $WHEREABOUTS_KUBECONFIG <<EOF
          # Kubeconfig file for Multus CNI plugin.
          apiVersion: v1
          kind: Config
          clusters:
          - name: local
            cluster:
              server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
              $TLS_CFG
          users:
          - name: whereabouts
            user:
              token: "${SERVICEACCOUNT_TOKEN}"
          contexts:
          - name: whereabouts-context
            context:
              cluster: local
              user: whereabouts
              namespace: ${WHEREABOUTS_NAMESPACE}
          current-context: whereabouts-context
          EOF

          # Kubeconfig file for Whereabouts CNI plugin.
          cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
          {
            "datastore": "kubernetes",
            "kubernetes": {
              "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
            },
            "reconciler_cron_expression": "30 4 * * *",
            "log_level": "debug"
          }
          EOF
          chmod 600 $WHEREABOUTS_GLOBALCONFIG

          else
            warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
          fi

          # copy whereabouts to the cni bin dir
          # SKIPPED DUE TO FIPS COPY.
          # cp -f /whereabouts $CNI_BIN_DIR

          # ---------------------- end Generate a "kube-config".

          # Unless told otherwise, sleep forever.
          # This prevents Kubernetes from restarting the pod repeatedly.
          should_sleep=${SLEEP:-"true"}
          echo "Done configuring CNI.  Sleep=$should_sleep"
          while [ "$should_sleep" == "true"  ]; do
              sleep 1000000000000
          done
        env:
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        - name: KUBERNETES_SERVICE_HOST
          value: api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
        - name: CNI_BIN_DIR
          value: /host/opt/cni/bin/
        - name: CNI_CONF_DIR
          value: /host/etc/cni/net.d
        - name: SLEEP
          value: "false"
        - name: WHEREABOUTS_NAMESPACE
          value: openshift-multus
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a8206d4649f0806073d7dd4df10dcbbb47e35e29d0f51d15af5c0d1ba86c3a9d
        imagePullPolicy: IfNotPresent
        name: whereabouts-cni
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cnibin
        - mountPath: /host/etc/cni/net.d
          name: system-cni-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: multus-ancillary-tools
      serviceAccountName: multus-ancillary-tools
      terminationGracePeriodSeconds: 10
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /etc/kubernetes/cni/net.d
          type: ""
        name: system-cni-dir
      - hostPath:
          path: /var/run/multus/cni/net.d
          type: ""
        name: multus-cni-dir
      - hostPath:
          path: /var/lib/cni/bin
          type: ""
        name: cnibin
      - hostPath:
          path: /etc/os-release
          type: File
        name: os-release
      - configMap:
          defaultMode: 484
          name: cni-copy-resources
        name: cni-binary-copy
      - hostPath:
          path: /etc/cni/tuning/
          type: DirectoryOrCreate
        name: tuning-conf-dir
      - configMap:
          defaultMode: 484
          name: default-cni-sysctl-allowlist
        name: cni-sysctl-allowlist
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 10%
    type: RollingUpdate
status:
  currentNumberScheduled: 6
  desiredNumberScheduled: 6
  numberAvailable: 6
  numberMisscheduled: 0
  numberReady: 6
  observedGeneration: 1
  updatedNumberScheduled: 6
