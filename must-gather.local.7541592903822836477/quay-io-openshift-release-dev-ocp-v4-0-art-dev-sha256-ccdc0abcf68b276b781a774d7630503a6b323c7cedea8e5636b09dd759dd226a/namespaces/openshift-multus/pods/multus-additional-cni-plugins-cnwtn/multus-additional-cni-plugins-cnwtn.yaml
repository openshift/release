---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2024-06-11T10:56:26Z"
  generateName: multus-additional-cni-plugins-
  labels:
    app: multus-additional-cni-plugins
    component: network
    controller-revision-hash: 8d9664b97
    openshift.io/component: network
    pod-template-generation: "1"
    type: infra
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:component: {}
          f:controller-revision-hash: {}
          f:openshift.io/component: {}
          f:pod-template-generation: {}
          f:type: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"76cf4995-72ea-4c3d-8010-ae3678232daa"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:nodeAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:containers:
          k:{"name":"kube-multus-additional-cni-plugins"}:
            .: {}
            f:args: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:privileged: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:initContainers:
          .: {}
          k:{"name":"bond-cni-plugin"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/entrypoint"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"cni-plugins"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/entrypoint"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/cni/tuning/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/sysctls"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"egress-router-binary-copy"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/entrypoint"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"routeoverride-cni"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/entrypoint"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"whereabouts-cni"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"CNI_BIN_DIR"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CNI_CONF_DIR"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_HOST"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_PORT"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"SLEEP"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"WHEREABOUTS_NAMESPACE"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/host/etc/cni/net.d"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"whereabouts-cni-bincopy"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/entrypoint"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"cni-binary-copy"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"cni-sysctl-allowlist"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"cnibin"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"multus-cni-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"os-release"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"system-cni-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"tuning-conf-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2024-06-11T10:56:26Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:initContainerStatuses: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.0.128.4"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2024-06-11T11:00:29Z"
  name: multus-additional-cni-plugins-cnwtn
  namespace: openshift-multus
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: multus-additional-cni-plugins
    uid: 76cf4995-72ea-4c3d-8010-ae3678232daa
  resourceVersion: "21287"
  uid: 68000647-1379-4662-9e66-ac54f125dac7
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
  containers:
  - args:
    - |
      trap : TERM INT; sleep infinity & wait
    command:
    - /bin/bash
    - -ec
    - --
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9518d76d829701a272518e2eeed8438692e49392b35d0f4b7dc897726e32824a
    imagePullPolicy: IfNotPresent
    name: kube-multus-additional-cni-plugins
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8gdph
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  initContainers:
  - command:
    - /entrypoint/cnibincopy.sh
    env:
    - name: RHEL8_SOURCE_DIRECTORY
      value: /usr/src/egress-router-cni/rhel8/bin/
    - name: RHEL9_SOURCE_DIRECTORY
      value: /usr/src/egress-router-cni/rhel9/bin/
    - name: DEFAULT_SOURCE_DIRECTORY
      value: /usr/src/egress-router-cni/bin/
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b09fd8c20080a440e2fb91e64deed04b5a8678296f0376dfa2f2908941b5309a
    imagePullPolicy: IfNotPresent
    name: egress-router-binary-copy
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8gdph
      readOnly: true
  - command:
    - /bin/bash
    - -c
    - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
    env:
    - name: RHEL8_SOURCE_DIRECTORY
      value: /usr/src/plugins/rhel8/bin/
    - name: RHEL9_SOURCE_DIRECTORY
      value: /usr/src/plugins/rhel9/bin/
    - name: DEFAULT_SOURCE_DIRECTORY
      value: /usr/src/plugins/bin/
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:443e172a5bba1222249dea114b13e2df0d1b0f7992ef3b774723c8aec78bb522
    imagePullPolicy: IfNotPresent
    name: cni-plugins
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /host/etc/cni/tuning/
      name: tuning-conf-dir
    - mountPath: /sysctls
      name: cni-sysctl-allowlist
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8gdph
      readOnly: true
  - command:
    - /entrypoint/cnibincopy.sh
    env:
    - name: RHEL8_SOURCE_DIRECTORY
      value: /bondcni/rhel8/
    - name: RHEL9_SOURCE_DIRECTORY
      value: /bondcni/rhel9/
    - name: DEFAULT_SOURCE_DIRECTORY
      value: /bondcni/rhel9/
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:492aea82e8accb6e690e9251e98bf5592433f92ca4d3df9bcad7af44a482559d
    imagePullPolicy: IfNotPresent
    name: bond-cni-plugin
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8gdph
      readOnly: true
  - command:
    - /entrypoint/cnibincopy.sh
    env:
    - name: RHEL8_SOURCE_DIRECTORY
      value: /usr/src/route-override/rhel8/bin/
    - name: RHEL9_SOURCE_DIRECTORY
      value: /usr/src/route-override/rhel9/bin/
    - name: DEFAULT_SOURCE_DIRECTORY
      value: /usr/src/route-override/bin/
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:68a95a354a5bb6c5312ebd4670ae305b8bf0123ed426048ed5befcbfeeff3fda
    imagePullPolicy: IfNotPresent
    name: routeoverride-cni
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8gdph
      readOnly: true
  - command:
    - /entrypoint/cnibincopy.sh
    env:
    - name: RHEL8_SOURCE_DIRECTORY
      value: /usr/src/whereabouts/rhel8/bin/
    - name: RHEL9_SOURCE_DIRECTORY
      value: /usr/src/whereabouts/rhel9/bin/
    - name: DEFAULT_SOURCE_DIRECTORY
      value: /usr/src/whereabouts/bin/
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a8206d4649f0806073d7dd4df10dcbbb47e35e29d0f51d15af5c0d1ba86c3a9d
    imagePullPolicy: IfNotPresent
    name: whereabouts-cni-bincopy
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /entrypoint
      name: cni-binary-copy
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8gdph
      readOnly: true
  - command:
    - /bin/sh
    - -c
    - |
      #!/bin/sh

      set -u -e

      CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
      WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
      CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

      # Make a whereabouts.d directory (for our kubeconfig)

      mkdir -p $CNI_CONF_DIR/whereabouts.d
      WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
      WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

      # ------------------------------- Generate a "kube-config"
      SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
      KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
      SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
      SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


      # Check if we're running as a k8s pod.
      if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
        # We're running as a k8d pod - expect some variables.
        if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
          error "KUBERNETES_SERVICE_HOST not set"; exit 1;
        fi
        if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
          error "KUBERNETES_SERVICE_PORT not set"; exit 1;
        fi

        if [ "$SKIP_TLS_VERIFY" == "true" ]; then
          TLS_CFG="insecure-skip-tls-verify: true"
        elif [ -f "$KUBE_CA_FILE" ]; then
          TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
        fi

        # Write a kubeconfig file for the CNI plugin.  Do this
        # to skip TLS verification for now.  We should eventually support
        # writing more complete kubeconfig files. This is only used
        # if the provided CNI network config references it.
        touch $WHEREABOUTS_KUBECONFIG
        chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
        cat > $WHEREABOUTS_KUBECONFIG <<EOF
      # Kubeconfig file for Multus CNI plugin.
      apiVersion: v1
      kind: Config
      clusters:
      - name: local
        cluster:
          server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
          $TLS_CFG
      users:
      - name: whereabouts
        user:
          token: "${SERVICEACCOUNT_TOKEN}"
      contexts:
      - name: whereabouts-context
        context:
          cluster: local
          user: whereabouts
          namespace: ${WHEREABOUTS_NAMESPACE}
      current-context: whereabouts-context
      EOF

      # Kubeconfig file for Whereabouts CNI plugin.
      cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
      {
        "datastore": "kubernetes",
        "kubernetes": {
          "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
        },
        "reconciler_cron_expression": "30 4 * * *",
        "log_level": "debug"
      }
      EOF
      chmod 600 $WHEREABOUTS_GLOBALCONFIG

      else
        warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
      fi

      # copy whereabouts to the cni bin dir
      # SKIPPED DUE TO FIPS COPY.
      # cp -f /whereabouts $CNI_BIN_DIR

      # ---------------------- end Generate a "kube-config".

      # Unless told otherwise, sleep forever.
      # This prevents Kubernetes from restarting the pod repeatedly.
      should_sleep=${SLEEP:-"true"}
      echo "Done configuring CNI.  Sleep=$should_sleep"
      while [ "$should_sleep" == "true"  ]; do
          sleep 1000000000000
      done
    env:
    - name: KUBERNETES_SERVICE_PORT
      value: "6443"
    - name: KUBERNETES_SERVICE_HOST
      value: api-int.ci-op-9xx71rvq-1e28e.qe.azure.devcluster.openshift.com
    - name: CNI_BIN_DIR
      value: /host/opt/cni/bin/
    - name: CNI_CONF_DIR
      value: /host/etc/cni/net.d
    - name: SLEEP
      value: "false"
    - name: WHEREABOUTS_NAMESPACE
      value: openshift-multus
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a8206d4649f0806073d7dd4df10dcbbb47e35e29d0f51d15af5c0d1ba86c3a9d
    imagePullPolicy: IfNotPresent
    name: whereabouts-cni
    resources:
      requests:
        cpu: 10m
        memory: 10Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /host/opt/cni/bin
      name: cnibin
    - mountPath: /host/etc/cni/net.d
      name: system-cni-dir
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8gdph
      readOnly: true
  nodeName: ci-op-9xx71rvq-1e28e-w667k-worker-centralus1-k2hfp
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: multus-ancillary-tools
  serviceAccountName: multus-ancillary-tools
  terminationGracePeriodSeconds: 10
  tolerations:
  - operator: Exists
  volumes:
  - hostPath:
      path: /etc/kubernetes/cni/net.d
      type: ""
    name: system-cni-dir
  - hostPath:
      path: /var/run/multus/cni/net.d
      type: ""
    name: multus-cni-dir
  - hostPath:
      path: /var/lib/cni/bin
      type: ""
    name: cnibin
  - hostPath:
      path: /etc/os-release
      type: File
    name: os-release
  - configMap:
      defaultMode: 484
      name: cni-copy-resources
    name: cni-binary-copy
  - hostPath:
      path: /etc/cni/tuning/
      type: DirectoryOrCreate
    name: tuning-conf-dir
  - configMap:
      defaultMode: 484
      name: default-cni-sysctl-allowlist
    name: cni-sysctl-allowlist
  - name: kube-api-access-8gdph
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:57:22Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:57:55Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:57:56Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:57:56Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-06-11T10:56:26Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://e2c764c83d0f2e7faf5375e88977f8fc792895bc8b68e17ed78e7bba5dde0d10
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9518d76d829701a272518e2eeed8438692e49392b35d0f4b7dc897726e32824a
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9518d76d829701a272518e2eeed8438692e49392b35d0f4b7dc897726e32824a
    lastState: {}
    name: kube-multus-additional-cni-plugins
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-06-11T10:57:56Z"
  hostIP: 10.0.128.4
  hostIPs:
  - ip: 10.0.128.4
  initContainerStatuses:
  - containerID: cri-o://217d536aa8036c602c57db1b31d0e3ed6c7564222d38349b45aae04bd3913d71
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b09fd8c20080a440e2fb91e64deed04b5a8678296f0376dfa2f2908941b5309a
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b09fd8c20080a440e2fb91e64deed04b5a8678296f0376dfa2f2908941b5309a
    lastState: {}
    name: egress-router-binary-copy
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://217d536aa8036c602c57db1b31d0e3ed6c7564222d38349b45aae04bd3913d71
        exitCode: 0
        finishedAt: "2024-06-11T10:57:22Z"
        reason: Completed
        startedAt: "2024-06-11T10:57:22Z"
  - containerID: cri-o://50f26ee08fd3bb4532bdd882f7d1fdf57bd5fc2b838a2e29dfbda5d9220d2b72
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:443e172a5bba1222249dea114b13e2df0d1b0f7992ef3b774723c8aec78bb522
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:443e172a5bba1222249dea114b13e2df0d1b0f7992ef3b774723c8aec78bb522
    lastState: {}
    name: cni-plugins
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://50f26ee08fd3bb4532bdd882f7d1fdf57bd5fc2b838a2e29dfbda5d9220d2b72
        exitCode: 0
        finishedAt: "2024-06-11T10:57:41Z"
        reason: Completed
        startedAt: "2024-06-11T10:57:41Z"
  - containerID: cri-o://9e348380d8fdef082c38a65a145dd633eeafa7db889d6848bc47ac9973eab29f
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:492aea82e8accb6e690e9251e98bf5592433f92ca4d3df9bcad7af44a482559d
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:492aea82e8accb6e690e9251e98bf5592433f92ca4d3df9bcad7af44a482559d
    lastState: {}
    name: bond-cni-plugin
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://9e348380d8fdef082c38a65a145dd633eeafa7db889d6848bc47ac9973eab29f
        exitCode: 0
        finishedAt: "2024-06-11T10:57:43Z"
        reason: Completed
        startedAt: "2024-06-11T10:57:43Z"
  - containerID: cri-o://aef31c04d195b2b900a393de10121e78fbec5888e59e41ad298891a0406a74b1
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:68a95a354a5bb6c5312ebd4670ae305b8bf0123ed426048ed5befcbfeeff3fda
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:68a95a354a5bb6c5312ebd4670ae305b8bf0123ed426048ed5befcbfeeff3fda
    lastState: {}
    name: routeoverride-cni
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://aef31c04d195b2b900a393de10121e78fbec5888e59e41ad298891a0406a74b1
        exitCode: 0
        finishedAt: "2024-06-11T10:57:47Z"
        reason: Completed
        startedAt: "2024-06-11T10:57:47Z"
  - containerID: cri-o://ee03e6de39300adc8ef37db6f9b763e26f54500a0044488d00b0f801c7ef7127
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a8206d4649f0806073d7dd4df10dcbbb47e35e29d0f51d15af5c0d1ba86c3a9d
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a8206d4649f0806073d7dd4df10dcbbb47e35e29d0f51d15af5c0d1ba86c3a9d
    lastState: {}
    name: whereabouts-cni-bincopy
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://ee03e6de39300adc8ef37db6f9b763e26f54500a0044488d00b0f801c7ef7127
        exitCode: 0
        finishedAt: "2024-06-11T10:57:53Z"
        reason: Completed
        startedAt: "2024-06-11T10:57:53Z"
  - containerID: cri-o://ef114fb2667eac77ecb0c4a7ee4a9a1169d217262cd67561fbc545d8c720b7b3
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a8206d4649f0806073d7dd4df10dcbbb47e35e29d0f51d15af5c0d1ba86c3a9d
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a8206d4649f0806073d7dd4df10dcbbb47e35e29d0f51d15af5c0d1ba86c3a9d
    lastState: {}
    name: whereabouts-cni
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://ef114fb2667eac77ecb0c4a7ee4a9a1169d217262cd67561fbc545d8c720b7b3
        exitCode: 0
        finishedAt: "2024-06-11T10:57:55Z"
        reason: Completed
        startedAt: "2024-06-11T10:57:55Z"
  phase: Running
  podIP: 10.0.128.4
  podIPs:
  - ip: 10.0.128.4
  qosClass: Burstable
  startTime: "2024-06-11T10:56:46Z"
