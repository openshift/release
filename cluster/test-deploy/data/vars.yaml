# Package and target versions

deployment_type: origin
ansible_pkg_mgr: yum
inventory_ip_type: external

openshift_disable_check: disk_availability,docker_image_availability,memory_availability,docker_storage
openshift_additional_repos: [
  {"name": "origin-pr", "baseurl": "{{ openshift_test_repo }}", "enabled": 1, "gpgcheck": 0},
  {"name": "origin-pr-dependencies", "baseurl": "http://mirror.centos.org/centos/7/paas/x86_64/openshift-origin/", "enabled": 1, "gpgcheck": 0}
  ]

# URLs and certs

openshift_master_cluster_public_hostname: api.{{ lookup('env', 'INSTANCE_PREFIX') | mandatory }}.origin-ci-int-gce.dev.rhcloud.com
openshift_master_cluster_hostname: internal-api.{{ lookup('env', 'INSTANCE_PREFIX') | mandatory }}.origin-ci-int-gce.dev.rhcloud.com
wildcard_zone: apps.{{ lookup('env', 'INSTANCE_PREFIX') | mandatory }}.origin-ci-int-gce.dev.rhcloud.com
openshift_master_public_api_url: "https://api.{{ lookup('env', 'INSTANCE_PREFIX') | mandatory }}.origin-ci-int-gce.dev.rhcloud.com/"
openshift_master_public_console_url: "https://api.{{ lookup('env', 'INSTANCE_PREFIX') | mandatory }}.origin-ci-int-gce.dev.rhcloud.com/console"

openshift_template_service_broker_namespaces: [ "openshift" ]
# Disabled until bootstrapping is fixed
ansible_service_broker_install: false
openshift_enable_service_catalog: false
template_service_broker_install: false

public_hosted_zone: origin-ci-int-gce.dev.rhcloud.com
dns_managed_zone: origin-ci-int-gce
console_port: 443
internal_console_port: 8443
openshift_master_api_port: "8443"
openshift_master_console_port: "8443"
openshift_node_port_range: 30000-32000
openshift_node_open_ports: [{"service":"Router stats port","port":"1936/tcp"},{"service":"Allowed open host ports","port":"9000-10000/tcp"},{"service":"Allowed open host ports","port":"9000-10000/udp"}]

# Authentication and authorization

openshift_master_identity_providers: [{"name": "allow_all", "login": "true", "challenge": "true", "kind": "AllowAllPasswordIdentityProvider"}]

# Post config setting sizes

openshift_hosted_router_replicas: 1
openshift_hosted_registry_replicas: 1
openshift_schedulable: True

openshift_hosted_registry_storage_gcs_keyfile: "{{ files_dir }}/gce.json"
openshift_hosted_registry_storage_kind: object
openshift_hosted_registry_storage_provider: gcs
openshift_hosted_registry_storage_gcs_bucket: origin-ci-test-{{ lookup('env', 'INSTANCE_PREFIX') | mandatory }}
provision_gce_docker_storage_driver: overlay2

provision_custom_repositories: [
  {
    "name": "oso-rhui-rhel-server-releases",
    "baseurl": "https://mirror.ops.rhcloud.com/libra/rhui-rhel-server-7-releases/
        https://use-mirror1.ops.rhcloud.com/libra/rhui-rhel-server-7-releases/
        https://use-mirror2.ops.rhcloud.com/libra/rhui-rhel-server-7-releases/
        https://euw-mirror1.ops.rhcloud.com/libra/rhui-rhel-server-7-releases/
        https://gce-mirror1.ops.rhcloud.com/libra/rhui-rhel-server-7-releases/
        https://gce-mirror2.ops.rhcloud.com/libra/rhui-rhel-server-7-releases/",
    "sslverify": "false",
    "sslclientkey": "ops-mirror.pem",
    "sslclientcert": "ops-mirror.pem",
    "failovermethod": "priority",
    "gpgcheck": 1,
    "gpgkey": "https://mirror.ops.rhcloud.com/libra/keys/RPM-GPG-KEY-redhat-release https://mirror.ops.rhcloud.com/libra/keys/RPM-GPG-KEY-redhat-beta https://mirror.ops.rhcloud.com/libra/keys/RPM-GPG-KEY-redhat-openshifthosted"
  },
  {
    "name": "oso-rhui-rhel-server-extras",
    "baseurl": "https://mirror.ops.rhcloud.com/libra/rhui-rhel-server-7-extras/
        https://use-mirror1.ops.rhcloud.com/libra/rhui-rhel-server-7-extras/
        https://use-mirror2.ops.rhcloud.com/libra/rhui-rhel-server-7-extras/
        https://euw-mirror1.ops.rhcloud.com/libra/rhui-rhel-server-7-extras/
        https://gce-mirror1.ops.rhcloud.com/libra/rhui-rhel-server-7-extras/
        https://gce-mirror2.ops.rhcloud.com/libra/rhui-rhel-server-7-extras/",
    "sslverify": "false",
    "sslclientkey": "ops-mirror.pem",
    "sslclientcert": "ops-mirror.pem",
    "failovermethod": "priority",
    "gpgcheck": 1,
    "gpgkey": "https://mirror.ops.rhcloud.com/libra/keys/RPM-GPG-KEY-redhat-release https://mirror.ops.rhcloud.com/libra/keys/RPM-GPG-KEY-redhat-beta https://mirror.ops.rhcloud.com/libra/keys/RPM-GPG-KEY-redhat-openshifthosted"
  }
]

openshift_gcp_prefix: "ci-{{ lookup('env', 'INSTANCE_PREFIX') | mandatory }}-"

openshift_gcp_project: openshift-gce-devel-ci
openshift_gcp_region: us-east1
openshift_gcp_zone: us-east1-c

openshift_gcp_network_name: "{{ openshift_gcp_prefix }}network"

openshift_gcp_iam_service_account: jenkins-ci-provisioner@openshift-gce-devel.iam.gserviceaccount.com
openshift_gcp_iam_service_account_keyfile: "{{ files_dir }}/gce.json"

openshift_gcp_ssh_private_key: /home/cloud-user/.ssh/google_compute_engine

openshift_gcp_infra_network_instance_group: ig-m

# Instructs the launch job to build an AMI prior to cluster provisioning and then use that image
openshift_gcp_build_image: true
openshift_gcp_image: '{{ openshift_gcp_prefix }}images'
openshift_gcp_base_image: 'rhel-7'
openshift_gcp_root_image: 'centos-7'

openshift_gcp_registry_bucket_keyfile: "{{ files_dir }}/gce.json"
openshift_gcp_registry_bucket_name: "origin-ci-test-{{ lookup('env', 'INSTANCE_PREFIX') | mandatory }}"

openshift_gcp_startup_script_file: "{{ files_dir }}/bootstrap-script.sh"
openshift_gcp_node_group_config:
  - name: master
    suffix: m
    tags: ocp-master,ocp-infra-node,ocp-node
    machine_type: n1-standard-2
    boot_disk_size: 150
    scale: 1
    bootstrap: true
    wait_for_stable: true
  - name: node
    suffix: n
    tags: ocp-node
    machine_type: n1-standard-2
    boot_disk_size: 150
    scale: 3
    bootstrap: true
  - name: node-flex
    suffix: nf
    tags: ocp-node
    machine_type: n1-standard-2
    boot_disk_size: 150
    scale: 0
    bootstrap: true

openshift_master_node_configs:
- type: master
  edits:
  - key: kubeletArguments.node-labels
    value: ['role=infra']
- type: node
  edits:
  - key: kubeletArguments.node-labels
    value: ['role=app']
  - key: kubeletArguments.pods-per-core
    value: ['20']

openshift_node_groups:
- name: node-config-master
  labels:
  - 'role=infra'
- name: node-config-node
  labels:
  - 'role=app'
  edits:
  - key: kubeletArguments.pods-per-core
    value: ['20']

osm_controller_args: {"experimental-cluster-signing-duration": ["20m"]}
openshift_master_bootstrap_enabled: true
openshift_master_bootstrap_auto_approve: true
openshift_master_bootstrap_auto_approver_node_selector: {"role": "infra"}
