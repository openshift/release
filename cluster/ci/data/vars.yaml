# Package and target versions

deployment_type: origin
ansible_pkg_mgr: yum
docker_upgrade: false
openshift_additional_repos: [
  {"id": "origin-pr", "baseurl": "{{ openshift_test_repo }}", "enabled": 1, "gpgcheck": 0},
  {"id": "origin-pr-dependencies", "baseurl": "http://mirror.centos.org/centos/7/paas/x86_64/openshift-origin/", "enabled": 1, "gpgcheck": 0}
  ]

# URLs and certs

provision_prefix: origin-ci-
gce_network_name: "origin-ci-ocp-network"

openshift_master_cluster_public_hostname: api.ci.openshift.org
openshift_master_cluster_hostname: internal-master.ci.openshift.org
public_hosted_zone: ci.openshift.org
dns_managed_zone: origin-ci-ocp-public-dns
wildcard_zone: svc.ci.openshift.org
console_port: 443
internal_console_port: 8443
openshift_master_api_port: "8443"
openshift_master_console_port: "8443"
openshift_master_public_api_url: "https://api.ci.openshift.org"
openshift_master_public_console_url: "https://api.ci.openshift.org/console"
openshift_node_port_range: 30000-32000

# Authentication and authorization

openshift_master_identity_providers: "{{ (lookup('file', 'files/identity-providers.json' ) | default('{\"items\":[]}') | from_json).get('items') }}"
provision_role_mappings: [{"user": "smarterclayton", "role": "cluster-admin"}]

# Paths on the local system for the certificate files. If empty, self-signed
# certificate will be generated
provision_master_https_cert_file: "ssl.crt"
provision_master_https_key_file: "ssl.key"

# Post config setting sizes

openshift_hosted_router_replicas: 1
openshift_hosted_registry_replicas: 1
openshift_schedulable: True

# GCE provisioning info

# Project ID and zone settings for Google Cloud
gce_project_id: openshift-gce-devel
gce_region_name: us-central1
gce_zone_name: us-central1-a
gce_service_account: ci-provisioner@openshift-gce-devel.iam.gserviceaccount.com
gce_service_account_keyfile: "gce.json"
gce_ssh_private_key: /home/cloud-user/.ssh/google_compute_engine

gcs_registry_keyfile: "gcs-registry.json"
openshift_hosted_registry_storage_kind: object
openshift_hosted_registry_storage_provider: gcs
openshift_hosted_registry_storage_gcs_bucket: openshift-gce-devel-origin-ci-registry-bucket
# DEPRECATED: only for backwards compatibilty
provision_gce_registry_gcs_bucket: openshift-gce-devel-origin-ci-registry-bucket


inventory_ip_type: external

gce_extra_tags_master: ",preserve"
gce_extra_tags_node: ",preserve"
gce_extra_tags_node_infra: ",preserve"

# How many instances should be created for this group
provision_gce_machine_type_master: n1-standard-2
provision_gce_machine_type_node: n1-standard-2
provision_gce_machine_type_node_infra: n1-standard-2
provision_gce_machine_type_bastion: n1-standard-1

provision_gce_instance_group_size_master: 1
provision_gce_instance_group_size_node_infra: 0
provision_gce_instance_group_size_node: 2

provision_gce_disk_size_node_docker: 75
provision_gce_disk_size_node_openshift: 50

provision_gce_gcloud_version: '130.0.0'

# An image or image family to pull from
provision_gce_registered_image: rhel-7

provision_gce_docker_storage_driver: overlay2

# Username and password for Red Hat Customer Portal
provision_rh_username:
provision_rh_password:
# Pool ID which shall be used to register the pre-registered image
provision_rh_pool_id:

# Control which node group router traffic is targeted at.
provision_gce_router_network_instance_group: ig-m # default: ig-i

# Provide a startup script file to the GCE instances
provision_gce_startup_script_file: # "startup.sh"
# Provide userdata to the gce instances
provision_gce_user_data_file:
