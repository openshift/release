apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: boskos
  name: boskos-storage
  namespace: ci
spec:
  claimRef:
    name: boskos-volume-boskos-0
    namespace: ci
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/tmp/dir"
    type: "DirectoryOrCreate"
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: boskos
  namespace: ci
  labels:
    app: prow
    component: boskos
spec:
  serviceName: "boskos"
  replicas: 1  # one canonical source of resources
  template:
    metadata:
      labels:
        app: prow
        component: boskos
      namespace: ci
    spec:
      serviceAccountName: boskos
      terminationGracePeriodSeconds: 30
      containers:
      - name: boskos
        image: gcr.io/k8s-prow/boskos/boskos:v20190726-ce5dec847
        args:
        - --storage=/store/boskos.json
        - --config=/etc/config/boskos.yaml
        - --namespace=ci
        ports:
          - containerPort: 8080
            protocol: TCP
        volumeMounts:
        - name: boskos-volume
          mountPath: /store
        - name: boskos-config
          mountPath: /etc/config
          readOnly: true
      volumes:
        - name: boskos-config
          configMap:
            name: resources
  volumeClaimTemplates:
  - metadata:
      name: boskos-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: boskos
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: boskos
  namespace: ci
spec:
  selector:
    app: prow
    component: boskos
  ports:
  - name: default
    protocol: TCP
    port: 80
    targetPort: 8080