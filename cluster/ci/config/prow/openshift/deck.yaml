apiVersion: template.openshift.io/v1
kind: Template
parameters:
- description: The session secret for the component.
  name: SESSION_SECRET
  generate: expression
  from: "[a-zA-Z0-9]{43}"
objects:
- apiVersion: v1
  kind: Route
  metadata:
    name: deck
  spec:
    port:
      targetPort: 8080
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: deck
- apiVersion: v1
  kind: Route
  metadata:
    name: prow
  spec:
    port:
      targetPort: 8080
    host: prow.svc.ci.openshift.org
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: deck
- apiVersion: v1
  kind: Service
  metadata:
    name: deck
    labels:
      app: prow
      component: deck
  spec:
    selector:
      app: prow
      component: deck
    ports:
    - name: main
      port: 80
      targetPort: 8080
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: deck
    labels:
      app: prow
      component: deck
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: prow
        component: deck
    template:
      metadata:
        labels:
          app: prow
          component: deck
      spec:
        serviceAccountName: deck
        containers:
        - name: deck
          image: gcr.io/k8s-prow/deck:v20190515-63ba1af83
          args:
          - --config-path=/etc/config/config.yaml
          - --cookie-secret=/etc/cookie/cookie
          - --github-oauth-config-file=/etc/github/config.json
          - --tide-url=http://tide/
          - --hook-url=http://hook:8888/plugin-help
          - --oauth-url=/github-login
          - --job-config-path=/etc/job-config
          - --spyglass=true
          ports:
            - name: main
              containerPort: 8080
            - name: metrics
              containerPort: 9090
          volumeMounts:
          - name: config
            mountPath: /etc/config
            readOnly: true
          - name: extensions
            mountPath: /static/extensions
            readOnly: true
          - name: oauth-config
            mountPath: /etc/github
            readOnly: true
          - name: cookie-secret
            mountPath: /etc/cookie
            readOnly: true
          - name: job-config-misc
            mountPath: /etc/job-config/misc
            readOnly: true
          - name: job-config-master
            mountPath: /etc/job-config/master
            readOnly: true
          - name: job-config-3x
            mountPath: /etc/job-config/3.x
            readOnly: true
          - name: job-config-40
            mountPath: /etc/job-config/4.0
            readOnly: true
          - name: job-config-41
            mountPath: /etc/job-config/4.1
            readOnly: true
          - name: job-config-42
            mountPath: /etc/job-config/4.2
            readOnly: true
          - name: job-config-43
            mountPath: /etc/job-config/4.3
            readOnly: true
        volumes:
        - name: config
          configMap:
            name: config
        - name: extensions
          secret:
            secretName: deck-extensions
        - name: oauth-config
          secret:
            secretName: github-app-credentials
        - name: cookie-secret
          secret:
            secretName: cookie
        - name: job-config-misc
          configMap:
            name: job-config-misc
        - name: job-config-master
          configMap:
            name: job-config-master
        - name: job-config-3x
          configMap:
            name: job-config-3.x
        - name: job-config-40
          configMap:
            name: job-config-4.0
        - name: job-config-41
          configMap:
            name: job-config-4.1
        - name: job-config-42
          configMap:
            name: job-config-4.2
        - name: job-config-43
          configMap:
            name: job-config-4.3
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 600
- apiVersion: v1
  kind: Route
  metadata:
    name: deck-internal
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: Reencrypt
    to:
      kind: Service
      name: deck-internal
- apiVersion: v1
  kind: Service
  metadata:
    name: deck-internal
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: deck-internal-tls
  spec:
    selector:
      app: prow
      component: deck-internal
    ports:
    - port: 443
      targetPort: 8443
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: deck-internal
    labels:
      app: prow
      component: deck-internal
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: prow
        component: deck-internal
    template:
      metadata:
        labels:
          app: prow
          component: deck-internal
      spec:
        serviceAccountName: deck
        containers:
        - name: oauth-proxy
          image: openshift/oauth-proxy:latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8443
            name: web
          args:
          - -provider=openshift
          - -https-address=:8443
          - -http-address=
          - -email-domain=*
          - -upstream=http://localhost:8080
          - -client-id=system:serviceaccount:ci:deck
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - '-openshift-sar={"resource": "namespaces", "verb": "get", "resourceName": "kube-system", "namespace": "kube-system"}'
          - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get", "resourceName": "kube-system", "namespace": "kube-system"}}'
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret-file=/etc/proxy/secrets/session_secret
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          volumeMounts:
          - mountPath: /etc/tls/private
            name: deck-internal-tls
          - mountPath: /etc/proxy/secrets
            name: session-secret
        - name: deck
          image: gcr.io/k8s-prow/deck:v20190515-63ba1af83
          args:
          - --config-path=/etc/config/config.yaml
          - --tide-url=http://tide/
          - --hook-url=http://hook:8888/plugin-help
          - --hidden-only=true
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
          - name: config
            mountPath: /etc/config
            readOnly: true
        volumes:
        - name: config
          configMap:
            name: config
        - name: session-secret
          secret:
            secretName: deck-internal-session-secret
        - name: deck-internal-tls
          secret:
            secretName: deck-internal-tls
- apiVersion: v1
  kind: Secret
  metadata:
    name: deck-internal-session-secret
  stringData:
    session_secret: "${SESSION_SECRET}="
