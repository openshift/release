apiVersion: template.openshift.io/v1
kind: Template
parameters:
- description: The name of the component.
  name: NAME
  value: tracer
- description: The session secret for the proxy
  name: SESSION_SECRET
  generate: expression
  from: "[a-zA-Z0-9]{43}"
objects:
- apiVersion: v1
  kind: Route
  metadata:
    name: "${NAME}"
    annotations:
      haproxy.router.openshift.io/timeout: 2m
  spec:
    tls:
      termination: Reencrypt
      insecureEdgeTerminationPolicy: Redirect
    to:
      kind: Service
      name: "${NAME}"
- apiVersion: v1
  kind: Service
  metadata:
    name: "${NAME}"
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: "${NAME}-tls"
  spec:
    selector:
      app: "${NAME}"
    ports:
    - port: 443
      targetPort: 8443
    type: ClusterIP
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: "${NAME}"
      spec:
        serviceAccountName: "${NAME}"
        containers:
        - name: oauth-proxy
          image: openshift/oauth-proxy:latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8443
            name: web
          args:
          - -provider=openshift
          - -https-address=:8443
          - -http-address=
          - -email-domain=*
          - -upstream=http://localhost:8080
          - -client-id=system:serviceaccount:ci:${NAME}
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - '-openshift-sar={"resource": "configmaps", "verb": "get", "namespace": "ci"}'
          - '-openshift-delegate-urls={"/": {"resource": "configmaps", "verb": "get", "namespace": "ci"}}'
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret-file=/etc/proxy/secrets/session_secret
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          volumeMounts:
          - mountPath: /etc/tls/private
            name: "${NAME}-tls"
          - mountPath: /etc/proxy/secrets
            name: session-secret
        - image: "${NAME}"
          name: "${NAME}"
          args:
          - --label-selector=app=prow
          - --namespace=ci
          ports:
          - containerPort: 8080
        volumes:
        - name: session-secret
          secret:
            secretName: session-secret
        - name: "${NAME}-tls"
          secret:
            secretName: "${NAME}-tls"
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
      type: ImageChange
- apiVersion: v1
  kind: Secret
  metadata:
    name: session-secret
  stringData:
    session_secret: "${SESSION_SECRET}="
