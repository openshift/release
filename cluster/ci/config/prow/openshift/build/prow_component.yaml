apiVersion: v1
kind: Template
parameters:
- name: NAME
  displayName: Name of the prow component to build
  required: true
- name: SOURCE_URL
  displayName: Source URL
  description: Git source URL to use for building the image
  value: https://github.com/openshift/test-infra.git
- name: SOURCE_REF
  displayName: Source reference
  description: Git source ref to use for building the image
  value: master
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-binaries"
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:binaries"
    source:
      git:
        uri: "${SOURCE_URL}"
        ref: "${SOURCE_REF}"
      type: Git
      dockerfile: |
        FROM docker.io/golang:1.9.2

        COPY . /go/src/k8s.io/test-infra
        RUN cd /go/src/k8s.io/test-infra && \
            cd prow && \
            mkdir -p /static && \
            cp -r cmd/deck/static/* /static && \
            CGO_ENABLED=0 go install ./cmd/... && \
            rm -rf /go/src /go/pkg
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: docker.io/golang:1.9.2
        imageOptimizationPolicy: SkipLayers
    triggers:
    - type: ConfigChange

- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: "${NAME}"
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    source:
      git:
        uri: "${SOURCE_URL}"
        ref: "${SOURCE_REF}"
      images:
      - from:
          kind: ImageStreamTag
          name: "${NAME}:binaries"
        paths:
        - destinationDir: .
          sourcePath: "/go/bin/${NAME}"
        - destinationDir: .
          sourcePath: /static
    strategy:
      dockerStrategy:
        imageOptimizationPolicy: SkipLayers
        dockerfilePath: "prow/cmd/${NAME}/Dockerfile"
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: "${NAME}:binaries"
      type: ImageChange
