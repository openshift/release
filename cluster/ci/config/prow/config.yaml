plank:
  allow_cancellations: true
  job_url_template: 'https://deck-ci.svc.ci.openshift.org/log?job={{.Spec.Job}}&id={{.Status.BuildID}}'

jenkins_operator:
  max_concurrency: 150
  max_goroutines: 20
  allow_cancellations: true
  job_url_template: 'https://openshift-gce-devel.appspot.com/build/origin-ci-test/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Repo "origin"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://openshift-gce-devel.appspot.com/pr/{{if ne .Spec.Refs.Repo "origin"}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://openshift-gce-devel.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'

sinker:
  resync_period: 1h
  max_prowjob_age: 48h
  max_pod_age: 12h

deck:
  external_agent_logs:
  - agent: jenkins
    selector: master=ci.openshift.redhat.com
    url_template: 'http://jenkins-operator/job/{{.Spec.Job}}/{{.Status.BuildID}}/consoleText'
  - agent: jenkins
    selector: master=jenkins-origin-ci
    url_template: 'http://jenkins-origin-operator/job/{{.Spec.Job}}/{{.Status.BuildID}}/consoleText'
  branding:
    logo: "extensions/logo.png"
    favicon: "extensions/favicon.ico"
    header_color: "black"
    background_color: "#be1628"

tide:
  target_url: https://deck-ci.svc.ci.openshift.org/tide.html
  queries:
  - repos:
    - openshift/image-registry
    - openshift/online-hibernation
    - openshift/kubernetes-metrics-server
    labels:
    - lgtm
    - approved
    missingLabels:
    - needs-ok-to-test
    - do-not-merge/work-in-progress
    - do-not-merge/hold
  - repos:
    - openshift/origin-web-console-server
    - openshift/cluster-operator
    labels:
    - lgtm
    missingLabels:
    - needs-ok-to-test
    - do-not-merge/work-in-progress
    - do-not-merge/hold

prowjob_namespace: ci
pod_namespace: ci
log_level: debug

presubmits:
  openshift/origin:
  - name: test_pull_request_origin_verify
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/verify
    rerun_command: "/test verify"
    trigger: "((?m)^/test( all| verify),?(\\s+|$))"

  - name: test_pull_request_origin_cmd
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/cmd
    rerun_command: "/test cmd"
    trigger: "((?m)^/test( all| cmd),?(\\s+|$))"

  - name: test_pull_request_origin_unit
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/unit
    rerun_command: "/test unit"
    trigger: "((?m)^/test( all| unit),?(\\s+|$))"

  - name: test_pull_request_origin_integration
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/integration
    rerun_command: "/test integration"
    trigger: "((?m)^/test( all| integration),?(\\s+|$))"

  - name: test_pull_request_origin_end_to_end
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/end_to_end
    rerun_command: "/test end_to_end"
    trigger: "((?m)^/test( all| end_to_end),?(\\s+|$))"

  - name: test_pull_request_origin_extended_conformance_install
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/extended_conformance_install
    rerun_command: "/test extended_conformance_install"
    trigger: "((?m)^/test( all| extended_conformance_install),?(\\s+|$))"

  - name: test_pull_request_origin_extended_conformance_install_update
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    skip_report: true
    context: ci/openshift-jenkins/extended_conformance_install_update
    rerun_command: "/test extended_conformance_install_update"
    trigger: "((?m)^/test( all| extended_conformance_install_update),?(\\s+|$))"

  - name: test_pull_request_origin_extended_conformance_gce
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/extended_conformance_gce
    rerun_command: "/test extended_conformance_gce"
    trigger: "((?m)^/test( all| extended_conformance_gce),?(\\s+|$))"

  - name: test_pull_request_origin_extended_conformance_k8s
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/extended_conformance_k8s
    rerun_command: "/test extended_conformance_k8s"
    trigger: "((?m)^/test extended_conformance_k8s,?(\\s+|$))"

  - name: test_pull_request_origin_extended_networking_minimal
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/extended_networking_minimal
    rerun_command: "/test extended_networking_minimal"
    trigger: "((?m)^/test( all| extended_networking_minimal),?(\\s+|$))"

  - name: test_pull_request_origin_extended_networking
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/extended_networking
    rerun_command: "/test extended_networking"
    trigger: "((?m)^/test extended_networking,?(\\s+|$))"

  - name: test_pull_request_origin_extended_builds
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    run_if_changed: '^(pkg/build)|^(pkg/cmd/infra/builder)|^(test/extended/builds)|^(test/extended/testdata/builds)|^(vendor/github.com/openshift/source-to-image)|^(vendor/github.com/openshift/imagebuilder)'
    context: ci/openshift-jenkins/extended_builds
    rerun_command: "/test extended_builds"
    trigger: "((?m)^/test extended_builds,?(\\s+|$))"

  - name: test_pull_request_origin_extended_clusterup
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    run_if_changed: '^(pkg/oc/bootstrap)|^(test/extended/clusterup.sh)'
    context: ci/openshift-jenkins/extended_clusterup
    rerun_command: "/test extended_clusterup"
    trigger: "((?m)^/test extended_clusterup,?(\\s+|$))"

  - name: test_pull_request_origin_extended_gssapi
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/extended_gssapi
    rerun_command: "/test extended_gssapi"
    trigger: "((?m)^/test extended_gssapi,?(\\s+|$))"

  - name: test_pull_request_origin_extended_image_ecosystem
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    run_if_changed: '^(test/extended/image_ecosystem)|^(examples)|^(vendor/github.com/openshift/source-to-image)|^(vendor/github.com/openshift/imagebuilder)'
    context: ci/openshift-jenkins/extended_image_ecosystem
    rerun_command: "/test extended_image_ecosystem"
    trigger: "((?m)^/test extended_image_ecosystem,?(\\s+|$))"

  - name: test_pull_request_origin_extended_image_registry
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    run_if_changed: '^(pkg/image)|^(test/extended/registry)|^(test/extended/images)|^(test/extended/imageapis)|^(vendor/github.com/docker/distribution)'
    context: ci/openshift-jenkins/extended_image_registry
    rerun_command: "/test extended_image_registry"
    trigger: "((?m)^/test extended_image_registry,?(\\s+|$))"

  - name: test_pull_request_origin_extended_ldap_groups
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/extended_ldap_groups
    rerun_command: "/test extended_ldap_groups"
    trigger: "((?m)^/test extended_ldap_groups,?(\\s+|$))"

  - name: test_pull_request_origin_cross
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    run_if_changed: '^(hack/)|(Makefile)|(.*_(windows|linux|darwin|unsupported)(_test)?\.go)$'
    context: ci/openshift-jenkins/cross
    rerun_command: "/test cross"
    trigger: "((?m)^/test cross,?(\\s+|$))"

  - name: test_pull_request_origin_launch_gce
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/launch-gce
    rerun_command: "/test launch-gce"
    trigger: "((?m)^/test launch-gce,?(\\s+|$))"

  - name: test_pull_request_origin_extended_conformance_crio
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    skip_report: true
    context: ci/openshift-jenkins/extended_conformance_crio
    rerun_command: "/test crio"
    trigger: "((?m)^/test crio,?(\\s+|$))"

  - name: test_pull_request_origin_service_catalog
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/service-catalog
    rerun_command: "/test service-catalog"
    trigger: "((?m)^/test service-catalog,?(\\s+|$))"

  openshift/openshift-ansible:
  - name: test_pull_request_openshift_ansible_tox
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/tox
    rerun_command: "/test tox"
    trigger: "((?m)^/test( all| tox),?(\\s+|$))"

  - name: test_pull_request_openshift_ansible_logging
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/logging
    rerun_command: "/test logging"
    trigger: "((?m)^/test( all| logging),?(\\s+|$))"

  - name: test_pull_request_openshift_ansible_extended_conformance_install
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/install
    rerun_command: "/test install"
    trigger: "((?m)^/test( all| install),?(\\s+|$))"

  - name: test_pull_request_openshift_ansible_extended_conformance_install_update
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    skip_report: true
    context: ci/openshift-jenkins/upgrade
    rerun_command: "/test upgrade"
    trigger: "((?m)^/test( all| upgrade),?(\\s+|$))"

  - name: test_pull_request_openshift_ansible_extended_conformance_install_containerized
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/containerized
    rerun_command: "/test containerized"
    trigger: "((?m)^/test( all| containerized),?(\\s+|$))"

  - name: test_pull_request_openshift_ansible_extended_conformance_install_crio
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/extended_conformance_install_crio
    rerun_command: "/test crio"
    trigger: "((?m)^/test( all| crio),?(\\s+|$))"

  - name: test_pull_request_openshift_ansible_extended_conformance_install_update_containerized
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    skip_report: true
    context: ci/openshift-jenkins/containerized_upgrade
    rerun_command: "/test containerized-upgrade"
    trigger: "((?m)^/test( all| containerized-upgrade),?(\\s+|$))"

  - name: test_pull_request_openshift_ansible_extended_conformance_install_in_tree
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    skip_report: true
    context: ci/openshift-jenkins/install_in_tree
    rerun_command: "/test install-in-tree"
    trigger: "((?m)^/test install-in-tree,?(\\s+|$))"

  - name: test_pull_request_openshift_ansible_extended_conformance_install_system_containers
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/system-containers
    rerun_command: "/test system-containers"
    trigger: "((?m)^/test( all| system-containers),?(\\s+|$))"

  - name: test_pull_request_openshift_ansible_extended_conformance_install_update_system_containers
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    skip_report: true
    context: ci/openshift-jenkins/system-containers-upgrade
    rerun_command: "/test system-containers-upgrade"
    trigger: "((?m)^/test( all| system-containers-upgrade),?(\\s+|$))"

  kubernetes-incubator/cri-o:
  - name: test_pull_request_crio_integration_rhel
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/integration_rhel
    rerun_command: "/test integration_rhel"
    trigger: "((?m)^/test( all| rhel| integration| integration_rhel),?(\\s+|$))"

  - name: test_pull_request_crio_integration_fedora
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/integration_fedora
    rerun_command: "/test integration_fedora"
    trigger: "((?m)^/test( all| fedora| integration| integration_fedora),?(\\s+|$))"

  - name: test_pull_request_crio_e2e_rhel
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/e2e_rhel
    rerun_command: "/test e2e_rhel"
    trigger: "((?m)^/test( all| rhel| e2e| e2e_rhel),?(\\s+|$))"

  - name: test_pull_request_crio_e2e_fedora
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/e2e_fedora
    rerun_command: "/test e2e_fedora"
    trigger: "((?m)^/test( all| fedora| e2e| e2e_fedora),?(\\s+|$))"

  - name: test_pull_request_crio_critest_rhel
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/critest_rhel
    rerun_command: "/test critest_rhel"
    trigger: "((?m)^/test( all| rhel| critest| critest_rhel),?(\\s+|$))"

  - name: test_pull_request_crio_critest_fedora
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/critest_fedora
    rerun_command: "/test critest_fedora"
    trigger: "((?m)^/test( all| fedora| critest| critest_fedora),?(\\s+|$))"

  - name: test_pull_request_crio_ami_rhel
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/ami_rhel
    rerun_command: "/test ami_rhel"
    trigger: "((?m)^/test( ami| ami_rhel),?(\\s+|$))"

  - name: test_pull_request_crio_ami_fedora
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: false
    context: ci/openshift-jenkins/ami_fedora
    rerun_command: "/test ami_fedora"
    trigger: "((?m)^/test( ami| ami_fedora),?(\\s+|$))"

  openshift/origin-aggregated-logging:
  - name: test_pull_request_origin_aggregated_logging_ansible
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/logging
    rerun_command: "/test logging"
    trigger: "((?m)^/test( all| logging),?(\\s+|$))"

  - name: test_pull_request_origin_aggregated_logging_ansible_json_file
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/json-file
    rerun_command: "/test json-file"
    trigger: "((?m)^/test( all| json-file),?(\\s+|$))"

  openshift/origin-web-console:
  - name: test_pull_request_origin_web_console
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins
    rerun_command: "/test"
    trigger: "((?m)^/test,?(\\s+|$))"

  openshift/origin-web-console-server:
  - name: test_pull_request_origin_web_console_server_check
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/check
    rerun_command: "/test check"
    trigger: "((?m)^/test( all| check),?(\\s+|$))"
  - name: test_pull_request_origin_web_console_server_e2e
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/e2e
    rerun_command: "/test e2e"
    trigger: "((?m)^/test( all| e2e),?(\\s+|$))"

  openshift/openshift-cns-testdrive:
  - name: origin-ci-openshift-cns-testdrive-origin
    agent: jenkins
    labels:
      master: jenkins-origin-ci
    always_run: false
    context: ci/qwiklab-provision
    rerun_command: "/test"
    trigger: "((?m)^/test,?(\\s+|$))"

  openshift/image-registry:
  - name: test_pull_request_image_registry_extended
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/extended
    rerun_command: "/test extended"
    trigger: "((?m)^/test( all| extended),?(\\s+|$))"
  - name: test_pull_request_image_registry_integration
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/integration
    rerun_command: "/test integration"
    trigger: "((?m)^/test( all| integration),?(\\s+|$))"
  - name: test_pull_request_image_registry_unit
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/unit
    rerun_command: "/test unit"
    trigger: "((?m)^/test( all| unit),?(\\s+|$))"

  openshift/kubernetes-metrics-server:
  - name: test_pull_request_kubernetes_metrics_server_unit
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/unit
    rerun_command: "/test unit"
    trigger: "((?m)^/test( all| unit),?(\\s+|$))"

  openshift/cluster-operator:
  - name: test_pull_request_cluster_operator_unit
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/unit
    rerun_command: "/test unit"
    trigger: "((?m)^/test( all| unit),?(\\s+|$))"

  openshift/online-hibernation:
  - name: test_pull_request_online_hibernation_unit
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    always_run: true
    context: ci/openshift-jenkins/unit
    rerun_command: "/test unit"
    trigger: "((?m)^/test( all| unit),?(\\s+|$))"

  openshift/release:
  - name: check_prometheus_rules
    agent: kubernetes
    run_if_changed: '^(projects/prometheus/prometheus.rules.yaml)$'
    context: ci/openshift/promrules
    rerun_command: "/test promrules"
    trigger: "((?m)^/test promrules,?(\\s+|$))"
    spec:
      containers:
      - image: registry.svc.ci.openshift.org/ci/promrules:latest

postsubmits:
  openshift/origin:
  - name: ami_build_origin_int_rhel_build
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: push_origin_release
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_check
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_cmd
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_cross
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_end_to_end
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_extended_conformance_gce
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_extended_conformance_install_update
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_extended_conformance_install
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_extended_networking
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_integration
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_verify
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - stage
    - release-3.6
    - release-1.5
  - name: test_branch_origin_extended_conformance_crio
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
  kubernetes-incubator/cri-o:
  - name: test_branch_crio_e2e_rhel
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - release-1.7
    - release-1.8
    - release-1.9
    - master
  - name: test_branch_crio_e2e_fedora
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - release-1.7
    - release-1.8
    - release-1.9
    - master
  openshift/online-hibernation:
  - name: test_branch_online_hibernation_unit
    agent: jenkins
    labels:
      master: ci.openshift.redhat.com
    branches:
    - master
    - prod
    - stage


periodics:
- name: test_branch_origin_extended_conformance_k8s
  agent: jenkins
  labels:
      master: ci.openshift.redhat.com
  interval: 12h
- name: periodic-retester
  agent: kubernetes
  interval: 2h
  spec:
    containers:
    - image: docker-registry.default.svc:5000/ci/commenter:latest
      args:
      - |-
        --query=is:pr
        state:open
        label:lgtm
        label:approved
        status:failure
        -label:do-not-merge
        -label:do-not-merge/work-in-progress
        -label:do-not-merge/hold
        -label:needs-rebase
        -label:needs-ok-to-test
        repo:openshift/origin
      - --token=/etc/oauth/oauth
      - |-
        --comment=/retest

        Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/{{.Number}}) for this PR and help us cut down flakes.

      - --template
      - --ceiling=1
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/oauth
    volumes:
    - name: token
      secret:
        secretName: openshift-bot-token
