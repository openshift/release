apiVersion: v1
kind: ConfigMap
metadata:
  name: config
data:
  config: |+
    ---
    plank:
      job_url_template: '{{if eq .Status.State "pending"}}https://ci.openshift.redhat.com/jenkins/job/{{.Spec.Job}}/{{.Status.BuildID}}{{else}}https://openshift-gce-devel.appspot.com/build/origin-ci-test/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "openshift"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "origin"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/{{end}}'
      report_template: '[Full PR test history](https://openshift-gce-devel.appspot.com/pr/{{if eq .Spec.Refs.Org "openshift"}}{{if eq .Spec.Refs.Repo "origin"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://openshift-gce-devel.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'

    sinker:
      resync_period: 1h
      max_prowjob_age: 48h
      max_pod_age: 12h

    prowjob_namespace: ci
    pod_namespace: ci

    triggers:
    - repos:
      # This is either an org or an org/repo.
      - openshift
      trusted_org: openshift

    heart:
      adorees:
      - openshift-merge-robot

    presubmits:
      # PR job triggering definitions.
      # Keys: Full repo name: "org/repo".
      # Values: List of jobs to run when events occur in the repo.
      #   name:          Job name.
      #   trigger:       Regexp commenters can say to trigger the job.
      #   always_run:    Whether to run for every PR. Default is false. If this is
      #                  set then your trigger needs to match "@k8s-bot test this".
      #   context:       GitHub status context.
      #   rerun_command: How should users trigger just this job, as a string, not a
      #                  regex. For example, if the trigger regex is "(e2e )?test",
      #                  then a rerun command might be "e2e test".
      #   skip_report:   If true, then do not set status or comment on GitHub.
      #   spec:          If this exists then run a kubernetes pod with this spec.
      #                  Otherwise, run a Jenkins job.
      openshift/origin:
      - name: test_pull_request_origin_verify
        always_run: true
        context: ci/openshift-jenkins/verify
        rerun_command: "/test verify"
        trigger: "((?m)^/test( all| verify),?(\\s+|$))"

      - name: test_pull_request_origin_cmd
        always_run: true
        context: ci/openshift-jenkins/cmd
        rerun_command: "/test cmd"
        trigger: "((?m)^/test( all| cmd),?(\\s+|$))"

      - name: test_pull_request_origin_unit
        always_run: true
        context: ci/openshift-jenkins/unit
        rerun_command: "/test unit"
        trigger: "((?m)^/test( all| unit),?(\\s+|$))"

      - name: test_pull_request_origin_integration
        always_run: true
        context: ci/openshift-jenkins/integration
        rerun_command: "/test integration"
        trigger: "((?m)^/test( all| integration),?(\\s+|$))"

      - name: test_pull_request_origin_end_to_end
        always_run: true
        context: ci/openshift-jenkins/end_to_end
        rerun_command: "/test end_to_end"
        trigger: "((?m)^/test( all| end_to_end),?(\\s+|$))"

      - name: test_pull_request_origin_extended_conformance_install_update
        always_run: true
        context: ci/openshift-jenkins/extended_conformance_install_update
        rerun_command: "/test extended_conformance_install_update"
        trigger: "((?m)^/test( all| extended_conformance_install_update),?(\\s+|$))"

      - name: test_pull_request_origin_extended_conformance_gce
        always_run: true
        context: ci/openshift-jenkins/extended_conformance_gce
        rerun_command: "/test extended_conformance_gce"
        trigger: "((?m)^/test( all| extended_conformance_gce),?(\\s+|$))"

      - name: test_pull_request_origin_extended_networking_minimal
        always_run: true
        context: ci/openshift-jenkins/extended_networking_minimal
        rerun_command: "/test extended_networking_minimal"
        trigger: "((?m)^/test( all| extended_networking_minimal),?(\\s+|$))"

      - name: test_pull_request_origin_extended_networking
        always_run: false
        context: ci/openshift-jenkins/extended_networking
        rerun_command: "/test extended_networking"
        trigger: "((?m)^/test extended_networking,?(\\s+|$))"

      - name: test_pull_request_origin_extended_builds
        always_run: false
        context: ci/openshift-jenkins/extended_builds
        rerun_command: "/test extended_builds"
        trigger: "((?m)^/test extended_builds,?(\\s+|$))"

      - name: test_pull_request_origin_extended_gssapi
        always_run: false
        context: ci/openshift-jenkins/extended_gssapi
        rerun_command: "/test extended_gssapi"
        trigger: "((?m)^/test extended_gssapi,?(\\s+|$))"

      - name: test_pull_request_origin_extended_image_ecosystem
        always_run: false
        context: ci/openshift-jenkins/extended_image_ecosystem
        rerun_command: "/test extended_image_ecosystem"
        trigger: "((?m)^/test extended_image_ecosystem,?(\\s+|$))"

      - name: test_pull_request_origin_extended_ldap_groups
        always_run: false
        context: ci/openshift-jenkins/extended_ldap_groups
        rerun_command: "/test extended_ldap_groups"
        trigger: "((?m)^/test extended_ldap_groups,?(\\s+|$))"

      - name: test_pull_request_origin_extended_templates
        always_run: true
        context: ci/openshift-jenkins/extended_templates
        rerun_command: "/test extended_templates"
        trigger: "((?m)^/test extended_templates,?(\\s+|$))"

      - name: test_pull_request_origin_cross
        run_if_changed: '^(hack/)|(Makefile)|(.*_(windows|linux|darwin|unsupported)(_test)?\.go)$'
        context: ci/openshift-jenkins/cross
        rerun_command: "/test cross"
        trigger: "((?m)^/test cross,?(\\s+|$))"

      - name: test_pull_request_origin_launch_gce
        always_run: false
        context: ci/openshift-jenkins/launch-gce
        rerun_command: "/test launch-gce"
        trigger: "((?m)^/test launch-gce,?(\\s+|$))"


    postsubmits:
      openshift/origin:
      - name: ami_build_origin_int_rhel_build
      - name: push_origin_release
      - name: test_branch_origin_check
      - name: test_branch_origin_cmd
      - name: test_branch_origin_cross
      - name: test_branch_origin_end_to_end
      - name: test_branch_origin_extended_builds
      - name: test_branch_origin_extended_conformance_gce
      - name: test_branch_origin_extended_conformance_install_update
      - name: test_branch_origin_extended_conformance_install
      - name: test_branch_origin_extended_gssapi
      - name: test_branch_origin_extended_image_ecosystem
      - name: test_branch_origin_extended_ldap_groups
      - name: test_branch_origin_extended_networking
      - name: test_branch_origin_extended_templates
      - name: test_branch_origin_integration
      - name: test_branch_origin_verify


    periodics:
    - name: periodic-retester
      interval: 20m
      spec:
        containers:
        - image: registry.svc.ci.openshift.org/experiment/commenter:latest
          args:
          - |-
            --query=is:pr
            -label:do-not-merge
            label:lgtm
            label:approved
            -status:pending
            -status:success
            -label:needs-rebase
            -label:needs-ok-to-test
            repo:openshift/origin
          - --token=/etc/token/oauth
          - |-
            --comment=/retest

            Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/{{.Number}}) for this PR and help us cut down flakes.

          - --template
          - --ceiling=3
          - --confirm
          volumeMounts:
          - name: token
            mountPath: /etc/oauth
        volumes:
        - name: token
          secret:
            secretName: oauth-token
