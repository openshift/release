apiVersion: v1
kind: Template
labels:
  template: clone-source
parameters:
- description: Name of the build to associate with the source image and artifacts
  displayName: Build Name
  name: BUILD_NAME
  required: true
- description: The reference to the base image to use to fetch the source
  displayName: Base Image Reference
  name: BASE_IMAGE_REF
  value: "test-base:latest"
  required: true
- description: The name of the push secret for the builder service account
  displayName: Push Secret
  name: PUSH_SECRET_NAME
  required: true
- description: The references to build
  displayName: Pull References
  name: PULL_REFS
  required: true
- name: REPO_OWNER
  required: true
- name: REPO_NAME
  required: true
- description: The number of the Jenkins job that launched this build
  displayName: Build Number
  name: BUILD_NUMBER
  value: "1"
- name: PULL_NUMBER
  value: "-none"
objects:
- apiVersion: v1
  kind: Build
  metadata:
    labels:
      build: "${BUILD_NAME}"
      pr: "pr${PULL_NUMBER}"
      job: "clone-source-${BUILD_NUMBER}"
    generateName: "clone-${BUILD_NUMBER}-${BUILD_NAME}-"
  spec:
    output:
      pushSecret:
        name: "${PUSH_SECRET_NAME}"
      to:
        kind: ImageStreamTag
        name: "${BUILD_NAME}:src"
    runPolicy: Serial
    serviceAccount: builder
    source:
      dockerfile: |
        FROM test-base:latest

        ARG REPO_OWNER
        ARG REPO_NAME
        ARG PULL_REFS

        RUN umask 0002 && release-ci cloneref --src-root=/data
    strategy:
      dockerStrategy:
        pullSecret:
          name: "${PUSH_SECRET_NAME}"
        buildArgs:
        - name: REPO_OWNER
          value: "${REPO_OWNER}"
        - name: REPO_NAME
          value: "${REPO_NAME}"
        - name: PULL_REFS
          value: "${PULL_REFS}"
        from:
          kind: ImageStreamTag
          name: "${BASE_IMAGE_REF}"
        noCache: true
      type: Docker
