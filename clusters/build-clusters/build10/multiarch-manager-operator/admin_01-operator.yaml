apiVersion: v1
kind: Namespace
metadata:
  annotations:
    multiarch.openshift.io/image: quay.io/redhat-user-workloads/multiarch-tuning-ope-tenant/multiarch-tuning-operator/multiarch-tuning-operator@sha256:1f75bfd7cb1f6a8692799b438a42f98bc5ea13991e48bf71e83798b7242ddcd3
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: multiarch-tuning-operator
    control-plane: controller-manager
    workload.openshift.io/allowed: management
  name: openshift-multiarch-tuning-operator
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: clusterpodplacementconfigs.multiarch.openshift.io
spec:
  group: multiarch.openshift.io
  names:
    kind: ClusterPodPlacementConfig
    listKind: ClusterPodPlacementConfigList
    plural: clusterpodplacementconfigs
    singular: clusterpodplacementconfig
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterPodPlacementConfig defines the configuration for the PodPlacement
          operand. It is a singleton resource that can consist of an object named
          cluster. Creating this object will trigger the deployment of the architecture
          aware pod placement operand.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterPodPlacementConfigSpec defines the desired state of
              ClusterPodPlacementConfig
            properties:
              logVerbosity:
                default: Normal
                description: 'LogVerbosity is the log level for the pod placement
                  controller. Valid values are: "Normal", "Debug", "Trace", "TraceAll".
                  Defaults to "Normal".'
                enum:
                - Normal
                - Debug
                - Trace
                - TraceAll
                type: string
              namespaceSelector:
                description: "NamespaceSelector filters the namespaces that the architecture
                  aware pod placement can operate. \n For example, users can configure
                  an opt-out filter to disallow the operand from operating on namespaces
                  with a given label: \n {\"namespaceSelector\":{\"matchExpressions\":[{\"key\":\"multiarch.openshift.io/exclude-pod-placement\",\"operator\":\"DoesNotExist\"}]}}
                  \n The operand will set the node affinity requirement in all the
                  pods created in namespaces that do not have the `multiarch.openshift.io/exclude-pod-placement`
                  label. \n Alternatively, users can configure an opt-in filter to
                  operate only on namespaces with specific labels: \n {\"namespaceSelector\":{\"matchExpressions\":[{\"key\":\"multiarch.openshift.io/include-pod-placement\",\"operator\":\"Exists\"}]}}
                  \n The operand will set the node affinity requirement in all the
                  pods created in namespace labeled with the key `multiarch.ioenshift.io/include-pod-placement`.
                  \n See https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                  for more examples of label selectors. \n Default to the empty LabelSelector,
                  which matches everything. Selectors are ANDed."
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
            type: object
          status:
            description: ClusterPodPlacementConfigStatus defines the observed state
              of ClusterPodPlacementConfig
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of a ClusterPodPlacementConfig's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: multiarch-tuning-operator
  name: multiarch-tuning-operator-controller-manager
  namespace: openshift-multiarch-tuning-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: multiarch-tuning-operator
  name: multiarch-tuning-operator-leader-election-role
  namespace: openshift-multiarch-tuning-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: multiarch-tuning-operator-manager-role
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations/status
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
- apiGroups:
  - config.openshift.io
  resources:
  - imagedigestmirrorsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.openshift.io
  resources:
  - images
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.openshift.io
  resources:
  - imagetagmirrorsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
- apiGroups:
  - multiarch.openshift.io
  resources:
  - clusterpodplacementconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - multiarch.openshift.io
  resources:
  - clusterpodplacementconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - multiarch.openshift.io
  resources:
  - clusterpodplacementconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.openshift.io
  resources:
  - imagecontentsourcepolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: multiarch-tuning-operator
  name: multiarch-tuning-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: multiarch-tuning-operator
  name: multiarch-tuning-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: multiarch-tuning-operator
  name: multiarch-tuning-operator-leader-election-rolebinding
  namespace: openshift-multiarch-tuning-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: multiarch-tuning-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: multiarch-tuning-operator-controller-manager
  namespace: openshift-multiarch-tuning-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: multiarch-tuning-operator
  name: multiarch-tuning-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multiarch-tuning-operator-manager-role
subjects:
- kind: ServiceAccount
  name: multiarch-tuning-operator-controller-manager
  namespace: openshift-multiarch-tuning-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: multiarch-tuning-operator
  name: multiarch-tuning-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: multiarch-tuning-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: multiarch-tuning-operator-controller-manager
  namespace: openshift-multiarch-tuning-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: multiarch-tuning-operator
    control-plane: controller-manager
  name: multiarch-tuning-operator-controller-manager-metrics-service
  namespace: openshift-multiarch-tuning-operator
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: webhook-server-cert
  name: multiarch-tuning-operator-webhook-service
  namespace: openshift-multiarch-tuning-operator
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    multiarch.openshift.io/image: quay.io/redhat-user-workloads/multiarch-tuning-ope-tenant/multiarch-tuning-operator/multiarch-tuning-operator@sha256:1f75bfd7cb1f6a8692799b438a42f98bc5ea13991e48bf71e83798b7242ddcd3
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: multiarch-tuning-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: multiarch-tuning-operator
    control-plane: controller-manager
  name: multiarch-tuning-operator-controller-manager
  namespace: openshift-multiarch-tuning-operator
spec:
  replicas: 2
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        multiarch.openshift.io/image: quay.io/redhat-user-workloads/multiarch-tuning-ope-tenant/multiarch-tuning-operator/multiarch-tuning-operator@sha256:1f75bfd7cb1f6a8692799b438a42f98bc5ea13991e48bf71e83798b7242ddcd3
        target.workload.openshift.io/management: |
          {"effect": "PreferredDuringScheduling"}
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - -zap-log-level=3
        - --enable-operator
        command:
        - /manager
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IMAGE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['multiarch.openshift.io/image']
        image: quay.io/redhat-user-workloads/multiarch-tuning-ope-tenant/multiarch-tuning-operator/multiarch-tuning-operator@sha256:1f75bfd7cb1f6a8692799b438a42f98bc5ea13991e48bf71e83798b7242ddcd3
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /var/run/manager/tls
          name: webhook-server-cert
          readOnly: true
        - mountPath: /etc/ssl/certs/
          name: ca-projected-volume
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      priorityClassName: system-cluster-critical
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: multiarch-tuning-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: webhook-server-cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - name: ca-projected-volume
        projected:
          sources:
          - configMap:
              items:
              - key: service-ca.crt
                path: openshift-ca.crt
              name: openshift-service-ca.crt
              optional: true
          - configMap:
              items:
              - key: ca.crt
                path: kube-root-ca.crt
              name: kube-root-ca.crt
