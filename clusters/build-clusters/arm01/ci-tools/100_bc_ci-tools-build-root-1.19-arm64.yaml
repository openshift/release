kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  namespace: ci
  name: ci-tools-build-root-1.19-arm64
spec:
  successfulBuildsHistoryLimit: 1
  failedBuildsHistoryLimit: 2
  output:
    to:
      kind: ImageStreamTag
      name: ci-tools-build-root-arm64:1.19
  source:
    images:
    # FIXME: no arm64 version of boskos so far
    - from:
        kind: ImageStreamTag
        name: boskos:latest
        namespace: ci
      paths:
      - destinationDir: .
        sourcePath: /app
    - from:
        kind: ImageStreamTag
        name: prometheus:latest
        namespace: ci
      paths:
      - destinationDir: .
        sourcePath: /bin/prometheus
      - destinationDir: .
        sourcePath: /bin/promtool
    # NOTE: We cannot use a ConfigChange trigger on this build as it triggers on every push to
    # openshift/release, causing this image to build ~100x a day. If you change the following
    # Dockerfile, please ensure you run `oc start-build` yourself once the new version is applied.
    dockerfile: |
      FROM quay.io/centos/centos:stream9

      ENV VERSION=1.19 \
          GOCACHE=/go/.cache \
          GOARM=5 \
          GOPATH=/go \
          GOROOT=/usr/local/go \
          LOGNAME=deadbeef
      ENV PATH=$PATH:$GOROOT/bin:$GOPATH/bin

      RUN dnf install -y epel-release && \
          rpm -V epel-release && \
          dnf upgrade -y --refresh && \
          dnf config-manager --set-enabled crb && \
          INSTALL_PKGS="bc bind-utils bsdtar device-mapper device-mapper-persistent-data e2fsprogs ethtool file findutils gcc git glib2-devel hostname iptables-nft jq krb5-devel libseccomp-devel libvirt-devel lsof make mercurial nmap-ncat openssl rsync socat systemd-devel tar tito tree util-linux wget which xfsprogs zip" && \
          dnf install -y $INSTALL_PKGS && \
          rpm -V $INSTALL_PKGS && \
          dnf clean all && \
          touch /os-build-image && \
          git config --system user.name origin-release-container && \
          git config --system user.email origin-release@redhat.com

      RUN \
          set -x &&  \
          curl --fail --retry 3 -L https://golang.org/dl/go$VERSION.linux-arm64.tar.gz | tar -C /usr/local -xzf - && \
          go install golang.org/x/tools/cmd/cover@latest && \
          go install golang.org/x/tools/cmd/goimports@latest && \
          go install golang.org/x/lint/golint@latest && \
          go install gotest.tools/gotestsum@v1.9.0 && \
          mv $GOPATH/bin/* /usr/bin/ && \
          rm -rf $GOPATH/* $GOPATH/.cache && \
          mkdir $GOPATH/bin && \
          ln -s /usr/bin/goimports $GOPATH/bin/goimports

      RUN chmod g+xw -R $GOPATH && \
          chmod g+xw -R $(go env GOROOT)

      ENV VAULT_DISABLE_MLOCK true
      RUN curl --fail --retry 3 -L -O 'https://releases.hashicorp.com/vault/1.7.0/vault_1.7.0_linux_arm64.zip' && \
          unzip 'vault_1.7.0_linux_arm64.zip' && \
          mv vault /usr/bin/ && \
          rm -f vault_1.7.0_linux_arm64.zip && \
          setcap cap_ipc_lock= /usr/bin/vault

      RUN dnf install -y nodejs && npm install -g typescript
      RUN npm config set cache /go/.npm --global

      COPY ./app /go/bin/boskos

      COPY ./prometheus /go/bin/prometheus
      COPY ./promtool /go/bin/promtool
    type: Dockerfile
  strategy:
    dockerStrategy:
      from:
        kind: ImageStreamTag
        name: centos:stream9
        namespace: openshift
      imageOptimizationPolicy: SkipLayers
    type: Docker
  triggers:
  - imageChange:
      from:
        kind: ImageStreamTag
        name: centos:stream9
        namespace: openshift
    type: ImageChange
