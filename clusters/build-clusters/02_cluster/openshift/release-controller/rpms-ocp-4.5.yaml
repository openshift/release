apiVersion: v1
kind: List
items:

# each RPM (group,release) pair gets a service and deployment to serve RPM content from the mirrors
- apiVersion: v1
  kind: Service
  metadata:
    name: base-4-5
    namespace: ocp
  spec:
    selector:
      app: base-4-5
    ports:
    - port: 80
      targetPort: 8080
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: base-4-5
    namespace: ocp
    labels:
      app: base-4-5
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"content-mirror:latest","namespace":"ci"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mirror\")].image"}]'
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: base-4-5
    template:
      metadata:
        labels:
          app: base-4-5
      spec:
        volumes:
        - name: repos
          configMap:
            name: base-repos
            items:
            - key: ocp-4.5-default.repo
              path: ocp-4.5-default.repo
        - name: key
          secret:
            secretName: mirror.openshift.com
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}
        containers:
        - name: mirror
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
          - name: repos
            mountPath: /tmp/repos
            readOnly: true
          - name: key
            mountPath: /tmp/key
            readOnly: true
          - name: cache
            mountPath: /tmp/cache
          image: " "
          workingDir: /tmp/repos
          command:
          - content-mirror
          - --path=/tmp/config
          - --max-size=5g
          - --timeout=30m
          - /tmp/repos

# OpenStack repos
- apiVersion: v1
  kind: Service
  metadata:
    name: base-openstack-4-5
    namespace: ocp
  spec:
    selector:
      app: base-openstack-4-5
    ports:
      - port: 80
        targetPort: 8080
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: base-openstack-4-5
    namespace: ocp
    labels:
      app: base-openstack-4-5
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"content-mirror:latest","namespace":"ci"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mirror\")].image"}]'
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: base-openstack-4-5
    template:
      metadata:
        labels:
          app: base-openstack-4-5
      spec:
        volumes:
          - name: repos
            configMap:
              name: base-repos
              items:
              - key: ocp-4.5-openstack.repo
                path: ocp-4.5-openstack.repo
          - name: key
            secret:
              secretName: mirror.openshift.com
          - name: cache
            emptyDir: {}
          - name: run
            emptyDir: {}
        containers:
          - name: mirror
            ports:
              - name: http
                containerPort: 8080
            volumeMounts:
              - name: repos
                mountPath: /tmp/repos
                readOnly: true
              - name: key
                mountPath: /tmp/key
                readOnly: true
              - name: cache
                mountPath: /tmp/cache
            image: " "
            workingDir: /tmp/repos
            command:
              - content-mirror
              - --path=/tmp/config
              - --max-size=5g
              - --timeout=30m
              - /tmp/repos

- apiVersion: v1
  kind: Service
  metadata:
    name: openstack-beta-4-5
    namespace: ocp
  spec:
    selector:
      app: openstack-beta-4-5
    ports:
      - port: 80
        targetPort: 8080
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: openstack-beta-4-5
    namespace: ocp
    labels:
      app: openstack-beta-4-5
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"content-mirror:latest","namespace":"ci"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mirror\")].image"}]'
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: openstack-beta-4-5
    template:
      metadata:
        labels:
          app: openstack-beta-4-5
      spec:
        volumes:
          - name: repos
            configMap:
              name: base-repos
              items:
              - key: ocp-4.5-openstack-beta.repo
                path: ocp-4.5-openstack-beta.repo
          - name: key
            secret:
              secretName: mirror.openshift.com
          - name: cache
            emptyDir: {}
          - name: run
            emptyDir: {}
        containers:
          - name: mirror
            ports:
              - name: http
                containerPort: 8080
            volumeMounts:
              - name: repos
                mountPath: /tmp/repos
                readOnly: true
              - name: key
                mountPath: /tmp/key
                readOnly: true
              - name: cache
                mountPath: /tmp/cache
            image: " "
            workingDir: /tmp/repos
            command:
              - content-mirror
              - --path=/tmp/config
              - --max-size=5g
              - --timeout=30m
              - /tmp/repos

# RHEL8 repos
- apiVersion: v1
  kind: Service
  metadata:
    name: base-4-5-rhel8
    namespace: ocp
  spec:
    selector:
      app: base-4-5-rhel8
    ports:
      - port: 80
        targetPort: 8080
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: base-4-5-rhel8
    namespace: ocp
    labels:
      app: base-4-5-rhel8
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"content-mirror:latest","namespace":"ci"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mirror\")].image"}]'
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: base-4-5-rhel8
    template:
      metadata:
        labels:
          app: base-4-5-rhel8
      spec:
        volumes:
          - name: repos
            configMap:
              name: base-repos
              items:
              - key: ocp-4.5-rhel8.repo
                path: ocp-4.5-rhel8.repo
          - name: key
            secret:
              secretName: mirror.openshift.com
          - name: cache
            emptyDir: {}
          - name: run
            emptyDir: {}
        containers:
          - name: mirror
            ports:
              - name: http
                containerPort: 8080
            volumeMounts:
              - name: repos
                mountPath: /tmp/repos
                readOnly: true
              - name: key
                mountPath: /tmp/key
                readOnly: true
              - name: cache
                mountPath: /tmp/cache
            image: " "
            workingDir: /tmp/repos
            command:
              - content-mirror
              - --path=/tmp/config
              - --max-size=5g
              - --timeout=30m
              - /tmp/repos

# Multi-arch repos, s390x and ppc64le
- apiVersion: v1
  kind: Service
  metadata:
    name: base-4-5-s390x
    namespace: ocp
  spec:
    selector:
      app: base-4-5-s390x
    ports:
    - port: 80
      targetPort: 8080
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: base-4-5-s390x
    namespace: ocp
    labels:
      app: base-4-5-s390x
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"content-mirror:latest","namespace":"ci"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mirror\")].image"}]'
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: base-4-5-s390x
    template:
      metadata:
        labels:
          app: base-4-5-s390x
      spec:
        volumes:
        - name: repos
          configMap:
            name: base-repos
            items:
            - key: ocp-4.5-s390x.repo
              path: ocp-4.5-s390x.repo
        - name: key
          secret:
            secretName: mirror.openshift.com
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}
        containers:
        - name: mirror
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
          - name: repos
            mountPath: /tmp/repos
            readOnly: true
          - name: key
            mountPath: /tmp/key
            readOnly: true
          - name: cache
            mountPath: /tmp/cache
          image: " "
          workingDir: /tmp/repos
          command:
          - content-mirror
          - --path=/tmp/config
          - --max-size=5g
          - --timeout=30m
          - /tmp/repos
- apiVersion: v1
  kind: Service
  metadata:
    name: base-4-5-ppc64le
    namespace: ocp
  spec:
    selector:
      app: base-4-5-ppc64le
    ports:
    - port: 80
      targetPort: 8080
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: base-4-5-ppc64le
    namespace: ocp
    labels:
      app: base-4-5-ppc64le
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"content-mirror:latest","namespace":"ci"},"fieldPath":"spec.template.spec.containers[?(@.name==\"mirror\")].image"}]'
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: base-4-5-ppc64le
    template:
      metadata:
        labels:
          app: base-4-5-ppc64le
      spec:
        volumes:
        - name: repos
          configMap:
            name: base-repos
            items:
            - key: ocp-4.5-ppc64le.repo
              path: ocp-4.5-ppc64le.repo
        - name: key
          secret:
            secretName: mirror.openshift.com
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}
        containers:
        - name: mirror
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
          - name: repos
            mountPath: /tmp/repos
            readOnly: true
          - name: key
            mountPath: /tmp/key
            readOnly: true
          - name: cache
            mountPath: /tmp/cache
          image: " "
          workingDir: /tmp/repos
          command:
          - content-mirror
          - --path=/tmp/config
          - --max-size=5g
          - --timeout=30m
          - /tmp/repos
