---
apiVersion: v1
kind: Service
metadata:
  name: ci-scheduling-admission-webhook
  namespace: ci-scheduling-webhook
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: ci-scheduling-admission-webhook-serving-cert
spec:
  ports:
    - name: main
      port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    app: ci-scheduling-admission-webhook
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ci-scheduling-admission-webhook
  name: ci-scheduling-admission-webhook
  namespace: ci-scheduling-webhook
spec:
  # There is some state stored for assumed pods.
  # Prefer vertical to horizontal scaling.
  replicas: 1
  selector:
    matchLabels:
      app: ci-scheduling-admission-webhook
  template:
    metadata:
      labels:
        app: ci-scheduling-admission-webhook
    spec:
      serviceAccountName: ci-scheduling-webhook
      tolerations:
        - key: node-role.kubernetes.io/infra
          operator: Exists
      containers:
        # Temporary hosting location
        - image: quay.io/jupierce/ci-scheduling-webhook:latest
          command:
          - "/usr/bin/ci-scheduling-webhook"
          - "--port"
          - "8443"
          - "--tls-cert"
          - "/etc/pki/tls/certs/admission/tls.crt"
          - "--tls-key"
          - "/etc/pki/tls/certs/admission/tls.key"
          #- "--shrink-cpu-requests-tests"
          #- "0.3"
          name: webhook
          imagePullPolicy: Always
          ports:
            - name: main
              containerPort: 8443
          volumeMounts:
            - name: serving-cert
              mountPath: /etc/pki/tls/certs/admission
              readOnly: true
          resources:
            requests:
              memory: "2Gi"
              cpu: "2"
      volumes:
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: ci-scheduling-admission-webhook-serving-cert
