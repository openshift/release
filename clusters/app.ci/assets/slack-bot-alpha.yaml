kind: List
apiVersion: v1
items:
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: slack-bot-alpha
    namespace: ci
- apiVersion: v1
  kind: Route
  metadata:
    namespace: ci
    name: slack-bot-alpha
  spec:
    port:
      targetPort: 8888
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: slack-bot-alpha
- apiVersion: v1
  kind: Service
  metadata:
    namespace: ci
    name: slack-bot-alpha
    labels:
      app: slack-bot-alpha
  spec:
    selector:
      app: slack-bot-alpha
    ports:
    - name: main
      port: 8888
      targetPort: 8888
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    namespace: ci
    name: slack-bot-alpha
    labels:
      app: slack-bot-alpha
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"slack-bot-alpha:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"slack-bot-alpha\")].image"}]'
  spec:
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: slack-bot-alpha
    template:
      metadata:
        labels:
          app: slack-bot-alpha
      spec:
        serviceAccountName: slack-bot-alpha
        containers:
        - name: slack-bot-alpha
          image: slack-bot-alpha
          args:
          - --slack-token-path=/etc/slack/oauth_token
          - --slack-signing-secret-path=/etc/slack/signing_secret
          - --log-level=debug
          ports:
            - name: main
              containerPort: 8888
            - name: metrics
              containerPort: 9090
          volumeMounts:
          - name: slack
            mountPath: /etc/slack
            readOnly: true
          resources:
            requests:
              memory: "250Mi"
              cpu: "100m"
        volumes:
        - name: slack
          secret:
            secretName: slack-credentials-dptp-bot-alpha
