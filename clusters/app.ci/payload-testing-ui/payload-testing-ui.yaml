apiVersion: template.openshift.io/v1
kind: Template
parameters:
- name: NAMESPACE
  value: ci
- name: REPLICAS
  value: "3"
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    namespace: ${NAMESPACE}
    name: payload-testing-ui
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRole
  metadata:
    name: payload-testing-reader
  rules:
  - apiGroups:
    - ci.openshift.io
    resources:
    - pullrequestpayloadqualificationruns
    verbs:
    - get
    - list
    - watch
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRoleBinding
  metadata:
    namespace: ${NAMESPACE}
    name: payload-testing-reader
  roleRef:
    name: payload-testing-reader
  subjects:
  - kind: ServiceAccount
    name: payload-testing-ui
    namespace: ${NAMESPACE}
  userNames:
  - system:serviceaccount:${NAMESPACE}:payload-testing-ui
- apiVersion: v1
  kind: Service
  metadata:
    namespace: ${NAMESPACE}
    name: payload-testing-ui
    labels:
      app: pr-payload-tests
      component: payload-testing-ui
  spec:
    ports:
    - name: ui
      port: 8000
      protocol: TCP
      targetPort: ui
    selector:
      app: pr-payload-tests
      component: payload-testing-ui
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    namespace: ${NAMESPACE}
    name: payload-testing-ui
    labels:
      app: pr-payload-tests
      component: payload-testing-ui
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    port:
      targetPort: ui
    to:
      kind: Service
      name: payload-testing-ui
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    namespace: ${NAMESPACE}
    name: payload-testing-ui
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"payload-testing-ui:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"payload-testing-ui\")].image"}]'
    labels:
      app: pr-payload-tests
      component: payload-testing-ui
  spec:
    replicas: ${{REPLICAS}}
    strategy:
      type: RollingUpdate
    selector:
      matchLabels:
        app: pr-payload-tests
        component: payload-testing-ui
    template:
      metadata:
        labels:
          app: pr-payload-tests
          component: payload-testing-ui
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: component
                    operator: In
                    values:
                    - ci-operator-configresolver
                topologyKey: "kubernetes.io/hostname"
        containers:
        - name: payload-testing-ui
          image: payload-testing-ui:latest
          args:
          - --port=8000
          ports:
          - name: ui
            containerPort: 8000
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 3
            timeoutSeconds: 600
        serviceAccountName: payload-testing-ui
