apiVersion: v1
kind: List
items:
- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    namespace: openshift
    name: golang-1.16-vault
- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    namespace: openshift
    name: golang-1.16-vault-typescript
- kind: BuildConfig
  apiVersion: build.openshift.io/v1
  metadata:
    namespace: openshift
    name: golang-1.16-vault
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: release:golang-1.16-vault
    source:
      # NOTE: We cannot use a ConfigChange trigger on this build as it triggers on every push to
      # openshift/release, causing this image to build ~100x a day. If you change the following
      # Dockerfile, please ensure you run `oc start-build` yourself once the new version is applied.
      dockerfile: |
        FROM openshift/release:golang-1.16
        ENV VAULT_DISABLE_MLOCK true
        RUN yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo && \
            yum install -y vault-1.6.2-1 && \
            setcap cap_ipc_lock= /usr/bin/vault
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: release:golang-1.16
          namespace: openshift
        imageOptimizationPolicy: SkipLayers
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: release:golang-1.16
      type: ImageChange
- kind: BuildConfig
  apiVersion: build.openshift.io/v1
  metadata:
    namespace: openshift
    name: golang-1.16-vault-typescript
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: release:golang-1.16-vault-typescript
    source:
      # NOTE: We cannot use a ConfigChange trigger on this build as it triggers on every push to
      # openshift/release, causing this image to build ~100x a day. If you change the following
      # Dockerfile, please ensure you run `oc start-build` yourself once the new version is applied.
      dockerfile: |
        FROM openshift/release:golang-1.16-vault
        RUN yum install -y nodejs && npm install -g typescript
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: release:golang-1.16-vault
          namespace: openshift
        imageOptimizationPolicy: SkipLayers
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: release:golang-1.16-vault
      type: ImageChange
