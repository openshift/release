apiVersion: v1
kind: List
items:
- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    namespace: ci
    name: kcp-dev-build-root
- kind: BuildConfig
  apiVersion: build.openshift.io/v1
  metadata:
    namespace: ci
    name: kcp-dev-build-root-1.17
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: kcp-dev-build-root:1.17
    source:
      images:
      - from:
          kind: ImageStreamTag
          name: "4.11:cli"
          namespace: ocp
        paths:
        - destinationDir: .
          sourcePath: /usr/bin/oc
      # NOTE: We cannot use a ConfigChange trigger on this build as it triggers on every push to
      # openshift/release, causing this image to build ~100x a day. If you change the following
      # Dockerfile, please ensure you run `oc start-build` yourself once the new version is applied.
      dockerfile: |
        FROM quay.io/centos/centos:stream8

        ENV VERSION=1.17 \
            GOCACHE=/go/.cache \
            GOARM=5 \
            GOPATH=/go \
            GOROOT=/usr/local/go \
            LOGNAME=deadbeef
        ENV PATH=$PATH:$GOROOT/bin:$GOPATH/bin

        RUN yum install -y epel-release && \
            rpm -V epel-release && \
            INSTALL_PKGS="bc bind-utils bsdtar device-mapper device-mapper-persistent-data e2fsprogs ethtool file findutils gcc git glib2-devel hostname iptables jq krb5-devel libseccomp-devel libvirt-devel lsof make mercurial nmap-ncat openssl rsync socat systemd-devel tar tito tree util-linux wget which xfsprogs zip" && \
            yum install -y $INSTALL_PKGS && \
            rpm -V $INSTALL_PKGS && \
            yum clean all && \
            touch /os-build-image && \
            git config --system user.name kcp-dev-container && \
            git config --system user.email kcp-dev@redhat.com

        RUN \
            set -x &&  \
            curl --fail --retry 3 -L https://golang.org/dl/go$VERSION.linux-amd64.tar.gz | tar -C /usr/local -xzf - && \
            mkdir -p $GOPATH/bin

        RUN chmod g+xw -R $GOPATH && \
            chmod g+xw -R $(go env GOROOT)

        RUN \
            set -x &&  \
            curl --fail --retry 3 -L -o /go/bin/kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64 && \
            chmod +x /go/bin/kind

        COPY ./oc /go/bin/kubectl
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: centos:stream8
          namespace: origin
        imageOptimizationPolicy: SkipLayers
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: centos:stream8
          namespace: origin
      type: ImageChange
- kind: BuildConfig
  apiVersion: build.openshift.io/v1
  metadata:
    namespace: ci
    name: kcp-dev-build-root-1.18
  spec:
    successfulBuildsHistoryLimit: 1
    failedBuildsHistoryLimit: 2
    output:
      to:
        kind: ImageStreamTag
        name: kcp-dev-build-root:1.18
    source:
      images:
      - from:
          kind: ImageStreamTag
          name: "4.11:cli"
          namespace: ocp
        paths:
        - destinationDir: .
          sourcePath: /usr/bin/oc
      # NOTE: We cannot use a ConfigChange trigger on this build as it triggers on every push to
      # openshift/release, causing this image to build ~100x a day. If you change the following
      # Dockerfile, please ensure you run `oc start-build` yourself once the new version is applied.
      dockerfile: |
        FROM quay.io/centos/centos:stream8

        ENV VERSION=1.18 \
            GOCACHE=/go/.cache \
            GOARM=5 \
            GOPATH=/go \
            GOROOT=/usr/local/go \
            LOGNAME=deadbeef
        ENV PATH=$PATH:$GOROOT/bin:$GOPATH/bin

        RUN yum install -y epel-release && \
            rpm -V epel-release && \
            INSTALL_PKGS="bc bind-utils bsdtar device-mapper device-mapper-persistent-data e2fsprogs ethtool file findutils gcc git glib2-devel hostname iptables jq krb5-devel libseccomp-devel libvirt-devel lsof make mercurial nmap-ncat openssl rsync socat systemd-devel tar tito tree util-linux wget which xfsprogs zip" && \
            yum install -y $INSTALL_PKGS && \
            rpm -V $INSTALL_PKGS && \
            yum clean all && \
            touch /os-build-image && \
            git config --system user.name kcp-dev-container && \
            git config --system user.email kcp-dev@redhat.com

        RUN \
            set -x &&  \
            curl --fail --retry 3 -L https://golang.org/dl/go$VERSION.linux-amd64.tar.gz | tar -C /usr/local -xzf - && \
            mkdir -p $GOPATH/bin

        RUN chmod g+xw -R $GOPATH && \
            chmod g+xw -R $(go env GOROOT)

        RUN \
            set -x &&  \
            curl --fail --retry 3 -L -o /go/bin/kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64 && \
            chmod +x /go/bin/kind

        COPY ./oc /go/bin/kubectl
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: centos:stream8
          namespace: origin
        imageOptimizationPolicy: SkipLayers
      type: Docker
    triggers:
    - imageChange:
        from:
          kind: ImageStreamTag
          name: centos:stream8
          namespace: origin
      type: ImageChange
