##################################################################################
#                                DO NOT EDIT
# File generated during execution of: generate-release-controllers.py
##################################################################################


#---------------------------------------------------------------------------------
# osd_rc_deployments.py added the following resource
#---------------------------------------------------------------------------------

# Resources required to deploy release controller instances on
# the app.ci clusters.
# Bootstrap the environment for the amd64 tests image.  The caches require an amd64 "tests" image to execute on
#     the cluster.  This imagestream is used as a commandline parameter to the release-controller...
#          --tools-image-stream-tag=release-controller-bootstrap:tools
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: release-controller-bootstrap
  namespace: ocp-multi
spec:
  lookupPolicy:
    local: false
  tags:
  - from:
      kind: DockerImage
      name: image-registry.openshift-image-registry.svc:5000/ocp/4.16:tools
    importPolicy:
      scheduled: true
    name: tools
    referencePolicy:
      type: Source
---
#---------------------------------------------------------------------------------
# osd_rc_deployments.py added the following resource
#---------------------------------------------------------------------------------

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: release-controller-ocp-multi
  namespace: ci
spec:
  host: openshift-release-multi.apps.ci.l2s4.p1.openshiftapps.com
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: Edge
  to:
    kind: Service
    name: release-controller-api-ocp-multi
---
#---------------------------------------------------------------------------------
# osd_rc_deployments.py added the following resource
#---------------------------------------------------------------------------------

apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    app: release-controller-ocp-multi
  name: release-controller-ocp-multi
  namespace: ci
spec:
  ports:
  - name: main
    port: 80
    targetPort: 8080
  selector:
    app: release-controller-ocp-multi
---
#---------------------------------------------------------------------------------
# osd_rc_deployments.py added the following resource
#---------------------------------------------------------------------------------

apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    app: release-controller-api-ocp-multi
  name: release-controller-api-ocp-multi
  namespace: ci
spec:
  ports:
  - name: main
    port: 80
    targetPort: 8080
  selector:
    app: release-controller-api-ocp-multi
---
#---------------------------------------------------------------------------------
# osd_rc_deployments.py added the following resource
#---------------------------------------------------------------------------------

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: {}
  name: release-controller-ocp-multi
  namespace: ci
spec:
  endpoints:
  - interval: 30s
    port: main
    scheme: http
  selector:
    matchLabels:
      app: release-controller-ocp-multi
---
#---------------------------------------------------------------------------------
# osd_rc_deployments.py added the following resource
#---------------------------------------------------------------------------------

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: {}
  name: release-controller-api-ocp-multi
  namespace: ci
spec:
  endpoints:
  - interval: 30s
    port: main
    scheme: http
  namespaceSelector:
    matchNames:
    - ci
  selector:
    matchLabels:
      app: release-controller-api-ocp-multi
---
#---------------------------------------------------------------------------------
# osd_rc_deployments.py added the following resource
#---------------------------------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"release-controller:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"controller\")].image"}]'
  name: release-controller-ocp-multi
  namespace: ci
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-controller-ocp-multi
  template:
    metadata:
      labels:
        app: release-controller-ocp-multi
    spec:
      containers:
      - args:
        - --repo=https://github.com/openshift/release.git
        - --ref=master
        - --period=30s
        - --root=/tmp/git-sync
        - --max-failures=3
        command:
        - /git-sync
        env:
        - name: GIT_SYNC_DEST
          value: release
        image: quay-proxy.ci.openshift.org/openshift/ci:ci_git-sync_v4.2.3
        name: git-sync
        resources:
          requests:
            cpu: '0.5'
            memory: 1Gi
        volumeMounts:
        - mountPath: /tmp/git-sync
          name: release
      - command:
        - /usr/bin/release-controller
        - --release-namespace=ocp-multi
        - --prow-config=/etc/config/config.yaml
        - --supplemental-prow-config-dir=/etc/config
        - --job-config=/var/repo/release/ci-operator/jobs
        - --listen=:8080
        - --prow-namespace=ci
        - --job-namespace=ci-release-multi
        - --tools-image-stream-tag=release-controller-bootstrap:tools
        - --release-architecture=multi
        - -v=6
        - --github-token-path=/etc/github/oauth
        - --github-endpoint=http://ghproxy
        - --github-graphql-endpoint=http://ghproxy/graphql
        - --github-throttle=250
        - --jira-endpoint=https://issues.redhat.com
        - --jira-bearer-token-file=/etc/jira/api
        - --verify-jira
        - --plugin-config=/etc/plugins/plugins.yaml
        - --supplemental-plugin-config-dir=/etc/plugins
        - --authentication-message=Pulling these images requires <a href="https://docs.ci.openshift.org/docs/how-tos/use-registries-in-build-farm/">authenticating to the app.ci cluster</a>.
        - --art-suffix=-art-latest-multi
        - --manifest-list-mode
        env:
        - name: HOME
          value: /tmp/home
        - name: XDG_RUNTIME_DIR
          value: /tmp/home/run
        image: release-controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        name: controller
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 600
        resources:
          requests:
            memory: 2Gi
        volumeMounts:
        - mountPath: /etc/config
          name: config
          readOnly: true
        - mountPath: /var/repo
          name: release
        - mountPath: /etc/github
          name: oauth
          readOnly: true
        - mountPath: /etc/jira
          name: jira
          readOnly: true
        - mountPath: /etc/plugins
          name: plugins
          readOnly: true
        - mountPath: /etc/kubeconfigs
          name: release-controller-kubeconfigs
          readOnly: true
        - mountPath: /tmp/home
          name: home
        - mountPath: /tmp/git
          name: oc-cache
        - mountPath: /tmp/home/.git-credentials
          name: git-credentials
          subPath: .git-credentials
        - mountPath: /tmp/pull-secret
          name: pull-secret
      initContainers:
      - args:
        - --repo=https://github.com/openshift/release.git
        - --ref=master
        - --root=/tmp/git-sync
        - --one-time=true
        - --depth=1
        command:
        - /git-sync
        env:
        - name: GIT_SYNC_DEST
          value: release
        image: quay-proxy.ci.openshift.org/openshift/ci:ci_git-sync_v4.2.3
        name: git-sync-init
        volumeMounts:
        - mountPath: /tmp/git-sync
          name: release
      - command:
        - /bin/bash
        - -c
        - "#!/bin/bash\nset -euo pipefail\ntrap 'kill $(jobs -p); exit 0' TERM\n\nSECONDS=0\n\n# ensure we are logged in to our registry\nmkdir -p ${XDG_RUNTIME_DIR}/containers\ncp /tmp/pull-secret/auth.json ${XDG_RUNTIME_DIR}/containers/auth.json || true\n\n# global git config stored to $HOME/.gitconfig which is shared with the main release-controller pods\ngit config --global credential.helper store\ngit config --global user.name test\ngit config --global user.email test@test.com\noc registry login --to ${XDG_RUNTIME_DIR}/containers/auth.json\n\nFROM=$(curl -s https://amd64.ocp.releases.ci.openshift.org/api/v1/releasestreams/accepted | jq -r '.[\"4-stable\"][0] // empty')\nTO=$(curl -s https://amd64.ocp.releases.ci.openshift.org/api/v1/releasestreams/accepted | jq -r '.[\"4-dev-preview\"][0] // empty')\n\nif [[ -n \"$FROM\" && -n \"$TO\" ]]\nthen\n    echo \"Pre-populating the git cache...\"\n    oc adm release info --changelog=/tmp/git quay.io/openshift-release-dev/ocp-release:$FROM-x86_64 quay.io/openshift-release-dev/ocp-release:$TO-x86_64\nelse\n    echo \"Unable to Pre-populate the git cache!\"\nfi\n\nDURATION=$SECONDS\necho \"Took: $(($DURATION / 60))m $(($DURATION % 60))s\"\n            "
        env:
        - name: HOME
          value: /tmp/home
        - name: XDG_RUNTIME_DIR
          value: /tmp/home/run
        image: release-controller:latest
        name: oc-prepare
        volumeMounts:
        - mountPath: /tmp/home
          name: home
        - mountPath: /tmp/git
          name: oc-cache
        - mountPath: /tmp/home/.git-credentials
          name: git-credentials
          subPath: .git-credentials
        - mountPath: /tmp/pull-secret
          name: pull-secret
      serviceAccountName: release-controller-ocp-multi
      volumes:
      - configMap:
          defaultMode: 420
          name: config
        name: config
      - emptyDir: {}
        name: release
      - name: oauth
        secret:
          defaultMode: 420
          secretName: github-credentials-openshift-merge-robot
      - name: jira
        secret:
          defaultMode: 420
          secretName: jira-credentials-openshift-jira-robot
      - configMap:
          defaultMode: 420
          name: plugins
        name: plugins
      - name: release-controller-kubeconfigs
        secret:
          defaultMode: 420
          secretName: release-controller-kubeconfigs
      - emptyDir: {}
        name: home
      - emptyDir: {}
        name: oc-cache
      - name: git-credentials
        secret:
          defaultMode: 420
          items:
          - key: .git-credentials
            path: .git-credentials
          secretName: release-controller-oc-git-credentials
      - name: pull-secret
        secret:
          defaultMode: 420
          secretName: release-controller-oc-pull-secret
---
#---------------------------------------------------------------------------------
# osd_rc_deployments.py added the following resource
#---------------------------------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"release-controller-api:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"controller\")].image"}]'
  name: release-controller-api-ocp-multi
  namespace: ci
spec:
  replicas: 3
  selector:
    matchLabels:
      app: release-controller-api-ocp-multi
  template:
    metadata:
      labels:
        app: release-controller-api-ocp-multi
    spec:
      containers:
      - command:
        - /usr/bin/release-controller-api
        - --release-namespace=ocp-multi
        - --artifacts=openshift-release-artifacts-multi.apps.ci.l2s4.p1.openshiftapps.com
        - --prow-namespace=ci
        - --job-namespace=ci-release-multi
        - --tools-image-stream-tag=release-controller-bootstrap:tools
        - --release-architecture=multi
        - -v=6
        - --authentication-message=Pulling these images requires <a href="https://docs.ci.openshift.org/docs/how-tos/use-registries-in-build-farm/">authenticating to the app.ci cluster</a>.
        - --art-suffix=-art-latest-multi
        - --enable-jira
        - --jira-endpoint=https://issues.redhat.com
        - --jira-bearer-token-file=/etc/jira/api
        env:
        - name: HOME
          value: /tmp/home
        - name: XDG_RUNTIME_DIR
          value: /tmp/home/run
        image: release-controller-api:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        name: controller
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 600
        resources:
          requests:
            memory: 2Gi
        volumeMounts:
        - mountPath: /etc/jira
          name: jira
          readOnly: true
        - mountPath: /etc/kubeconfigs
          name: release-controller-kubeconfigs
          readOnly: true
        - mountPath: /tmp/home
          name: home
        - mountPath: /tmp/git
          name: oc-cache
        - mountPath: /tmp/home/.git-credentials
          name: git-credentials
          subPath: .git-credentials
        - mountPath: /tmp/pull-secret
          name: pull-secret
      initContainers:
      - command:
        - /bin/bash
        - -c
        - "#!/bin/bash\nset -euo pipefail\ntrap 'kill $(jobs -p); exit 0' TERM\n\nSECONDS=0\n\n# ensure we are logged in to our registry\nmkdir -p ${XDG_RUNTIME_DIR}/containers\ncp /tmp/pull-secret/auth.json ${XDG_RUNTIME_DIR}/containers/auth.json || true\n\n# global git config stored to $HOME/.gitconfig which is shared with the main release-controller pods\ngit config --global credential.helper store\ngit config --global user.name test\ngit config --global user.email test@test.com\noc registry login --to ${XDG_RUNTIME_DIR}/containers/auth.json\n\nFROM=$(curl -s https://amd64.ocp.releases.ci.openshift.org/api/v1/releasestreams/accepted | jq -r '.[\"4-stable\"][0] // empty')\nTO=$(curl -s https://amd64.ocp.releases.ci.openshift.org/api/v1/releasestreams/accepted | jq -r '.[\"4-dev-preview\"][0] // empty')\n\nif [[ -n \"$FROM\" && -n \"$TO\" ]]\nthen\n    echo \"Pre-populating the git cache...\"\n    oc adm release info --changelog=/tmp/git quay.io/openshift-release-dev/ocp-release:$FROM-x86_64 quay.io/openshift-release-dev/ocp-release:$TO-x86_64\nelse\n    echo \"Unable to Pre-populate the git cache!\"\nfi\n\nDURATION=$SECONDS\necho \"Took: $(($DURATION / 60))m $(($DURATION % 60))s\"\n            "
        env:
        - name: HOME
          value: /tmp/home
        - name: XDG_RUNTIME_DIR
          value: /tmp/home/run
        image: release-controller:latest
        name: oc-prepare
        volumeMounts:
        - mountPath: /tmp/home
          name: home
        - mountPath: /tmp/git
          name: oc-cache
        - mountPath: /tmp/home/.git-credentials
          name: git-credentials
          subPath: .git-credentials
        - mountPath: /tmp/pull-secret
          name: pull-secret
      serviceAccountName: release-controller-ocp-multi
      volumes:
      - name: jira
        secret:
          defaultMode: 420
          secretName: jira-credentials-openshift-jira-robot
      - name: release-controller-kubeconfigs
        secret:
          defaultMode: 420
          secretName: release-controller-kubeconfigs
      - emptyDir: {}
        name: home
      - emptyDir: {}
        name: oc-cache
      - name: git-credentials
        secret:
          defaultMode: 420
          items:
          - key: .git-credentials
            path: .git-credentials
          secretName: release-controller-oc-git-credentials
      - name: pull-secret
        secret:
          defaultMode: 420
          secretName: release-controller-oc-pull-secret
---
#---------------------------------------------------------------------------------
# osd_files_cache_rbac.py added the following resource
#---------------------------------------------------------------------------------

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-controller-jobs-binding
  namespace: ocp-multi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
- kind: ServiceAccount
  name: default
  namespace: ci-release-multi
---
#---------------------------------------------------------------------------------
# osd_files_cache_resources.py added the following resource
#---------------------------------------------------------------------------------

# Resources required to deploy resources for the files-cache on
# the app.ci clusters.
# The release controller creates a files cache stateful set in each ci-release namespace
# used by a release controller. Create a service and a route to this public instance.
apiVersion: v1
kind: Service
metadata:
  name: files-cache
  namespace: ci-release-multi
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: files-cache
---
#---------------------------------------------------------------------------------
# osd_files_cache_resources.py added the following resource
#---------------------------------------------------------------------------------

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: files-cache
  namespace: ci-release-multi
spec:
  host: openshift-release-artifacts-multi.apps.ci.l2s4.p1.openshiftapps.com
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: Edge
  to:
    kind: Service
    name: files-cache
