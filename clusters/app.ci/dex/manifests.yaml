apiVersion: v1
kind: Namespace
metadata:
  name: dex
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: cert-issuer
  name: dex
  namespace: dex
spec:
  ingressClassName: openshift-default
  tls:
    - secretName: dex-tls
      hosts:
        - idp.ci.openshift.org
  rules:
  - host: idp.ci.openshift.org
    http:
      paths:
      - backend:
          service:
            name: dex
            port:
              number: 80
        pathType: ImplementationSpecific
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: dex
  name: dex
  namespace: dex
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dex
  strategy: {}
  template:
    metadata:
      annotations:
        config.yaml: |
          connectors:
          - config:
              claimMapping:
                preferred_username: preferred_username
              clientID: $CLIENT_ID
              clientSecret: $CLIENT_SECRET
              getUserInfo: true
              insecureSkipEmailVerified: true
              issuer: https://auth.redhat.com/auth/realms/EmployeeIDP
              redirectURI: https://idp.ci.openshift.org/callback
            id: sso
            name: SSO
            type: oidc
          enablePasswordDB: false
          issuer: https://idp.ci.openshift.org
          logger:
            format: json
            level: debug
          oauth2:
            skipApprovalScreen: true
          staticClients:
          - idEnv: APP-CI-ID
            name: app.ci
            redirectURIs:
            - https://oauth-openshift.apps.ci.l2s4.p1.openshiftapps.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: APP-CI-SECRET
          - idEnv: ART-ID
            name: art
            redirectURIs:
            - https://oauth-openshift.apps.art.xq1c.p1.openshiftapps.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: ART-SECRET
          - idEnv: BUILD01-ID
            name: build01
            redirectURIs:
            - https://oauth-openshift.apps.build01.ci.devcluster.openshift.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: BUILD01-SECRET
          - idEnv: BUILD02-ID
            name: build02
            redirectURIs:
            - https://oauth-openshift.apps.build02.gcp.ci.openshift.org/oauth2callback/RedHat_Internal_SSO
            secretEnv: BUILD02-SECRET
          - idEnv: BUILD03-ID
            name: build03
            redirectURIs:
            - https://oauth-openshift.apps.build03.ky4t.p1.openshiftapps.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: BUILD03-SECRET
          - idEnv: BUILD04-ID
            name: build04
            redirectURIs:
            - https://oauth-openshift.apps.build04.34d2.p2.openshiftapps.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: BUILD04-SECRET
          - idEnv: BUILD05-ID
            name: build05
            redirectURIs:
            - https://oauth-openshift.apps.build05.l9oh.p1.openshiftapps.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: BUILD05-SECRET
          - idEnv: BUILD09-ID
            name: build09
            redirectURIs:
            - https://oauth-openshift.apps.build09.ci.devcluster.openshift.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: BUILD09-SECRET
          - idEnv: BUILD10-ID
            name: build10
            redirectURIs:
            - https://oauth-openshift.apps.build10.ci.devcluster.openshift.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: BUILD10-SECRET
          - idEnv: BUILD11-ID
            name: build11
            redirectURIs:
            - https://oauth-openshift.apps.build11.ci.devcluster.openshift.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: BUILD11-SECRET
          - idEnv: HOSTED-MGMT-ID
            name: hosted-mgmt
            redirectURIs:
            - https://oauth-openshift.apps.hosted-mgmt.ci.devcluster.openshift.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: HOSTED-MGMT-SECRET
          - idEnv: VSPHERE-BUILD02-ID
            name: vsphere02
            redirectURIs:
            - https://oauth-openshift.apps.build02.vmc.ci.openshift.org/oauth2callback/RedHat_Internal_SSO
            secretEnv: VSPHERE-BUILD02-SECRET
          - idEnv: DPCR-ID
            name: dpcr
            redirectURIs:
            - https://oauth-openshift.apps.cr.j7t7.p1.openshiftapps.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: DPCR-SECRET
          - idEnv: HIVE-ID
            name: hive
            redirectURIs:
            - https://oauth-openshift.apps.hive.9xw5.p1.openshiftapps.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: HIVE-SECRET
          - idEnv: VAULT_ID
            name: vault
            redirectURIs:
            - https://vault.ci.openshift.org/ui/vault/auth/oidc/oidc/callback
            - http://localhost:8250/oidc/callback
            secretEnv: VAULT_SECRET
          - idEnv: VAULT_SECRET_MANAGER_ID
            name: vault-secret-manager
            redirectURIs:
            - https://selfservice.vault.ci.openshift.org/oauth2/callback
            secretEnv: VAULT_SECRET_MANAGER_SECRET
          - idEnv: APPS-ENGINEERING-ID
            name: apps-engineering
            redirectURIs:
            - https://oauth-openshift.apps.apps.engineering.openshift.org/oauth2callback/RedHat_Internal_SSO
            secretEnv: APPS-ENGINEERING-SECRET
          - idEnv: BUILD06-ID
            name: build06
            redirectURIs:
            - https://oauth-openshift.apps.build06.ci.devcluster.openshift.com/oauth2callback/RedHat_Internal_SSO
            secretEnv: BUILD06-SECRET
          storage:
            config:
              inCluster: true
            type: kubernetes
          web:
            http: 0.0.0.0:8000
      creationTimestamp: null
      labels:
        app: dex
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - dex
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        env:
        - name: PW
          valueFrom:
            secretKeyRef:
              key: pw
              name: dex-static-user
        - name: APP-CI-SECRET
          valueFrom:
            secretKeyRef:
              key: app.ci-secret
              name: app.ci-secret
        - name: APP-CI-ID
          valueFrom:
            secretKeyRef:
              key: app.ci-id
              name: app.ci-secret
        - name: ART-ID
          valueFrom:
            secretKeyRef:
              key: art-id
              name: art-secret
        - name: ART-SECRET
          valueFrom:
            secretKeyRef:
              key: art-secret
              name: art-secret
        - name: BUILD01-SECRET
          valueFrom:
            secretKeyRef:
              key: build01-secret
              name: build01-secret
        - name: BUILD01-ID
          valueFrom:
            secretKeyRef:
              key: build01-id
              name: build01-secret
        - name: BUILD02-SECRET
          valueFrom:
            secretKeyRef:
              key: build02-secret
              name: build02-secret
        - name: BUILD02-ID
          valueFrom:
            secretKeyRef:
              key: build02-id
              name: build02-secret
        - name: BUILD03-SECRET
          valueFrom:
            secretKeyRef:
              key: build03-secret
              name: build03-secret
        - name: BUILD03-ID
          valueFrom:
            secretKeyRef:
              key: build03-id
              name: build03-secret
        - name: BUILD04-SECRET
          valueFrom:
            secretKeyRef:
              key: build04-secret
              name: build04-secret
        - name: BUILD04-ID
          valueFrom:
            secretKeyRef:
              key: build04-id
              name: build04-secret
        - name: BUILD05-SECRET
          valueFrom:
            secretKeyRef:
              key: build05-secret
              name: build05-secret
        - name: BUILD05-ID
          valueFrom:
            secretKeyRef:
              key: build05-id
              name: build05-secret
        - name: BUILD09-SECRET
          valueFrom:
            secretKeyRef:
              key: build09-secret
              name: build09-secret
        - name: BUILD09-ID
          valueFrom:
            secretKeyRef:
              key: build09-id
              name: build09-secret
        - name: BUILD10-SECRET
          valueFrom:
            secretKeyRef:
              key: build10-secret
              name: build10-secret
        - name: BUILD10-ID
          valueFrom:
            secretKeyRef:
              key: build10-id
              name: build10-secret
        - name: BUILD11-SECRET
          valueFrom:
            secretKeyRef:
              key: build11-secret
              name: build11-secret
        - name: BUILD11-ID
          valueFrom:
            secretKeyRef:
              key: build11-id
              name: build11-secret
        - name: HOSTED-MGMT-SECRET
          valueFrom:
            secretKeyRef:
              key: hosted-mgmt-secret
              name: hosted-mgmt-secret
        - name: HOSTED-MGMT-ID
          valueFrom:
            secretKeyRef:
              key: hosted-mgmt-id
              name: hosted-mgmt-secret
        - name: VSPHERE-BUILD02-SECRET
          valueFrom:
            secretKeyRef:
              key: vsphere02-secret
              name: vsphere-build02
        - name: VSPHERE-BUILD02-ID
          valueFrom:
            secretKeyRef:
              key: vsphere02-id
              name: vsphere-build02
        - name: DPCR-SECRET
          valueFrom:
            secretKeyRef:
              key: dpcr-secret
              name: dpcr-secret
        - name: DPCR-ID
          valueFrom:
            secretKeyRef:
              key: dpcr-id
              name: dpcr-secret
        - name: HIVE-SECRET
          valueFrom:
            secretKeyRef:
              key: hive-secret
              name: hive-secret
        - name: HIVE-ID
          valueFrom:
            secretKeyRef:
              key: hive-id
              name: hive-secret
        - name: VAULT_ID
          valueFrom:
            secretKeyRef:
              key: vault-id
              name: vault-secret
        - name: VAULT_SECRET
          valueFrom:
            secretKeyRef:
              key: vault-secret
              name: vault-secret
        - name: VAULT_SECRET_MANAGER_ID
          valueFrom:
            secretKeyRef:
              key: vault-secret-manager-id
              name: vault-secret-manager
        - name: VAULT_SECRET_MANAGER_SECRET
          valueFrom:
            secretKeyRef:
              key: vault-secret-manager-secret
              name: vault-secret-manager
        - name: CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: client-id
              name: rh-sso
        - name: CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: rh-sso
        - name: KUBERNETES_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: APPS-ENGINEERING-SECRET
          valueFrom:
            secretKeyRef:
              key: secret
              name: apps-engineering-secret
        - name: APPS-ENGINEERING-ID
          valueFrom:
            secretKeyRef:
              key: id
              name: apps-engineering-secret
        - name: BUILD06-ID
          valueFrom:
            secretKeyRef:
              key: build06-id
              name: build06-secret
        - name: BUILD06-SECRET
          valueFrom:
            secretKeyRef:
              key: build06-secret
              name: build06-secret
        image: ghcr.io/dexidp/dex:v2.31.0
        name: dex
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          httpGet:
            path: /.well-known/openid-configuration
            port: 8000
        resources: {}
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
      serviceAccountName: dex
      volumes:
      - downwardAPI:
          items:
          - fieldRef:
              fieldPath: metadata.annotations['config.yaml']
            path: config.yaml
        name: config
status: {}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dex
  namespace: dex
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: dex
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: dex
spec:
  ports:
  - name: dex
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: dex
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
  namespace: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
rules:
- apiGroups: ["dex.coreos.com"] # API group created by dex
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create"] # To manage its own resources, dex must be able to create customresourcedefinitions
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: dex
