apiVersion: authorization.openshift.io/v1
kind: Role
metadata:
  name: ci-chat-bot-development-read
  namespace: ocp
rules:
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  verbs:
  - get
  - list
  - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ci-chat-bot-development-read-binding
  namespace: ocp
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: ci-chat-bot-development-read
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: openshift-cluster-bot-developers
---
apiVersion: authorization.openshift.io/v1
kind: Role
metadata:
  name: ci-chat-bot-development-read
  namespace: origin
rules:
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  verbs:
  - get
  - list
  - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ci-chat-bot-development-read-binding
  namespace: origin
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: ci-chat-bot-development-read
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: openshift-cluster-bot-developers
---
kind: Role
apiVersion: authorization.openshift.io/v1
metadata:
  name: ci-chat-bot-prowjob
  namespace: ci
rules:
- apiGroups:
  - prow.k8s.io
  resources:
  - prowjobs
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - update
  - patch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ci-chat-bot-binding-prowjob
  namespace: ci
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: ci-chat-bot-prowjob
subjects:
- kind: ServiceAccount
  namespace: ci
  name: ci-chat-bot
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: openshift-cluster-bot-developers
---
kind: Role
apiVersion: authorization.openshift.io/v1
metadata:
  name: ci-chat-bot-secret
  namespace: ci
rules:
- apiGroups: [""]
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ci-chat-bot-binding-secret
  namespace: ci
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: ci-chat-bot-secret
subjects:
- kind: ServiceAccount
  namespace: ci
  name: ci-chat-bot
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: openshift-cluster-bot-developers
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: ci-chat-bot
  namespace: ci
spec:
  port:
    targetPort: 8080
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: ci-chat-bot
---
apiVersion: v1
kind: Service
metadata:
  namespace: ci
  name: ci-chat-bot
  labels:
    app: ci-chat-bot
spec:
  selector:
    app: ci-chat-bot
  ports:
    - name: main
      port: 8080
    - name: metrics
      port: 9090
  type: ClusterIP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ci-chat-bot
  namespace: ci
  labels:
    app: ci-chat-bot
spec:
  endpoints:
  - interval: 30s
    port: metrics
    scheme: http
  selector:
    matchLabels:
      app: ci-chat-bot
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: ci-chat-bot
  namespace: ci
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ci-chat-bot
  namespace: ci
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"ci-chat-bot:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"bot\")].image"}]'
spec:
  selector:
    matchLabels:
      app: ci-chat-bot
  template:
    metadata:
      labels:
        app: ci-chat-bot
    spec:
      serviceAccountName: ci-chat-bot
      volumes:
      - configMap:
          defaultMode: 420
          name: config
        name: config
      - name: release
        emptyDir: {}
      - name: build-cluster-kubeconfigs
        secret:
          secretName: ci-chat-bot-kubeconfigs
      - name: workflows-config
        configMap:
          name: ci-chat-bot-workflows-config
      - name: boskos
        secret:
          items:
          - key: credentials
            path: credentials
          secretName: boskos-credentials
      - name: jira
        secret:
          secretName: ci-chat-bot-slack-app
          items:
            - key: jira-token
              path: jira-token
      - name: subnet-ids
        secret:
          secretName: ci-chat-bot-slack-app
          items:
            - key: rosa-subnet-ids
              path: rosa-subnet-ids
      - name: billing-account-id
        secret:
          secretName: ci-chat-bot-slack-app
          items:
            - key: rosa-billing-account-id
              path: rosa-billing-account-id
      - name: oidc-config-id
        secret:
          secretName: ci-chat-bot-slack-app
          items:
            - key: rosa-oidc-config-id
              path: rosa-oidc-config-id
      - name: ocmcred
        secret:
          secretName: ci-chat-bot-slack-app
          items:
            - key: rosa-admin-ocm
              path: rosa-admin-ocm
      - name: runtimedir
        emptyDir: {}
      initContainers:
      - name: git-sync-init
        command:
        - /git-sync
        args:
        - --repo=https://github.com/openshift/release.git
        - --branch=master
        - --root=/tmp/git-sync
        - --one-time=true
        - --depth=1
        env:
        - name: GIT_SYNC_DEST
          value: release
        image: quay-proxy.ci.openshift.org/openshift/ci:ci_git-sync_v4.2.3
        volumeMounts:
        - name: release
          mountPath: /tmp/git-sync
      containers:
      - name: git-sync
        command:
        - /git-sync
        args:
        - --repo=https://github.com/openshift/release.git
        - --branch=master
        - --wait=30
        - --root=/tmp/git-sync
        - --max-sync-failures=3
        env:
        - name: GIT_SYNC_DEST
          value: release
        image: quay-proxy.ci.openshift.org/openshift/ci:ci_git-sync_v4.2.3
        volumeMounts:
        - name: release
          mountPath: /tmp/git-sync
        resources:
          requests:
            memory: "1Gi"
            cpu: "0.5"
      - name: bot
        image: ci-chat-bot:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        resources:
          requests:
            memory: "6Gi"
            cpu: "250m"
        volumeMounts:
        - mountPath: /etc/config
          name: config
          readOnly: true
        - name: release
          mountPath: /var/repo
        - name: build-cluster-kubeconfigs
          mountPath: /var/build-cluster-kubeconfigs
          readOnly: true
        - name: workflows-config
          mountPath: /etc/workflows-config
          readOnly: true
        - mountPath: /etc/boskos
          name: boskos
          readOnly: true
        - mountPath: /etc/jira
          name: jira
          readOnly: true
        - mountPath: /etc/ocmcred
          name: ocmcred
          readOnly: true
        - mountPath: /etc/subnet-ids
          name: subnet-ids
          readOnly: true
        - mountPath: /etc/oidc-config-id
          name: oidc-config-id
          readOnly: true
        - mountPath: /etc/billing-account-id
          name: billing-account-id
          readOnly: true
        - mountPath: /runtimedir
          name: runtimedir
        env:
        - name: BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: ci-chat-bot-slack-app
              key: slack-app-bot-token
        - name: BOT_APP_TOKEN
          valueFrom:
            secretKeyRef:
              name: ci-chat-bot-slack-app
              key: slack-app-bot-app-token
        - name: BOT_SIGNING_SECRET
          valueFrom:
            secretKeyRef:
              name: ci-chat-bot-slack-app
              key: slack-app-bot-signing-secret
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: ci-chat-bot-slack-app
              key: rosa-aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: ci-chat-bot-slack-app
              key: rosa-aws-secret-access-key
        - name: OCM_CONFIG
          value: /etc/ocmcred/rosa-admin-ocm
        - name: AWS_REGION
          value: us-east-1
        - name: XDG_RUNTIME_DIR
          value: /runtimedir
        command:
        - /usr/bin/ci-chat-bot
        - --prow-config=/etc/config/config.yaml
        - --supplemental-prow-config-dir=/etc/config
        - --job-config=/var/repo/release/ci-operator/jobs
        - --github-endpoint=http://ghproxy
        - --github-endpoint=https://api.github.com
        - --force-pr-owner=system:serviceaccount:ci:ci-chat-bot
        - --workflow-config-path=/etc/workflows-config/workflows-config.yaml
        - --kubeconfig-dir=/var/build-cluster-kubeconfigs
        - --kubeconfig-suffix=.config
        - --lease-server-credentials-file=/etc/boskos/credentials
        - --jira-endpoint=https://issues.redhat.com
        - --jira-bearer-token-file=/etc/jira/jira-token
        - --rosa-cluster-limit=30
        - --rosa-subnetlist-path=/etc/subnet-ids/rosa-subnet-ids
        - --rosa-oidcConfigId-path=/etc/oidc-config-id/rosa-oidc-config-id
        - --rosa-billingAccount-path=/etc/billing-account-id/rosa-billing-account-id
