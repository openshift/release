apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ci-staging
  name: hook
  labels:
    app: prow
    component: hook
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: prow
      component: hook
  template:
    metadata:
      labels:
        app: prow
        component: hook
    spec:
      serviceAccountName: "hook"
      terminationGracePeriodSeconds: 180
      containers:
      - name: hook
        image: gcr.io/k8s-prow/hook:v20231019-811baf28f3
        imagePullPolicy: Always
        args:
        - --dry-run=false
        - --config-path=/etc/config/config.yaml
        - --github-endpoint=http://ghproxy
        - --github-endpoint=https://api.github.com
        - --github-graphql-endpoint=http://ghproxy/graphql
        - --github-app-id=$(GITHUB_APP_ID)
        - --github-app-private-key-path=/etc/github/cert
        - --hmac-secret-file=/etc/github/hmac
        env:
        - name: GITHUB_APP_ID
          valueFrom:
            secretKeyRef:
              name: openshift-ci-staging-prow-app
              key: appid
        ports:
        - name: main
          containerPort: 8888
        volumeMounts:
        - name: github-app-credentials
          mountPath: /etc/github
          readOnly: true
        - name: config
          mountPath: /etc/config
          readOnly: true
        - name: plugins
          mountPath: /etc/plugins
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 3
          timeoutSeconds: 600
      volumes:
      - name: github-app-credentials
        secret:
          secretName: openshift-ci-staging-prow-app
      - name: config
        configMap:
          name: config
      - name: plugins
        configMap:
          name: plugins
---
apiVersion: v1
kind: Service
metadata:
  namespace: ci-staging
  name: hook
  labels:
    app: prow
    component: hook
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8888"
spec:
  selector:
    app: prow
    component: hook
  ports:
  - name: main
    port: 8888
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  namespace: ci-staging
  name: hook
spec:
  port:
    targetPort: 8888
  path: /hook
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: hook
