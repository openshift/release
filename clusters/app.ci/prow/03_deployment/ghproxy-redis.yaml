apiVersion: template.openshift.io/v1
kind: Template
parameters:
- description: The password for the redis database
  name: REDIS_DB_PASSWORD
  generate: expression
  from: "[a-zA-Z0-9]{43}"
objects:
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    labels:
      app: prow
      component: ghproxy-redis
    name: ghproxy-redis
    namespace: ci
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 30Gi
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: prow
      component: ghproxy-redis
    name: ghproxy-redis
    namespace: ci
  spec:
    ports:
    - name: main
      port: 80
      protocol: TCP
      targetPort: 8888
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: prow
      component: ghproxy-redis
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ghproxy-redis
    labels:
      app: prow
      component: ghproxy-redis
    namespace: ci
  spec:
    replicas: 1
    strategy:
      type: Recreate
    selector:
      matchLabels:
        app: prow
        component: ghproxy-redis
    template:
      metadata:
        labels:
          app: prow
          component: ghproxy-redis
      spec:
        containers:
        - name: ghproxy-redis
          image: gcr.io/k8s-prow/ghproxy:v20220221-2f2cb0b4ae
          imagePullPolicy: IfNotPresent
          args:
          - --redis-address=redis.ci:6379
          - --legacy-disable-disk-cache-partitions-by-auth-header=false
          - --concurrency=8
          ports:
          - name: main
            containerPort: 8888
          - name: metrics
            containerPort: 9090
          resources:
            requests:
              memory: "250Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 8081
- apiVersion: v1
  kind: Secret
  metadata:
    namespace: ci
    name: redis
  stringData:
    database-password: "${REDIS_DB_PASSWORD}="
- apiVersion: v1
  kind: Service
  metadata:
    namespace: ci
    name: redis
    labels:
      name: redis
  spec:
    selector:
      name: redis
    ports:
    - name: main
      port: 6379
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: redis
    labels:
      name: redis
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: redis
    template:
      metadata:
        labels:
          name: redis
      spec:
        containers:
        - env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: redis
          image: quay.io/bitnami/redis:6.2.6
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          volumeMounts:
          - mountPath: /var/lib/redis/data
            name: ghproxy-redis-redis
        volumes:
        - name: ghproxy-redis-redis
          persistentVolumeClaim:
            claimName: ghproxy-redis
