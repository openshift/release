apiVersion: template.openshift.io/v1
kind: Template
parameters:
- description: The session secret for the component.
  name: SESSION_SECRET
  generate: expression
  from: "[a-zA-Z0-9]{43}"
- description: "The namespace."
  name: NAMESPACE
  value: ci
objects:
- apiVersion: v1
  kind: Route
  metadata:
    namespace: ${NAMESPACE}
    name: gangway
    annotations:
      haproxy.router.openshift.io/timeout: "90s"
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: Reencrypt
    to:
      kind: Service
      name: gangway
- apiVersion: v1
  kind: Service
  metadata:
    namespace: ${NAMESPACE}
    name: gangway
    labels:
      app: prow
      component: gangway
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: gangway-tls
  spec:
    selector:
      app: prow
      component: gangway
    ports:
    - name: main
      port: 443
      targetPort: 8443
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    namespace: ${NAMESPACE}
    name: gangway
    labels:
      app: prow
      component: gangway
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: prow
        component: gangway
    template:
      metadata:
        labels:
          app: prow
          component: gangway
      spec:
        serviceAccountName: gangway
        initContainers:
        - name: git-sync-init
          command:
          - /git-sync
          args:
          - --repo=https://github.com/openshift/release.git
          - --branch=master
          - --root=/tmp/git-sync
          - --one-time=true
          - --depth=1
          env:
          - name: GIT_SYNC_DEST
            value: release
          image: registry.k8s.io/git-sync/git-sync:v3.6.2
          volumeMounts:
          - name: release
            mountPath: /tmp/git-sync
        containers:
        - name: git-sync
          command:
          - /git-sync
          args:
          - --repo=https://github.com/openshift/release.git
          - --branch=master
          - --wait=30
          - --root=/tmp/git-sync
          - --max-sync-failures=3
          env:
          - name: GIT_SYNC_DEST
            value: release
          image: registry.k8s.io/git-sync/git-sync:v3.6.2
          volumeMounts:
          - name: release
            mountPath: /tmp/git-sync
          resources:
            requests:
              memory: "1Gi"
              cpu: "0.5"
        - name: oauth-proxy
          image: quay.io/openshift/origin-oauth-proxy:4.9
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8443
            name: web
          args:
          - -provider=openshift
          - -https-address=:8443
          - -http-address=
          - -email-domain=*
          - -upstream=http://localhost:32001
          - -client-id=system:serviceaccount:ci:gangway
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
          - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret-file=/etc/proxy/secrets/session_secret
          - -cookie-samesite=none
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          volumeMounts:
          - mountPath: /etc/tls/private
            name: gangway-tls
          - mountPath: /etc/proxy/secrets
            name: session-secret
        - name: envoyproxy
          imagePullPolicy: IfNotPresent
          image: registry.ci.openshift.org/ci/tp-envoyproxy:1.26.4
        - name: gangway
          image: gcr.io/k8s-prow/gangway:v20230908-12387e8f71
          args:
          - --config-path=/etc/config/config.yaml
          - --supplemental-prow-config-dir=/etc/config
          - --github-app-id=$(GITHUB_APP_ID)
          - --github-app-private-key-path=/etc/github/cert
          - --github-endpoint=http://ghproxy
          - --github-endpoint=https://api.github.com
          - --github-graphql-endpoint=http://ghproxy/graphql
          - --job-config-path=/var/repo/release/ci-operator/jobs
          - --grace-period=110s
          - --dry-run=false
          env:
          # When cloning from an inrepoconfig repo, don't bother verifying certs.
          # This allows us to use "https://..." addresses to fakegitserver.
          - name: GIT_SSL_NO_VERIFY
            value: "1"
          - name: GITHUB_APP_ID
            valueFrom:
              secretKeyRef:
                name: openshift-prow-github-app
                key: appid
          ports:
            - name: grpc
              containerPort: 32000
            - name: metrics
              containerPort: 9090
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 600
          volumeMounts:
          - name: github-app-credentials
            mountPath: /etc/github
            readOnly: true
          - name: service-account-token
            mountPath: /var/sa-token
          - mountPath: /etc/proxy/secrets
            name: session-secret
          - name: config
            mountPath: /etc/config
            readOnly: true
          - name: release
            mountPath: /var/repo
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
        volumes:
        - name: github-app-credentials
          secret:
            secretName: openshift-prow-github-app
        - name: service-account-token
          projected:
            sources:
            - serviceAccountToken:
                path: token
        - name: config
          configMap:
            name: config
        - name: session-secret
          secret:
            secretName: gangway-session-secret
        - name: gangway-tls
          secret:
            secretName: gangway-tls
        - name: release
          emptyDir: {}
- apiVersion: v1
  kind: Secret
  metadata:
    namespace: ${NAMESPACE}
    name: gangway-session-secret
  stringData:
    session_secret: "${SESSION_SECRET}="
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: cluster-gangway-submit
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: cluster-gangway-submit
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-gangway-submit
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: aos-qe
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: msi-qe
  - kind: ServiceAccount
    namespace: cspi-qe
    name: periodic-job-bot
  - kind: ServiceAccount
    namespace: aos-qe
    name: periodic-job-bot
  - kind: ServiceAccount
    namespace: ocpci-lp-interop
    name: periodic-job-bot
  - kind: ServiceAccount
    namespace: cnv-qe
    name: periodic-job-bot
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: cert-manager-operator-dev
