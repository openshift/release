apiVersion: v1
kind: Template
labels:
  template: jenkins-ci-setup
metadata:
  name: jenkins-ci-setup
  openshift.io/display-name: Jenkins OpenShift CI
  iconClass: icon-jenkins
  tags: instant-app,jenkins
  template.openshift.io/long-description: |-
    This template sets up a Jenkins instance to run OpenShift CI jobs.
parameters:
- name: SOURCE_REF
  displayName: Source Ref
  description: Git reference to use for setup
  value: master
  required: false
- name: SOURCE_URL
  displayName: Source URL
  description: Git source URL to use for setup
  value: https://github.com/openshift/release.git
  required: true
- name: SOURCE_CONTEXT
  displayName: Source Context
  description: Git source context for Jenkinsfile to run setup
  value: jenkins/setup/pipeline
  required: false
- name: JENKINS_ADMIN_SA
  displayName: Jenkins Administrator Service Account
  description: Service account to use as a Jenkins administrator
  value: jenkins-admin
  required: true
- name: OPENSHIFT_ORIGIN_IMAGE
  displayName: OpenShift Origin Image Reference
  description: Reference to the OpenShift Origin image to be used as the base for the controller. This image provides the oc client.
  value: openshift/origin:latest
  required: true
- name: JENKINS_SERVICE_NAME
  displayName: Jenkins Service Name
  description: The name of the OpenShift Service exposed for the Jenkins container.
  value: jenkins
- name: JNLP_SERVICE_NAME
  displayName: Jenkins JNLP Service Name
  description: The name of the service used for master/slave communication.
  value: jenkins-jnlp
- name: ENABLE_OAUTH
  displayName: Enable OAuth in Jenkins
  description: Whether to enable OAuth OpenShift integration. If false, the static
    account 'admin' will be initialized with the password 'password'.
  value: 'true'
- name: JVM_ARCH
  displayName: Jenkins JVM Architecture
  description: Whether Jenkins runs with a 32 bit (i386) or 64 bit (x86_64) JVM.
  value: i386
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the container can use.
  value: 512Mi
- name: VOLUME_CAPACITY
  displayName: Volume Capacity
  description: Volume space available for data, e.g. 512Mi, 2Gi.
  value: 1Gi
  required: true
- name: NAMESPACE
  displayName: Jenkins ImageStream Namespace
  description: The OpenShift Namespace where the Jenkins ImageStream resides.
  value: openshift
- name: JENKINS_IMAGE_STREAM_TAG
  displayName: Jenkins ImageStreamTag
  description: Name of the ImageStreamTag to be used for the Jenkins image.
  value: jenkins:latest
- name: JENKINS_INSTALL_PLUGINS
  displayName: Jenkins plugins to install
  description: List of comma-separated plugins and corresponding versions to install on deploy
  value: groovy:1.30
objects:
- kind: Route
  apiVersion: v1
  metadata:
    name: "${JENKINS_SERVICE_NAME}"
    labels:
      app: jenkins
  spec:
    to:
      kind: Service
      name: "${JENKINS_SERVICE_NAME}"
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${JENKINS_SERVICE_NAME}"
    labels:
      app: jenkins
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${JENKINS_SERVICE_NAME}"
    labels:
      app: jenkins
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: "${JENKINS_IMAGE_STREAM_TAG}"
          namespace: "${NAMESPACE}"
        lastTriggeredImage: ''
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${JENKINS_SERVICE_NAME}"
    template:
      metadata:
        creationTimestamp: 
        labels:
          name: "${JENKINS_SERVICE_NAME}"
      spec:
        serviceAccountName: "${JENKINS_SERVICE_NAME}"
        containers:
        - name: jenkins
          image: " "
          readinessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 3
            httpGet:
              path: "/login"
              port: 8080
          livenessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 420
            failureThreshold: 30
            httpGet:
              path: "/login"
              port: 8080
          env:
          - name: INSTALL_PLUGINS
            value: "${JENKINS_INSTALL_PLUGINS}"
          - name: OPENSHIFT_ENABLE_OAUTH
            value: "${ENABLE_OAUTH}"
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: 'true'
          - name: OPENSHIFT_JENKINS_JVM_ARCH
            value: "${JVM_ARCH}"
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: 'true'
          - name: JNLP_SERVICE_NAME
            value: "${JNLP_SERVICE_NAME}"
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
          volumeMounts:
          - name: "${JENKINS_SERVICE_NAME}-data"
            mountPath: "/var/lib/jenkins"
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: IfNotPresent
          capabilities: {}
          securityContext:
            capabilities: {}
            privileged: false
        volumes:
        - name: "${JENKINS_SERVICE_NAME}-data"
          persistentVolumeClaim:
            claimName: "${JENKINS_SERVICE_NAME}"
        restartPolicy: Always
        dnsPolicy: ClusterFirst
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: "${JENKINS_SERVICE_NAME}"
    labels:
      app: jenkins
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}'
- kind: RoleBinding
  apiVersion: v1
  metadata:
    name: "${JENKINS_SERVICE_NAME}_edit"
    labels:
      app: jenkins
  groupNames: 
  subjects:
  - kind: ServiceAccount
    name: "${JENKINS_SERVICE_NAME}"
  roleRef:
    name: edit
- kind: Service
  apiVersion: v1
  metadata:
    name: "${JNLP_SERVICE_NAME}"
    labels:
      app: jenkins
  spec:
    ports:
    - name: agent
      protocol: TCP
      port: 50000
      targetPort: 50000
      nodePort: 0
    selector:
      name: "${JENKINS_SERVICE_NAME}"
    type: ClusterIP
    sessionAffinity: None
- kind: Service
  apiVersion: v1
  metadata:
    name: "${JENKINS_SERVICE_NAME}"
    labels:
      app: jenkins
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "${JNLP_SERVICE_NAME}",
        "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: 'true'
    creationTimestamp: 
  spec:
    ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 0
    selector:
      name: "${JENKINS_SERVICE_NAME}"
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: "${JENKINS_ADMIN_SA}"
- apiVersion: v1
  kind: RoleBinding
  metadata:
    name: "${JENKINS_ADMIN_SA}"
  roleRef:
    name: admin
  subjects:
  - kind: ServiceAccount
    name: "${JENKINS_ADMIN_SA}"
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ci-setup
    labels:
      name: ci-setup
  spec:
    triggers:
      - type: ConfigChange
    runPolicy: Serial
    source:
      type: Git
      git:
        uri: "${SOURCE_URL}"
        ref: "${SOURCE_REF}"
      contextDir: "${SOURCE_CONTEXT}"
    strategy:
      type: JenkinsPipeline
      jenkinsPipelineStrategy:
        env:
        - name: SOURCE_URL
          value: "${SOURCE_URL}"
        - name: SOURCE_REF
          value: "${SOURCE_REF}"
        - name: JENKINS_ADMIN_SA
          value: "${JENKINS_ADMIN_SA}"
        - name: OPENSHIFT_ORIGIN_IMAGE
          value: "${OPENSHIFT_ORIGIN_IMAGE}"
